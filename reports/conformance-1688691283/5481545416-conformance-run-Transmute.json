{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8efb86bc-b2a3-4ba7-bb17-e9f894614e4f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "14ecceb5-b6a7-4fdd-bfcd-584ebadc4d5e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e1caf69-0f22-4c51-aaa2-f37c57176f46",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34fbd4a4-326e-4e1a-8870-695892beef1b"
                }
              }
            ]
          },
          {
            "id": "3e2402ed-4e6c-4059-b819-c04f702f3960",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fce9b59a-a1fe-43eb-9655-b596e9a5e605",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "86502680-7f68-4272-91be-c3599eefd030"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fc9dbeda-db5a-4774-bcda-9b642475def9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fdcd314c-431f-4927-a06a-e6fba6b2b072",
            "name": "Positive Testing",
            "item": [
              {
                "id": "647d9d55-f73a-440f-8eb5-1895e0a968fe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b45efa9b-8740-44b6-9fd8-64543dab9367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f139039a-e5fd-4fa2-865b-eda4ede90ea8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b485ba2c-7c1d-49ee-8876-f498e5b7796a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bd1a868-846c-4827-87b8-7e973b925420"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6f7b51f-c877-423f-978e-78e19fa53bf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "088ddea1-8252-45b3-8f1d-770b059f9f0f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76994067-70c5-4670-b307-d35f66f2e145",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a25f170b-c152-4100-b61d-8090d7cf7403"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "930014c7-4af8-4bac-8ae7-191895dc2033",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f26f34db-6e97-45d4-8276-6756877ee7bd"
            }
          }
        ]
      },
      {
        "id": "470c2156-1502-4723-a84e-1bea03de9a6f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "db0b846b-a9c2-4812-bfdf-447ca35bb3a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49d5a00b-8e94-47ac-b6d9-cb2a4dc8699e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07e17179-4720-44a9-8bd6-723dc4e1fc31",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e867e940-8842-429a-8bd8-ad4862cc4fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1330458d-e898-43d4-a825-f884830ac39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a22a094-a9c0-4b55-a328-3018fbe96bfc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509139a-df68-4a1f-b7aa-f564ec8054c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d7a60a4-f681-437a-a26a-19e8e3b21ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e528c9-d3bb-4c1c-b819-05c1b5d94a6f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056157f2-372e-4a05-a97a-5d68dcef02e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b2a4623-b474-447f-8ea9-c5aeac3c062b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f45dc8ed-faa2-42ec-9bfe-02e87a4e22da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4083b25-4dea-4d48-951c-664b209554a2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afabc31-b98b-4be7-baaa-7caf28f957cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc14e9ac-483c-4a77-9830-e37dd7ba3269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9755e8c6-1b60-4cc1-9cfc-d895ab77666b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa03e60-5220-47f0-a354-f5176305d090"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d67f665-d20c-4fb1-8da8-880f76e4d77b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2aec9bc7-b5c7-4d87-9f92-0b83b5989493",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72ff2cb1-e94b-4544-996f-b3707d3c6f7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f6beba50-3790-4402-9d30-b628ca994a10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a76aab3b-ce0e-4b93-abe8-57d5523714c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1ebf2d2-782f-4606-bbc4-fa5354003c72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3875c69-4096-4f66-bc5d-c2e5c6ce8c02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9726a7a7-a213-4e5e-ac7c-1ae9b55246d8"
            }
          }
        ]
      },
      {
        "id": "838c3203-102e-4310-800c-b70299fb3f7b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "192e7220-6a18-4f70-b72a-1ffac413d50b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af644379-6b92-4f6b-9194-32c26101e779",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f2f5fb10-81b6-483f-97ca-70bd6773b882",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c9be56-e1e4-4095-bed3-afd31baa28ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c653ef44-2874-413a-a95a-f3d1a86ce0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8500e7-574b-48e6-b2cf-428c5c41279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fbd52ab-5d46-4e91-a548-36547f0a9251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58396690-c083-4dff-afa7-5c8bd08bb1d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba6317f-e910-4a1b-b96c-6cdeceb617bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0186961-2e37-4a94-9d1c-10454e2baa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f6b682-6da0-4f5f-a9ba-7d045416d8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c49e5740-d359-4239-b494-16152761e1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e82ce6-1490-4a0f-8238-cd967e5526cd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b34a35-603b-4f86-b57d-353d5b52f5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8feb5f3-2ba8-4e33-9218-44fc55194252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e85c14-1678-497c-8789-4b3c3e7a99bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "974848c2-cd02-4920-b10d-e2f3279ca74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d7623-2f7e-44b0-a36f-c047f705abe0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dfed4f-3f6f-431d-a5b8-31f21cd89632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab8754a-275c-4576-b46c-f4b6304ccc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd503b5c-c139-467d-8c63-f1f631c735bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dda98f9-25aa-4e13-9537-bec8140633d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8271f403-8df9-46f7-b93e-05efc95aa379",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c67243-f459-4175-a836-28d0ca317506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82ce34b-1bf5-48dd-9194-7caeece60c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b274c4e8-f495-4bbb-9d5b-2098764a5803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "420a836f-b4a2-4d43-9d25-90c0ef81e189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7cdaf6-afa7-4361-af91-7a6e25543b33",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0195a22-e309-48ac-9fc7-7bc4c1d59cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702a68f7-ef81-4eb6-aba1-4b9b0e668012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7321c2dd-98e4-4e90-8f6d-f88557b5c4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f87385b7-f73c-4160-893c-13479a1870b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f8baff-6336-46ae-9e71-38cab87efbc6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d42b291-54c2-4abd-91a5-10ebf8f11a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7acb3b-ffbb-487b-bc0c-e2c3b9966dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd1ff32-3f8a-49c7-9924-44741bf77ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de39dece-4949-45b2-9885-5b4b16dc6517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440471fb-d919-408b-bae8-1bcafad40e89",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9dae74-9dc8-4fd6-8933-5b8beb511a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8a809a-9fa6-4576-9ebd-0f1365d141a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519f249-bd6e-44fb-8156-8b6da32b817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76df91fe-28b4-44c6-b5b0-dca96a52a018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da930a5b-4330-4cd5-a284-0a6232de945b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756d4ef6-9bcc-469b-aed6-152acdee7680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc168b7-02e2-42a8-b33e-e84de932392c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570b8671-a823-4868-b3e3-4fa1419066e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee94a98e-766a-484e-8e46-5f6cf188846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f817996-d852-4835-b218-c8eb2fdfec5e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ab5b3-f0b3-45bc-814e-c0ca79f0285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa6f2c5-5007-452a-af6b-2ce6c1f57a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df7305f-3389-42b7-8243-dcdb14d07ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1703d169-f5ce-4f37-ab68-175dbcef7512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd467213-77d2-45fc-8995-941e6ceb1ca9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a656c-750c-4e07-80c6-a944a73562b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd56caeb-eb51-44ac-8039-e50c143106fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee3c37e-6d46-42d7-87d7-ac0a1c7099bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "109fda63-e3f6-413c-bd86-a9f5b82b9c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecd9799-ee66-4dda-8df4-7ead3ef360fe",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32994830-8000-4764-bdaf-08b0003a4eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd35171d-f826-4246-a6c0-71188087a769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e790bc3-05f2-47c7-8a30-dd4e9deda572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6e4bac3-249d-4f52-bdbd-3f6119aec5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc38ac54-446d-4af8-8240-61010f768c71",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a45be5-1091-4d28-945c-27ab00c60941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f452ec5-ec8b-4ffe-bba5-e1f946121489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de9e355-1f97-4476-892f-233ce589b1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbab4b8d-99b1-47f5-8689-0f1ae913896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa560c6-b46b-44b9-822a-81e38877b4b2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2de42f-5be2-4e23-8475-319fcf561090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c3c497-c681-4fd6-b09c-44a4d694234d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af24de4-4c99-40e8-acc3-c69509754104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d56be386-662a-4c11-b829-8ae5ec794505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab831ec8-99da-4827-85b1-b9437b515cfe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12416d2-dd2e-42ed-8d1d-5bdf2ff0ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9a8a5f-64fc-45eb-8699-a468ed40cfb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9459ae-afe0-48d4-a2b2-2b3719ad2c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8957c08-dee9-48af-b3bd-ec141f6aa38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e6dd51-8b36-441e-9e71-559d2b776db3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e166c5-ca19-4b0e-9941-1ec2d1abe346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721c3510-a24d-4243-b2d4-3032bd9cea2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c69ea01-8b92-4b65-9900-aaf233c13e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "192de422-f076-4076-9349-dd374b411c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d375e17-72f4-4e5a-a4d7-f9d82cf48983",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4101e6d-915b-475f-9f49-c4df8b8100f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514772f3-a081-4f0a-9f6b-04cba6719449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa425bc-4e2d-4e8f-a9d6-f5e29706cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "942f0168-4845-44f4-b24a-51df7c54f85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0636013c-23b7-4ce7-b36d-4286dd281769",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528bd13c-050c-4e3c-b992-8d69a3605864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26514a1-8374-4a50-ae5e-aecb2801b874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aab6455-afd8-473b-896e-6ad8d75af631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d750e3-cb93-447c-bfa5-e474d5850cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a5915c-568f-4e12-af9e-8b522c3298de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bff98ab-86a3-4d90-8318-3f28728cdabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e98e3ac-2d53-4fe3-bdbb-2a5a050ec732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda508a-c072-4ce5-aa8c-4c30a3a01960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edaeb32-0605-4d5f-aada-8b7424f3c0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1962dc1b-a830-4023-9949-3c0c58cd1f2f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918260a5-e0ef-480f-bc37-d357f9468459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781655dd-a5d8-4e66-b9fc-6f8c8b80d942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6146d825-d3e5-47da-87f8-1b7a204096fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "831be7eb-50e3-44e0-9fae-9211405abecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b783fa42-2266-427d-9682-94dc931a80d3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e6dbc-36ca-4140-84d9-718e4cef047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f91d8d-0380-47d3-bdd6-2a30627b8e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c414973-fc7b-44ea-92c3-eedacfc9f984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca2d696-8a90-4d05-9b45-b18ef6cf1882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e1d168-da5b-4bda-92fb-8de5025a5182",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa36f7-431e-4283-bca2-5c4f61b8ad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6ecf5b-2d44-49b1-aa96-b47ffeb4392a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163296fa-9139-41c6-a253-bf3c00065427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87060464-1c3a-4707-8fe3-b076feb95c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d371d9-dcb6-4bf6-a176-e55b92bd1eaf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cedaee-ef72-4b58-99ed-b57786794c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6e2e5b-88b4-4254-a927-658748c0a301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d784f07-15e7-4c06-8c9c-3fd3205b3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e388c141-177c-473e-882b-5ad70c5399ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b50c787-e8f2-46dd-bf3c-fdf3fc16c1ff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23984ddf-708c-412d-8e63-429aabb0e0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889688fd-be4b-467b-8997-e3b450fa9ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74921bbe-df7f-400d-b5c9-c5c50a83eca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21cd4260-96a8-46d0-82f2-c477e2b0678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff3fecc-02f2-47ca-a1a2-d6395d640657",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b208b2-365e-4fe3-93a3-9e0d8e630048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6289fb81-3b42-4b4f-9391-d07342e5b5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1409f7d1-7ff1-41a9-92ed-259e3590c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b1122d-2a91-44f3-ae32-bbd1907c5501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529132c7-64f2-47d2-8d12-3f22b2296e22",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15d6344-c4a4-4cb5-a3c5-4a555f63a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e04f4ca-e635-4525-9db5-1da50a858724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ccd245-afe5-431a-9ebc-1785c09a353a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf2a94d-2f87-451b-ba26-8aaf6f182fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7f56ab-b906-4d89-ac83-32403e0d117f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae9aee6-1a36-40db-87aa-0066226aa352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0658d8-7768-4ef7-8a85-5c19d523bd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd4e8eb-787d-4360-aa90-79d4b441bd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23beb2fd-1851-49cf-9041-97caa4e3f3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecd466c-57ce-4122-a2a5-8c09f68b2482",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000825f1-fc49-401c-88b1-6aa05616db65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5d7222-de5d-4ce4-8be9-0e479346f47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fb3df9-3570-4bdf-9c85-1e292b973260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bfa6d9-bd6a-43a1-8e39-27b15d419378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd752b8-4b5f-4fe7-9ed5-7252b5d28aab",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3530fd-bd4e-4c5b-8211-965a739e908a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed182a9-a138-4537-b645-b066405da880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcf999e-33dd-455c-a786-e50d186a2979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "789c381a-eb59-4cf3-a08e-05d0c577654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf821c4a-20e2-44d5-9e5a-8a0221b59502",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8127d8f8-7e6b-461f-9d1c-e076d9df5ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e709d60f-94bb-44d5-b369-c954463a065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e76f50-7101-46bb-bc8c-8cd02cb609d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d72b83fc-0c50-4e90-9a25-44e61a532d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b7cd05-eb5c-491f-a7ce-4ffd0f11adea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cae406-3bce-43f6-a4c3-25257fb73bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ee5bbb-0e92-40e7-bd26-ae57febabf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0478a7-0e23-4974-adf1-72839731d141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79ba874-f48b-43a2-85e0-3aaa239d3b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7de24c-2fb2-4db2-8102-491b40a6d786",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d35a6d-16ee-4f4f-97b7-6e70baa26d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653b607d-27a5-4659-8fe0-899c048a0bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2b0c46-94ad-440d-a1ba-fe405ea8e552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc90126-a51d-482e-9815-0b376056cd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c021ceda-12fd-44aa-bfc3-5820bfdba342",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d35818-f7c4-4f16-b0e2-7da1667a5d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1609de35-7229-43b0-bbe3-bbb28948fc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df75d7b5-ee16-4aef-b55d-e5b8a0dfce44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be75ca3-a6ba-467a-9fb3-60825ac6da97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2fb877-4abf-4471-b4b6-03f4abbf8be7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5e0bcc-570c-49c7-907c-f88179821d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dad3900-d6ac-46bf-8a96-a6f1b5243cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624870da-4696-4626-bf8c-0ee55b5d91dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4769d0-cbf7-487e-b2fa-b8b59b45a523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c329a2b-075e-4f7c-860c-42403657ab41",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5b32ec-fee6-4a78-8172-6e630c5b03b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63544df2-c87b-4514-ba7d-21439dbdb365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d2d148-4124-426b-924c-7e3d57752e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8d75a2-f0c2-403f-83cb-7d9a2348d70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0a38c4-faca-4f10-a8f7-d9450ac3b72f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddb6200-6c46-438d-848a-55250c4025de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8f28682-dcc0-4892-89cd-3f1d95af795e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50efb79c-e2b2-4714-bcf4-9ae1d9f8f496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "038e96a2-1541-4fd0-902e-eee03cf61468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af794b09-185f-4f51-8f29-21a48c709114",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623dabd1-a180-411d-b9be-17c55d636723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f899c0ec-b95c-4593-a874-0d656b887693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b09459-ca12-46c2-9cc6-cc45de5091a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e5539e-9d9c-4215-a115-58375136dda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec25318c-0a7a-442c-801f-34f9b8640692",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a3935-ad30-45fe-a07b-bc9657e6e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd06cc91-4d19-4017-a687-0c74a30c77ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5364eca3-a15c-430e-8b77-bb6bfeb0d018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b12bcd5-9fed-4b4f-9bc7-537ca66fcea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110a0642-b0b8-4024-9e66-18ccce7ed691",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4096b8d3-f006-467c-8321-e34a36a13d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78050052-0d28-4448-9b72-893e1e83aeea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c694e891-200a-4f6e-b361-98bfafcbbfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "095b241e-a8e3-4abe-a37c-d6240a133a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3309191e-2596-433b-8468-4a33300b9f56",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5c8dac-0f8a-452d-ae9e-28cfcb7f9b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedaaca3-de9e-4f55-b84a-d2f531715e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7800b9-1b71-4183-abf5-f371cafec221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a60693-2232-4a7f-9c5a-3a2f3be3cde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247145ad-d003-431c-8cd0-a9abf8973a84",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d6beb5-1194-418f-b24a-5e7edf327d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40779d0-ebc8-442e-8ce6-0624e3215bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eba9a4-e059-4da6-ba13-4dd453369ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f803514b-739c-489f-b990-dd74ab09de1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ee0433-6ca6-486f-a253-8a34c0feee05",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c1d5d-c9b6-4f93-b17b-1414900a55c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8326a036-acee-414d-8a7a-aa784dfee079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5318d6a-5d4f-44eb-be73-262fbe328258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfb1d9c-12e4-4c9b-b241-99e0c90b6e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678f95b2-a8ae-4aa5-a4e2-94dd25ef1421",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9b6447-82f7-4cff-b78d-1a3c07aea429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e1b48c-12c7-4f16-a411-bbfcfda428f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63124467-1ef8-4686-b763-9bfac34d7650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea064e3-260e-4421-8755-7084ba06618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23253fa2-54cc-44f3-8788-396e1640c07f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23d69d6-6d75-4227-bcc6-5315e101e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9778692-72b7-4300-be3f-05c46672683b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967eaafa-05c4-4464-abef-b9721cd60144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee2ad89-2039-4a75-9c38-4062fd113c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf6e9c9-5e7a-4c35-84de-968573255f03",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ffec83-09f7-41da-af7f-21d571337985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1e136a-9ae3-46e6-8136-b6745d7ede45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8669082d-381b-41fb-9665-59727dd8e3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "405ccc3d-9a4c-4ce1-82d9-dc6b0b8a92f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86966662-1cac-45b3-96b6-ccefe5950cb7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba0d8ca-03f3-4c81-8d84-8f3708acae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a2088a-21df-444b-ab9f-3a6a6021a7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d568772e-1ac2-42ba-93e2-50c11e43a547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11b36052-2200-4648-8c83-34826b7496ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d856ec87-3834-4b1b-85e0-a6d63f44bb5b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4decd76-76af-42cf-be4f-51f941924b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869d5e2b-a416-48ac-89f3-645095ecb9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b736b616-3aa9-4379-bc21-d020dfb8e50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "210f0add-1a2f-48e5-8a01-1bffc62de5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0566f4-95b8-466b-a56a-2a0872f1cccd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76617001-41c9-4734-96c7-325fb3fe4f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660dc740-b482-46ee-bf0f-32076f10f8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d2c3f6-1338-4e64-85ff-1aa1603faa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e8a23d-f3c0-48e2-827f-ef6366409d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec228411-8507-467b-9495-c977af374e80",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50059ddb-41f0-41dc-b00e-4eea4eaa8b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b7683f-2cbd-45f0-801b-e992cc535701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4394578-f036-4a7f-a3a7-3328127669a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80cb8378-c3bf-4811-9401-7d727cd9bd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b19b0b-4465-4a34-92c9-577adb5732f8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6477f49-afe4-4526-8d3b-d95dfe66f7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c860a3-137a-4bb2-950e-a6e83fda57ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d957bc9-bb57-4d14-b395-11d98219988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de48d887-19ff-4f83-90f7-54a5514f2aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2523ec-a9f8-48fd-b667-b4fd3376fc19",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62172e61-851c-4110-a71b-0d4ff78e166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bd0d25-c88c-488a-86f9-a2c767512b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae78297f-69ca-4408-b709-66e87c17eb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeaae26-237c-469f-9541-eef76c124db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5580c7-5c96-4d32-b544-ad61a2ec0c3c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8129fb16-2ce0-45f3-ae96-c6d34deba0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e054604-af1c-4f36-b123-16e84d6e06fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e898a771-a1b0-4198-8f90-1cb1d46448a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2b348a-65f5-449e-a00c-d1f67a2fafc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c5724b-cd40-4567-841b-ab9ce5c49c0d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cbf1a9-a53f-427d-b08f-6a03494bf5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db401c8e-7d4f-4e7f-889c-84aca8e102bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d215dfc2-b312-4e9c-a791-368f916feac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e61e864-5e15-49b3-a6f0-ff9901a901a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06249aa3-da1b-41e1-b3e6-5bb077fccaee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389ecb06-8dc0-4396-9237-5419e371a261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b64c29-4010-4380-a15b-3b9bb42cc051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1a4b61-f6c5-43a4-83d9-21a11e1f14d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "897ce6ea-e60b-4d10-8945-c6d5b2477d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0116d5f-6ad3-4081-8f9e-38f2b477de0e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c91460-58e0-4be2-abcf-3828478ea0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4923c9e-acfb-43ef-88af-fd4210d35513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ea0074-dd8f-493d-960b-2b4c48cc7a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ad0433-c369-46bd-9198-1575f33e14c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaff0712-1d61-464d-ac69-ffd27cf413b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb2d3c-2ac7-445d-9a8a-8a988edc1398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bd841f-87a0-44ed-ba9f-e641c00563cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f8d067-1189-4215-ae10-d569217fb902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d1484ba0-e452-4aef-aa86-2d8a1b592fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08fc40f-d31a-4d1e-b0f5-dcbd13ddbff3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320005a4-2a3d-421e-9611-7a17e94d0993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e510cfce-b014-4737-81e6-9af0e753705c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba545488-ff47-411b-b1c2-ecffbec84396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d56076-146e-432d-a6ff-996912be355b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfabbed-204c-4914-8dda-4829ce0483a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c83ee1e-4453-4350-9be5-47d97ad82838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a588a9-b858-47b7-824c-f479085efe8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252aae80-746e-4f3f-b8e5-671e9905d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d416c93-db06-48d1-b0b1-fec80815cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef90cedf-412c-4bb2-974c-1091f69514f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bb6d91-4b0f-4440-aa8d-6c8ee5514d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1567db8-eba4-4d5e-b7be-10ca9ebfbbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9da6d-3f3e-4e0d-808f-6536d3322de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "553b07b5-e9f3-4873-ae87-981fa44bcc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a06522-23fd-4236-aa1b-a72af28b982a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc6778c-3bfc-4f9e-a71e-c2fe453935e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895d9776-0a57-443c-a860-b7f932473410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297a23ae-2d4a-4b3e-b271-c694c619bd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4260b039-e961-4c33-81c4-1cd1fffa3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2021d7-0516-44be-865f-bcd100f7345f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b9ee1a-7fe5-424e-b154-bd4245e736f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19a94a7-093b-4739-b14d-07eb579985e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4111c289-f433-42b7-97b5-58cf21014bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a5d0b0-cfeb-436d-ba6d-22a44c24d5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05d84ec-e52d-4642-9bc9-3839f52d575a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74a2ad4-0842-4e8e-b4b4-35dd5508c4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948c6bed-1df0-4242-971d-da55c11e54a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f988d07d-1d31-4f3f-88ee-062b7add863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f446f3a6-70bb-44cb-8e1b-9b62fc05f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccbf10f-51e1-4870-b169-600156bc951f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c31d4e5-32f9-4160-ad09-d5f04411b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8fbeb1-27e4-437f-b678-f12ad1300a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e87822-8b7b-45dc-9597-6962bd7079c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76a3ea8-ba80-412e-ad93-1e0a88db8c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacc120f-218a-4fc6-bc0f-c11f0b364489",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f5a188-0bd0-47df-84be-5dc3d4e18a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c8694d-358a-422d-adf6-fb1ee5a6f29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbd100a-dad3-4a23-a14e-1f8be489df3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaee557-c3cf-4a47-9257-d3b271e070ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d3b03f-75ab-4e1e-8ee6-82b3f21949f4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884ffcd7-0281-443e-afbb-7538b2d61e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b512dfc-2463-41e4-8dd4-3f81defb20c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5e12f9-8fa8-4433-97d1-9dd0f9459033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de914d1-77d1-47ba-b532-eeb1cdbc4f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a0e064-e698-4feb-aa49-ae6a9687cfb9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d361918d-5210-455f-8c4a-72c45e08764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3a12bc-b3c7-4223-81dc-27351a355c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c5e6e4-2a38-426f-9b73-ed18f16bbe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca5d4ec-4b82-49b3-be5f-8fca8a93f800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33cce2b-d8f3-4afd-96dd-11d86e3f9640",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f664522-9d8f-4263-b628-e06c799bd147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2790414d-9ea5-439b-8009-beeb1cd17846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e09dd23-7bb8-47fe-b1ce-11ae93202ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47d4c464-63c9-432b-8d11-3178e2b24ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc6e9a-872c-4ff6-a346-94b9a657abcb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b15ec7-36ec-47e4-96d0-3ad725e42210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea56020-b165-4e0f-9197-74e6d72441f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f271c10d-25c8-4c02-b75b-bef3ab6a5a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f12bb1-8b0e-4e1d-a859-c00c1438b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a41f9b-faf3-4c67-b736-e08ce5551095",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c03eee-a9fb-4569-9e88-4d63b647e78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5968ca-8dd8-4490-80e1-aef6e8bd796b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcbc7a6-ff89-492c-b24f-b819fb0b2545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcd8134-761f-45a1-b931-1aa37ee73c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c98133a-ed78-463e-9cd0-c4ad0b4f7a46",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4672829f-28de-4841-8abc-3860e0516d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe6936-a5dc-4f66-8a50-5ff1afdd6ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc548318-5c76-4537-a8cf-bc40a26f57a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1eef18a-646b-4281-80e9-be04f8aefafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1dee44-4d10-456a-a071-b584be6a82fa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e433c7-09f0-4797-863d-4d2c09240d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f05fdc8-bc6b-4708-8438-6ccc31a2ae86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401ad587-2738-4edd-b26d-6ad6658e1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "175e195f-9b42-4e10-91ef-0dc636d8fd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4ba8e-bce8-46d1-8cdb-20b61ecfca1a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84636df4-d39d-4355-ac4e-1aedc7b523bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4689675f-2f25-4bf2-8a4e-271a2ad54095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc5c743-5fa2-4bc7-871b-31fbba4efdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b492373-37ba-49b0-a474-356d0f69b5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8b2268-7bc0-4a95-ab68-697114d47001",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfb4e43-9c04-421e-9bda-9068ea0d5eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44a48e6-eab5-4f93-881b-a2ddb8d7c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9466670-58f9-4d5c-83ec-93fd14746cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5412e26d-630a-4605-89f2-ccd51648582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5238d7ba-4942-4d33-ae49-ba8b3401c894",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664627ef-679c-41cf-b474-538da22382af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08ef1ba-a7b0-462c-acab-204d1cd67cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636690b4-1130-4a44-92c6-d98b0fa0d007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af418d69-fc0c-4334-852a-1eeca8213e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e335ba-d143-4737-a394-a8a5650fde05",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c70ab-9f0b-4919-a56a-d53b3ea42981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a55eb4-56ff-4171-9210-8aedade2821a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d949d2-1a70-4ae8-8fbd-74fced4a6b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d6f0b2-9ada-4c39-927a-18e657c0c8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b127da-a3d6-4638-b5fc-89eff00720a8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f23db3-b921-4219-9576-852a5b92f87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a628336d-262a-47eb-9d3f-e1df44daaded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9419f79e-6d27-4e18-a807-dbcb58320c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbb9b9d-5e2f-4a85-812e-97bf33723e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149dc757-8a57-4ea2-8839-2da27c055a64",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04104a57-53c5-4f82-9b40-7e44c9baf1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e1c618-f450-452e-89a9-487cf62384b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1466745d-2460-422c-ac75-e5a6f47da040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c699892a-ce0a-420a-bca9-640185a69702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62efee9-ee5e-48bd-be45-8809500f7cb8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be02d46-50f8-4c42-a35f-4d6b17b0a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7f842f-f2f0-429d-b6f3-1216d4dda078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e176aefe-4711-4d9b-b304-b5bc45e052f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7850ecdd-dcaf-4791-8cdc-db416ec685dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbb3261-261e-4cdc-b75e-31ed35379c0f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce07d6-0153-4ed0-ae67-482bdede5e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e742250-b234-4033-9280-7cb8cee63e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cb5997-d61f-4b34-bc07-01aa67afc44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "800cf344-75dc-4666-8e44-1facabc5e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c49bfd-8f4b-41dd-8f4c-43065f699856",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8faf476-16e4-4718-bbef-b1835a8a6208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c4a34a-f96a-420e-803a-8cfdbb4aec97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23796e0d-e49a-4f63-88bf-5a4b7ea90621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e400615d-3827-41a1-a20d-a3c02bb61340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f061bbe-78b2-4846-b385-06b8953cf02f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677aa8b5-5f14-49bc-abef-6679fdab4bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ac01bc-2949-4b01-b9a8-80f3f584ae20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72852aaa-d6b8-48aa-9266-99805eaf4d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e699f70-36f7-4a83-9bbc-6ebad614bbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9520e04e-3b15-40b9-a945-09ec6b9c0deb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634505d5-304f-4a6c-9a13-46f55345a32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e673486e-eada-4cbb-9b6f-b6dabced1bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb1b73b-24d3-4ac3-b5ee-f3214f7d8896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c74c60f-f664-4b39-bee1-7b3060528619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a002641-dadd-456d-9c25-1b843634b7f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcef27ce-79d3-46df-81ea-f5d321864cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116e5045-3e31-4c8a-bb6a-4045f35b54ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cafce3-903d-4e91-bcf9-d480c37fdc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d87acc-b69f-4bfa-9e75-3a8d162672e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04693f4-fbb7-4a35-be19-6060db407f84",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5424ea56-d807-430c-97ab-bd2de8f5e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff34ab4f-8c0d-4d71-83f3-086691c4fe20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addb7561-a404-4e37-bfe5-962dff5ea4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e996c9-4009-443f-968f-982c15ddd1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3113fc-0f5c-44cd-a675-946e153ab1e9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e7da8-4c4b-4882-972c-5f8dd4a782c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c80756c-7c5b-4198-93c1-2ee5b4a98e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8381f4db-f7a6-4333-aed8-b4197dc21952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "760828d1-cda3-4aaa-a308-8cb3376b915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c915b97d-31cf-47d1-bd3f-92b6d99eeab5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7e1515-18fe-43b0-a7a8-82f1d1120b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867240c6-4251-4f42-97aa-2fd8c5821462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb20fd0-2aab-4e47-bd02-635053923d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c0f107-5310-47f6-bb32-32ee72918b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40c144f-1497-4bad-a282-e3102ef9806b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77cf0b-0369-4339-985e-e2d0d247f79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee676595-525f-4f89-9669-48c7f881651a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081e17b0-b866-463c-ba10-cbd2bc364ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1cf8c0-4f0f-466a-af2e-bd49a0f9ec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62041c4d-5ab2-4143-8df7-9331b4a0e2e6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0113cf06-2e48-4b26-a8ec-7a247ff7fb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e824da2e-e1e7-4222-a441-956494226da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37deed16-4a3a-4bec-bc08-e8e999273295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "425a1aee-bbfe-43fb-b9c0-19d123e01dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dbcb26-82d3-4f7e-a126-f2037ffc3ca1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8194eaaf-a689-4bee-9f19-da4ff3e21d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c35a266-302b-4d98-8234-c714ba710890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc4e607-50a5-4d23-b555-72f8daf0100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f26828-ba2a-4bfd-94a5-2c24be53d718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bea94f-b86b-486b-9249-a3fd842465f3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14003416-918e-40e8-b14d-41c587c9e840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40023da-1b52-4e86-b6d5-5fa41d6581c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314c86e9-4268-43db-a8c9-f3cf6a725b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5c56e9-8398-4045-bff0-a46df53ad7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b03f14-dad8-46c6-a9c2-75c9562fc771",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd46a024-2664-4c09-bfa2-681b2632615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad95748-331c-47bb-8fc4-3e03a2c8eba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cd7df5-d244-4fae-9369-30afc4bea78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bd13e5-9d57-496d-8c5a-774dc3bd39b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a1e64a-9cfc-4bd8-85a7-b05df6be2874",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe9dfa5-248f-428c-82e4-d70fe9da54d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "72751f5c-87b5-458c-a284-2a5bf8bf1ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03530d60-d39f-49e4-8cd5-d72edafa282a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5f3bb0-71fc-44fc-9ed2-709b869ede98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb0512f0-c7c4-4306-bb19-b59f093eae5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f995564b-7967-464d-b49c-7c0b4a10897b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8085adf1-22e2-4359-98bf-9cf369fcacea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b26f421c-b5dd-47d4-8979-a9250c72370a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dd3e42-5968-4159-b846-0a5a9ba5da16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a72e3c5-0b70-4843-bf89-33f33dadd5da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03d52a30-f5bc-4d63-9652-df2800e2190a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ca92cd3-416a-416c-8896-c952d59a20fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4354ea75-d71e-496c-8ef6-4fb3878923e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa148f1b-6be8-493d-82ad-9bb84c716b16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf73181e-a312-4711-aee0-5e28cd2f29aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ce7825f-3aa7-431a-ba5f-15b8ec525ee0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69a6d318-35d5-434d-8c6d-a3dc3eae06d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "921c0e49-356e-44a5-95af-ec756c127a44"
                }
              }
            ]
          },
          {
            "id": "6b707c3c-a574-470c-9461-4b5ad6ab2b2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f70ddfb-cf18-471d-b1ec-ff0248dd3003",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "301df9db-3c75-4047-80ed-860fb80ae701",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48666b6f-c3e9-49d4-a21f-473c189664be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe1a57f1-1175-4377-a53e-e77cb08f8dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84ee8ee4-87c8-4934-9390-6369687ff167"
                    }
                  }
                ]
              },
              {
                "id": "1b7c6fbb-f07e-4681-84ec-292468d8c49b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c98775b6-c776-4093-b68d-c842e052b4e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "316a7864-43de-48c8-9061-b31f0963a8a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84f2a7fe-ea7e-4cc5-88e0-e4891ddb6fb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f869276f-4b2a-4ef2-a3c0-03d7bb37275e"
                    }
                  }
                ]
              },
              {
                "id": "453fe2d4-639f-4a82-923c-c2105c0542f2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73c392ac-acc1-478a-bbbe-ecffbad02dad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "848371c2-5e40-4284-8f03-dfa27c9db441"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f92ee4bf-1b07-45fb-b285-131d409aa44d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06724f47-dc7e-429b-8f51-8b0c8088c1a1"
                    }
                  }
                ]
              },
              {
                "id": "95dae0f9-5b6f-4dfa-82e9-c2570578e828",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3194a5aa-df9f-45d5-93c8-3d347e553318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aadc3a16-f377-45aa-bf46-c34bee458009"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bb278ef-0e53-4e56-b118-428cd2dcb951",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1d271a45-154e-4754-8540-858c30975371"
                    }
                  }
                ]
              },
              {
                "id": "b502452d-7fe0-4002-9df5-62ee96e7120e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0153eeda-5ca9-4f51-bd3a-07bf3bdf2039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb10ca49-3b50-4e1a-9e4f-26215c60813b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "819124f2-bccc-452b-b7a5-7a58471d90a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e75242fd-2635-4549-89d1-0f1e74a18ebd"
                    }
                  }
                ]
              },
              {
                "id": "c4772fbe-bf44-43b1-84be-d0e3f0323207",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc9b2b78-9666-49ae-928b-cbecd045ec93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88c05501-3c86-4625-b2c2-ff1a8d38de91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "485a9d27-3726-4ce4-981a-e9a5991c764f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80460864-4a5b-4eef-91ea-12bb29d7f5d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18575a65-5d88-4902-804e-0f014521d58f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b32dcba0-e9af-452b-b9f1-d4b3a4df4c4d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dbfdbce0-5efd-47d3-97ef-7748d699c45a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdc0d5c0-ea47-4fb9-be0e-8d9db330cc01"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46e65e33-4868-49dd-9407-ba9b679f0200",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4274990-01ae-42fd-a2e7-7bbb1727f4ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c46291a-9698-425e-9b54-4e3b63638fd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03823412-f7e6-482a-90f1-5e8e7853d3b2"
            }
          }
        ]
      },
      {
        "id": "59ec0b3b-8dce-4948-a786-7fc8890dc9f9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2deff2a5-0307-490d-9c0c-bb7fca7c13b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2858c410-60fa-4f0b-8b87-a3f2dbc0b548",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5b9aaa0-9e2c-41c5-ae70-a3a9019e5520",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b636de-d3d5-423a-945b-36eb67ca6491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2811d297-f079-4af4-923f-19eeda6b7fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859e2402-18b2-48eb-a1bf-00ad0dad390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9983763-7fca-40a4-a3b7-36a6c43f4329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f907f36-e749-425b-9970-7efbf41ea333",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1e0dc5-de7d-4743-a1d9-a8c4d244829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33a8889-81b4-4265-abd3-2bca4e2ce42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffb713c-8e82-4282-bd2f-c6654e0bfcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95199553-19eb-40e9-a95c-fcbf479e58f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40412385-1e76-48d4-9909-30370dc6a793",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7275e-a708-48f0-bb69-f8aa458c0169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7258e374-0bfe-49a4-b18b-bec1c250fa02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c15b7-92ae-43b2-9410-3e4701c03b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd69ced-34a0-4eb9-a567-33d94097375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc91b1a8-1d21-46df-b442-77c01e0be61c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d227f12-d609-405d-929e-4eb1ac7bf33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5840962-a7fa-4749-a105-2c56b0d8c989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21420307-6fe1-4114-a94b-4771d820f76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3a6f5-b1ec-4ebb-b4f0-e8e130b703f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e90ad3-dfaf-409a-a161-1897157a4bc2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa00b9c-68df-4dce-b3b7-fd598852abd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e7a776-e020-4d8a-aa63-e305ba86c48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d4d920-36e4-4542-8a33-c86434765860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b48ba64d-c5df-4557-bee6-83d8e00f710c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b51a973-e279-4003-9825-f9a600cb54c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8d224c-806f-4dbe-ac33-60f8c735f3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5708ff09-8562-4e9b-99f4-697dd4f72a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7f50d4-9478-404c-b947-21fdd4569be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83aa558d-ca6f-447c-b27d-6c1a6b8e9b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44931fb7-9550-4449-be7f-0e48b3c3f28c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3179da-005b-4857-9731-a5f6321b4f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cf82c6-382f-466c-8810-4ec4cdff8608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c1116c-97b6-4ea3-bb54-88807e781d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "733f6ecc-1bd5-48ff-b610-a0658a52f40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a47cae-32c7-4dde-934b-2767c08fc836",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dec36e0-00ea-4e1a-b203-ab37f5bc30d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833423d9-91fc-49d9-bd45-7ca529e041b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb235d-7e7f-4b67-91a6-7e7483ef6c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaed641-8755-4659-9b29-1dffcf77c768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3558b3b-62e2-426d-9841-77426d2f7f9e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea245668-30e8-428d-ac58-d5265705270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a71e6f-9c93-4ff1-aea2-ca551dc83a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8623d7c-499b-4c9f-9cd2-2be963e6838c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6054b3e9-166b-41f3-9799-dad93c7f7648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb71a2e-742a-4b0f-878d-a2114973e825",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e13d27-694a-4502-a520-f0948b076b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f6ee6f-cb39-4359-b5cd-efba69984a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb000410-9860-433b-a6b5-41a6a6874b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01794781-ea20-442c-8e1d-ba4ca8aa94e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae4274b-ae96-4839-9e25-a5b2e6d6a18b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1070e19-2d1d-4b7d-be24-10ddd9711553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375265b7-39db-4fec-893b-86c45a983571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ae70dc-d5b1-41f7-90c5-4ee84b10d992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9e2173-573c-42cf-9f7e-55c723987611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f23c7d-618a-46db-ba9d-688dcb028b3c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c86e700-592e-4078-a4fd-1d4a3b3669f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1800e6-ce63-4e4c-b506-f487b34e478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36de571e-3d7a-4c4a-9e20-1e8e604431d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c423241-1771-4086-a540-ab30e11ff04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478439b1-56f1-4b89-aece-4ab449d80103",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146019c-7030-4688-9b37-422fe77341c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403439dc-deb7-4292-beda-3e751460a23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c95716-19b4-4bf1-85a0-a542230b9a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d82b818-86bd-4c89-b46c-dbc4b96942f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fe7020-432a-485d-8c42-3e7e2eeb702a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a886817d-397b-4fe3-a802-1b5bca370de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baddb7d-bc61-4731-9011-7ce630665628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480bfe57-aa23-4180-a81a-a9b3e7973b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69821ce-7b79-40b0-8ffb-7af30c7af280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8560d1ac-0e84-4828-b89f-4838a1316177",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ed90b5-557b-4443-a345-e8924da6db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c8d165-713d-4711-a598-2f04acf3906f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dbe5bf-bdd7-46b8-ba65-f482b6e41b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a93589f-66ca-48eb-98db-af693cf0f7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45785a2-e21d-48c4-be6f-fa6338770be5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce435e9-fa0b-43ea-8012-10f8e82f643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db74cf70-36e6-43fb-9e42-9f16736a84f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e430f8-112e-4682-bd7b-8beafefdb3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd964c5b-b94b-4d8a-ac47-23bbf4969f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5248be-45a8-49bc-8c84-736a06f51ab1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72df5d24-a8cc-45c5-8f37-dc8695fb52bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767ca038-9142-4d33-9253-1247fc80bc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d179cfde-1526-4d32-844d-a476b5bb657d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "171fb592-dd57-4599-8d2a-93ac7249c584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1bf60d-0e89-4ffd-8a96-b5cdeb1db702",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de999f0-340d-4f3c-8f9a-d84caa6968a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee42ae7-d82b-4772-9a57-0cc001f5e736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66696be6-4eda-4c01-87d6-94bb4ebbc3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e464d1-6c14-4c60-9035-e64b20ddff2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98bbdf0-c2e6-479a-9074-d0041e163347",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23faad12-0767-4ebd-8dbc-59337716b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0d536d-deda-4c01-9498-faad21da07f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bac1eb8-1056-4236-8602-eb620bff931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a98034-024a-4f99-83b7-03b6f21b848d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061f7988-2650-40cc-b6a9-b5f812b62255",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ecd811-2cd8-48f6-9e8d-8c7591a78150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2134ba-2b3f-42fb-a8c9-93f6be807e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca131c86-245f-465b-81e6-f62d0eef50fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa19f1ea-ad84-444e-ba3e-813dd6d8002d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a28962-eb0f-4853-bdd7-0bd31da273fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba26225-1e00-4d87-b1c9-6c9d2fe4fbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b22407c-22b2-4c2e-b8d5-c48178101ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6ce2a4-aa6b-48ff-b68d-9ce75ae38c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf4f091-991f-4c9f-8034-f1ea4e4c531d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b002985-a248-408f-bf66-8cc9a7c8d94f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b184cdd2-b73f-40b6-9f0b-83ce4e2af464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44d8a80-a1df-49a5-b448-f85dc9aea25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780550b8-026f-4001-acbf-aaacb04115e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e90f5f-7e08-4637-a576-0af281ef990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4b4aed-1b63-4369-a876-8de73d79ca9c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdbff35-d189-4f10-ba3d-bf3d3d830930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e80d86b-746d-4f46-87a5-89e97449af18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76469a25-98a4-454f-9be4-4241cc747743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bb038c-d20e-46b8-b3db-d575c784b013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e51317-fd47-4013-9d52-a6a42042dfaa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaffb62-3f71-41c7-8542-c891d9d1cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7902ab78-5eb4-4292-b9a9-9931367b979e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db44e96f-28cc-46a0-b30f-b812bee4205e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b3c448-1201-42b5-b390-c2e85427dcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396b00c5-3838-441a-8ea3-3a52433d39c9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914f95f0-a43e-47ef-aac0-d5fee1db8807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d893ef93-c605-4218-8c99-25459dbc1e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23521d5f-9440-4d95-9c3d-e9415c11e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb24a0a-8498-4294-aaa4-5752d3e31c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf5ca9b-eee9-4cf0-ade0-55fd302e029d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b73297f-e3bb-4394-bbeb-4bed9c2e1eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d630896c-8db9-4a09-9f74-fbaa8a12f60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f16a8-1680-4f33-9b7f-d65bdc311e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9d0ef5-7e6e-454d-88e5-69881b6dd998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052810ca-118f-47ba-b567-8370341c9a34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c420cee-d7b1-4ebb-8733-8d8fdad1277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4388eb3-1676-48f5-86a8-97ff845d1583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ecbd0a-e970-4e2b-8800-400c0130c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "533b9090-7689-4124-8bb3-2fdfa8580f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a697eec-45dd-4b91-963f-11f4570261b1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade4981-3076-41bc-ab5e-7123159056ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ed8b62-d656-4f40-8dc2-176a3738f958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb311d4-7154-4f0d-a2b7-d8a8cd365e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "787e0d9b-628a-444f-9d54-6cab86f5c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff570973-0809-4dce-9fec-1a73a99a9184",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd130f09-f157-42cd-a509-9788d69cbd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6c4b6e-6ebc-496f-ac13-f75e006d82d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b82c30-2d18-43ef-9cbd-65108531a760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9433aa7-e334-4e74-b20c-dfe7f227a3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f68c86b-35e6-4c0c-b453-1593641d680e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcb3178-c89c-4948-9caf-70250f7dda64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64badde3-d47d-4950-aef7-b3ff02b889cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91587ced-519a-4c80-8f48-856c125643bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2add177b-7676-40e9-b611-0812dc28e378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c474f7a-2218-454f-8545-285500684a47",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4648a9-ce6a-4870-b94c-74766f40c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34956259-41dc-4ac5-b94f-4ad9063e917c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a48498-4c99-47df-b2f9-5a802ae7f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f578617-df43-4af6-b052-c1ffffd50842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e07cde-fea2-4c4c-9b38-dfe3b7031d18",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602c491e-bb29-44af-8fb3-808e66ffcb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384fbb6c-b843-493c-9a69-bddea3cb1a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a292928e-bf03-4d93-aa9d-9ae5303cb7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887c2fe8-a79c-4dbc-8fb3-3f5f58ebf3d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3270913e-5a94-4108-96b6-2fe28a19af4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63553626-c39b-4eef-93fb-856b3f54240c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fb84da-9f85-44af-a51d-55b951163b7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9df4706e-f086-458b-874d-1c26503c1a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527c5753-c552-440d-bcef-dc1b16561989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb3b752d-7bbf-48ee-8ec0-aab2c945f36c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "327af844-3318-4600-bc93-9d449447fbbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c0ce01a-7c35-4350-aba1-4a9d7f5f135c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13f64631-a6e4-4871-86df-e6e1d22e478a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc804581-a6bb-4033-8969-7540b352adf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a41a820a-15be-4cda-ba32-a6783c26249e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a74d7b98-2aa8-4e69-a1ab-d4e76de24f7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee5299d1-de2b-490d-9c9a-7c15e8a989ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b42cf6e-248e-4c1f-8d61-de0a9ef6dbea"
            }
          }
        ]
      },
      {
        "id": "e2b944bf-17c6-4419-912d-9bbe46696c9d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "32d6b515-c803-4cf4-891c-aba0a01199c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78c2b09d-2d0c-4bf3-8844-ee796a58b1fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28d15d12-0f6f-4da6-87a0-ad0958da14b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6d5a44-8706-4ea8-8a19-f3f95751df44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060e40ec-5b65-486c-85d5-44b794de2b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df5d196-8cbc-4406-bf98-cec1b42afdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb5e4a3-2bd5-46bd-94d9-18398b5e2603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693fc12b-aef6-4814-ab17-194107676aa0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8bd4b6-fe46-45a5-a840-dd668ee70040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f0372-3ea0-4c17-bb92-0d3a719a70ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b1a292-b475-47a2-99a6-87747d827a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d360409d-690c-4eaa-ad37-5b2259d974c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b903bf4-0291-4411-a5d4-9cea53a21eca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2094c3-c748-4e47-b1e9-9b376b91b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af90ae32-16b5-4228-9758-c80ae6b5cdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aac7cf9-cd1e-4080-932c-f3ec4476a13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "574a4aba-0119-4e9b-9acc-a9a39ef11aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de07157-1061-4f08-b616-543a1c2e4099",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab246e6-61b0-441e-b961-3f2a437c0eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa75377e-0979-48e4-b5ee-5097cae9f881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a37ecf-6ec3-4969-8cef-878b633659a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d3d318-70ed-4372-b9ac-14490c5a936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c72271-c531-40e7-9839-2613414a2fa6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104a7ab4-6718-47d4-8714-234fe33f927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3498b6dd-f5aa-476e-a24f-21fc95a839c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e659882-67e9-492d-9641-0a27fc2ab8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e55baea0-2cee-44b6-be6c-28db1c20c25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774580d2-0dd8-4a70-bb25-40a0f12a58eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28417688-0945-41f0-a151-dbb6b266e911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb8031a-2875-472d-a242-4d6dd83e79a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d168db-a805-4e3e-a5d2-a4c9369e908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b647ee-eea7-4a35-8cf4-dabed4c54650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82567a42-3069-46f5-99db-23d42bca9987",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b592e7-d1f9-441a-ba14-219f8339eae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34801961-2290-480d-8c8e-46ad88aaaaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5129c1-7e86-48e9-a50a-8702f7109a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e27f2b-59c2-401a-9e64-e2bbb7042419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521e0ac9-8868-4d3b-bb3d-df4959359624",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450a1e12-2725-4291-9547-e6817c088505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e8f96c-4129-4740-b9f5-89cdde69ad54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0cefc5-e4d6-48b5-a533-7723d6c93261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95bf4e9d-840f-4dd1-8446-a5d10395f4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4f70ff-15f3-4d6d-b148-789924fc98f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce2feeb-7b00-4321-9257-672c9d3ae155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e65be9d-4261-49aa-a28a-d80ee8bd80d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce195b5f-8e97-4689-b304-25d384f66456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "053d9f3a-f6ed-455d-899e-42b8338d9931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4b91b4-24c3-4036-b953-6fb0fc9176b8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578e6b11-040d-42f5-a4fa-72117b1c9eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a62ca4c-13e5-4225-b308-6be41fddb963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab9880d-6620-40fa-add3-2115a98aa7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fba2096-f1ad-483c-9acc-a47db15a418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a761196b-a679-4b02-9688-b887293d490d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6563ae-428f-424d-8cbe-49af410a9656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25248cf7-6e1b-4281-b857-ce003d25c586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb463b4d-bb20-4956-b7da-065547d62a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d73c999e-dcc2-4e72-8edc-735340a5a7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133cac93-7cb5-48c9-8d91-94ebe7506e1e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fa1407-448f-4f9b-93ed-9be7653c0de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54def0a-caa9-42fc-a797-c470d1d7a4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f787abf-331e-48d1-8a7c-4541a63f167e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4359deb1-c85e-42ad-840a-d4a18a1b3648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97bf658-06b6-43d7-a712-1170ce924427",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075d6fd7-5f65-46e0-abba-76b093f33c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23602bd0-2aa6-46f5-9ae5-e05fbc011146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebbd3ef-5815-4ff6-a0d6-29e556310171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2599e5b-b646-4866-9fb4-fe56d7f89fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34f1bec-cf10-46ec-8458-27c21bd3129a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d16828-78be-4cab-b40c-97e2a429c360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304fa357-8e47-4267-8117-5ade1a56cedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4171b652-8200-4d63-9a2d-23b4a03e1fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda1a5fc-21bf-49d6-a5ea-74e52c777d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0385a04e-25a8-490c-b5a2-9bb27d376b23",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c2539a-738e-411d-95c9-f30173f0aac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c670d5-e0f6-4f42-a0f3-ace2f2fead33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e29d37-b731-4d40-bd2e-2bff8e992318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a8cf94-29b7-4088-9dd5-75b0a8111f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84ed419-5cf9-4cb2-9f56-fb464cf88fd3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de6b381-9abe-4444-a3a5-0b8666515644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e270e2-f591-488a-aa9d-6171a9980d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e89422-6551-41be-89c8-51310eeadf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7324e75d-1c06-4dbb-9831-9733ebe04b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e284093e-aa41-44eb-9b8e-443a565a0ba8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071c4ff4-1ea3-481a-84bc-76931ca58229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647baad4-aa94-4bba-9e3f-a6f8c4cf5e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c5c784-c891-4f14-81d6-5a0642e1726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d860597-5b5f-4f53-8732-cf0eb9caa5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3a71db-c4db-4ad7-a2a0-d32b4a237880",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c45bae5-b301-4396-81d4-96680b458d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138ba685-617d-4929-9a7e-8b81e6d20f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afd139a-8a4f-4c25-8c85-e79c50485027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfcbd49-8476-4f06-9bc1-075ebd8a1795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ac405b-0974-4d5a-b152-70617bc47b18",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5d9a64-97ec-446a-8e48-9f49740cde08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3596a669-b112-41e9-a49f-8a60d10dd86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6ea89b-03e2-4649-a59b-d9510e2b4f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b7b024-7803-4338-99eb-e42f39259408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d8c201-b7e9-4c0a-8247-571828042c50",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c2366-333d-44fd-8342-a95faac38f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361b05e1-b048-40e5-a86f-0e3402aab129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ab1f81-c947-4bb1-a087-ca25560a7489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc03198-0d4b-40e1-a708-11c1c70152a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd0bdf9-a9b4-40f4-afda-2ecde396144c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906b527f-4459-4689-9e01-0b117561f0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d54576-99d9-4b82-bc67-5c20d1b3a34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1da8a93-99f5-432a-b8a4-fce31280c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39557bbe-24f6-47d9-bf7c-c9d8a6ebfdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510125de-4b17-41f1-8b5b-2cd9a2bf6805",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a9da14-a3a7-4af9-a934-2245c81f42aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf00e573-e58a-47f9-a28b-241349f3f6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0423d407-5a40-42fa-8ad2-f984d06f67ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd30961-0481-4129-bd81-73c1ae1c73f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9721bd6c-c592-4611-8c58-adc0d37a1525",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03919cf4-4764-40c2-a8f9-62cea2ad6bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73b0cf3-bc12-47e0-8650-c345d47a4ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c34e6-da6b-476b-96b1-dc160a1c64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70293155-9264-40a3-b8da-c718724f517a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ce1110-d8a6-4d78-b8b9-cf80ec652720",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18481e9e-8a4e-4224-8ea0-6c552f4e9921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f22b45-13ed-4162-af3d-32b1599772f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9d051b-182d-474b-bb80-678b3bd86e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72015f9b-6b1d-4c6b-952e-74ba436f8e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2bc4a4-135b-4607-a7f9-ac8367414945",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae146add-a133-44a3-8b79-03cbc0153446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070bab79-e347-4bb9-a41f-ad63e565360c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63aba86-d210-4ec7-b5da-7afe56aa0c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cca3dc7-07a5-44cc-9806-6c6f66defd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bd2a36-a9e6-4e8c-9811-1e1ac2d60870",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7608e0c-2eec-45c8-bab2-8114b9be1414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5294867f-b9bd-4f9f-a965-089162ac03dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293c916d-9e8a-4aa5-8363-e6612dac285b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25646560-9e8b-424a-b1a5-922a64053fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e1e02d-4c99-464a-aa40-2e36689a3ebd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ba4241-3b95-4672-9b3d-e5a3801909ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d41a2bd-e803-4ae3-b367-a679438951df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7f1a10-c297-4787-a67e-88add886198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba8d67a-2f1a-4149-9f77-c5b97c2dda3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dbe33d-2440-4303-afab-e3f5a61007f9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81c7d9f-6bca-4174-ab7e-cb6ede4679ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0275e8-0eca-4628-9bda-c5e5a8d8cd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a411b42-db35-48b0-b490-90bd2345c64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f0e736-3d65-4049-90cf-a0d2e512eb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22069849-7e24-4f7c-bcae-9143570075fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b018d7-2b1e-4d30-81cd-b4cca3332d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50410dcb-56c0-4593-8d04-8ba71e4db57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc3b69e-69d5-4e96-a6ac-a055e202811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af794e5-224e-4b3f-abb1-85e404ea894d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edf23fc-be7a-4e60-9c6f-c2c3c5f16a55",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b627730a-ba12-4c01-b106-c967e34e4883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab365b1-5d40-4fce-bb5f-75bf9e4fb68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7359829b-29e0-4542-ab8e-ad7a01ac84c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4018b4-293e-4eb2-a64c-8b24edba1c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cbd8c1-54e0-4bff-bc40-1288965d94ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e2bd93-2200-44c6-8ae2-7b3961a4eef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9daabb-d411-43a7-978c-13257cdec192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05213e3-e8aa-49d4-ba00-fcae154ff35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ed952e-1755-44ae-b26b-a9e1bbf7473d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e6af50-b431-4c0b-81b5-ddd84142f6f4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a78bc28-8acc-47af-878a-588911ecdb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc63299-bb3c-46d5-b1cb-bdf3eebd36c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84173582-6587-4876-9b46-657c17c32f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "821cabe0-dedf-4ff9-bd02-77ecc3625cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26d1be9-bd49-4d37-b767-c98e520c07ff",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fe8617-d5b8-4ce6-a404-d6ae87b1fb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c566a547-16af-4153-b63c-22cd76f3022b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2c30ba-97ed-49d1-8591-080db2ba2cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28697b63-c8a2-49b2-bccd-64c233dd670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2910b9-f05f-4737-909f-ec501153be53",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cb604c-64b4-4cb3-a773-c648bf2bc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2d310a-36f9-4abd-b880-63dbc4e89d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebce807-f260-4a06-bf95-8f236ac1cff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1cf6ae-ba26-4a7d-b7e5-a2614cddf6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efba9dd8-0d2a-464d-81be-0b6e295bf531",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fb3641-fbab-472f-be1c-9dca46d7cf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e1d697-bd0e-4653-9f92-8fedbed3b4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a6d0a-c252-4792-b3d5-72571567a29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc09fec-009a-426b-91a3-c9fe366e548c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968ac3b-b8b8-455e-a509-6966f390f76b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191904ba-1592-45d4-a55c-ae1158a88084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2df464-2dc2-4e2c-abfb-8d82ce923306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58192681-caea-412c-b4a9-7ebc8b476a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5355bdff-d318-4b57-acb5-aec83adda36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7e7b08-66b1-4739-80ef-734cbba9c750",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402e3a2c-2650-46e8-977e-2303ce816779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c71811-a83e-4b3e-807f-3fc6edb73953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736b63ea-32d0-4c1a-a99f-bec17a7f8d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398f0f5f-d7ea-426d-9ba2-43b8f0bc7563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "532cacf0-ab1b-445d-a9fb-4ef6ac6074c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9467b21-f934-42fd-b16f-58c6a8f4b8e7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa7ad4-6ccf-4737-b514-1b119848d61d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23219eda-5ce6-4c4e-920b-d59f719c606a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9973016-1a87-4d90-8f8f-272a8654971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13f027e5-a280-4b6a-816d-ea9f367abf2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1cccd54-1c4b-4304-aa03-657748ed25bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46c87610-8037-4b45-88a5-74314a0bebe0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6883defd-fe8d-474a-9c22-5906c35b9ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7576e9e-a04b-409c-936a-783e116f9406"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2a354e5-1f5a-42d0-99ca-ce9f8bf3456b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a6684c9-5fd7-43b5-84b6-ee6ece664d58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c3bc778-58d5-4bb1-9149-7cbc073334ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "514c07a0-dc49-47b5-b1fc-9869ea5486a7"
            }
          }
        ]
      },
      {
        "id": "e74229ad-f1f4-4154-be69-db58967c2bce",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f77a877c-b9da-4eac-9987-f4f3d43d5036",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de044ba7-3a96-4018-8470-913b6eafac12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30452d37-522d-4634-a96c-4f175fc065f8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee74aa6-9d2f-4101-80d0-3231e6398b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69989106-4a34-4945-8696-71d9d8b81973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8cbe3f-fbd2-490c-9e65-55b6dfa581c4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3e98f9-db2c-4c41-87a7-5238c35e82fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb57ea38-8785-47f2-94f1-46cd7167ce97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1bf90e-9a04-461f-b1ea-982d6903beeb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb8672-ff8e-4bc0-ac41-9a16d79c113a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf646685-5dbf-41d1-8537-f28e91892c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce89213-30b1-425f-8ac3-79445805d03f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3caebd-55e5-4265-bcec-edd2e0307e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21a0065-9b2b-44d5-9276-80fe5e195a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c43b98-8d71-4729-a56b-50276df2f60a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7cc6d8-30aa-4cdc-aec0-45d3d57f4b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a556324-a030-4307-9c06-53e94a7245a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ba6f42-fa80-4dd7-b43f-088825ca035d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe512fb-49b2-4702-aaf4-5f81b29e4663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce997c02-515f-4ef2-a3d5-e4e9a5486df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8d8c0c-8cba-4015-8edc-46c18fed7d35",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fe2762-8316-43fe-b3cc-270eb3430833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a71b9c-7e8a-40e4-b93a-8744a21fe5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b0dd0-648c-4596-a109-ebb24b14cea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f67ed0-1ed2-499e-bb2d-0dd402141378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caa8394-53ff-4b34-ad89-354dafae693c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15141701-7b62-4a1c-aa5e-ca98e2738ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3b2cea-757b-4e2f-b7d6-f0bfc031b273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b644b24-ad3a-41ab-909c-34fa3561907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a007b06-61c8-4228-9064-e18a7642c3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c80800d-7684-4309-bdc1-b4a3876532e3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd016ab-65b4-4f25-8481-9b7ad5d75c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4ee572-96a0-4ae9-bf73-b55b47592665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451a22d9-48d2-4e92-985e-b07ee355bcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbbd855-98f3-4a9b-a6b9-d8c612f09cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af69bfe1-e338-44c2-9a15-6b9a70844d42",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f90f85-1e05-404d-a910-d8f03a3c44b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d66482-6ec8-4e6c-8c44-0b05b20cfa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2997c1e7-dcd7-47b6-83e9-aabe54f0ed3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aaa1d9-ac0e-4c58-a19f-d45cb731b5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5ec95c-0d76-4284-88ec-d5c6540ba28c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b1eb03-30b6-41dd-809b-68ea114e8301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdea8a10-f701-4440-80c8-8f2df6da5797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0b5122-b415-46a2-bf3a-79fe3cdad49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e791532d-e3a7-4776-8f73-95b3c0b9b3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa18f82-b629-459a-8c2b-75d29a39cb2d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff51a0f9-54bf-45c4-8fc9-18370dccc199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359163f6-e751-470b-a0ea-e43726c94e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066ad320-dede-4ff9-8d9c-1717daf8d60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e4e8a8-fc5a-4bd3-b525-1ffb99831943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b680fbe-74ae-4133-bfaa-91b2d5f42fa3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a48a3d8-85b8-4982-8d6b-4c00924d0578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d662acc4-c809-4b84-b909-c0f12105539b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3242e5d9-1fe3-4c4b-9f18-99b61b77b792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ac7b3b-e3ff-4103-827e-bec751a8494f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501f749f-d34c-4596-a0ff-f1c5d175c217",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3603905d-6aca-4f36-bbcb-896179dffaed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3fb3a3a-c4b6-46ea-bb74-8111c4509523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55321d1b-1955-4525-8ff7-666dad1d76a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df003d7-a059-4233-a930-1b2a9ab13cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27ebaa9-bdea-4ce2-bc9e-0288ec738cfe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54c96a7-ee31-43a4-9890-480666e0da02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a353d2b-4c8b-4109-b6b9-41874d16ad94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d7269a-86c3-484c-b4fd-027348b6d4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e427416-0b28-4caa-9f9f-a616e025d943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6828634-e52f-4854-94a6-5d5005cc8f65",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6560f-20b3-4333-9397-1ac6f1c926b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c909f9c-16e2-4055-a047-6fbc09e2e6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8fa5e-f36c-4acc-8d8e-b1ad3cc79c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff68fa6-a8fc-44dd-bf65-4d59da209487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65568e72-ebd9-4117-9473-7ad2001775d8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d875451c-4ad8-485d-b124-97230bbee94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58efee1f-cf63-446a-a8e4-37de00a04033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6f201c-b7d4-4e20-92b0-b14980b287b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ed776c-1527-4e3e-a7e5-62e7da76b5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72cb47d-75b5-41fd-891c-2ed82b417d9e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f70693-a8e8-4830-be33-9818d2be2a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b922e4-56a1-422f-b10d-b50a72a19971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c5d791-d2d1-4fa9-806c-cb304ae684ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b013562-aef8-4044-8a25-98102f373e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897aca29-2ead-4df0-8acb-c6b8a6d0bb43",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5782dcde-2e15-4475-92b1-3f4be6a7680f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39598316-2ef4-4e71-aafb-0a4df1129174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1695e7-5d3c-4fea-8f19-ae1e8e4ee3f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fed609-32bd-473b-94f9-e2d1bc3ccae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0868c63b-f610-4cbd-8f5e-86730e940b0c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c812ad1-add5-42f3-be39-42ca79ed2869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e985e46e-2471-4af3-8024-a725122e7de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f2674-cbc7-4a2f-bb25-f5f9bd4bbcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8137db-9ea3-469d-b820-ff105b108243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79e1b6d-69e7-4891-b5cf-3d7d6086730b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7ada82-2951-4664-b07e-58becd78fe01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e49f236-40fb-46fe-a173-59e7913daa10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a8933f-dcba-4cda-bb5a-a52cc2dc9844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f338217-d0bb-48db-be49-2c78bf65ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dba5c1-cecf-4114-ac19-984bfba69398",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241a0edf-278d-4360-86ee-b5c614b87d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9d2910-c733-42a3-b958-23a78cb5aa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a474c7c9-802a-4fca-bca8-f1e8a59bbc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421e9a61-0c52-4e3b-bd3e-5394fbd95280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b297e25-60e6-449d-9414-6ede0293dea4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8759c4dd-6b2c-4a02-86c4-449a7297cf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539e5a61-d42e-4b2b-8915-8d0293793d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22119e9c-14c1-47f1-ba7d-d380b8c0facf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5a562a-f673-47d2-b5a9-0e01dbf10807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72113f86-3f3d-4a08-84a7-7efe463f791b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5b0869-474e-4e8f-99ec-835c0cf47735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e65f4759-9919-4a6d-89cb-c1beb29517f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5664714-4a31-4846-93cc-dfc167a88907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bb3a69-c2d5-48b5-92ed-a0562c8a5a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b74978-5135-44ff-bbdc-cd2edc9adcf3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597742d1-77fb-4571-bbf6-f89117f4b180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45064646-65aa-41b9-8003-79df682fc54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dab107-7137-4f61-afed-ece77e3cda76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317b36f3-1abb-4b0e-9355-29300170c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c0220f-c967-4334-a9a2-4cb0cc6a10a3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24348c8-1ebf-47ce-9e54-881d796c3965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e1e95b7-357b-45f8-9ee3-c87cc167ad38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b6020b-2c50-4053-bd70-d3921f6713c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45fb1b6-42e8-4ddf-a5ab-782f3da2584d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1432a7-adef-4262-af06-6fb59b4a132d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a485a4da-2733-45af-80ff-4eff0ad964c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d6dc306-a7ce-4950-86d6-57cc4981e3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a28c64b-a95e-44cc-ab38-65f19cfebfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f50e69-2856-42f3-a9c3-1ed43e7a5f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9440f389-19e2-42f9-adf8-bf88012ecb8b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3fc619-2911-4713-838e-0055efab187e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eadba35-40c9-4227-93bd-21eb332e1411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fb98ae-12f1-4493-957b-0a5af9dc7c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732d5553-b936-474f-9bbf-90bc7a282ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccdbdd3-a78f-4d30-bc91-8c17bec77b0f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc161e7e-b153-451d-8480-a9e18cc011a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c73929-19c1-4329-946a-8fa8791fb7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e20256-9fc4-4d4b-a79c-0dbd607b4166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43acc7b8-b708-4064-bb3f-8ffce992d320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00324ea2-3a95-45f9-aec8-7847ee78d528",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9f50fc-8554-4bac-b9fa-9260ab1584fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b853d21-6864-4e7b-8d34-647fafc032fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9616c085-f506-4318-abf7-527afcb5eec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e9f7ad-ee4a-4fc1-8de1-1b4ed88c4dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779e70e8-2a94-4d7a-ac4a-8fcbf76157ac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d374b7-45c7-4500-97da-9b70dd279cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e424a3c1-f8b2-411e-a51e-eb86155aad91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e83dca-94f0-4682-93c7-8ba4787c0d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce23050-b1db-482c-b04d-3dc78bd27a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af50c8a9-687c-4589-910e-49b4520c7c23",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e627b233-3d7f-4a70-bdf9-c9158a3d1a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6c9ff3-1d2b-4ee3-a4bc-82d1189c41f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb641ab-f13d-4114-ab9c-ee27e3cd4931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85f9596-1311-42ed-ba8b-2bb9e80a2698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b76945-e3dd-4e8f-a8ac-e6ba668b5c80",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16d8862-b2c8-40af-a9ed-92a451e29848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14814695-b7c1-48b4-a5fb-0458e67ad281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7bbb8c-826f-44cf-8411-edf17e7cde67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb535e29-ae1f-4349-9e2b-80feb1fd4ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5663433-3111-4c2b-b1d9-749c617ba489",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f35fd0e-56ae-4905-bcd5-69692b329945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56df3c4-78de-4960-9543-b05753b3e6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75d5cf1-7efb-40f2-84dc-61c04ec0a210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d780e0-8363-4b8f-8b2d-b966761c30c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e6da1-3514-4add-8e6d-25c3cbcc8040",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121128e9-0073-4686-baa1-7f7f80c5f679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8417df0-5955-4a59-91b8-98a60f840d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a836d054-cb95-45e2-a023-eabd5dde0ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b2b46a-c807-48d8-8806-8ab7404b55c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14649039-8c5a-4e8c-b31f-e8984a4f4d1b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89867a9b-317f-4ada-bc82-45986c22c7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc6b62d-6b64-496a-b797-98f099286b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911cfc8-8dac-4fec-aaf8-fb5d78f84904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbc08aa-29b8-4103-a590-70c27d231deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b794afee-c5af-4ca2-a2d7-892f81382917",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e81d1-49bd-4fb2-bb07-79219a54b9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96b33dc-0147-4bae-bf39-0d048a884de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542f19a-ec68-4990-919f-e45e066917b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e51fb9-0240-4ca9-9195-0e5ba3f9ac13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb48727c-af21-406d-8230-455d38128582",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da833d50-c12f-41f6-8e3d-3145946017a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117396eb-f3bd-454a-87c0-6bb2eab7bfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00875413-20ba-4c1d-abae-adcd69a89dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f90345-b7dc-4804-acaf-67f3f0ec1027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b990624-21a7-4ec3-90ed-3c04e0896987",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76696fb6-097d-4cf4-8f5f-1c34cd18db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1407da-db63-423c-b446-35637f253ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726fe8d9-1276-49a5-b323-80a121483636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3610fe-55b7-4702-bb0a-ff397bc3afc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314f89af-57b9-423f-8f88-09d438026e4a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba4221e-009c-42e3-a8e6-b8299d536474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c57aca-c45f-464b-b63e-b1b32f047251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9775463d-8a3c-4dcf-bcac-66bafbd59326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbdd635-e9f6-4718-af1f-17e958dc0e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa840ded-ae1e-4f4c-a99f-4a822bd7f420",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf21a11-b7f1-4c78-bbfb-fea812ec6895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd08534-cac3-48bb-a3db-e4c4c6c7a807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fad3a74-72c9-4049-a0d2-2198cf0e45d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d506af27-f519-4664-9b26-f0da081682cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67252d53-bd0e-43d6-9482-f0186a7b18ae",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e6ace9-5880-4841-a617-c258c5dd3c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c077c150-32c0-45df-94bb-e2b7a9ff0eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5083f1a-94f7-4d61-88da-01e9c133f378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050b31c5-40cd-4ac0-8b70-001520d83f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659dc86a-3641-4341-831a-3fbcda2390a2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1006c9b0-180f-4c56-9b43-87601f345bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc194ad8-f1cf-4d0d-a6ae-987f7f2062ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6f2db0-d5b6-4136-b7bf-a3fd367e8f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abae4971-9a77-44ad-9942-6403afa3288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd01cf1-ff44-4bdb-a9fb-553190a7f2af",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb881c5-8b19-4498-aaae-b850f31f0bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d615e16c-4946-4445-a56f-9b04d20e5fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad91934-3e0f-4c0e-b923-f763da97916b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b078290-bafe-43c4-8c38-b104dca7c4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5209f56e-2cb1-4722-a131-a1de1c2a1e8f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca1e176-8663-4af1-a476-962c15aefb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7a0a89-2c36-4392-87d0-3bc01b83f43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80766775-6744-475e-b577-065fc20d6e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ea1f98-ac84-4d81-9a66-0663d19d2c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7980cd-1231-4789-9f9b-451cfce6db9c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8fd7ec-8273-4c1b-81ed-e4fd7bbdce8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17d1039-cda9-4c8b-aeaa-ca3f3f8bc2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da5a66a-51ee-4a88-a4c5-112341b308ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a9f5b8-9862-4c02-be25-77787520311f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0bd194-a5c9-4e66-809d-f9fa1df133c2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381c15fe-f57c-47fc-8611-e1fd2e58fbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765570b2-d6bc-4e5c-84a1-eee923a4ff30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f024d-55f5-440a-aa76-b5aefb1da519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd52d6b-0fff-41e5-a1b4-71981fba9c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabaf780-b812-4f86-8dab-64f3dd493f64",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6683ac-12e7-463d-8c8d-71302edd9f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23b0c6e-db03-4897-82b7-4b15fc7a6135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c3668-2875-4d81-93b7-f8342ac5667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b42b15-3b1c-453f-a04f-33d57595fe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f0229f-b12f-499e-9b1a-343b30d4fa21",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ba5265-b5fa-420e-aca8-81bf92d7d557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ff8eea-4a49-4317-b60b-524998dfecce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb58b6f-d55d-48b8-a092-b5d3aa7b0059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6e826d-c882-46a0-954a-7633efe47099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22a031b-41c1-4c17-a207-899ecd038f3e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8ad0b1-7184-466d-a539-8f514c9c5f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8437de35-ff09-42ef-841b-3535e2223f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6455dc3c-6a16-4254-a8be-77fdb8ab9e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683b8b7c-67b9-488c-a816-59f0fc7dc772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c49182-c6cc-4993-b0bf-dcd7178710e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0a574-2fc9-4369-9a6f-13f6475514bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245d4365-f48a-4ed9-a1cf-e921b3715afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0cf200-9e19-4b5a-ac67-938e4f2f3541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01d36b3-7b2c-4788-9403-e6a4b478c3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e120441f-33f6-4571-8431-abede724c397",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f3d4ee-b771-4dc8-984e-7318b4377d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e80164a-87ed-4b40-9219-70296af50071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd38452-7856-409e-81cf-fb187343bf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e915be9a-741d-43db-b201-57a60f9c5baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5bfa62-7ce8-49c1-b40f-88fdbd577469",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868faec8-6d74-4241-9895-37f7366b71cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b65e5d-65a4-4f19-bfce-c1262a1d5afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a36211-85da-4a12-8a84-1a66c4787548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27acf351-e355-46d1-9064-c3845fb27d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d1a67d-01c9-4492-8336-9a9837ad6e8d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b65bc63-6266-45b2-9c2a-959bbc481045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93764194-e002-4168-ab37-ef967eae897f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e40c07-8778-40b8-b563-b2b4d757deb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437d8d78-5e4d-43e8-81d5-1a2a245b29ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3456cb3b-29f5-4c3f-a5a9-d8da262f1c3f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d3e82b-9f87-4842-a7d0-808e90299473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a75b8d-687b-48fb-9c3e-eb3f785a3271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb75aec-a62f-408c-b6f1-a95c32cacfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafdd439-597c-42b0-920e-1504dcdeee23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bad912b-98d7-4a09-8faf-47c6b57d9a4e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649c4bfa-f610-43a4-9517-c996ad94e4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55126db-1ab1-4107-adc0-5867e9a092a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963f968d-59fc-46e7-ba19-87d55838d1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c744d46-1198-4b32-b342-cfd4ab1045d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2132c162-2cbb-4717-af99-e3716a47a987",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6a6efc-cca2-4b90-90ea-0c57c37a3261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9476d9a1-4f79-405d-8cd0-9903d5bb2bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d4d4ee-1daa-45e8-a134-0ae103f44cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae1ddb5-cbaf-4adf-bfad-1a6acc411ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4417e141-34fa-4936-9388-2ed542962f5e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5d2653-9999-4153-a0c5-0f7f283d5c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c8ec40-0c3d-4d0c-83d2-0038212c54a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccfddaa-11da-405d-a4f5-c003a94df99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d30502-efb0-4a3d-93cd-2537a6d93cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cf894c-45d9-44d6-aa1f-765d9bff0b3f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f754e8-3b49-45f6-8125-3085a12f7956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d36783-7792-4dde-973f-f101560e3268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf843a8-8a30-422b-b712-c5d10066a395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d4e04c-704d-44cb-a842-277415f13cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a641a620-09a8-4012-9c19-e8c703b0a1f3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b3519-e271-48d7-92eb-5045bfe42c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b34222-b462-4a21-a79a-f55c4c0622ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3340a6f-fd76-4761-9def-4b1add121ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffa25e7-ba70-403f-8f94-cdd0d3bb5fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084b33d0-4536-4fad-bace-86eb3bd41ffc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a815b-8cdf-4ed5-960f-a6f4ac990481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b789a4-a72e-46a3-be69-643b95571b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5c2a0d-bd60-455b-a6e9-31a62b803e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a765adf-a7be-47e7-aa40-896f735d7b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a312b3ec-3f46-4c7a-9f6d-1de2aa379d77",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63cbfa6-cb30-4437-af3d-cda4a95f2499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfca983-756a-45f3-bd18-ad1915be58d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9888bf97-b960-40da-87d5-687f44c90935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a74cc8-25c9-4f9a-96bc-152b7f7fc130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c968e-ef89-4604-a16b-daa1e38f889d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a0c8d9-94b3-4284-9e19-c5b6984a70d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f958e98-7c92-4d01-9770-75a60e2a366f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea09889-05e2-4495-b93a-2492201917b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ef4a83-2e79-4a6c-8ea2-a5331ee143a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6651a94-4215-4bb9-9138-904f38d9e28f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2bf64-d0a0-4ca4-9e1a-f2995cdb44ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192b2d2c-37d6-4557-85b8-9f1dff3bd44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcc4844-1f4c-411c-93d5-cbb2ef8f3ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2b56a8-6d8a-4b46-b1fa-88273831a89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2966f938-94c4-4be9-8784-8f8b2998d551",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a12157f-0186-4601-a118-e0d65cbd4d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ddb71e-c66a-4245-8bc1-eb4f37fd1322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e97d27f-2d01-44c3-b679-5fe543f9baf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a516d94f-86cb-4c9a-8548-5dc2815eb413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b879f017-a009-4f13-aca8-ed70ed6f0ddd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8778e78-89cc-4dbe-a0a8-e19e81d288d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385bf4b9-2311-46d8-b69c-01172b37ff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8451803-95b9-4d9a-b0a6-3835c3f5a369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e3fe3d-048c-4260-94f4-863705e6e8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495b8cc4-6b82-45f0-93fa-cecb7cf7c16f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1eef61-6229-4a10-9a1c-0281c60ca63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf25083-fc8a-44fd-ae5b-8e325abeacfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0801a4a-8a19-4ccf-a23f-b382b5c8bb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabd4006-9114-4b81-aacc-a3ec95caabb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844d90e0-0dea-43f1-a9a5-36d370ccf4d9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769a695c-b655-4962-a038-5bc705b58d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9357888b-b946-4fc1-a76f-93b5dde7c45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62ecece-0c53-46f6-97b3-fba1dfe99307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290e419a-c439-45e5-b454-ac9f6eac78bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d48bf0-9a10-4345-b985-5dfc5a1090bc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dd1ec9-3b8c-48e5-8c93-df0e9ba7e502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad18f00-5f56-4e9d-ae64-29041a13dbe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624cb0a3-9c64-4e1f-a940-51a17769b52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b8bf64-630d-4ff0-b951-7b86602d77fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c977434b-bddd-48e0-8612-95875ffa86b2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e4b002-e89c-4093-87ca-a2c8971c1ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ada368-cfdf-46c4-a286-82784e51b263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05163fc3-a58c-44db-94c4-0c0b8bae4341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a5193d-5607-4a9e-a6f2-f7553e9035a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b811d694-fb26-4570-bae8-827ddc60d60d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db862495-0de3-4b7d-8ee8-124967a6fefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a094115c-1efa-4008-8f66-eb19196c1cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ab1ceb-19e9-461b-812f-eb49336b16c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf96192c-5601-4668-9ead-d00b39db2f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d59080d-917c-47bd-bc42-40863d73b60b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884327d8-c48e-4220-b26f-444f2a4985ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fc0cc0-9a14-4927-b684-45c1b5ff0a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea87cb51-25f6-4b2e-9ff2-9c2b308914fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f364f1e8-982f-4e91-87e0-f30763003965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739f4abb-6a9f-4836-8ee6-01a9b06a0603",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90daa22c-d984-4958-9c63-7f0cd4ca806b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0046d3-583d-400d-9b50-bdfca286f42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83a1ff1-1d21-4462-97d3-9bc89e9cbe7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acdc971-d544-440f-a71a-477dc4821c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb46e28-531f-4707-95e9-9205d223c306",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd29663-f7ee-428f-9044-b1ad3fb319c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b65467d-5ab0-4979-9fc2-a9f572c37cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b9a96a-da2d-47fd-a785-665ee4a3adf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cef74d5-e58f-425c-b9e1-0dd207385319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c530d3-2205-476e-ba7d-17f0634f3de7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58633783-c53a-4651-8482-ec663557db3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db97090-195a-4e32-8432-8814e544eeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a14c04-a9b3-4767-b537-aa7740f29ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff799b36-3840-473b-a421-6ae962aa3a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce84f051-f736-4202-97d2-0590cff57138",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2bb926-2adb-4e89-a9b7-3d1d07f7fa8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01a7c870-0384-4157-a4fa-3381bfa7a45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e082e10b-322a-4cbf-9e4a-52fcda28ede6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de660b6c-cab3-453a-b63c-663a33cd0a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44b612f-a5cd-4137-93e1-c03dcb802c66",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fe04a3-5016-4b45-a36f-084f8ba34684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdc53a2-fa72-4eab-a15e-fca9b054eb5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376f858b-650b-4650-8370-208b3754aa40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66b1fdf-2eee-468a-875b-2b87892d3820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c99b623-e979-4ce8-91b4-c213cefe2628",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eeb020-cfc3-4c45-83be-980554dfd6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11839d03-ea42-4287-897e-d40ba650cb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e39e87-759c-4e76-90f8-5277d8c5c696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2d70e5-cd34-4a55-8025-5d283175adbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57de2eb-f209-40ca-ab19-31b83b261e23",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd206b2c-a4f3-4959-88f7-791af54b30d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23ba304-82fb-4e34-9885-5219f4263e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152bb956-356e-46a2-8905-d47da77957d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b858f07b-3a1b-452e-aafb-47d8081c7c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23c77e0-29b4-4615-b490-068721fd8a8f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27131828-834a-4a93-aed0-c1987d42192a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fffcce-45d5-423e-acce-0a657eac81cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363627f3-7e43-4bc8-b360-ed547f30d2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8065f6be-f3fe-4b36-976b-f341823fc61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf5b4fe-4002-468a-b38c-58016c4e2b98",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5195dc-9c42-4689-aa1a-ee7a4a022c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c3f729-098f-4067-a90d-5e9990af1d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d477a4-6728-46ff-a536-2841221fafec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c18533b-cd12-4604-8774-142fd968b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9dd24c-538d-49cc-89f6-564106721520",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012b256c-fea8-4285-a4db-dda2b26c38d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6ff33d-f7d0-479c-bb1c-529cf2655d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd58def-df58-4b64-9823-aac40cd05b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65bfd50-1a3f-4a92-ac7f-bc74c866c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6b07a5-07cc-45bf-9084-8e487d5701db",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583ba673-880c-4ab5-9e21-52c67ba1598c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638b6f72-febf-48ec-9f2d-d7d815f83aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecd1c6a-312a-416d-9cc6-b590f74f84d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc9fb54-a044-4745-9fd2-728197e10459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e025e999-00a8-4942-8fc5-d0d90ee8316b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a72151-9198-4dfc-9a8a-1afc0f5ac42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770ad3fe-485d-473a-a893-9c3fe14bc206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d666b3-4c34-4e07-8b10-5c6996a5e71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258a9bcc-4d70-4c63-9494-b6f09424d70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01812b5d-8d9f-4f6e-b97d-643f43e85aa7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761ead66-a238-47e9-9f0c-63b66e9e0c63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88304f63-78cd-4c6c-8869-c807fd058e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12013ee4-06b5-4b7c-98e5-57252f4896af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96911b0-a183-49b1-9608-9557c19c929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4dd76d-c171-4b76-87be-27540e6586c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee41975e-a7f8-47e2-84c1-3daa5508ecbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b6e516b-c6d9-49b3-8822-58aa82ff3080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1495f79d-b25f-4d0a-9fa4-4252b50ae704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1214ab5-e24e-44ee-981d-6c42ac6ec557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdfa89f-18c1-46bb-93b7-b985832bed37",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea9ae8b-1358-4bbb-a511-c753a394bf16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199846b3-4b6d-41f5-9ba8-7019b076282e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a02b463-27f4-4a64-bc2a-b3694a91bfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d247796c-ecd5-42cb-82a2-99fef59afa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11997619-0f80-4dfb-8f02-49369d5b3462",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4f166e-4306-497a-bca3-2d4b8af01505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "996dee68-cdd3-4baa-8c02-0c1e4a40db73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255bed8-70c7-459b-9b17-9b02f47cd6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f07a43c-e6b9-4ba8-92b7-be3e54dc9b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1393f50d-4c1b-4577-923a-eb281a64a14b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f26089-3705-4f46-b686-ed7b2da5837c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e7492b-0fe5-4a06-90ce-c2f4b7dfe9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128e69b5-71c5-4e17-bd44-5bbe5ad919a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c259798f-4aa3-4e8a-a2e2-39f8add2d12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794846a1-11e4-4373-9a18-38573c7936c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76364d05-6574-4034-855f-74e5ea50fcf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cea8a2a-d6d3-4ad8-b87a-e2c9d684d5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca40d885-4e83-415a-afb4-1f34b8845567",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe9333d-c0f1-4800-a67a-30947d619ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdb262b-5a64-4c9b-8446-4fa546feb985",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a10cad-0966-49c9-b4ff-51f2088fb1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2a3dd5-5d06-4cb6-88ad-d00046b56fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8981903e-139f-4ef5-bb7e-31bab8655ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840d0ca2-ef0b-468b-ac6a-a5364624d972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45471540-9580-41e3-8198-0d5ea7810be6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bf83ee-ff6d-4e98-8929-d4690bc790c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1502a9e-f59e-4a15-aadb-adb1611239ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62789174-b4c1-4d77-a083-62168a3a173e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46dd5ae0-a400-4fdd-a7f2-2992e6d2349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b95899-d2ed-4fbf-9662-9ea1f4437ff9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e11f212-9cfc-4a51-8754-7a9e02ba86a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424a64bc-f743-442d-84f1-c852fd17f36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c06006-da80-4011-8b2e-eba6ed34e91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a5fd91-1755-4489-87f7-9b0fb7ee0d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d97060f-8a75-4bc9-8312-5eb886be431b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310b17c4-bcb3-4e63-af13-3020ffd13444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5cac24-d179-4945-9ec6-c3e8a991ac38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0442cad-a3b6-4746-8f7e-6573149aaeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c3c4f4-bcc8-4194-9dd4-384882298f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327728e-b1bd-40b6-bf49-31b1585aed32",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ded2bc-d99e-48e7-8b16-f176b61221f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e03839-9565-49d9-8834-9856e5027d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a28bda4-a63f-4939-81ea-42b8a9d8d105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae932fcb-2ebf-400f-ad39-e3d156ad00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443ff760-dca7-4e09-9e14-5353ae3265b3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4184b737-573a-4031-ba44-5ac4f2cbc68c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb07de4d-78ff-46cd-a470-3411a67878e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470c46be-003a-41b1-be7a-088caf649654",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7bed60-c1fb-4c4e-b714-0c2983af1363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542834ea-8ec5-4fee-8003-e68d67b8e06e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167317c2-3629-4f09-98de-68083c09a71d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb037892-7e44-4939-b62c-77cd48ed3098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835a22ef-fd68-464e-82d7-9b530fd533c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c73e17f-1a29-4e54-98e8-948f7f512e70"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d56b0b61-35e6-4142-9593-8f5f2c78a887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef2e0a65-df8e-411d-81b4-c1c3d0c0349e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93077a03-2f37-47e4-9d01-2ced3380f5ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa7b8112-f585-4547-8a53-c6721da18e7e"
                    }
                  }
                ]
              },
              {
                "id": "7040df20-bdd1-4eea-916d-eb38f8b42466",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3286cd2f-a647-4701-8266-65246592b256",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae39721-c905-40a6-a2f0-a2c6ead2ecc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "85cf1fe1-0ae8-461a-ac0d-2a47cc9cbccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62fd55-8cf4-4b0e-983f-5f3fc84082c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "034c9a54-3c1f-46a7-b68d-079d8f0cc41f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c61d4f78-52d2-46e9-8de2-168d7e09a625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6551d01d-8557-4e1a-b5c7-080b2ee10df5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d064be9-c86d-4ea7-b378-ca683094f669",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fec456f-2fbf-4399-bfdb-7567518f7fc4"
                    }
                  }
                ]
              },
              {
                "id": "6d8cf8e5-0e9f-431f-aecc-f496515ff8ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1096c129-e357-4219-8179-30fddad4b2b4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05f1fe7-e099-4b1f-8e5f-a208171b70ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e7077cc5-514d-4ca4-a3f0-904b4bc69533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3427e5bd-60b8-4875-b480-357e5eb3938d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1f21e4-7e28-4a51-af06-9863023a2c8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92831d73-b101-42c8-b63a-64ff91780909",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4f0c83e-6478-46fb-9dd3-3eeca0cc523a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "280fa6ce-08d1-4779-9cb0-437ad5d29398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9cea347b-a27d-47ea-80be-03e0b14f10eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86ecd812-2488-48df-b5b3-d4e2c49a1408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc4ea40-fbca-4c30-9eda-09e983140347"
                    }
                  }
                ]
              },
              {
                "id": "9cdf2b65-a276-4f7f-a846-c3754122fc17",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3beb32f-4d09-46ec-a3ff-289fd61a6e7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bc3bba4c-7371-4eea-b7b1-c473a9c9bb88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3de8237-c547-4936-801c-b371f060bdae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fabce5b0-65a4-4890-9a44-0e63288a82ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cb25e17-e34b-4075-b92e-24878fbd87c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1eac14c7-2f13-4f2e-ae2c-e6d0e4be34d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62c5d599-f75f-4343-86ae-62b88247484b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcd548aa-79f1-4f04-8ccc-96d95dcb8556"
            }
          }
        ]
      },
      {
        "id": "e416d2ee-bf0d-4927-b410-6d871ebd2402",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "21c1bb17-368b-4b74-8e03-41cd457ae609",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e65aad50-541e-4cb8-80d5-ceb03a1fc4da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ba490bf-c8c6-441f-8a9f-9aca91789e8f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30958fe6-f9c5-4596-810b-39fabab90d3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "04202f33-50c6-44b5-907c-78012eab1624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fdb01c-1be9-4673-8dfb-24c41e168d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec435685-f839-4e9f-9d92-4b5f7a57e23e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7ee12ee-2b72-420f-bb25-62c89e7c2e3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06ab52bd-45da-4b7b-938a-4e570f28ef9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c1fbf48-10e1-4663-aea6-7ec3cc808dcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa72ba01-5da6-4fc1-b5bd-b08219b0fc16"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61e6a5ba-c39c-4b2b-b408-e197bb1da156",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "18b328ec-ff20-4542-b594-521eabe4d99e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "297f192e-8809-4f54-b942-a66a76967435",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16d32c24-3d56-4d00-bb9d-8f4148510117"
            }
          }
        ]
      },
      {
        "id": "3951d4a8-f20d-4a15-b56c-0c078523935c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8ebdc280-5fcf-4f91-a3bd-42dace1d2300",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bc59856-94ae-41c9-ae63-0ca2439b8520",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "351e3ef0-b71c-4f83-b2da-a6214820ac64",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a0e2cf-eec7-4ee9-91cc-2e81a686fd41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "185305f2-4f96-4f30-810d-31cdd522a28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1980f22c-71cf-42e6-9573-353db257d8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6de87c1-5092-4673-9764-376371651479"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038222d4-31a2-408c-b225-00ae013f8edf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e5209b5-d31a-45cd-ad8c-780cb72e04d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd7e0c4f-4e42-44f4-9827-ecec3c0ea82f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b3813b-82c3-4d30-af4a-a37c8f23f471"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00601461-e760-4fe4-8e30-b4fa2285d4ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "562b6411-8fa2-4726-9e92-398c05554b9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51e06ae7-64d5-4c30-a741-5d56260324bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9707ca6a-f2f5-4bff-a60a-15cfa40385d4"
            }
          }
        ]
      },
      {
        "id": "7c6c38d3-aaae-44bb-960a-cbc38fe1d40e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "99ddd08c-06fe-4bc1-853b-2a8a5af9ab54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8f8f814-87f4-4b4a-a005-9a04e506ce80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2d667ac-e83c-4d2f-be53-10fd96a96fb7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c4c522-fb6c-45e3-87db-43b6930c34b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc378fe8-63e0-40bd-8800-2597825c187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b8e46c-799f-49e1-9271-0bc5abdd76e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4f5fbad-084b-4c49-9831-8f996119a1a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d3bc0e5-7a3d-4f53-be36-479d650a3133",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b4a64b9-c234-4125-9163-bd6eedb23b2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f80c74-f9d3-4554-b1c2-4f3a14434bd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b341de0b-dbe7-4d54-80d2-84c8fae941b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75f61c73-f54c-4620-9d55-921fc6140b17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a39fea6-3637-4c29-9a8e-bec91b4dab18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "501d836a-f835-4c4a-a525-ec2f4f0db9d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70d6562a-fe50-4fd9-881b-cc4ed345163e"
            }
          }
        ]
      },
      {
        "id": "f17f7760-de58-46bf-902d-4b46a11e02fe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "997ed773-f032-4b64-a497-588289c70090",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f400729-6f88-4938-acc7-d4976f6fd86c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "654bf94a-835a-413a-bbfd-665acdc079ef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96f3fb6e-ec8b-4865-8674-96ecd5078f0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3ff63cd-4505-43a1-8bf2-65aac74f1181",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 624.732394366197,
      "responseMin": 10,
      "responseMax": 7877,
      "responseSd": 801.4820375755402,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688690940858,
      "completed": 1688691130605
    },
    "executions": [
      {
        "id": "14ecceb5-b6a7-4fdd-bfcd-584ebadc4d5e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c9bb9001-a360-48a0-813b-c708f5978af8",
          "httpRequestId": "071590e6-4528-4b36-824b-94bf5f71e188"
        },
        "item": {
          "id": "14ecceb5-b6a7-4fdd-bfcd-584ebadc4d5e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "00b75c5e-a6f5-4f66-970d-32acacdae8e0",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "3e2402ed-4e6c-4059-b819-c04f702f3960",
        "cursor": {
          "ref": "a85b73f6-4d9e-4e1f-af87-be249f0a4cb8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7af05122-3a51-4126-ae7c-bdd1d8dd8c9f"
        },
        "item": {
          "id": "3e2402ed-4e6c-4059-b819-c04f702f3960",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "31920ff8-3825-4f12-b530-ecf96ffc5bb4",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "647d9d55-f73a-440f-8eb5-1895e0a968fe",
        "cursor": {
          "ref": "0e481954-a306-4c35-839b-b7079c3b9e4e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fe19e1f1-706f-4b48-9bf8-424a8eb77be1"
        },
        "item": {
          "id": "647d9d55-f73a-440f-8eb5-1895e0a968fe",
          "name": "did_json"
        },
        "response": {
          "id": "3cc2d2e1-4adb-40a8-a3e7-cd191a8b5011",
          "status": "OK",
          "code": 200,
          "responseTime": 1042,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e17179-4720-44a9-8bd6-723dc4e1fc31",
        "cursor": {
          "ref": "a3f2ad99-da64-47db-be4c-3fe1be11fe62",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09f30ec8-8aaf-4032-9bbf-bab37f235cc9"
        },
        "item": {
          "id": "07e17179-4720-44a9-8bd6-723dc4e1fc31",
          "name": "did:invalid"
        },
        "response": {
          "id": "0f655924-f295-4e15-ad37-4d57626724e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e17179-4720-44a9-8bd6-723dc4e1fc31",
        "cursor": {
          "ref": "a3f2ad99-da64-47db-be4c-3fe1be11fe62",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09f30ec8-8aaf-4032-9bbf-bab37f235cc9"
        },
        "item": {
          "id": "07e17179-4720-44a9-8bd6-723dc4e1fc31",
          "name": "did:invalid"
        },
        "response": {
          "id": "0f655924-f295-4e15-ad37-4d57626724e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a22a094-a9c0-4b55-a328-3018fbe96bfc",
        "cursor": {
          "ref": "7610a799-8c3e-49a5-bc86-9760e09a23d4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "79a66641-8053-4f5f-a3be-16df9a1fc590"
        },
        "item": {
          "id": "1a22a094-a9c0-4b55-a328-3018fbe96bfc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8291e3e2-7008-43cc-bd07-372b0976bb7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 641,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e528c9-d3bb-4c1c-b819-05c1b5d94a6f",
        "cursor": {
          "ref": "a5c30629-d062-4d97-9bdb-38584b6e72bc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "757be270-fc7f-4f51-a0e7-2e031e2c1513"
        },
        "item": {
          "id": "26e528c9-d3bb-4c1c-b819-05c1b5d94a6f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ad3f6e06-5f66-4740-9337-e2b8ba6ca0a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 717,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4083b25-4dea-4d48-951c-664b209554a2",
        "cursor": {
          "ref": "cd5485c1-dd02-45a6-a503-cbc17467260f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1dcb12ed-c527-43a0-b3c5-56b440d17243"
        },
        "item": {
          "id": "d4083b25-4dea-4d48-951c-664b209554a2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8330506d-c56e-4916-8030-ca8b5cfe0617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aec9bc7-b5c7-4d87-9f92-0b83b5989493",
        "cursor": {
          "ref": "e362faf3-8137-4e09-8d71-05ce67bc6369",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8629bf3f-cbba-4079-905e-8b8739809e34"
        },
        "item": {
          "id": "2aec9bc7-b5c7-4d87-9f92-0b83b5989493",
          "name": "identifiers"
        },
        "response": {
          "id": "672ada8f-1a27-4817-91e3-e4563ff86011",
          "status": "OK",
          "code": 200,
          "responseTime": 1297,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f5fb10-81b6-483f-97ca-70bd6773b882",
        "cursor": {
          "ref": "e36fa625-f744-40a2-92ee-443e6f7d6df9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "37f62de3-1753-442c-8b51-e3e956f59996"
        },
        "item": {
          "id": "f2f5fb10-81b6-483f-97ca-70bd6773b882",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "421726ef-cb79-423c-b940-832a999d91e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58396690-c083-4dff-afa7-5c8bd08bb1d1",
        "cursor": {
          "ref": "51254dc8-a24e-477f-bb9b-335178e3be70",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63ec02bd-fa03-4214-b91c-2132bea843cc"
        },
        "item": {
          "id": "58396690-c083-4dff-afa7-5c8bd08bb1d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0a17561d-90b7-49f7-990b-b77cdb1f1503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e82ce6-1490-4a0f-8238-cd967e5526cd",
        "cursor": {
          "ref": "789e6e84-e695-4da8-9748-48041226ec71",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1981d83e-ec20-4117-91a6-d70ac4705db9"
        },
        "item": {
          "id": "67e82ce6-1490-4a0f-8238-cd967e5526cd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cc4e4632-e4b8-458e-828f-f25aa5270e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d7623-2f7e-44b0-a36f-c047f705abe0",
        "cursor": {
          "ref": "971ad024-a96a-43a3-b2ba-1973b83be57e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "576c89b6-d9c2-43af-931b-de28de3a6844"
        },
        "item": {
          "id": "001d7623-2f7e-44b0-a36f-c047f705abe0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32c6cfe5-c1a8-4568-b4ce-db77ea41249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8271f403-8df9-46f7-b93e-05efc95aa379",
        "cursor": {
          "ref": "79d3b8e5-a2ad-4ca2-9572-af2f01edc440",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "75221668-6ff0-4e1d-af80-f945bf635748"
        },
        "item": {
          "id": "8271f403-8df9-46f7-b93e-05efc95aa379",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d200bd7e-c185-498c-b3bd-71849ac1e971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7cdaf6-afa7-4361-af91-7a6e25543b33",
        "cursor": {
          "ref": "35e4a89e-ffa2-47d3-ba34-64ffb593cf91",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd3019a6-8f26-416b-b9e2-3fe640573019"
        },
        "item": {
          "id": "0c7cdaf6-afa7-4361-af91-7a6e25543b33",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aa1394d5-31af-4dfe-8988-89a3f5f7e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f8baff-6336-46ae-9e71-38cab87efbc6",
        "cursor": {
          "ref": "643e21e0-c31d-4796-a73a-1a8d5f059645",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b7110a10-be41-4de4-a5d4-c41dd42bac92"
        },
        "item": {
          "id": "d8f8baff-6336-46ae-9e71-38cab87efbc6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5165d325-4d10-4752-9ca6-58b7bc1520cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440471fb-d919-408b-bae8-1bcafad40e89",
        "cursor": {
          "ref": "68d35fa4-5560-4885-b5e2-4143c6d6ce8c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c61357e5-500f-455d-93a1-363cea24721f"
        },
        "item": {
          "id": "440471fb-d919-408b-bae8-1bcafad40e89",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "962bb186-27cc-45c8-9299-47f6fc053f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da930a5b-4330-4cd5-a284-0a6232de945b",
        "cursor": {
          "ref": "19e36d3c-f9be-4c58-ab57-71e1adc63dc7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "453d3860-b887-4564-947b-8ef9008c371f"
        },
        "item": {
          "id": "da930a5b-4330-4cd5-a284-0a6232de945b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b74a90eb-6696-48ec-90f9-9f46699df0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f817996-d852-4835-b218-c8eb2fdfec5e",
        "cursor": {
          "ref": "bee16651-65cd-483a-b7ea-bc5aecbfbc59",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c303c0d9-a158-4755-8f32-150e95f0e880"
        },
        "item": {
          "id": "4f817996-d852-4835-b218-c8eb2fdfec5e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ea3ffb5c-8bb8-4c25-adea-52c8bf1c994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd467213-77d2-45fc-8995-941e6ceb1ca9",
        "cursor": {
          "ref": "7258aa2a-5273-43a5-b5b8-c4a84437443d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89a61150-484e-4c1a-a03f-71a2d0bfd5a5"
        },
        "item": {
          "id": "cd467213-77d2-45fc-8995-941e6ceb1ca9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f863da8-83d9-4d7b-9514-727666ff6e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecd9799-ee66-4dda-8df4-7ead3ef360fe",
        "cursor": {
          "ref": "c263e702-a210-404d-a507-caaf410a8973",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a90c7325-5e96-4135-8ccc-4b72b1014ace"
        },
        "item": {
          "id": "eecd9799-ee66-4dda-8df4-7ead3ef360fe",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "21b2ba31-47b9-49be-a745-bf16ddcb8df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc38ac54-446d-4af8-8240-61010f768c71",
        "cursor": {
          "ref": "282c6201-59e0-4f5b-9264-454aeb17a024",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c3833726-784c-4b6d-87ee-05d78c688fa8"
        },
        "item": {
          "id": "dc38ac54-446d-4af8-8240-61010f768c71",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "afed405d-7020-4341-b3c2-65ed0367de49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa560c6-b46b-44b9-822a-81e38877b4b2",
        "cursor": {
          "ref": "cfa0ac09-493f-4aa9-a01d-9b206793ffb3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "35c70ccf-e442-4f2a-9e34-1172f906f2c6"
        },
        "item": {
          "id": "9fa560c6-b46b-44b9-822a-81e38877b4b2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "60927bd3-1387-4376-9711-ec588d37ac73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab831ec8-99da-4827-85b1-b9437b515cfe",
        "cursor": {
          "ref": "a80c3b57-dfac-4c2c-86cf-a7acee87e1bc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "95b51b9f-8d4e-4cb4-b585-da9d6a51def9"
        },
        "item": {
          "id": "ab831ec8-99da-4827-85b1-b9437b515cfe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9e54ec3-c95f-4cb4-88a6-b8d3eaf88480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e6dd51-8b36-441e-9e71-559d2b776db3",
        "cursor": {
          "ref": "0b2f8b42-c087-4ddc-b952-806db649e0e5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "93ea5036-a529-4a28-b9ce-5678f4e6caac"
        },
        "item": {
          "id": "c1e6dd51-8b36-441e-9e71-559d2b776db3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4183a4a3-ee28-4a2c-ae33-522602ccb66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d375e17-72f4-4e5a-a4d7-f9d82cf48983",
        "cursor": {
          "ref": "6e9b87bb-2e91-4738-98d4-83b8017b610c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "33a6cb2c-7b76-4321-a138-6f69513d55c6"
        },
        "item": {
          "id": "9d375e17-72f4-4e5a-a4d7-f9d82cf48983",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "09bb3d45-9ae4-4046-831b-97bbc8eb14db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0636013c-23b7-4ce7-b36d-4286dd281769",
        "cursor": {
          "ref": "447d234b-d6ee-4ef6-9f09-100a6fcf2e21",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "290b76c8-d63d-41e5-915c-60d08e044913"
        },
        "item": {
          "id": "0636013c-23b7-4ce7-b36d-4286dd281769",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8bb81117-f4b8-42a6-b623-04eecada332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a5915c-568f-4e12-af9e-8b522c3298de",
        "cursor": {
          "ref": "9d6cf1ba-2c31-422e-a56c-98eb34dae58c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "74f656b2-d937-473d-8906-b4733803bbda"
        },
        "item": {
          "id": "14a5915c-568f-4e12-af9e-8b522c3298de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e14e23c0-e236-4463-8391-184aeb3ae994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1962dc1b-a830-4023-9949-3c0c58cd1f2f",
        "cursor": {
          "ref": "b004eb76-2e1e-49c3-9469-b632102fb0b3",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "24edbfb2-d712-4ac0-a8f5-3e86577683a2"
        },
        "item": {
          "id": "1962dc1b-a830-4023-9949-3c0c58cd1f2f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b3512e49-4a2e-4303-a4db-0bd4d739b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b783fa42-2266-427d-9682-94dc931a80d3",
        "cursor": {
          "ref": "7ab586f4-dd19-4fce-a6dc-72c6e8040ef6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3a507029-d743-46e9-bfb9-b929291f5737"
        },
        "item": {
          "id": "b783fa42-2266-427d-9682-94dc931a80d3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "76927321-7dcd-442e-a716-7aac8a7474f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e1d168-da5b-4bda-92fb-8de5025a5182",
        "cursor": {
          "ref": "55f82c43-e928-42dd-ab66-14f79b27f066",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ccf55ca-f9bb-430d-bf51-f8418577dd55"
        },
        "item": {
          "id": "01e1d168-da5b-4bda-92fb-8de5025a5182",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db6c8c52-c238-4e09-8821-c386ef74d1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d371d9-dcb6-4bf6-a176-e55b92bd1eaf",
        "cursor": {
          "ref": "a04318f2-634a-4017-9e4e-06685cd31c49",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2492112-65d9-44f9-9586-ca51343794d5"
        },
        "item": {
          "id": "f7d371d9-dcb6-4bf6-a176-e55b92bd1eaf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "30cb7826-e1a5-432e-a2ac-28749002ed1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b50c787-e8f2-46dd-bf3c-fdf3fc16c1ff",
        "cursor": {
          "ref": "f1512b8a-eccf-4133-9453-bb0ebed729eb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4f2d9bc8-d1ba-4d39-815b-72e935be1507"
        },
        "item": {
          "id": "1b50c787-e8f2-46dd-bf3c-fdf3fc16c1ff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dad45f1c-415b-4872-9e6f-945dfc0dc6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff3fecc-02f2-47ca-a1a2-d6395d640657",
        "cursor": {
          "ref": "84850b66-aa99-40e7-a5e8-6f56d35d5f1a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "385887b4-e0c3-4b7a-bc0e-06eb9dabec90"
        },
        "item": {
          "id": "8ff3fecc-02f2-47ca-a1a2-d6395d640657",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5273cd1-ef3d-44bd-b4d6-456a288a38b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529132c7-64f2-47d2-8d12-3f22b2296e22",
        "cursor": {
          "ref": "4414b108-f462-411e-9130-ca80f66f21f7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "91643964-0403-4341-a2da-3294852374db"
        },
        "item": {
          "id": "529132c7-64f2-47d2-8d12-3f22b2296e22",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a143cd61-6cc2-4a8e-adac-2507af315638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7f56ab-b906-4d89-ac83-32403e0d117f",
        "cursor": {
          "ref": "0be8db56-2af8-4f17-a13a-027ffc9ad8ed",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "39a34b89-ce61-49fb-9f49-58ae1db3b667"
        },
        "item": {
          "id": "ae7f56ab-b906-4d89-ac83-32403e0d117f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2047ff4f-e2ee-4c3f-9b74-e402c10001ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecd466c-57ce-4122-a2a5-8c09f68b2482",
        "cursor": {
          "ref": "479e03f0-ccbe-482d-b10f-e2358a336344",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d8e4fa25-dd41-4336-a751-c496279ecc0b"
        },
        "item": {
          "id": "fecd466c-57ce-4122-a2a5-8c09f68b2482",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1693f0d6-aa09-447b-aeda-b6bb0e363513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd752b8-4b5f-4fe7-9ed5-7252b5d28aab",
        "cursor": {
          "ref": "356ea550-20ac-4349-b63a-995c752ef4d5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9a1f9126-37e2-498f-8285-59c15a5c982f"
        },
        "item": {
          "id": "afd752b8-4b5f-4fe7-9ed5-7252b5d28aab",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c054197b-77ea-41ea-a1c8-2355c9cb6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf821c4a-20e2-44d5-9e5a-8a0221b59502",
        "cursor": {
          "ref": "a287d412-a48c-45af-8cc4-cffcf6fde480",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8b9eb9b0-470f-43f8-bf68-84e8d3f96f94"
        },
        "item": {
          "id": "cf821c4a-20e2-44d5-9e5a-8a0221b59502",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "58cf512f-a716-4121-9417-d8afd40d480e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b7cd05-eb5c-491f-a7ce-4ffd0f11adea",
        "cursor": {
          "ref": "f2e8cd96-bdde-42de-a2ca-d658360288db",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7b263842-c292-40ed-bc2a-7387386c8e42"
        },
        "item": {
          "id": "35b7cd05-eb5c-491f-a7ce-4ffd0f11adea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "46322071-3796-4d1c-bd2a-b731967c683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7de24c-2fb2-4db2-8102-491b40a6d786",
        "cursor": {
          "ref": "fbe433fb-620e-4c47-893e-c09e8d0c9134",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3a5b3386-a352-4206-8100-e14bd32ec15c"
        },
        "item": {
          "id": "0d7de24c-2fb2-4db2-8102-491b40a6d786",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b866619d-309f-4913-ba6b-2935bb86e267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c021ceda-12fd-44aa-bfc3-5820bfdba342",
        "cursor": {
          "ref": "4d05ff45-10a3-41db-98db-1c3cadaf9a46",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "95cd8204-2565-47fa-9b99-595a49d83c3a"
        },
        "item": {
          "id": "c021ceda-12fd-44aa-bfc3-5820bfdba342",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2b6e73af-6073-4463-939f-56383f60bdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2fb877-4abf-4471-b4b6-03f4abbf8be7",
        "cursor": {
          "ref": "aa8443b4-605c-49ef-87bf-e1447c42d761",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44de21c8-2f21-4a91-b42c-08ab43b8d76c"
        },
        "item": {
          "id": "1c2fb877-4abf-4471-b4b6-03f4abbf8be7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d226c1cd-22e7-447e-b60c-166968a4c765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c329a2b-075e-4f7c-860c-42403657ab41",
        "cursor": {
          "ref": "3f065666-c9ca-4711-bbae-7007f3c2c6ec",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "97002736-cdd0-45eb-b216-039d6effb828"
        },
        "item": {
          "id": "7c329a2b-075e-4f7c-860c-42403657ab41",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3f9ea026-385a-49cb-a0ea-92f22c0edbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0a38c4-faca-4f10-a8f7-d9450ac3b72f",
        "cursor": {
          "ref": "93f74af0-b844-4ed2-af05-e84f40311a34",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a4d48c1f-173c-4401-af69-048c602c027c"
        },
        "item": {
          "id": "db0a38c4-faca-4f10-a8f7-d9450ac3b72f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f4bda9c4-a583-4543-ba2a-b361f81c50b2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 753,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af794b09-185f-4f51-8f29-21a48c709114",
        "cursor": {
          "ref": "7997f29a-cf51-4393-a6eb-a1f13bc1a213",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dfab4a76-d40b-4f45-8988-fd2673afe013"
        },
        "item": {
          "id": "af794b09-185f-4f51-8f29-21a48c709114",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6dbf53a4-ff9a-4045-900f-291115be3c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec25318c-0a7a-442c-801f-34f9b8640692",
        "cursor": {
          "ref": "25c1af09-d250-4252-8996-5a3deec0d1f4",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "000d1938-ceb7-4f8e-a086-36a52af08ded"
        },
        "item": {
          "id": "ec25318c-0a7a-442c-801f-34f9b8640692",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "380b752f-fdc1-44d8-9a82-3713521f54ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1274,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110a0642-b0b8-4024-9e66-18ccce7ed691",
        "cursor": {
          "ref": "bc0b3c03-b910-49d4-9006-146cc689f18e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8df16934-bd62-473f-9eee-53b0dcb8d563"
        },
        "item": {
          "id": "110a0642-b0b8-4024-9e66-18ccce7ed691",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d103eba0-96fd-4503-8c13-dc6d9ec932dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3309191e-2596-433b-8468-4a33300b9f56",
        "cursor": {
          "ref": "b19ed888-c401-49bf-8a8e-819561707bc9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9fcfe474-9eb4-4729-b42d-c321cad7873c"
        },
        "item": {
          "id": "3309191e-2596-433b-8468-4a33300b9f56",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dcaf8f6f-76ce-4b9f-b247-8ccb58e34e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247145ad-d003-431c-8cd0-a9abf8973a84",
        "cursor": {
          "ref": "f7c148f7-1cd0-44f3-a258-b2595e3ac571",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "943b53ef-e5b7-4b55-b5c7-896c979c5b94"
        },
        "item": {
          "id": "247145ad-d003-431c-8cd0-a9abf8973a84",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "28f3a48d-2dfc-4134-8af5-9b539e93e93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ee0433-6ca6-486f-a253-8a34c0feee05",
        "cursor": {
          "ref": "9a7791a7-f834-49ab-9fb3-763e579c09ab",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f20abe1-09a6-4a90-8dfd-b468e2684bc2"
        },
        "item": {
          "id": "b3ee0433-6ca6-486f-a253-8a34c0feee05",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d3c85a9d-6b73-48b9-8934-d8fc4fffed0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678f95b2-a8ae-4aa5-a4e2-94dd25ef1421",
        "cursor": {
          "ref": "43919e9c-9e89-42b1-af62-9dd087126474",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "331e966b-e3e7-4fca-ae1e-18edcc5c6df7"
        },
        "item": {
          "id": "678f95b2-a8ae-4aa5-a4e2-94dd25ef1421",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7e961224-be4b-4bb6-a093-240885bf4e9a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 742,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23253fa2-54cc-44f3-8788-396e1640c07f",
        "cursor": {
          "ref": "0905eb96-87b2-4210-a480-f58aa94ec594",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f7aa5825-202b-4278-9946-526dde0f13de"
        },
        "item": {
          "id": "23253fa2-54cc-44f3-8788-396e1640c07f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a21819fb-455a-4a3b-9608-f1eadd5a8f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf6e9c9-5e7a-4c35-84de-968573255f03",
        "cursor": {
          "ref": "5797ce29-104a-4be2-b0a7-22f3db4baffc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "60340fc2-f4c4-4e00-b14e-8b665cf64358"
        },
        "item": {
          "id": "8cf6e9c9-5e7a-4c35-84de-968573255f03",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9e758c3e-81c1-42d6-bbd6-e484980a269f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86966662-1cac-45b3-96b6-ccefe5950cb7",
        "cursor": {
          "ref": "8198ca7a-f7ec-49a8-8a7e-2bc6b4fa7ce0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7aa73cf8-c81b-4f84-84eb-d9f66c99656f"
        },
        "item": {
          "id": "86966662-1cac-45b3-96b6-ccefe5950cb7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2d691ed8-d016-4f81-91fc-6ec2f66741eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d856ec87-3834-4b1b-85e0-a6d63f44bb5b",
        "cursor": {
          "ref": "89e2387b-1552-4810-9ea2-74a567a9be7d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3e6ddeda-e1de-4882-a9dd-7eed42c793ed"
        },
        "item": {
          "id": "d856ec87-3834-4b1b-85e0-a6d63f44bb5b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ad06ab73-d0a6-4fa0-b9aa-226c3c8a8695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0566f4-95b8-466b-a56a-2a0872f1cccd",
        "cursor": {
          "ref": "3cb0dc89-a23b-4424-9391-d40cbd9f3912",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bf4490a7-f7ad-4543-a020-b305b2520f7a"
        },
        "item": {
          "id": "bf0566f4-95b8-466b-a56a-2a0872f1cccd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "83b31996-710f-45e1-b11f-0351d07999ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec228411-8507-467b-9495-c977af374e80",
        "cursor": {
          "ref": "d5cd2643-8630-48b0-8a54-e550707dc781",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42d06861-6aea-49e0-bd1c-8c63b086bbfa"
        },
        "item": {
          "id": "ec228411-8507-467b-9495-c977af374e80",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "019c56b1-c61c-4b02-b242-b9153be65001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b19b0b-4465-4a34-92c9-577adb5732f8",
        "cursor": {
          "ref": "e7ffc8c3-ec0e-4859-99af-7a76c938c6df",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5ee20ba8-7fed-4620-a9ef-f314c0d7f8dc"
        },
        "item": {
          "id": "79b19b0b-4465-4a34-92c9-577adb5732f8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "65c1f990-ee12-422b-ba3d-b114c70f8f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2523ec-a9f8-48fd-b667-b4fd3376fc19",
        "cursor": {
          "ref": "3bcf6ac1-3b7c-4670-b4c3-279d42c3327b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2b331d5c-bf8b-4606-b638-78671e8afe42"
        },
        "item": {
          "id": "7d2523ec-a9f8-48fd-b667-b4fd3376fc19",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8975a153-4865-4778-85d2-622d3e147297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5580c7-5c96-4d32-b544-ad61a2ec0c3c",
        "cursor": {
          "ref": "b8eada75-4504-45bc-8def-efd845c18847",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b3ae11d1-c7f2-4ef5-acb5-ae23123e04bc"
        },
        "item": {
          "id": "aa5580c7-5c96-4d32-b544-ad61a2ec0c3c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0ce87bcf-ad63-46e6-b46f-2a5b2d713dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5724b-cd40-4567-841b-ab9ce5c49c0d",
        "cursor": {
          "ref": "fa7e4b78-9c05-4719-bd6f-1d1f4d1e1c8f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "657fb2f5-dbbb-4c9d-8153-a21ec57c8baa"
        },
        "item": {
          "id": "06c5724b-cd40-4567-841b-ab9ce5c49c0d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a48f4b87-aa5f-46c8-bb2a-24fb167d6957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06249aa3-da1b-41e1-b3e6-5bb077fccaee",
        "cursor": {
          "ref": "04360862-9bea-4c66-a9c7-61b0f4aaafa1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e122a4a0-c671-46c9-abe9-476f525da3b3"
        },
        "item": {
          "id": "06249aa3-da1b-41e1-b3e6-5bb077fccaee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "94dbca50-ec94-46b9-b15d-20cfb63cf1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0116d5f-6ad3-4081-8f9e-38f2b477de0e",
        "cursor": {
          "ref": "aef2b537-8d65-44dd-909f-36573ad2280f",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7e465718-a8d8-41fc-88c8-9ac739e8605c"
        },
        "item": {
          "id": "e0116d5f-6ad3-4081-8f9e-38f2b477de0e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3cfd3a2b-ab58-488b-99a3-06dad3781e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaff0712-1d61-464d-ac69-ffd27cf413b6",
        "cursor": {
          "ref": "56399bab-0276-4926-a51b-f2d30e1041e9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d78ff069-6726-4b1f-8809-8727475af178"
        },
        "item": {
          "id": "aaff0712-1d61-464d-ac69-ffd27cf413b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3e93382f-ba0e-462b-afed-3b99cc22e941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08fc40f-d31a-4d1e-b0f5-dcbd13ddbff3",
        "cursor": {
          "ref": "a2535774-dc05-4f60-a58f-2d03bb87429c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a6435b83-6c2c-4f67-bdff-448421102e30"
        },
        "item": {
          "id": "b08fc40f-d31a-4d1e-b0f5-dcbd13ddbff3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4ea624bc-da9c-4f34-89da-2699f056d149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfabbed-204c-4914-8dda-4829ce0483a0",
        "cursor": {
          "ref": "d43cf8c2-076a-4edb-ab77-99350e3c31c2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05583788-be1d-404b-bdb2-3950f5596814"
        },
        "item": {
          "id": "1cfabbed-204c-4914-8dda-4829ce0483a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ebeb219d-e25d-4eda-b0bf-014c87dceb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef90cedf-412c-4bb2-974c-1091f69514f7",
        "cursor": {
          "ref": "a4644ca6-bb12-4b9d-995a-8a4ecbdd5500",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "56541714-8b0b-4ffb-b11b-d03ef4f4f543"
        },
        "item": {
          "id": "ef90cedf-412c-4bb2-974c-1091f69514f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04a64cd7-f12e-4cff-8eb6-6e99675c4075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a06522-23fd-4236-aa1b-a72af28b982a",
        "cursor": {
          "ref": "2bee0f70-b669-4676-a734-f61d554a05c5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "132d112c-528a-4a14-97fb-28567f94479b"
        },
        "item": {
          "id": "72a06522-23fd-4236-aa1b-a72af28b982a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b03087c1-418e-4dc9-a05e-eabc5948e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2021d7-0516-44be-865f-bcd100f7345f",
        "cursor": {
          "ref": "c854db9e-69e4-4978-a1f0-4d8cd0dff5d3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9e70426b-2f56-430f-a752-003a2f3e53f2"
        },
        "item": {
          "id": "9e2021d7-0516-44be-865f-bcd100f7345f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5140067d-ae1f-42d6-8715-813724be3421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05d84ec-e52d-4642-9bc9-3839f52d575a",
        "cursor": {
          "ref": "2859319f-4631-42bd-b15e-7161b52e85dc",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4c92bb94-960a-4bbc-bcf9-8ffd7b862c69"
        },
        "item": {
          "id": "c05d84ec-e52d-4642-9bc9-3839f52d575a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "73b8a07c-2196-4c4d-be3d-0a3b7db8d897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccbf10f-51e1-4870-b169-600156bc951f",
        "cursor": {
          "ref": "1f57b0e7-d79c-4f2c-8392-8495bc9d0eb3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "026c6cca-626a-4df8-bcc2-94b699560dbc"
        },
        "item": {
          "id": "5ccbf10f-51e1-4870-b169-600156bc951f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "23b83e63-ccb8-4648-bac4-f6da725281d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacc120f-218a-4fc6-bc0f-c11f0b364489",
        "cursor": {
          "ref": "2c54bf68-4dee-43a9-8506-25c5b90dd4c0",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "03b4d8bd-9907-43db-a1be-5008cc0b3ae1"
        },
        "item": {
          "id": "bacc120f-218a-4fc6-bc0f-c11f0b364489",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "002896fe-8ca7-4d2e-a8f8-5570edbdc3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d3b03f-75ab-4e1e-8ee6-82b3f21949f4",
        "cursor": {
          "ref": "43456f5b-2546-44bd-9323-398860b4d07e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fea847ae-58ab-4f24-b1cd-482fe4f2ca7a"
        },
        "item": {
          "id": "26d3b03f-75ab-4e1e-8ee6-82b3f21949f4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "81d7b3a8-4164-47bc-99de-de2b5019fe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a0e064-e698-4feb-aa49-ae6a9687cfb9",
        "cursor": {
          "ref": "a0eed1c6-d39d-4a4b-b392-eea13e422e2a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "12d07036-1fb0-4f57-a5e8-3cf38c1a70b7"
        },
        "item": {
          "id": "35a0e064-e698-4feb-aa49-ae6a9687cfb9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2e26dfef-06a7-4c74-880b-25fd377153b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33cce2b-d8f3-4afd-96dd-11d86e3f9640",
        "cursor": {
          "ref": "8a438a4e-a0b6-4e22-9438-1bd4fe20fa7e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dab0cbfc-e109-496e-a7eb-9118bc80900c"
        },
        "item": {
          "id": "e33cce2b-d8f3-4afd-96dd-11d86e3f9640",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6f1071b9-baae-4823-85d1-4df9c27cdbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc6e9a-872c-4ff6-a346-94b9a657abcb",
        "cursor": {
          "ref": "4165a75f-32ad-4517-aec6-c0142514d2fe",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "95c9ac09-2889-4a0b-9964-6addb28fcb85"
        },
        "item": {
          "id": "6dcc6e9a-872c-4ff6-a346-94b9a657abcb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "57d3f512-0e80-4c9a-ad91-5d5279aa1719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a41f9b-faf3-4c67-b736-e08ce5551095",
        "cursor": {
          "ref": "cc0739c5-a85e-4361-bd7d-a484d8fc3030",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3c166471-543b-45d3-8d00-7c5c619d0f17"
        },
        "item": {
          "id": "21a41f9b-faf3-4c67-b736-e08ce5551095",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fb5f740d-a58d-477d-bb07-847babe36443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c98133a-ed78-463e-9cd0-c4ad0b4f7a46",
        "cursor": {
          "ref": "18585b10-30be-408a-b856-2ec0b12b7b4a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81735bb2-c176-46d8-bb84-37e721c7c381"
        },
        "item": {
          "id": "0c98133a-ed78-463e-9cd0-c4ad0b4f7a46",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "887eb53b-790b-4171-8afa-772deec9dc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1dee44-4d10-456a-a071-b584be6a82fa",
        "cursor": {
          "ref": "fedb96c1-5f87-4f99-be2e-7184ac16a401",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94442936-9fa9-41d1-9ed0-3be8d207e044"
        },
        "item": {
          "id": "6a1dee44-4d10-456a-a071-b584be6a82fa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f6538c05-3ae7-492a-941f-21d648b2409d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4ba8e-bce8-46d1-8cdb-20b61ecfca1a",
        "cursor": {
          "ref": "5fa1d836-aadc-4c01-b373-217ddb311f73",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "abebf8f0-cbae-4f96-afa6-63ccb1b8e96f"
        },
        "item": {
          "id": "b0f4ba8e-bce8-46d1-8cdb-20b61ecfca1a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "26048555-4097-4ba0-aacd-7db2ace1b123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8b2268-7bc0-4a95-ab68-697114d47001",
        "cursor": {
          "ref": "82281e4c-3a87-4eac-9f40-f527843b6306",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e4afa76-7768-4233-a79c-5ba0406d951f"
        },
        "item": {
          "id": "ad8b2268-7bc0-4a95-ab68-697114d47001",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6d6aa67e-3bec-4fe6-95ef-0cadc451f3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5238d7ba-4942-4d33-ae49-ba8b3401c894",
        "cursor": {
          "ref": "dbebe7e1-9791-4f79-aeae-473331eeb724",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8fc85676-b96c-4111-9231-619f6178aac1"
        },
        "item": {
          "id": "5238d7ba-4942-4d33-ae49-ba8b3401c894",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "776498dc-6dfa-426e-a4b4-17ed5877ece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e335ba-d143-4737-a394-a8a5650fde05",
        "cursor": {
          "ref": "cfb2e787-be0c-4d04-b1b5-76a300a4e981",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b95fe4e-5ce2-46d2-b06f-f7d1ccd0b2ff"
        },
        "item": {
          "id": "46e335ba-d143-4737-a394-a8a5650fde05",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "59e95afe-86b5-4c0b-8965-b10d35e9733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b127da-a3d6-4638-b5fc-89eff00720a8",
        "cursor": {
          "ref": "03068b6a-43c4-4fb1-9c2d-4c14dc6cc8dd",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "da10b8bd-7390-4004-86e3-b98d0118f75f"
        },
        "item": {
          "id": "e2b127da-a3d6-4638-b5fc-89eff00720a8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0786b410-d55a-4f6b-995e-c1ce745f0818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149dc757-8a57-4ea2-8839-2da27c055a64",
        "cursor": {
          "ref": "5a75a6f6-04e6-42d8-b94d-4ddd2bf63523",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d09424f7-2c12-4200-a90e-98218feefb8f"
        },
        "item": {
          "id": "149dc757-8a57-4ea2-8839-2da27c055a64",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "49c97a6c-5587-455e-a263-241d16822d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62efee9-ee5e-48bd-be45-8809500f7cb8",
        "cursor": {
          "ref": "b84c39c3-e863-4e43-9cb1-bdb2182ced45",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ef5934e6-353f-4e19-b744-895ff21680f4"
        },
        "item": {
          "id": "a62efee9-ee5e-48bd-be45-8809500f7cb8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5f370b03-5f61-4ba6-88e4-6f371b48d6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb3261-261e-4cdc-b75e-31ed35379c0f",
        "cursor": {
          "ref": "fae3788d-d3e7-4ca5-9dfb-6c9d39a23230",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c9fd9fad-cb67-4884-bff4-ae9856e7a00b"
        },
        "item": {
          "id": "1bbb3261-261e-4cdc-b75e-31ed35379c0f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9077e907-e914-4b1f-aedb-7afc1668fa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c49bfd-8f4b-41dd-8f4c-43065f699856",
        "cursor": {
          "ref": "98e31170-608e-4d71-b792-79ff73f41f6c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "137f505d-57ed-424b-932d-c2ced7eb3803"
        },
        "item": {
          "id": "a0c49bfd-8f4b-41dd-8f4c-43065f699856",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "927a0b72-3c3e-47bb-9d36-dc26fc694179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f061bbe-78b2-4846-b385-06b8953cf02f",
        "cursor": {
          "ref": "238a8a7a-ed05-449b-a1ed-3b62f4ae1966",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7711c0e8-83d4-4316-8072-c75ac3ae841d"
        },
        "item": {
          "id": "0f061bbe-78b2-4846-b385-06b8953cf02f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "908e9d3e-9e8c-40bc-bf94-74acceafde32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9520e04e-3b15-40b9-a945-09ec6b9c0deb",
        "cursor": {
          "ref": "8afa1226-5969-469a-9b32-b9310f1fa2a0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "63aa24f1-515c-405c-9db7-c9610fd2e27b"
        },
        "item": {
          "id": "9520e04e-3b15-40b9-a945-09ec6b9c0deb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4ab4508e-80ee-4f98-af09-95a244ca0e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a002641-dadd-456d-9c25-1b843634b7f5",
        "cursor": {
          "ref": "076b4846-17e6-4679-aa85-8eed97151705",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "54af89f3-aac3-43f0-aa9b-c1dbbf0092a3"
        },
        "item": {
          "id": "1a002641-dadd-456d-9c25-1b843634b7f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d1d327a-8633-45ea-9991-a5582ab9dd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04693f4-fbb7-4a35-be19-6060db407f84",
        "cursor": {
          "ref": "682b577d-b3f2-4b10-8982-a86d26355d19",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cf459305-0fbd-4314-9a84-4d5fde60c2b7"
        },
        "item": {
          "id": "b04693f4-fbb7-4a35-be19-6060db407f84",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9bf7039c-dd32-4b0c-af09-c76782ce954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3113fc-0f5c-44cd-a675-946e153ab1e9",
        "cursor": {
          "ref": "e8340083-85c7-4bb1-bbf8-1b28543faf3b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "42cd4b55-90b4-43d4-9e01-8e65ac36e580"
        },
        "item": {
          "id": "ec3113fc-0f5c-44cd-a675-946e153ab1e9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a515805-767c-4de5-8aa7-8c1314d3c0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c915b97d-31cf-47d1-bd3f-92b6d99eeab5",
        "cursor": {
          "ref": "bc92b861-f598-407e-9fee-d6af786ff0df",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0c817c9-84bb-4192-88fa-419c2327f032"
        },
        "item": {
          "id": "c915b97d-31cf-47d1-bd3f-92b6d99eeab5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f04c9a0b-261a-439a-a53e-1551a3e2b7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40c144f-1497-4bad-a282-e3102ef9806b",
        "cursor": {
          "ref": "d9ee745b-6b0d-4272-9a21-bdafe31123c6",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7ae7eec6-13ce-4fe5-88d0-d0918b39dd35"
        },
        "item": {
          "id": "a40c144f-1497-4bad-a282-e3102ef9806b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2c468113-db4e-4502-8094-253174f4160a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62041c4d-5ab2-4143-8df7-9331b4a0e2e6",
        "cursor": {
          "ref": "24148ffa-5082-4d28-9099-0fbb660085b2",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c6581ed2-da5f-4cc4-ab89-a1f3cb77971d"
        },
        "item": {
          "id": "62041c4d-5ab2-4143-8df7-9331b4a0e2e6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "568790fd-f7ab-4cf5-95a5-7577bf093bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dbcb26-82d3-4f7e-a126-f2037ffc3ca1",
        "cursor": {
          "ref": "666bab1e-53e6-456a-ae71-d3836eb8f0cd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "107e1de7-cba2-4c89-87e1-3e80216612c7"
        },
        "item": {
          "id": "a4dbcb26-82d3-4f7e-a126-f2037ffc3ca1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07f40a0f-d16b-4713-8412-7abb74b459cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bea94f-b86b-486b-9249-a3fd842465f3",
        "cursor": {
          "ref": "651404a2-03cd-46da-ae05-1e3d9edd1419",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b5002c53-9399-41e5-8564-6530ecd1ab09"
        },
        "item": {
          "id": "82bea94f-b86b-486b-9249-a3fd842465f3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ec55084-d4b9-42f9-ae83-37c2920023d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b03f14-dad8-46c6-a9c2-75c9562fc771",
        "cursor": {
          "ref": "57a1e93b-8af7-4b5f-9422-17a8ad9d248e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "96493726-00b4-41aa-a645-7acdb5be390f"
        },
        "item": {
          "id": "42b03f14-dad8-46c6-a9c2-75c9562fc771",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0443c8bc-5fc5-4525-9ed8-26f619683ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a1e64a-9cfc-4bd8-85a7-b05df6be2874",
        "cursor": {
          "ref": "7710b588-e57f-45f5-b183-014a90d7853f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7ca1f0f0-958f-4b9b-93c8-7929fc1c6b11"
        },
        "item": {
          "id": "46a1e64a-9cfc-4bd8-85a7-b05df6be2874",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c4d12285-e0f9-4e7d-a642-cb1775820acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f995564b-7967-464d-b49c-7c0b4a10897b",
        "cursor": {
          "ref": "7f3707e0-c1be-4c6a-999d-230fd9f46da0",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "462daff2-e268-435a-8410-9dd19338717e"
        },
        "item": {
          "id": "f995564b-7967-464d-b49c-7c0b4a10897b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "365b84b7-4929-4b2d-a084-961571c951c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70ddfb-cf18-471d-b1ec-ff0248dd3003",
        "cursor": {
          "ref": "1836419f-e347-4615-991d-57b24f47ef89",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "af79852f-ccad-421e-b9df-302645dc776e"
        },
        "item": {
          "id": "0f70ddfb-cf18-471d-b1ec-ff0248dd3003",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e9500261-5f4f-458d-a994-c7ddf5638a4f",
          "status": "Created",
          "code": 201,
          "responseTime": 7877,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c6fbb-f07e-4681-84ec-292468d8c49b",
        "cursor": {
          "ref": "1e6d8f97-0dcc-47b4-ba66-348ef2d71166",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8b2fc800-fc57-4f77-a802-37100590006d"
        },
        "item": {
          "id": "1b7c6fbb-f07e-4681-84ec-292468d8c49b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2743f6b8-c78c-4806-b896-d297fe6b4eb0",
          "status": "Created",
          "code": 201,
          "responseTime": 6194,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "453fe2d4-639f-4a82-923c-c2105c0542f2",
        "cursor": {
          "ref": "3ea0a21e-53cc-4140-ba11-c115ad1dde8e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aadfd0d1-5729-4254-82b3-470261fe5879"
        },
        "item": {
          "id": "453fe2d4-639f-4a82-923c-c2105c0542f2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f7cce80a-ae57-46fe-97b2-46f7765dc59f",
          "status": "Created",
          "code": 201,
          "responseTime": 5571,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dae0f9-5b6f-4dfa-82e9-c2570578e828",
        "cursor": {
          "ref": "cb4148b9-fdbf-45c7-b61e-ed1dc55e2127",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9c5f878e-e28d-4c46-9f8b-ace2b20c711e"
        },
        "item": {
          "id": "95dae0f9-5b6f-4dfa-82e9-c2570578e828",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "14e0d8da-ae22-4221-b378-88421a7a78ae",
          "status": "Created",
          "code": 201,
          "responseTime": 6701,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b502452d-7fe0-4002-9df5-62ee96e7120e",
        "cursor": {
          "ref": "567729b9-a087-48ad-92a2-f7073db51f62",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6660750a-92fa-4b94-917b-3924c61ca27f"
        },
        "item": {
          "id": "b502452d-7fe0-4002-9df5-62ee96e7120e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c33fdbe7-0e72-4494-90ee-1603a6cd6ea5",
          "status": "Created",
          "code": 201,
          "responseTime": 5530,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4772fbe-bf44-43b1-84be-d0e3f0323207",
        "cursor": {
          "ref": "1a6031eb-d4eb-4f67-b7e3-d845fb17fb7f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "12165cb1-c4dc-443d-abc0-ed88d1612dc0"
        },
        "item": {
          "id": "c4772fbe-bf44-43b1-84be-d0e3f0323207",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3183a804-1eb6-41e8-97d4-c16973792eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f5b9aaa0-9e2c-41c5-ae70-a3a9019e5520",
        "cursor": {
          "ref": "d519cc0f-87f6-4239-a6c0-574d22c37050",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c6731ede-8e31-4326-a21a-322a27600bf7"
        },
        "item": {
          "id": "f5b9aaa0-9e2c-41c5-ae70-a3a9019e5520",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "99639846-9170-4502-9884-6afd32ff8ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f907f36-e749-425b-9970-7efbf41ea333",
        "cursor": {
          "ref": "c75cdac3-2475-42e9-ba9b-c0d498ebd9bf",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0cbea111-3c06-4bd7-b507-2abe78241390"
        },
        "item": {
          "id": "1f907f36-e749-425b-9970-7efbf41ea333",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f72b1b6d-0281-4623-8573-61400f544681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40412385-1e76-48d4-9909-30370dc6a793",
        "cursor": {
          "ref": "55618c07-c157-4267-9e3c-429c32221393",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fe4af9df-dc64-4a80-9073-5bba9c9f3fc2"
        },
        "item": {
          "id": "40412385-1e76-48d4-9909-30370dc6a793",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9b91fc80-1661-46a4-8b69-c08bc96a23a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc91b1a8-1d21-46df-b442-77c01e0be61c",
        "cursor": {
          "ref": "abed620a-01fe-4f8f-86ec-b3bda90000fb",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "de1e9abf-78b0-4259-b29a-537b7de336f7"
        },
        "item": {
          "id": "dc91b1a8-1d21-46df-b442-77c01e0be61c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "35da12d8-47eb-4983-af81-607233e3cb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e90ad3-dfaf-409a-a161-1897157a4bc2",
        "cursor": {
          "ref": "9d4a6a27-e394-494e-9894-13d768d4425d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "78f79404-e0e5-495e-97ec-af53d17c693a"
        },
        "item": {
          "id": "d8e90ad3-dfaf-409a-a161-1897157a4bc2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "940d345b-fc7e-4a6c-a8cc-d8bc8dc36dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b51a973-e279-4003-9825-f9a600cb54c9",
        "cursor": {
          "ref": "6f2ee99d-4110-4ca8-b31e-232467edc17b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb7ca35f-f4a3-4e77-9d00-c1c25e80e436"
        },
        "item": {
          "id": "0b51a973-e279-4003-9825-f9a600cb54c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b06f8e3-6c29-4a0a-ad0f-56e3fa9e3080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44931fb7-9550-4449-be7f-0e48b3c3f28c",
        "cursor": {
          "ref": "9e03da0f-7876-4888-b15f-cc9acc8d4a08",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "80032167-cc03-435e-ac79-ba7d5761048c"
        },
        "item": {
          "id": "44931fb7-9550-4449-be7f-0e48b3c3f28c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e5b3769b-ffd7-476a-9539-dc1b19f40739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a47cae-32c7-4dde-934b-2767c08fc836",
        "cursor": {
          "ref": "0b24e1a2-1f37-4521-9da1-37692b2339e1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf99b494-d38a-4c48-91e5-496ee2e63ecb"
        },
        "item": {
          "id": "d7a47cae-32c7-4dde-934b-2767c08fc836",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "15e883d9-85e2-48ab-94d3-d4dee4132559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3558b3b-62e2-426d-9841-77426d2f7f9e",
        "cursor": {
          "ref": "a98fe8e6-a31f-4262-9d79-059b9549d0d7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "55634fec-348c-4275-a73f-c4061bd249db"
        },
        "item": {
          "id": "f3558b3b-62e2-426d-9841-77426d2f7f9e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5831877c-1620-4e8f-a18a-202966d1e65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb71a2e-742a-4b0f-878d-a2114973e825",
        "cursor": {
          "ref": "114fb763-e8d9-4215-a9e8-3fd0a9c1ec95",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4777e19c-4f7d-4fec-8d37-9dfe34de77e6"
        },
        "item": {
          "id": "ebb71a2e-742a-4b0f-878d-a2114973e825",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "59ecccf7-f015-44b9-be81-cb033a92bf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4274b-ae96-4839-9e25-a5b2e6d6a18b",
        "cursor": {
          "ref": "bcb02d64-75d5-44d8-a2a4-3a8ee4c293d8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c15e9dc4-ec74-4674-855e-0d3ed2ae138a"
        },
        "item": {
          "id": "2ae4274b-ae96-4839-9e25-a5b2e6d6a18b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c74f0e0-1f92-49d9-b6e0-727271052fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f23c7d-618a-46db-ba9d-688dcb028b3c",
        "cursor": {
          "ref": "8a6fe878-180b-4919-8a35-5332134382c2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f40ab008-59e4-4a1b-aadd-401a74a04ac9"
        },
        "item": {
          "id": "20f23c7d-618a-46db-ba9d-688dcb028b3c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc4a68fc-dbb6-41cd-84f9-6ee4771ff74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478439b1-56f1-4b89-aece-4ab449d80103",
        "cursor": {
          "ref": "4656dbd1-6661-493c-bde5-d0b80e23ee14",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "745f11da-c9e1-4aa0-84fc-802e6543d908"
        },
        "item": {
          "id": "478439b1-56f1-4b89-aece-4ab449d80103",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "44003b92-901c-40b0-8be3-b903d353bed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fe7020-432a-485d-8c42-3e7e2eeb702a",
        "cursor": {
          "ref": "7c6163bd-fccc-4f1b-a1f3-b31a1743b688",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d8d7a1c-0e05-478a-a14e-2cfbc87b1051"
        },
        "item": {
          "id": "15fe7020-432a-485d-8c42-3e7e2eeb702a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "80ed6f9e-c2aa-4982-9004-54e9522e5039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8560d1ac-0e84-4828-b89f-4838a1316177",
        "cursor": {
          "ref": "9e62a695-de1b-44aa-ae38-5ca73ce51ecb",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ed996727-d550-4fd2-857c-afa1e4db3f8a"
        },
        "item": {
          "id": "8560d1ac-0e84-4828-b89f-4838a1316177",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c1e065d-f5e9-4e35-8744-95892ed92ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45785a2-e21d-48c4-be6f-fa6338770be5",
        "cursor": {
          "ref": "fdb375c6-64cf-4887-9951-87c587910957",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "58f330d0-0b03-4705-9827-ed8bfceb13ac"
        },
        "item": {
          "id": "b45785a2-e21d-48c4-be6f-fa6338770be5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "520661de-513d-4c1e-b72d-dd60d9b88bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5248be-45a8-49bc-8c84-736a06f51ab1",
        "cursor": {
          "ref": "7f32aa89-0771-44da-ae5d-384faf37d559",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "43d99a0d-3dcd-4b8e-afb9-9fa3b3a8805d"
        },
        "item": {
          "id": "1d5248be-45a8-49bc-8c84-736a06f51ab1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7c774302-84c7-42fc-8ac5-b506a980b84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1bf60d-0e89-4ffd-8a96-b5cdeb1db702",
        "cursor": {
          "ref": "8b9f008a-da81-4dbb-9021-a5f96e4efe84",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7e5db8d5-4e76-4bb5-9539-80e4a7a2da5e"
        },
        "item": {
          "id": "bf1bf60d-0e89-4ffd-8a96-b5cdeb1db702",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a2f03bf8-559b-46af-a83b-2c0eb252983d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98bbdf0-c2e6-479a-9074-d0041e163347",
        "cursor": {
          "ref": "5900434f-8da9-4984-96f4-87183c159c62",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "05580490-f568-4a0e-892e-0ab77472c8d7"
        },
        "item": {
          "id": "b98bbdf0-c2e6-479a-9074-d0041e163347",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53036d4f-d610-4944-8fd7-c963643d9d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061f7988-2650-40cc-b6a9-b5f812b62255",
        "cursor": {
          "ref": "ccdb71ed-9f84-41ec-a757-9de5a7c8b68a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f25e7406-6eb4-41bc-805e-6fd8a1c5100b"
        },
        "item": {
          "id": "061f7988-2650-40cc-b6a9-b5f812b62255",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d55ee68-19d2-4cdc-adec-00ea7555e9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a28962-eb0f-4853-bdd7-0bd31da273fe",
        "cursor": {
          "ref": "9fc72a56-b2e9-459d-a78a-94e41a4b0e29",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b4c70345-dcf1-4759-87de-731d4ab2199d"
        },
        "item": {
          "id": "e1a28962-eb0f-4853-bdd7-0bd31da273fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df8a080b-f657-44f0-95c7-05eb3aa51b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b002985-a248-408f-bf66-8cc9a7c8d94f",
        "cursor": {
          "ref": "8d8a63fd-a2a1-4267-90e0-ea68b483943a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b8d4a4d8-45fd-47af-a0f2-106ea02581c9"
        },
        "item": {
          "id": "6b002985-a248-408f-bf66-8cc9a7c8d94f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "34943143-7ee4-4e47-9110-4bd1200f69b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4b4aed-1b63-4369-a876-8de73d79ca9c",
        "cursor": {
          "ref": "a289ec7a-7475-4359-850b-19da9129008b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e1eef276-8f8d-414c-bb91-1ffbc7b2267a"
        },
        "item": {
          "id": "dc4b4aed-1b63-4369-a876-8de73d79ca9c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6743f240-c5b0-4b9c-bed3-a0efc8bf03b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e51317-fd47-4013-9d52-a6a42042dfaa",
        "cursor": {
          "ref": "eb93fd1a-ef70-44c7-a009-0e6c14f21a32",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "51336b9e-4576-4e53-8538-324ba1b1fb6f"
        },
        "item": {
          "id": "f9e51317-fd47-4013-9d52-a6a42042dfaa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1cf29b99-dfcc-4884-837e-2dda28d044f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396b00c5-3838-441a-8ea3-3a52433d39c9",
        "cursor": {
          "ref": "eb1bdc5e-ef7d-464b-a8a6-398a146f7cae",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "212261e9-1390-43ef-b692-3756dfc9c4f1"
        },
        "item": {
          "id": "396b00c5-3838-441a-8ea3-3a52433d39c9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77fab4b8-6cbf-4567-ac19-7de1c7d93ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf5ca9b-eee9-4cf0-ade0-55fd302e029d",
        "cursor": {
          "ref": "b76db05d-b0f8-4a37-b780-4119897c2d09",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "92589616-e6a1-4bc3-aeb4-5beba7af9300"
        },
        "item": {
          "id": "abf5ca9b-eee9-4cf0-ade0-55fd302e029d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78bdb1bc-1b1e-4419-a730-2bbe6da4e122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052810ca-118f-47ba-b567-8370341c9a34",
        "cursor": {
          "ref": "5bf3bde8-66e1-444b-97b3-0d0b29c74764",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6e1c0f47-a08c-4acc-b9e8-7d0e1002ed23"
        },
        "item": {
          "id": "052810ca-118f-47ba-b567-8370341c9a34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9229eb93-37b7-44bf-9915-af67bd12b4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a697eec-45dd-4b91-963f-11f4570261b1",
        "cursor": {
          "ref": "f87ccfff-e12b-4b83-bb59-9d19208ba968",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d7ee3f84-780b-4934-bb11-6f79bc1559a4"
        },
        "item": {
          "id": "9a697eec-45dd-4b91-963f-11f4570261b1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aaf92647-1db5-4c22-bec8-a65d95affc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff570973-0809-4dce-9fec-1a73a99a9184",
        "cursor": {
          "ref": "499e2118-21ef-4c3f-8847-4d8576506b54",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6d9e42d2-6b69-459a-aee7-19a5aab6d5ab"
        },
        "item": {
          "id": "ff570973-0809-4dce-9fec-1a73a99a9184",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83b8b4cb-ae74-4227-8e62-e1d9a4757e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f68c86b-35e6-4c0c-b453-1593641d680e",
        "cursor": {
          "ref": "3178a6fc-e7b0-478b-aad5-c2805b261e2e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ebde372a-a2dc-4429-bc3a-a315eda36980"
        },
        "item": {
          "id": "2f68c86b-35e6-4c0c-b453-1593641d680e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "744ef71e-22ad-4379-bfad-395dac2b5021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c474f7a-2218-454f-8545-285500684a47",
        "cursor": {
          "ref": "3edb788e-ab58-4d64-9ffb-599fad990d13",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5b112e1-3d0d-4736-a7a3-5bc7d3930e93"
        },
        "item": {
          "id": "0c474f7a-2218-454f-8545-285500684a47",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7212d73-6454-4a26-95db-0d5084fb3942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e07cde-fea2-4c4c-9b38-dfe3b7031d18",
        "cursor": {
          "ref": "d9038412-ffc9-4fb3-8358-fd1163e40a1b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "359f4684-4126-4b2c-9c54-ddc8c89e753d"
        },
        "item": {
          "id": "48e07cde-fea2-4c4c-9b38-dfe3b7031d18",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "04d1cdc9-2a81-4e32-a88f-147600355fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63553626-c39b-4eef-93fb-856b3f54240c",
        "cursor": {
          "ref": "bd64e69d-9592-42f3-adcc-fa4b5e2861d7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bb56e7f2-c132-4cc5-8e61-d3783cae7099"
        },
        "item": {
          "id": "63553626-c39b-4eef-93fb-856b3f54240c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d2d0c448-affa-4ed9-a3e6-69828b36459b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d15d12-0f6f-4da6-87a0-ad0958da14b6",
        "cursor": {
          "ref": "f944858b-bb90-4150-b5e2-84780e1052c1",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9caa7c87-a5d4-4e9f-8335-9b7f965ffac3"
        },
        "item": {
          "id": "28d15d12-0f6f-4da6-87a0-ad0958da14b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "50fe37e4-c36c-4a1e-89d7-6ca44f9a41db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693fc12b-aef6-4814-ab17-194107676aa0",
        "cursor": {
          "ref": "d91a3541-8f47-43e4-9ae2-d6165df50d31",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1d8fb862-319b-456b-861a-9c910bc6b7fa"
        },
        "item": {
          "id": "693fc12b-aef6-4814-ab17-194107676aa0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0d0c9fd-ad4a-4afc-9246-3d451ea993f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b903bf4-0291-4411-a5d4-9cea53a21eca",
        "cursor": {
          "ref": "1877b10f-b044-40dc-b7d9-7eb7475f0603",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae2123de-5b3c-4e75-8f6e-143bb3f10fca"
        },
        "item": {
          "id": "7b903bf4-0291-4411-a5d4-9cea53a21eca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4c8442a3-54c8-4388-a42f-634e3f1f5ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de07157-1061-4f08-b616-543a1c2e4099",
        "cursor": {
          "ref": "2236ad02-21de-4863-af3e-a5fde2ba2664",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "176b592a-0fa5-40b1-9fb6-417941bcdf27"
        },
        "item": {
          "id": "6de07157-1061-4f08-b616-543a1c2e4099",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f7799ace-302f-4106-916c-13017250753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c72271-c531-40e7-9839-2613414a2fa6",
        "cursor": {
          "ref": "dda1dfdd-2db9-44d3-a093-85c4a31e4328",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5001bab3-a275-4aa8-8833-0e6185f3bea7"
        },
        "item": {
          "id": "70c72271-c531-40e7-9839-2613414a2fa6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "25c8800d-6d7d-4f38-a235-3dd0c1026ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774580d2-0dd8-4a70-bb25-40a0f12a58eb",
        "cursor": {
          "ref": "500162bd-43e7-4d40-832a-fecf593be1d5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f5110902-c5f0-4ea4-aa5b-bacceafba9f9"
        },
        "item": {
          "id": "774580d2-0dd8-4a70-bb25-40a0f12a58eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "50e2f05e-87ec-4a00-8565-df959a6598cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82567a42-3069-46f5-99db-23d42bca9987",
        "cursor": {
          "ref": "433e9f3d-d1c7-4011-a3f3-5c442382c5dd",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a70a0401-0589-45d6-b4f9-807b00b24d4b"
        },
        "item": {
          "id": "82567a42-3069-46f5-99db-23d42bca9987",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6181c24c-0224-4016-be9a-6a11294549b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521e0ac9-8868-4d3b-bb3d-df4959359624",
        "cursor": {
          "ref": "86687569-c309-49e0-b54b-901b5d365536",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5ea5bc05-13b2-40a3-b735-22cc4025ed47"
        },
        "item": {
          "id": "521e0ac9-8868-4d3b-bb3d-df4959359624",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ef90cd7f-e80b-4c2e-8541-3009aded6d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4f70ff-15f3-4d6d-b148-789924fc98f1",
        "cursor": {
          "ref": "68c113c5-0885-41c1-a808-73dbaec15edc",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "160096c2-e91a-4e34-bd8b-c1ba95063404"
        },
        "item": {
          "id": "3b4f70ff-15f3-4d6d-b148-789924fc98f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8dff154-734b-42e1-b43d-f620a5c7af8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4b91b4-24c3-4036-b953-6fb0fc9176b8",
        "cursor": {
          "ref": "5ed62cbd-0ba9-4076-9c88-199420e03d55",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1d7475de-b755-4908-bd4b-e44b3d3e0b8b"
        },
        "item": {
          "id": "9d4b91b4-24c3-4036-b953-6fb0fc9176b8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfa1c1cd-5272-4642-9d9f-1849bd5f72c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a761196b-a679-4b02-9688-b887293d490d",
        "cursor": {
          "ref": "30b1a02d-6973-4b6f-aa41-b994b3072e4f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3e86c039-45c5-41eb-8752-03215bef4edc"
        },
        "item": {
          "id": "a761196b-a679-4b02-9688-b887293d490d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f52e926b-3dba-4999-adbf-3016832b6f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133cac93-7cb5-48c9-8d91-94ebe7506e1e",
        "cursor": {
          "ref": "33c352c5-9f3b-4f0d-828c-b07cfb0f8592",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "daacfa43-b044-4022-a3bb-925d39e1faff"
        },
        "item": {
          "id": "133cac93-7cb5-48c9-8d91-94ebe7506e1e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0b4496fe-2d41-4446-9ae5-3060c099d7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bf658-06b6-43d7-a712-1170ce924427",
        "cursor": {
          "ref": "7c7adb42-f135-42c0-a2b5-2b150fabe07a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c85463ee-f46b-4583-a6a8-2e639ae9f870"
        },
        "item": {
          "id": "b97bf658-06b6-43d7-a712-1170ce924427",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bbe8a896-12e4-4e13-988d-1730a42f55cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34f1bec-cf10-46ec-8458-27c21bd3129a",
        "cursor": {
          "ref": "c968afdf-4863-4873-9db8-9e22b2607d9c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2f273bc-ca65-4128-90c9-1c80b24e327e"
        },
        "item": {
          "id": "a34f1bec-cf10-46ec-8458-27c21bd3129a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "63ccead9-c66d-4928-99ef-0faf001ece62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0385a04e-25a8-490c-b5a2-9bb27d376b23",
        "cursor": {
          "ref": "e79359d1-c96b-4a47-9ac8-433f77dd05b7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c3647246-4d27-45e8-9040-4ab2b4350a16"
        },
        "item": {
          "id": "0385a04e-25a8-490c-b5a2-9bb27d376b23",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52950627-cdda-44a1-a46c-f4458bc908f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84ed419-5cf9-4cb2-9f56-fb464cf88fd3",
        "cursor": {
          "ref": "06008b03-2330-43f4-9d99-7313b45a6e1e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1e5ba624-431d-43c0-a859-4875ecd5c7e2"
        },
        "item": {
          "id": "d84ed419-5cf9-4cb2-9f56-fb464cf88fd3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45c561bc-ed71-40df-a73b-61296db9cc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e284093e-aa41-44eb-9b8e-443a565a0ba8",
        "cursor": {
          "ref": "9b2e49f2-5853-4bef-8221-74cf07d895de",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6198c53a-9f4d-44eb-8025-9bd1339b759e"
        },
        "item": {
          "id": "e284093e-aa41-44eb-9b8e-443a565a0ba8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e9475ec-de23-4add-99b3-007a86489e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a71db-c4db-4ad7-a2a0-d32b4a237880",
        "cursor": {
          "ref": "cdcc2d7f-a357-4799-a697-7b18cea4b339",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "19aef95e-2461-49f0-ad08-0b0a315f16b7"
        },
        "item": {
          "id": "db3a71db-c4db-4ad7-a2a0-d32b4a237880",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3e573edd-0144-4568-9afb-ef3fe63caf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ac405b-0974-4d5a-b152-70617bc47b18",
        "cursor": {
          "ref": "01ca0419-6506-4cb9-acbb-7cd02ddfc4e2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e0d464b-425c-42c5-a656-fe61c15bf4c9"
        },
        "item": {
          "id": "04ac405b-0974-4d5a-b152-70617bc47b18",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7363f855-64f5-4f34-8f9b-2fefd8b2a00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d8c201-b7e9-4c0a-8247-571828042c50",
        "cursor": {
          "ref": "e99c17f0-dc3f-443d-b4a6-0696d31801ac",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "57c14a58-43b2-4340-87bd-981f1b6c9638"
        },
        "item": {
          "id": "62d8c201-b7e9-4c0a-8247-571828042c50",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d307e31b-e094-432c-8f31-28d7e4cc6abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd0bdf9-a9b4-40f4-afda-2ecde396144c",
        "cursor": {
          "ref": "7a629026-b956-444f-ac93-23f278be58f8",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bc765062-2edd-498c-9554-d66ccf24b5e7"
        },
        "item": {
          "id": "edd0bdf9-a9b4-40f4-afda-2ecde396144c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ee32dd78-d229-4a9d-ba28-7991c231a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510125de-4b17-41f1-8b5b-2cd9a2bf6805",
        "cursor": {
          "ref": "8fd42572-e685-429f-80fc-67e02178bb88",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8c60ef24-d90f-4a57-a457-e8a913fe90b5"
        },
        "item": {
          "id": "510125de-4b17-41f1-8b5b-2cd9a2bf6805",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "752ca8a7-6f22-44da-90db-322c1db52a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9721bd6c-c592-4611-8c58-adc0d37a1525",
        "cursor": {
          "ref": "5aca9a87-4474-4a46-aa6b-0847a18b4126",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "86ac0515-ce20-4974-8383-40e10cbdafd4"
        },
        "item": {
          "id": "9721bd6c-c592-4611-8c58-adc0d37a1525",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "639022da-6ee2-462a-af43-04714b46d001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ce1110-d8a6-4d78-b8b9-cf80ec652720",
        "cursor": {
          "ref": "e06542cb-3c93-48f3-8a96-cb7db93d0c17",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1a396af2-8532-491d-abdd-0019e9618a51"
        },
        "item": {
          "id": "c8ce1110-d8a6-4d78-b8b9-cf80ec652720",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c44e994-2837-4987-b92e-0e60a008d7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2bc4a4-135b-4607-a7f9-ac8367414945",
        "cursor": {
          "ref": "96ead00e-e262-4a37-8b1c-1e9c8baaeee5",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e1e22511-8394-4e4a-a37b-b6aaa4c0b98d"
        },
        "item": {
          "id": "aa2bc4a4-135b-4607-a7f9-ac8367414945",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6aa1312-ebcc-4423-bd94-0200b51a4e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bd2a36-a9e6-4e8c-9811-1e1ac2d60870",
        "cursor": {
          "ref": "842f144c-1f31-4b98-9411-750c715f0f97",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7b231fae-4c9a-4d95-8b44-70614405e43f"
        },
        "item": {
          "id": "49bd2a36-a9e6-4e8c-9811-1e1ac2d60870",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eda06abe-4e18-4451-9457-61406de6503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e1e02d-4c99-464a-aa40-2e36689a3ebd",
        "cursor": {
          "ref": "9c6593fd-ac80-437d-98da-7a0b86380a24",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8da2cdb6-743e-4a93-8b3e-a6897ad6bbc9"
        },
        "item": {
          "id": "a4e1e02d-4c99-464a-aa40-2e36689a3ebd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a5f7f397-cd90-4ae8-b91d-4122723373f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dbe33d-2440-4303-afab-e3f5a61007f9",
        "cursor": {
          "ref": "d3b1d878-0fed-42ee-a824-7ab2acbf1a29",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c2f453cd-b816-440c-8cbe-37db7441c84e"
        },
        "item": {
          "id": "d3dbe33d-2440-4303-afab-e3f5a61007f9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bd49f169-384b-4857-af77-6587a6b7d965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22069849-7e24-4f7c-bcae-9143570075fe",
        "cursor": {
          "ref": "b0b9762f-17b6-4e4e-a662-f659a7bb9e1b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c856ebd6-6bb9-44df-abc3-222a576c21cb"
        },
        "item": {
          "id": "22069849-7e24-4f7c-bcae-9143570075fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ccfdb42-e79b-4c56-b119-2473ae23860e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edf23fc-be7a-4e60-9c6f-c2c3c5f16a55",
        "cursor": {
          "ref": "071c5471-68bf-4fce-8944-8cb1060b711f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "54206746-3488-4008-932f-d8fc06463f35"
        },
        "item": {
          "id": "5edf23fc-be7a-4e60-9c6f-c2c3c5f16a55",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8c1de183-dab2-4a0f-b272-7f1cff90dd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cbd8c1-54e0-4bff-bc40-1288965d94ff",
        "cursor": {
          "ref": "c54a58a8-369b-43c2-b57d-aeac5ffae68a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9330bb8e-3960-4c51-86ce-cb501677e407"
        },
        "item": {
          "id": "d8cbd8c1-54e0-4bff-bc40-1288965d94ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b0132046-3db4-4b7e-84d4-e90c0db2332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e6af50-b431-4c0b-81b5-ddd84142f6f4",
        "cursor": {
          "ref": "b0ab4184-dd56-4fed-b388-f20bd43ce9ab",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0af07be5-9464-4a44-8c2a-650ce9eeffae"
        },
        "item": {
          "id": "75e6af50-b431-4c0b-81b5-ddd84142f6f4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1ce7e00d-2763-456c-8676-9943fd0f29c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26d1be9-bd49-4d37-b767-c98e520c07ff",
        "cursor": {
          "ref": "d0baa5c4-fef2-4e0b-9f0f-09311802acca",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bdac2b83-799b-496e-a184-621b7716d31c"
        },
        "item": {
          "id": "f26d1be9-bd49-4d37-b767-c98e520c07ff",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5e1e9a51-392a-478c-8e50-5e19634adfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2910b9-f05f-4737-909f-ec501153be53",
        "cursor": {
          "ref": "c92be685-100e-442e-a8d1-adda0e7937b1",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e7bf167-c60b-4dea-b41a-e002c94fcb80"
        },
        "item": {
          "id": "bd2910b9-f05f-4737-909f-ec501153be53",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9dc188e7-e2ba-459a-9890-dd99326da36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efba9dd8-0d2a-464d-81be-0b6e295bf531",
        "cursor": {
          "ref": "5c7d7694-e226-4861-b663-7780883c73bf",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8273c247-03fe-43dd-a837-f427341051b8"
        },
        "item": {
          "id": "efba9dd8-0d2a-464d-81be-0b6e295bf531",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b12b20ed-b7b2-4c89-9ae1-ab9be3a3b605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968ac3b-b8b8-455e-a509-6966f390f76b",
        "cursor": {
          "ref": "674e8e2e-9b75-47cd-8ee5-2df39b633d99",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d96b821d-64f1-4782-b6c3-cefbf4b2c836"
        },
        "item": {
          "id": "c968ac3b-b8b8-455e-a509-6966f390f76b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c6d30fa6-2f81-4700-8ff5-5e306ae5f954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7e7b08-66b1-4739-80ef-734cbba9c750",
        "cursor": {
          "ref": "03e33929-a098-482d-a0ea-27a8ad7c18d0",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5869c631-62cd-4445-b8a5-d4c279e7aa0f"
        },
        "item": {
          "id": "bb7e7b08-66b1-4739-80ef-734cbba9c750",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1c914c3b-dc85-48f3-98e9-9c520800d782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9467b21-f934-42fd-b16f-58c6a8f4b8e7",
        "cursor": {
          "ref": "58611f9f-5388-4287-844b-6d233528ceb8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d5ddd674-222a-43e2-b90f-2a5cf6fa448c"
        },
        "item": {
          "id": "a9467b21-f934-42fd-b16f-58c6a8f4b8e7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f7597b86-05fa-44c2-b4af-78783473492f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30452d37-522d-4634-a96c-4f175fc065f8",
        "cursor": {
          "ref": "e1708414-a668-4cf1-8a1c-e82bdf70a989",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1257a034-f69c-4a05-a43b-79357384d21b"
        },
        "item": {
          "id": "30452d37-522d-4634-a96c-4f175fc065f8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cb08501d-f93d-477a-b94e-edb18e37576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8cbe3f-fbd2-490c-9e65-55b6dfa581c4",
        "cursor": {
          "ref": "51869e23-fd87-4dfb-bf5d-e0cc827b8e61",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2f7cc939-73c6-45de-b0e5-e556d659e5c1"
        },
        "item": {
          "id": "ce8cbe3f-fbd2-490c-9e65-55b6dfa581c4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d0c7353-810c-4ad2-b2c0-b5e2930b1ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1bf90e-9a04-461f-b1ea-982d6903beeb",
        "cursor": {
          "ref": "917bd7c7-d6c4-4bb4-aec7-a4a5f9314686",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "42d0c3c1-afea-49e4-8eb8-4f113d8b8269"
        },
        "item": {
          "id": "2a1bf90e-9a04-461f-b1ea-982d6903beeb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b55543d9-422d-417d-91d5-0942fc58d595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce89213-30b1-425f-8ac3-79445805d03f",
        "cursor": {
          "ref": "711e1cdf-92e6-47e0-8bbf-dd8271b2dcef",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9401ae74-4a07-496d-a653-e1fce1a1bcf9"
        },
        "item": {
          "id": "fce89213-30b1-425f-8ac3-79445805d03f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3b0bdd1b-f838-4631-8e55-3ab3a8d5e824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c43b98-8d71-4729-a56b-50276df2f60a",
        "cursor": {
          "ref": "e5ef969d-c99e-4949-900e-2a0b7f843495",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1678115-2e18-4cac-acf2-e3f84d173adf"
        },
        "item": {
          "id": "04c43b98-8d71-4729-a56b-50276df2f60a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "66edfa43-6f3e-43c1-b41c-ee9fa775eaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ba6f42-fa80-4dd7-b43f-088825ca035d",
        "cursor": {
          "ref": "3dcc81c7-f974-4109-ac58-89657468fb0c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5ed0198b-c988-405a-b981-f19a144c6620"
        },
        "item": {
          "id": "51ba6f42-fa80-4dd7-b43f-088825ca035d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cb9a6977-f156-422e-991c-f0be8f2a4146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8d8c0c-8cba-4015-8edc-46c18fed7d35",
        "cursor": {
          "ref": "47bc1a8d-a087-4f56-8ce8-c3f2880b2e33",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6d31f9e4-20e7-4ee7-a765-3d9e7a817afe"
        },
        "item": {
          "id": "ff8d8c0c-8cba-4015-8edc-46c18fed7d35",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fde4e133-1d08-4106-8df6-5f299b067bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caa8394-53ff-4b34-ad89-354dafae693c",
        "cursor": {
          "ref": "f5781a50-7941-4564-b2a7-bcd6757fad01",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b749158-6c51-4b90-b1c6-7555f783cdf0"
        },
        "item": {
          "id": "1caa8394-53ff-4b34-ad89-354dafae693c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6767322d-fe68-44bd-ba14-0a0ffe1ad9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c80800d-7684-4309-bdc1-b4a3876532e3",
        "cursor": {
          "ref": "3d01df34-726e-4d83-b88f-8712f1e171e4",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "057da0d3-262f-4784-89d0-89f556e64ab3"
        },
        "item": {
          "id": "4c80800d-7684-4309-bdc1-b4a3876532e3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ca9bbc7-6e0e-45a9-8838-7b86ec98551a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af69bfe1-e338-44c2-9a15-6b9a70844d42",
        "cursor": {
          "ref": "274da4ec-6bca-4250-8c0f-c8679307d019",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3801327f-2cc0-4da3-9fec-48428f11a822"
        },
        "item": {
          "id": "af69bfe1-e338-44c2-9a15-6b9a70844d42",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cee7f768-56f6-41d7-bbde-f76c88771703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5ec95c-0d76-4284-88ec-d5c6540ba28c",
        "cursor": {
          "ref": "16599414-957e-4834-a6a7-b98d4357bdaa",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2dec12d1-fc87-4fa7-b84d-be438108d71d"
        },
        "item": {
          "id": "0c5ec95c-0d76-4284-88ec-d5c6540ba28c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fd300f03-a4d8-4d78-8647-8edba3907fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa18f82-b629-459a-8c2b-75d29a39cb2d",
        "cursor": {
          "ref": "3dc43263-3371-4789-8a1a-fa8868118ba7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4a0fc06-9524-4828-a8f3-63ab4549e3a8"
        },
        "item": {
          "id": "1aa18f82-b629-459a-8c2b-75d29a39cb2d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "59f8cf92-c57c-4a46-9c06-a9b636c04e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b680fbe-74ae-4133-bfaa-91b2d5f42fa3",
        "cursor": {
          "ref": "e99f2078-8971-44a7-84a6-038c15b84085",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02dc7534-ca6b-431f-b6d3-6b8b65ac275f"
        },
        "item": {
          "id": "2b680fbe-74ae-4133-bfaa-91b2d5f42fa3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "29beb4db-5cbc-4620-9e6f-ad0e475c2f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f749f-d34c-4596-a0ff-f1c5d175c217",
        "cursor": {
          "ref": "86630eb8-0832-4470-a2ec-463b88f67a99",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "62b83c6d-5bc5-446f-9695-c6b733a20883"
        },
        "item": {
          "id": "501f749f-d34c-4596-a0ff-f1c5d175c217",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dc7d3d30-0c2b-4da9-8969-120178ee1303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27ebaa9-bdea-4ce2-bc9e-0288ec738cfe",
        "cursor": {
          "ref": "aceeae0d-d9ec-4f5f-bac8-aa94f13db7d7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d7393682-6447-45c4-9b6e-26e6c193c653"
        },
        "item": {
          "id": "d27ebaa9-bdea-4ce2-bc9e-0288ec738cfe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ed4ae4ae-d14f-4360-bde4-f8ccd48aceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6828634-e52f-4854-94a6-5d5005cc8f65",
        "cursor": {
          "ref": "5aa07828-3db0-4424-be02-bab99b3316a0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4af36dbd-c21a-4b74-b5a5-9cc0075eacfb"
        },
        "item": {
          "id": "c6828634-e52f-4854-94a6-5d5005cc8f65",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ba1933d2-c7f0-401b-8b7d-f7e666ccda8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65568e72-ebd9-4117-9473-7ad2001775d8",
        "cursor": {
          "ref": "94b6aa27-1262-4f6d-b56b-260d36fa73b5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f4870b47-333b-4a43-b696-2c644699b62e"
        },
        "item": {
          "id": "65568e72-ebd9-4117-9473-7ad2001775d8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e7358c8-3e64-45a7-9286-ca8466b84135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72cb47d-75b5-41fd-891c-2ed82b417d9e",
        "cursor": {
          "ref": "4cfbef2a-650b-4698-b151-eebb53a66f91",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fa8a7a03-1d18-4000-aa03-2b560d3e1db7"
        },
        "item": {
          "id": "a72cb47d-75b5-41fd-891c-2ed82b417d9e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "42c985cb-9376-4ff8-bcf8-45cb4564184d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897aca29-2ead-4df0-8acb-c6b8a6d0bb43",
        "cursor": {
          "ref": "0bcbe4fb-40ee-49ce-9c2e-7be7415c3918",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba54cc92-db16-4586-b124-7558e6a3de00"
        },
        "item": {
          "id": "897aca29-2ead-4df0-8acb-c6b8a6d0bb43",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8847fa36-2783-4e98-b154-0c571ec85fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0868c63b-f610-4cbd-8f5e-86730e940b0c",
        "cursor": {
          "ref": "e0596980-50b6-4ab7-9e36-bc5ee31cba5c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "78bafafc-471b-49ea-95df-ac4cec58c13f"
        },
        "item": {
          "id": "0868c63b-f610-4cbd-8f5e-86730e940b0c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "53d961f3-dbaa-4553-bc09-6a9565ec3f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79e1b6d-69e7-4891-b5cf-3d7d6086730b",
        "cursor": {
          "ref": "216ee71e-357f-4702-9233-fbd8e5bf45e2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3e2d59bb-8fd3-4064-ac7d-1da988320683"
        },
        "item": {
          "id": "e79e1b6d-69e7-4891-b5cf-3d7d6086730b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9e2ce364-356c-4454-8f27-b24fcb187fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dba5c1-cecf-4114-ac19-984bfba69398",
        "cursor": {
          "ref": "cf5bd63b-e99c-49f2-b45c-967f72d3c862",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f255aac1-e040-413a-9379-84e4dcef4e83"
        },
        "item": {
          "id": "c4dba5c1-cecf-4114-ac19-984bfba69398",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e9490bf6-39a4-4ac9-975b-74fcf8f7dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b297e25-60e6-449d-9414-6ede0293dea4",
        "cursor": {
          "ref": "9fe230b2-e6b6-4075-80c3-1bd4b252c11e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "197ef553-d736-4184-98b1-2f9464b58256"
        },
        "item": {
          "id": "5b297e25-60e6-449d-9414-6ede0293dea4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3c9e30cc-0378-428c-b66c-ef47dd82bea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72113f86-3f3d-4a08-84a7-7efe463f791b",
        "cursor": {
          "ref": "86ee3d2e-8e35-48d5-b48e-fb43ad64fe13",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8d77a2b9-07a7-4e9a-9795-faccb3f1e43e"
        },
        "item": {
          "id": "72113f86-3f3d-4a08-84a7-7efe463f791b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d98b57f5-2c1e-40c8-a3d6-0d0a863d62fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b74978-5135-44ff-bbdc-cd2edc9adcf3",
        "cursor": {
          "ref": "33b906e2-2a5f-48ae-b6ff-fa1a442a6ae7",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "54818191-85f1-4393-a47b-9a34707ddd0e"
        },
        "item": {
          "id": "e7b74978-5135-44ff-bbdc-cd2edc9adcf3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "644719d2-1c56-4c44-af88-db60b54c4112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c0220f-c967-4334-a9a2-4cb0cc6a10a3",
        "cursor": {
          "ref": "7be89c1b-d31a-4180-92aa-ae098b4fdfae",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fa46bcd4-c483-4bb4-845b-0fa73d9d1486"
        },
        "item": {
          "id": "e8c0220f-c967-4334-a9a2-4cb0cc6a10a3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "153e1e25-08dc-4664-bb23-becebff90e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1432a7-adef-4262-af06-6fb59b4a132d",
        "cursor": {
          "ref": "37a35fab-302d-43f2-84e2-cb04d9313247",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "966369ab-b72a-4b13-8693-34d48c5908d6"
        },
        "item": {
          "id": "9e1432a7-adef-4262-af06-6fb59b4a132d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ab55cb01-3574-48be-9eeb-c9df9913d9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9440f389-19e2-42f9-adf8-bf88012ecb8b",
        "cursor": {
          "ref": "2bc62387-f1a8-4d83-82fc-5b4ab31469d9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0de10bce-7730-4540-86ff-24ccea47641c"
        },
        "item": {
          "id": "9440f389-19e2-42f9-adf8-bf88012ecb8b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c30de50c-8ca7-40e3-8cff-6944e35ee568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccdbdd3-a78f-4d30-bc91-8c17bec77b0f",
        "cursor": {
          "ref": "0fa7161d-e3e8-4be2-8e4d-d41e3df756cf",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "de7b1c69-2846-470a-8a13-b24027058518"
        },
        "item": {
          "id": "8ccdbdd3-a78f-4d30-bc91-8c17bec77b0f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4c560871-7ae8-417c-a3f8-f243d3a6d0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00324ea2-3a95-45f9-aec8-7847ee78d528",
        "cursor": {
          "ref": "e42be2b7-eb77-4a1f-8b42-8f8e9defcbc7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "15f2d63d-5f25-4ff3-84b6-83bcc14f5a1f"
        },
        "item": {
          "id": "00324ea2-3a95-45f9-aec8-7847ee78d528",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "23e81004-86c0-4ef9-bd25-bec6baf02340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779e70e8-2a94-4d7a-ac4a-8fcbf76157ac",
        "cursor": {
          "ref": "64a215d6-74ff-4d4c-99c2-eaacf114dace",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "faacbfc6-843a-4156-9323-64228d3752ef"
        },
        "item": {
          "id": "779e70e8-2a94-4d7a-ac4a-8fcbf76157ac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb036513-0ff0-42ee-a02c-ba7b7985b053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af50c8a9-687c-4589-910e-49b4520c7c23",
        "cursor": {
          "ref": "76c6fc7e-04f5-4456-86f8-9159d0e63db3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1a43b25f-249d-410d-b439-795c0fc5317c"
        },
        "item": {
          "id": "af50c8a9-687c-4589-910e-49b4520c7c23",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6952c45d-459d-462a-b132-d7b9f675f546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b76945-e3dd-4e8f-a8ac-e6ba668b5c80",
        "cursor": {
          "ref": "5ee9de43-3c48-4087-9668-7cbba791775f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0a9d1ecd-c656-477a-bc23-3157a96b3ee7"
        },
        "item": {
          "id": "d9b76945-e3dd-4e8f-a8ac-e6ba668b5c80",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5afeb15a-be6a-472c-95e4-917162e6467a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5663433-3111-4c2b-b1d9-749c617ba489",
        "cursor": {
          "ref": "37feb60e-1cf6-4a0b-8dc3-3a19f0a53b78",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2cda9f5c-d4e5-400a-83b9-fbd33445b97f"
        },
        "item": {
          "id": "d5663433-3111-4c2b-b1d9-749c617ba489",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8509fa71-e67c-497e-80e0-c40a7c878232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e6da1-3514-4add-8e6d-25c3cbcc8040",
        "cursor": {
          "ref": "477089f8-e77d-4290-b360-2cb3abe18b3a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "183c19b1-5660-4bea-99af-93b81cd8ec9a"
        },
        "item": {
          "id": "2b3e6da1-3514-4add-8e6d-25c3cbcc8040",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f6462df-c82a-4d1f-93da-c6c93163bf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14649039-8c5a-4e8c-b31f-e8984a4f4d1b",
        "cursor": {
          "ref": "205fb3db-5302-44cb-8e97-fc44a578773d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "021ade33-b681-480f-90d6-7faafd54fbc4"
        },
        "item": {
          "id": "14649039-8c5a-4e8c-b31f-e8984a4f4d1b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aaf2b6ab-742b-4685-b6b7-308bb8d4d7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b794afee-c5af-4ca2-a2d7-892f81382917",
        "cursor": {
          "ref": "ff9d83b2-9d33-4d56-a11e-831d6752d294",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ed04da9c-9d86-486f-81bd-e0d0df6c80a1"
        },
        "item": {
          "id": "b794afee-c5af-4ca2-a2d7-892f81382917",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8b3bc8c7-4d8f-4034-985e-224cb145b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb48727c-af21-406d-8230-455d38128582",
        "cursor": {
          "ref": "861872ee-19c8-4813-818f-ebe4dbb88b63",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "540b132b-4a38-4b75-a951-417a15e48b2e"
        },
        "item": {
          "id": "eb48727c-af21-406d-8230-455d38128582",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1295796d-e175-48b2-a591-e9f1acf982e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b990624-21a7-4ec3-90ed-3c04e0896987",
        "cursor": {
          "ref": "f0308cd8-768b-4cdb-83cd-254d5b57def2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6c35bb0f-d9da-448d-8a02-8c622891bd57"
        },
        "item": {
          "id": "9b990624-21a7-4ec3-90ed-3c04e0896987",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0af7cc55-bcb3-4fd1-84c8-19d5fee0c35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314f89af-57b9-423f-8f88-09d438026e4a",
        "cursor": {
          "ref": "2c15f1ea-93f2-4228-bed6-b90c32b1a458",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "be48e382-51e5-492f-a929-db2d3b234a54"
        },
        "item": {
          "id": "314f89af-57b9-423f-8f88-09d438026e4a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9c29fbda-2fc0-43b4-939f-1bb93d5f127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa840ded-ae1e-4f4c-a99f-4a822bd7f420",
        "cursor": {
          "ref": "8a3c3210-9622-4c5c-92d9-a2d656f7dac4",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1d9f5132-2400-43d0-8d9d-6c96611741a4"
        },
        "item": {
          "id": "aa840ded-ae1e-4f4c-a99f-4a822bd7f420",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fdf1ba03-f095-49f3-bd2f-d25758ffa842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67252d53-bd0e-43d6-9482-f0186a7b18ae",
        "cursor": {
          "ref": "897152ef-95a7-4ff6-8389-46ec4bc19b79",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5b8d57d6-7919-4686-8f67-8efff234fe75"
        },
        "item": {
          "id": "67252d53-bd0e-43d6-9482-f0186a7b18ae",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "de09a381-131b-4b07-b575-9857aa58da70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659dc86a-3641-4341-831a-3fbcda2390a2",
        "cursor": {
          "ref": "de7f280d-9a17-494f-bd9a-3e23b76e2b31",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ea7377c7-00db-47df-bb90-7fcb3f029d36"
        },
        "item": {
          "id": "659dc86a-3641-4341-831a-3fbcda2390a2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c606f354-662f-4aed-8194-9fcb934af297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd01cf1-ff44-4bdb-a9fb-553190a7f2af",
        "cursor": {
          "ref": "b36d5fb6-5a95-4ca1-b0c2-fd9428a60575",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4210b24c-a482-4c47-9308-be875afc75ec"
        },
        "item": {
          "id": "ecd01cf1-ff44-4bdb-a9fb-553190a7f2af",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0dd9a36e-9a8e-409a-b1dd-ccfc2c36b689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5209f56e-2cb1-4722-a131-a1de1c2a1e8f",
        "cursor": {
          "ref": "d8c48375-f9f6-4e45-a3b8-949f4edc7234",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "40c38126-a1b9-4656-ad7f-e780529ce0a6"
        },
        "item": {
          "id": "5209f56e-2cb1-4722-a131-a1de1c2a1e8f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4ec2c67c-55e0-4a47-9005-090f5d94964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7980cd-1231-4789-9f9b-451cfce6db9c",
        "cursor": {
          "ref": "dcfc8666-07a1-42a3-a068-1d78d05482c5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ff296ce1-f181-464b-9e5f-071080023a0b"
        },
        "item": {
          "id": "3f7980cd-1231-4789-9f9b-451cfce6db9c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bb5ac71a-aa07-4beb-8a7b-61506c6976f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0bd194-a5c9-4e66-809d-f9fa1df133c2",
        "cursor": {
          "ref": "704173d5-0c00-4b94-9e85-67414c613317",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d8448e4d-8eb5-48eb-b2ad-54e04172057d"
        },
        "item": {
          "id": "ca0bd194-a5c9-4e66-809d-f9fa1df133c2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46fccd53-d42b-4438-8d79-739e329ef085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabaf780-b812-4f86-8dab-64f3dd493f64",
        "cursor": {
          "ref": "ee1635e8-2db3-41f6-9cc2-4e07a8e77234",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8fad7a01-45e7-4da4-953e-1d10fb7ecc40"
        },
        "item": {
          "id": "fabaf780-b812-4f86-8dab-64f3dd493f64",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "51d87370-d9ff-477e-b6c6-896e635980b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f0229f-b12f-499e-9b1a-343b30d4fa21",
        "cursor": {
          "ref": "ca013c86-0f6c-453d-b074-2003a9fc24cd",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "83e09f9c-fb5f-4ab3-be82-fdd0719463e0"
        },
        "item": {
          "id": "02f0229f-b12f-499e-9b1a-343b30d4fa21",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c11975ee-099f-4e4a-8e34-91c6df5a68a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22a031b-41c1-4c17-a207-899ecd038f3e",
        "cursor": {
          "ref": "77671da8-9906-4730-acd6-85e15fdf5403",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6e61651b-256c-42a7-8528-72a8773e8cfc"
        },
        "item": {
          "id": "e22a031b-41c1-4c17-a207-899ecd038f3e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9a6782f8-47e9-4a10-9980-9ca3cc448385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c49182-c6cc-4993-b0bf-dcd7178710e6",
        "cursor": {
          "ref": "b34c2ef4-3b6e-48cb-bd39-ba799998de28",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "388687d4-e36b-4849-80ec-7729d89f32e2"
        },
        "item": {
          "id": "39c49182-c6cc-4993-b0bf-dcd7178710e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ad78c773-be3a-41d9-a7c6-bf3a0f162c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e120441f-33f6-4571-8431-abede724c397",
        "cursor": {
          "ref": "1810ea6a-6661-4eb2-ba45-24a634995ae7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "400bbdbc-2f53-4b4d-b0b0-298db4947305"
        },
        "item": {
          "id": "e120441f-33f6-4571-8431-abede724c397",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "681970d9-a15c-469c-96e1-81b094ac8b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5bfa62-7ce8-49c1-b40f-88fdbd577469",
        "cursor": {
          "ref": "678857e0-9361-4ae2-a435-602a83630633",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "263b833a-780a-4d52-97c9-68f951341219"
        },
        "item": {
          "id": "ad5bfa62-7ce8-49c1-b40f-88fdbd577469",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b46715d3-176f-4520-8322-63c9e8b399c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d1a67d-01c9-4492-8336-9a9837ad6e8d",
        "cursor": {
          "ref": "6b1337e3-8820-4b0c-8396-9ade2ccdec59",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f279def6-5c59-41aa-876a-cbd6210650f2"
        },
        "item": {
          "id": "50d1a67d-01c9-4492-8336-9a9837ad6e8d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3a5b61ba-ce56-4783-b8aa-6e6b07a9225f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3456cb3b-29f5-4c3f-a5a9-d8da262f1c3f",
        "cursor": {
          "ref": "b20b7e64-a235-47d4-afaa-d4156e3c6ae0",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f0dfffa9-c725-4318-9c8f-59361f605652"
        },
        "item": {
          "id": "3456cb3b-29f5-4c3f-a5a9-d8da262f1c3f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f4bef64-1f92-4a14-800f-82c17473ccba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bad912b-98d7-4a09-8faf-47c6b57d9a4e",
        "cursor": {
          "ref": "43eeb496-04ce-4011-b154-403cc9fdeea4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3d1d5d9d-a083-4835-a51d-7d30ae458f4b"
        },
        "item": {
          "id": "7bad912b-98d7-4a09-8faf-47c6b57d9a4e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ba862271-e4ad-4457-a5db-98bc56ea2683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2132c162-2cbb-4717-af99-e3716a47a987",
        "cursor": {
          "ref": "067d7f52-5421-4d54-b58f-47fb68dbb245",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "600f4022-cc87-4f34-8863-d9824ddff58d"
        },
        "item": {
          "id": "2132c162-2cbb-4717-af99-e3716a47a987",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5c51c00c-1b95-4c01-a5ec-f7c337fef65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4417e141-34fa-4936-9388-2ed542962f5e",
        "cursor": {
          "ref": "63b87c52-1e8a-4646-bf98-f006d62e9790",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d57d65ff-36ec-4b2b-9a4e-f856f44c9ef6"
        },
        "item": {
          "id": "4417e141-34fa-4936-9388-2ed542962f5e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b442c51b-0916-4877-83eb-612c5c600580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cf894c-45d9-44d6-aa1f-765d9bff0b3f",
        "cursor": {
          "ref": "fd4004c3-8b58-471d-924b-a239bd8955cc",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1c223b19-ac1d-4727-ac90-701b8852ca98"
        },
        "item": {
          "id": "16cf894c-45d9-44d6-aa1f-765d9bff0b3f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f094ccd2-cace-47bc-b3a3-72af9894b9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a641a620-09a8-4012-9c19-e8c703b0a1f3",
        "cursor": {
          "ref": "c1ed8d6b-ce98-4f48-b826-6542d814ffd0",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6fbdbe9f-8dd5-4c74-99e6-d3bbadd69f8e"
        },
        "item": {
          "id": "a641a620-09a8-4012-9c19-e8c703b0a1f3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2687bf1b-8773-41d2-abeb-bc1a2488c6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084b33d0-4536-4fad-bace-86eb3bd41ffc",
        "cursor": {
          "ref": "9b1bf423-1045-4edd-88cf-1f7aff530b6e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5db4cd45-e7fa-47f8-a907-abb3631a0050"
        },
        "item": {
          "id": "084b33d0-4536-4fad-bace-86eb3bd41ffc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c3c22e06-11cb-4233-bcee-8295e218851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a312b3ec-3f46-4c7a-9f6d-1de2aa379d77",
        "cursor": {
          "ref": "9fc6fc9d-455f-48a8-ab59-6e1dd07a1bdf",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "22371051-b9bd-4802-a201-fcce26774340"
        },
        "item": {
          "id": "a312b3ec-3f46-4c7a-9f6d-1de2aa379d77",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b068ea3d-0098-48a2-8d2b-bee3de48705e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c968e-ef89-4604-a16b-daa1e38f889d",
        "cursor": {
          "ref": "15fc8fd1-e6be-46d7-a52a-12ef7345b79c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7caa3095-731f-457e-86db-06eebfe7b039"
        },
        "item": {
          "id": "359c968e-ef89-4604-a16b-daa1e38f889d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "98e55cd1-da29-42b5-a10a-dfad103a449f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6651a94-4215-4bb9-9138-904f38d9e28f",
        "cursor": {
          "ref": "6727ec6b-e0b1-44be-8d66-9042d08acc40",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8f62294-4d76-4dc9-a5f0-57882792f457"
        },
        "item": {
          "id": "b6651a94-4215-4bb9-9138-904f38d9e28f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4c463787-d29f-4b90-9404-c1abddc83c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2966f938-94c4-4be9-8784-8f8b2998d551",
        "cursor": {
          "ref": "631d5b0e-0a5c-4df8-b401-9dde1c828f0c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "73f0fcee-71ff-4c42-bbd0-a8e7fb70dd22"
        },
        "item": {
          "id": "2966f938-94c4-4be9-8784-8f8b2998d551",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "17fbb31b-0c05-4d47-b43b-4f2f4be88610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b879f017-a009-4f13-aca8-ed70ed6f0ddd",
        "cursor": {
          "ref": "1c2ed7db-fec9-45f1-9168-2d14e67ae738",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "94f3d829-47ae-4e21-b770-e26ae9369ff2"
        },
        "item": {
          "id": "b879f017-a009-4f13-aca8-ed70ed6f0ddd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "26a03280-dfba-42a9-bbad-068d23396b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495b8cc4-6b82-45f0-93fa-cecb7cf7c16f",
        "cursor": {
          "ref": "6f267d0d-68b2-48ac-b192-fe18a90fad12",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f0d2c5c2-303f-4493-b7ec-c1829d56e5d1"
        },
        "item": {
          "id": "495b8cc4-6b82-45f0-93fa-cecb7cf7c16f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "631e4a93-62c4-473b-897a-1dd357329b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844d90e0-0dea-43f1-a9a5-36d370ccf4d9",
        "cursor": {
          "ref": "64c7d5a7-1eba-4260-a6f6-297a9702b537",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "21be9537-743c-45ff-b738-76a396d7449f"
        },
        "item": {
          "id": "844d90e0-0dea-43f1-a9a5-36d370ccf4d9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d930cf70-1810-4cb0-add2-b7435cb99873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d48bf0-9a10-4345-b985-5dfc5a1090bc",
        "cursor": {
          "ref": "b222c621-91eb-42db-8512-11181e65a25a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bb550b48-bf09-48d9-aa67-3af2476db8b7"
        },
        "item": {
          "id": "a1d48bf0-9a10-4345-b985-5dfc5a1090bc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f26874ef-372e-4065-ad08-267646eca098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c977434b-bddd-48e0-8612-95875ffa86b2",
        "cursor": {
          "ref": "b9e9e183-191d-45a2-a723-c67e8ebf7c41",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3fb75502-5b8e-48e9-817f-695f29ce5bc8"
        },
        "item": {
          "id": "c977434b-bddd-48e0-8612-95875ffa86b2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d668bad6-ac9c-4d8f-85a8-7f28ca32aa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b811d694-fb26-4570-bae8-827ddc60d60d",
        "cursor": {
          "ref": "ecd33e16-676c-43f3-9f7f-d83bd73b3342",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "27032674-f7e6-4cf4-be84-f06de6e00df8"
        },
        "item": {
          "id": "b811d694-fb26-4570-bae8-827ddc60d60d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8411206f-a37f-443f-b547-8cba854abc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d59080d-917c-47bd-bc42-40863d73b60b",
        "cursor": {
          "ref": "0c65714e-100c-45c1-a90d-32f3da084608",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9db2a717-2601-4b3a-b963-c100a44c6d85"
        },
        "item": {
          "id": "5d59080d-917c-47bd-bc42-40863d73b60b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d078b0c8-6e12-4a5a-85a2-139c3998234c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739f4abb-6a9f-4836-8ee6-01a9b06a0603",
        "cursor": {
          "ref": "c7f2a935-45d7-4efb-92c5-c42722228cb5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "91c83a7c-4c07-469e-9d9c-9985eba2f280"
        },
        "item": {
          "id": "739f4abb-6a9f-4836-8ee6-01a9b06a0603",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d303050-eff7-4b0a-912f-ada5f905dabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb46e28-531f-4707-95e9-9205d223c306",
        "cursor": {
          "ref": "e1996d24-9f8c-417b-a4fa-1195b958fb88",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e6ba2bc4-e726-409e-99de-24239dc3e03a"
        },
        "item": {
          "id": "2bb46e28-531f-4707-95e9-9205d223c306",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a586c6c2-cba7-4205-b457-54838eed96f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c530d3-2205-476e-ba7d-17f0634f3de7",
        "cursor": {
          "ref": "e37904df-3876-4796-a7ef-19b57a599780",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c89504e3-aff3-4c30-83af-791f2974d4f8"
        },
        "item": {
          "id": "e6c530d3-2205-476e-ba7d-17f0634f3de7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "82c7823e-103b-476c-85df-75be7050c779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce84f051-f736-4202-97d2-0590cff57138",
        "cursor": {
          "ref": "caf7cab8-77f1-4671-8012-33007955fc53",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "85bd8e96-3242-4017-b762-eb2c106b398b"
        },
        "item": {
          "id": "ce84f051-f736-4202-97d2-0590cff57138",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2301275a-52b3-4461-8b6e-290ec35fd3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44b612f-a5cd-4137-93e1-c03dcb802c66",
        "cursor": {
          "ref": "38633fcc-4645-45a4-9e24-05ee8bd537b8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5cfab086-42a7-4795-81e2-b95117f96011"
        },
        "item": {
          "id": "b44b612f-a5cd-4137-93e1-c03dcb802c66",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "06673f18-d912-4a25-a2dc-844074dc0a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c99b623-e979-4ce8-91b4-c213cefe2628",
        "cursor": {
          "ref": "e5604fd4-e072-4c83-b92c-2c75bd538cee",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0e470d5c-cb5c-4c75-977a-f55b85ec4330"
        },
        "item": {
          "id": "9c99b623-e979-4ce8-91b4-c213cefe2628",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "27f55361-9703-4198-ae63-50a0ff5fb196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57de2eb-f209-40ca-ab19-31b83b261e23",
        "cursor": {
          "ref": "5edb1850-49e9-4a95-9224-1d8e398d8749",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "091b7865-bae9-494c-a287-77b3db9f1a97"
        },
        "item": {
          "id": "b57de2eb-f209-40ca-ab19-31b83b261e23",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "84f14f28-9670-4500-bf2a-489423eeab4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23c77e0-29b4-4615-b490-068721fd8a8f",
        "cursor": {
          "ref": "645a6084-552d-4c74-b9e0-1be6d524cf37",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dd3718a3-7053-41b0-8f06-64da52069e2f"
        },
        "item": {
          "id": "c23c77e0-29b4-4615-b490-068721fd8a8f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dc028f0d-a63e-4d6c-a6c2-66a5c45874f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf5b4fe-4002-468a-b38c-58016c4e2b98",
        "cursor": {
          "ref": "5010ef71-1731-4fe2-bf71-9ddcd8c39ad9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1c0c3558-5c96-4548-9c2b-6fdae12d7a2b"
        },
        "item": {
          "id": "1bf5b4fe-4002-468a-b38c-58016c4e2b98",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f52d3019-7317-4be6-96e5-ca2f62c4b052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9dd24c-538d-49cc-89f6-564106721520",
        "cursor": {
          "ref": "309f87a9-1117-4731-a6e5-3b790d372eeb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7981d6be-93a3-42f0-8436-83915d8d521b"
        },
        "item": {
          "id": "1a9dd24c-538d-49cc-89f6-564106721520",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ca7b14b9-fe96-484f-8895-4e106d2194ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6b07a5-07cc-45bf-9084-8e487d5701db",
        "cursor": {
          "ref": "d941e351-2c4d-492a-8320-e629e8a80472",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "001fa363-2d6b-401e-912f-5ed2c4981e72"
        },
        "item": {
          "id": "6f6b07a5-07cc-45bf-9084-8e487d5701db",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b49d0812-df2b-40f2-8689-be7e3bbeaaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e025e999-00a8-4942-8fc5-d0d90ee8316b",
        "cursor": {
          "ref": "31c28609-9002-4b98-8630-7cd052b720ec",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5347d286-5c1a-4c1c-b357-c0da7244eb64"
        },
        "item": {
          "id": "e025e999-00a8-4942-8fc5-d0d90ee8316b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1833bdbc-7af2-4a00-8f1e-b99ad656815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01812b5d-8d9f-4f6e-b97d-643f43e85aa7",
        "cursor": {
          "ref": "c0bccc70-590a-435d-8efd-355ad89483bb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7672dd66-9433-4f34-8220-55b831c1bad9"
        },
        "item": {
          "id": "01812b5d-8d9f-4f6e-b97d-643f43e85aa7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c2326912-9e3f-4198-b288-6d20650b3f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4dd76d-c171-4b76-87be-27540e6586c9",
        "cursor": {
          "ref": "62d97678-b63e-4a10-8c89-e9e877621686",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2b90a53f-ae23-4b92-bc48-52373ff24f77"
        },
        "item": {
          "id": "2e4dd76d-c171-4b76-87be-27540e6586c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5225246d-901b-4709-a25d-93e9bbd2add5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdfa89f-18c1-46bb-93b7-b985832bed37",
        "cursor": {
          "ref": "4519e4c5-092b-47b0-abed-ed27032f8b44",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1efadb83-4e3b-4518-a9bb-f175d6f8feb2"
        },
        "item": {
          "id": "cbdfa89f-18c1-46bb-93b7-b985832bed37",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3bdbf2fc-108a-4bbf-9c6a-fd003c99aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11997619-0f80-4dfb-8f02-49369d5b3462",
        "cursor": {
          "ref": "7dbb3a75-178e-4f5e-b639-6a9385d1c28d",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1395e569-d461-4061-81da-d5436cde6053"
        },
        "item": {
          "id": "11997619-0f80-4dfb-8f02-49369d5b3462",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7ad784ed-201a-45a8-90a0-790cf149ad7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1393f50d-4c1b-4577-923a-eb281a64a14b",
        "cursor": {
          "ref": "a34fa730-0cbe-4fcd-8c8f-03f37c6225eb",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3ccdfc37-1e8a-4cc9-8434-43d41663ab32"
        },
        "item": {
          "id": "1393f50d-4c1b-4577-923a-eb281a64a14b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f8fabfcc-8cbf-43db-9166-ee3a28da4236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794846a1-11e4-4373-9a18-38573c7936c4",
        "cursor": {
          "ref": "b9792085-8c69-4ac1-ae8d-942f4a26f70f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "89dea836-17c1-4210-921c-451bae0d0f2e"
        },
        "item": {
          "id": "794846a1-11e4-4373-9a18-38573c7936c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ad330a24-d27f-4239-ad2d-9c261f12315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdb262b-5a64-4c9b-8446-4fa546feb985",
        "cursor": {
          "ref": "ff7e3c37-b929-405d-953f-55c34da75a19",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "43e2f2b0-2edd-451c-a2f0-297edafca835"
        },
        "item": {
          "id": "dfdb262b-5a64-4c9b-8446-4fa546feb985",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8024267e-9c0e-46e4-a446-8a5e94c7d006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45471540-9580-41e3-8198-0d5ea7810be6",
        "cursor": {
          "ref": "d93ae64b-f5a7-4f3d-813b-12acb84697fc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5aaf286a-bdb3-48c9-a8a4-949a2a08f1cf"
        },
        "item": {
          "id": "45471540-9580-41e3-8198-0d5ea7810be6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5f698221-4f63-4348-b6b7-96dbc93c76aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b95899-d2ed-4fbf-9662-9ea1f4437ff9",
        "cursor": {
          "ref": "97ff8357-d28e-4bfd-b06e-85511650e7b3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ffa0db38-1f55-469c-ac69-d539052bd38b"
        },
        "item": {
          "id": "f1b95899-d2ed-4fbf-9662-9ea1f4437ff9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3f2f66c0-4d8a-4023-8c2c-3b73c066e67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d97060f-8a75-4bc9-8312-5eb886be431b",
        "cursor": {
          "ref": "716e7564-d9d7-445c-9c05-17f06f7f69d4",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "71a823ef-2a97-4495-8c8a-0d0a7c70cf60"
        },
        "item": {
          "id": "6d97060f-8a75-4bc9-8312-5eb886be431b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dbd53f70-7b05-44a3-9f6f-61554d48e1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327728e-b1bd-40b6-bf49-31b1585aed32",
        "cursor": {
          "ref": "58696b21-8590-43a5-b8c6-363f33c95787",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "32bfed01-ab4c-4282-a8e3-7213325403c4"
        },
        "item": {
          "id": "5327728e-b1bd-40b6-bf49-31b1585aed32",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "90ef9af3-8469-4b18-8867-bec8889484cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443ff760-dca7-4e09-9e14-5353ae3265b3",
        "cursor": {
          "ref": "a390851b-75c6-4bce-8e19-6a88f404578f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "13c926ba-2cd9-4cec-ad3e-08d5210dcc73"
        },
        "item": {
          "id": "443ff760-dca7-4e09-9e14-5353ae3265b3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6d432652-32a2-420c-8693-b98f1b83d620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542834ea-8ec5-4fee-8003-e68d67b8e06e",
        "cursor": {
          "ref": "86610b9d-d954-4b89-a339-bc1324b111fb",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a4249dbc-58de-4a36-8777-234022d5e64a"
        },
        "item": {
          "id": "542834ea-8ec5-4fee-8003-e68d67b8e06e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cfafd7df-4dc3-43c0-ae18-03bcc047e14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3286cd2f-a647-4701-8266-65246592b256",
        "cursor": {
          "ref": "0b7f589a-9973-4384-8217-6c4f23a968ac",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f363aa2a-e111-480f-83d6-54059664a2ab"
        },
        "item": {
          "id": "3286cd2f-a647-4701-8266-65246592b256",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "57ca71e8-8b14-4b9f-b09c-22b52954ec31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1096c129-e357-4219-8179-30fddad4b2b4",
        "cursor": {
          "ref": "6fc4f40b-8500-4037-a1f0-c8e3343c92aa",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2e43dad9-223f-4e5d-ac00-ebbede9f22a8"
        },
        "item": {
          "id": "1096c129-e357-4219-8179-30fddad4b2b4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "30fa662e-c6b5-49cf-8ad7-2e32f018a388",
          "status": "OK",
          "code": 200,
          "responseTime": 427,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0c83e-6478-46fb-9dd3-3eeca0cc523a",
        "cursor": {
          "ref": "7585aec5-4e80-4fc0-88c7-93e2788d3b32",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ae39e09a-b3b1-457f-a6a4-749302f0a740"
        },
        "item": {
          "id": "b4f0c83e-6478-46fb-9dd3-3eeca0cc523a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2083928d-ae60-432a-9ebc-58b43dee4287",
          "status": "OK",
          "code": 200,
          "responseTime": 1600,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdf2b65-a276-4f7f-a846-c3754122fc17",
        "cursor": {
          "ref": "29937ee0-307b-4c4d-8e7a-72656dc4821c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e7e272bd-55fa-403a-ada1-a52840a32fe0"
        },
        "item": {
          "id": "9cdf2b65-a276-4f7f-a846-c3754122fc17",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bef71a00-c618-48b6-a6e5-01fe4ef70fc7",
          "status": "OK",
          "code": 200,
          "responseTime": 1717,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba490bf-c8c6-441f-8a9f-9aca91789e8f",
        "cursor": {
          "ref": "f63dbf8a-668e-463c-b8a5-1aa69b209a5c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "480bff30-1da9-42fa-a3dc-91159e333973"
        },
        "item": {
          "id": "0ba490bf-c8c6-441f-8a9f-9aca91789e8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c889e995-aaa3-49f1-bbab-22eaf6ecb34b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba490bf-c8c6-441f-8a9f-9aca91789e8f",
        "cursor": {
          "ref": "f63dbf8a-668e-463c-b8a5-1aa69b209a5c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "480bff30-1da9-42fa-a3dc-91159e333973"
        },
        "item": {
          "id": "0ba490bf-c8c6-441f-8a9f-9aca91789e8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c889e995-aaa3-49f1-bbab-22eaf6ecb34b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351e3ef0-b71c-4f83-b2da-a6214820ac64",
        "cursor": {
          "ref": "88b6040b-35b8-493e-b1ec-109d90a07179",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "01a5d2db-a9be-4186-a3a6-d63fbd7c1e2e"
        },
        "item": {
          "id": "351e3ef0-b71c-4f83-b2da-a6214820ac64",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "45c38787-46ad-4b47-ab1a-ff04563157ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d667ac-e83c-4d2f-be53-10fd96a96fb7",
        "cursor": {
          "ref": "3f0cae76-8e2b-4f35-bdde-2c8892fe54e9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9505fd13-9e9f-483b-b1d0-068f968e5150"
        },
        "item": {
          "id": "d2d667ac-e83c-4d2f-be53-10fd96a96fb7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e8170981-a12d-4915-ab1a-f4ed4e7de7f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}