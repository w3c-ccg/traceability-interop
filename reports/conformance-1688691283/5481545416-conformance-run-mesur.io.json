{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d7181cdd-00e9-405e-a1ea-6eb16ce50c29",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f193bc5-ce5a-4e01-9872-b8cde7a9861c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d027cb5-622b-47ae-b8d5-525e006cb875",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34315ec7-3234-42e9-88f1-60bcedd0a539"
                }
              }
            ]
          },
          {
            "id": "eaa1a803-d9fa-443a-bc46-a204cb17655e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aab75758-f92c-4aec-beec-04326cd71c3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "24636d33-f49b-46b9-a8ca-6078d5d3ab59"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8703b413-5918-41c0-83cc-d18799e5afc3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4dbc1532-6ac7-4ec6-bf31-5a0b53ed5565",
            "name": "Positive Testing",
            "item": [
              {
                "id": "872427fe-1c72-4879-8c62-540c367658fe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "773acc0e-97fa-4ad0-af72-19b25bab7e24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0c1f329-2039-49b3-b698-a7dc5acf5ca2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a31261e4-3ed0-423b-a0b6-0c57573ef209",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ec832b5-e077-47fd-b464-59253bb14d6e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c39af347-b215-49a8-a453-d04d29899f6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24d1e1a6-3500-4b33-ba0c-77596c10f73c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "196f6cc4-98a6-4b76-9d5e-1ab6abfd98ce",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "08e79e58-106d-4009-83c6-e6a79389ae90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58fbade4-1e5b-4e8f-a9fd-4e46958f9b2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "025fe716-9195-4a84-9dc6-ebc6cd4adeac"
            }
          }
        ]
      },
      {
        "id": "e47632a3-0482-4530-8194-96b605bd9405",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a9c2dfb-f31a-4e75-9fa5-1b7c313043f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c18f5716-f8e4-44cb-b8b9-7c2c4bd6ecaf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82b7f6d3-083e-4084-bea3-fe95198d793e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e6148c-2f37-40f1-841b-4717a7e73e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19973a3a-94f6-4e55-9f0f-4ecfadaa4c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826e2729-fdf2-4983-8292-d361003ebd3a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7472382-7519-4e87-b98f-8251428e361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10f5d4af-3d51-461c-b852-6f00fb4427aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b331081-fb3e-4a22-95dc-e20be4aca066",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3cf03a-2478-45c9-8d0b-48e3520192be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53d215bf-3f7e-4084-9bae-12dca068ccb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1ff88c6-e0d3-443d-86f8-c17eacae6567",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a60d87d7-8d58-44ac-b25f-717e2db31fbf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86f2ff7-98a3-4e13-93d1-81efa30d2949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e5a9d0b-59e9-44db-b967-1898c3f08937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb7e377-242f-4be5-a8c9-9584f8a0b824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab255f6f-8bba-4b33-a114-a642c2bdd91b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41ca5379-b5b2-4a59-9ff9-7c28f53d0c6b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66a76ee3-e04b-4d4b-b7aa-0c3081bfe5aa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0118e541-f682-47fa-85eb-c6859b71178f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4f4d1824-f787-447c-b253-698da0de2fc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7ac9468-56f0-4723-a16b-924fdd97fa3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "699918ff-f775-47bf-9f55-5249b47baef5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da5ead73-716d-4f46-83f5-4585485c2722",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a1c97f5-ae65-4e4d-8a17-94899a185020"
            }
          }
        ]
      },
      {
        "id": "06c66919-ed8a-4628-8c7d-806404a68c04",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7153d844-d13a-4a49-97d0-0d341e3a376e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e734093-2a9c-4140-85f4-a73b3da1e065",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "70df8ee2-3895-4baf-981f-eb8491ed9855",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a44285-79eb-4faf-b60e-2fe100d868e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c60bc8-4420-4e08-a0f5-04b0ef8106c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73abc92-9842-4198-a80c-ea7a54956655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523c29d1-f70b-4bab-9c32-aa8acc9938fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b461f3e9-eccc-445f-ac89-5fd2fde768c9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d35ace3-926d-406a-8491-bbea9feb2e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7e5770-9f98-4dce-99ab-1a6364880a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad726ac-bbda-4ebc-a8f5-b90be861d607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a483dfe7-a1a9-481a-9928-7c8c20dc6920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca4312-0705-4e15-b8de-6956f6b2957a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90152920-0f3a-4a23-86ae-fa27d6061923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb95c0fc-2868-4c8c-8696-7195fbdc06e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fb4149-0ac8-4d57-a5de-e588245fbd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9d22052-af6d-498d-90b7-4e949f9ef9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c4c9c5-1d8a-4c7f-b7eb-3696ae05ea42",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb0da9-bcd0-4c83-8616-7f3893a3ce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a689c8c4-92a6-480d-945e-e4f7e1212d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607faacb-1809-4ad5-b076-578abf1baa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b885422-b7c0-407a-be4d-df49a5c69af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939f1239-4736-466e-8c51-05edbaffcf49",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aebd83-1a7e-4979-b0b9-ac7287e31e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81353b17-ac1d-410d-bd82-f470a7fdaa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d40351-ccca-4106-9720-38283b7630fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93fbf781-d0ee-4ff5-894e-b10a654795be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e1d8f-93f3-4684-9580-eac3ef900e16",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99694125-8fa0-43a7-978c-6aa62470a62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b37d443-9876-4a00-b196-5b54cae40a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7e7d5a-71b9-42cf-b9a4-57ab2d99229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de2cd32d-0ff0-4eef-b22e-99808e525912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a038a8-a1d2-4fe8-8608-45842c4273c5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637dd599-4d08-4705-a9b3-53747cc799a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2723e0-75b4-4d11-8378-c06734ad9d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05439565-b926-4ced-b7ac-d1d5ea2c9148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dedaddac-26a1-46ff-9cca-8a1145466b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5671ea9e-9471-4e31-bed6-d8318a77ceec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36783e0-1d06-44cf-81fd-2e40a4e45683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f1788b-bf21-44c5-92c8-1c5365a1c282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72e0984-0313-4b29-8a05-a3137ac01234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1907eff-73d8-417f-a9b2-54a033b0648c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8a870e-aa82-4166-8ffa-b94301a6ab30",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b70b79-bce3-4933-a3c8-f3e0a3ab8e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678ce907-eece-49c1-8629-07493783e96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb55fa5-13af-4cd0-a3af-a1b3d7bf4fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d76414b-2d99-4c38-95bd-aa9f90f29c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591e8444-2770-4329-8f82-5e3d62266fd6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65982386-44d8-4fae-ab57-706b3481d0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627dd8f7-b113-4251-aaaa-eb19abb7ce52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541e7b20-662a-4e4b-9ba8-e4c891145d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48ec8c3a-e5dd-4c11-8c37-375a71da26e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aecc1a-c599-4c8a-9982-6f20bbae6d02",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99764d6a-dc0e-4881-a539-768a5a274e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01a0aeb-51ba-49ee-a739-df70f9a84bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d6bc4-99f9-4d4e-b468-1b0ff99bcf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4276dddf-7252-40b9-aaee-4ffcb7cc34fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfe434c-2991-4f80-9aa8-3ca073900bc6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cce3d3-31b4-46fd-bbd0-eaf48f8f92c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc5f4b6-a8a9-4d15-a0c7-cacc749c8008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96242ba9-01c1-406b-bb27-089c134b3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1d5546d-1ac6-49fd-9b66-26f7c64940f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d0122a-dde7-455d-bd79-3886d30c0837",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4480f12-34f2-4378-839b-2efee80a9088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9f8b46-abc4-4dc4-b7ee-2d2a13f8fa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6189f12c-cf22-43e4-be55-b1081ba9249d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b543adfb-8262-406d-9c8f-9aed657cd530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6de0dd-7301-4673-97d1-17b06ea3578e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef51eda-bc2c-41bb-91e2-a7164fcf1b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe65909-46ee-4751-a64f-00855c2e1c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39345a0-489b-4d32-bb2b-4e3bd8a1467e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "869a9e1d-ae82-40f4-ad8e-f11ce3fc7852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da0f258-752b-447c-8d51-0245209c5aeb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af1cece-4e28-49bc-b8ca-5fac77896dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e577f7b0-6174-4786-bb40-a8dd8bc55628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209f112-b955-4880-828a-0ba90a78d3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "549e63ab-3984-4ef4-a29a-061a90cb112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b447645-a69c-417d-bdc0-26ca1cc72da2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60f970a-a60e-44e6-8a89-6918163d02c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913b496a-01e9-45c1-a402-e63139681429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4a90b4-b527-48e3-b8fc-225600fb6c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cc0f13b-7c51-4fa4-a16a-a0536ba36606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439e01b8-a4cd-469a-9526-81da680005bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d65b9ad-92b2-4e36-9cbc-e9dbb6ef817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb032cc-d6f0-44c5-bdf4-1078e28e611a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a04714-c6f7-4f83-b7f1-3d0068958a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e606a827-150e-4417-af3d-e132fe1ad1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75146122-3c27-4429-8af9-4aa56595e00e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6214c8-4312-4f2a-b5a7-9a549231b809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334b642b-b09d-45bf-a6bc-058eaf6bfc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd848a44-29ab-4192-b807-e76bf16fab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5568c20-918b-4f7c-8c32-4b5bece3d9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a31ecde-87bd-42a1-8b03-d90c52cc8c87",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae716d19-9ab9-45ae-a9dd-c19152a119ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c7e174-3dad-4ffa-91f8-ac7757a539f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f860a9c-0653-4ca3-968e-e2d4aa2348b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a65d7596-6979-49d6-8698-7be86a3ac353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae6249-936f-4129-8fb3-05e6d01c50e1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6332358d-d7b3-42b2-8e80-c46bfc41c382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa97fbe5-d7f6-4f7f-ab74-283385f5da1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3548a515-684a-49f5-9665-60a5a4b9c2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f12a79-93c9-43f7-bf2e-5b6992765c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4add47-b700-4abd-b304-957b642aa4c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afc9d61-4ed8-45d8-86f2-b5097971ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4feb83-0ccd-4cd9-aaad-50e71ff0085b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450869b6-496c-482f-954f-3a4e47285f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bf3043-07a3-434f-a5c1-3298780fe44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113bb775-9460-4b7c-8c73-65e63e1e0fda",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e864b-3f75-48d7-8398-211febc0dc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a91e7f-741f-4998-8ad0-393c0db566f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0399fd1a-3e6f-4c44-9e31-a1320c7dbeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f74db6a6-fdff-4bfb-9745-09a7fc756019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9cf1b0-b052-4c4b-bef3-400231d72bbb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f600754e-ee03-42cb-8384-f0058d1c271b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a557c3f1-3186-4b7e-b463-5af2f76e2b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebb5884-15b2-4af3-8b75-183a2a3b7cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfb0b45-4f75-4b5f-bace-c198ca11af05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4425830-5103-4478-99d4-9e27bcae664d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160589dd-747d-4ce1-b840-0d3b2c730add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b8b1e1-cb34-4a81-aa2e-6cd1b894e667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b65d1c-e9e2-4148-b89f-e240c9e3ac04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4713fb9b-660b-40bf-b09f-cbb5e0e4340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80167d30-f294-4a67-8c8b-6345b189406f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061aff15-a8b0-4605-a836-83713335fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5212e78-69e7-4066-958f-a37602b7721e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedc6235-f82a-47af-9392-c89751c6fc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53712dab-a6b4-4e71-8d4b-01fd4820c942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e586441b-3ec7-44fb-ac03-f709ed01c50e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b35504-ff5e-4f02-8ec7-edb0d02c0637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0ba5e7-43b5-404a-a5ba-ef7059c2135f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbf22fc-b830-49f7-b5a1-3e7125f56cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e861f55-3b9e-4244-b0f7-7e72a4f82b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce690089-8b75-448c-946e-5eaac30f2a71",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe29a39-0223-4977-9e90-1e8963c3ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8119fc-e66a-49b1-b0ea-a8262ec23575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ef3a05-527c-45d5-a9c8-d59e60416c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e510bf5b-ee9c-48e9-ad23-c1baedb259b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1c30a1-b57c-4994-bac9-1613ba846d9e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380de525-e0c8-4b47-938a-5bb40b47ea7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80df1b9e-151d-4fda-bb39-c82ceb6377f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c51d902-3f90-414c-9098-9b168d9f95f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b01e59-8644-4be6-a17b-0804a40e1304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec86eea-cc89-45f2-bdf3-3d0ed517af92",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da4ddb4-b4cd-4d52-af4f-ce4b1521a443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f35a3a2-3d93-4d06-bd6c-7ab861d0e18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e837c814-d891-4a0f-981d-2b11fd5d6b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdce8ee-98b0-4711-a74c-3ec9fdc4167c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce22cdc9-14ea-4788-ade8-fb4d44627d62",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23515003-c8a3-492a-a06f-b4661582b9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e37a1aa-92f4-4d79-b1fa-10a72ebcb16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a60b48-912c-45da-b819-0f4b3b552d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8059f3ba-bc30-4f73-aeda-1e4f7820b927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad5020a-0109-4f12-98ce-6298373a601f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87076d6e-8817-417c-b2cd-077807ce6646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23a6ea6-6018-444d-a3d4-a085fd1be7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffd10b0-e7e4-4c11-9296-fac4bdfac5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3e1c89-8890-4dfe-bd1c-762f22ffece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470eb2e7-13ab-4f0d-9683-f81d3fef40eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c022ee23-a92d-4185-ac43-8d07df7ca034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3204720-d4b7-43a5-a895-67e39c904266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1193478c-6a17-464a-a3e4-e14cca5922c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73c80f7-0823-425f-97cf-1826e4cb7969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a5bc87-6791-4933-8ab5-e27451fcba84",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e34436-100b-4459-b72c-0cc08f0ffcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261aa531-aea0-4668-8323-2f11321454a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97996c7-9f2e-4ea2-914c-cf5f650eeb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63939e17-ee05-4013-a533-410727015bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7fb38e-fdf2-4456-9cbb-d308b087e328",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1837a69-35a2-4424-87e7-bc00b0aee423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa698a6d-6954-46b1-bda4-9daf8da0b21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64d04ae-8f21-426d-bf1a-c7bdbf6420e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66551944-86ff-46b8-9f94-9d6afa25ebea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5235a9d-00f6-4f95-a5b0-104fda8ea67b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b019ea7-3880-4060-93e7-fc573d9db1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c29eb06-1ab8-481e-9ff9-04a400bb8d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a326ea61-30a2-4c9c-9bc3-5daabb344905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e854729e-57ec-48d8-8006-57c38d94bd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dffa2a9-329a-4a2f-b7e1-462f1b2aed4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a66baa-466b-42d9-ac57-ee1bbfd4d366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b002e71-09f9-4cf5-91c6-5a9ed06e5536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0755ced-2d16-487b-8a49-009a4daff33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9253ba5f-9354-4346-8036-43cc43e43977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a39dd8-6403-467c-85b4-e57253c2e38a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dac585-2ba5-45de-8bfd-52c76fa008cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e3af7a-ce6d-441d-9fa3-4af264c7c22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940f897c-ebd4-49e5-b13f-0f3c937e5111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b28cfcc2-c452-4f5c-847b-c3012706b2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd57e8a-c1ce-4030-8a4d-6ce06ec0e4cc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83227b9c-e271-4cb5-8cba-f2c6c9cf6dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b25ac56-61c1-4075-a3d1-03a2720a8142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019942ce-134a-496b-9491-43cfdc7cd18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42f8c1f9-86ab-4ce5-80ea-f1fc78dfe9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c82acbc-4815-42bf-83e4-249679181ff7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd8d74a-dc76-4f7c-b6b8-d6821a2d233b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c324f6-a5d8-4fb2-b1b0-d44df4fc7752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eff77a-7853-49bc-9258-59243339a885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2316a190-b70f-4a22-9c8e-57667b09c5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecedca1-31fb-4d21-925e-8d112946d288",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2453fa-3d8a-4103-8dad-af686a79cca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fcf93d-ce51-42d4-b1dc-00a920e30431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0f7443-86fe-492b-a97d-143afc87c727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ba8461-8131-44ad-96c2-d0b748b406bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc02e99a-1999-4511-b908-41ca6dcd7db0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdf8a75-cefb-4fb3-bd3d-b87eb975a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd6f9b8-078c-48d5-a8b2-58b2874c063c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbe83b1-8cc8-4bee-b432-8e51771442cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04524a28-ce12-4363-b478-8e0dbb52bba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ea1f01-2cda-4b91-ad80-c3bedb631bba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06c4d52-88e2-48e0-b717-fec3bd7d3dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a37ffe-408f-4db2-8111-083183be4a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ab6f39-09c9-4f32-b920-8f3d4e01d3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a824d6-01ad-438d-8c9d-1f0229fab7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df656571-c03f-498d-9e82-45a7f3ffd68e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0b319b-968f-4868-bf2f-a425e8cdc635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf4f781-c04b-40ba-a8af-c1312bf6e8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37407120-6332-40e9-a366-76db59bc183b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78fa5f81-16ee-40a2-8042-6e7eba21186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18988599-f638-48ba-927a-7442db6ec67f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227223be-2ab0-4aa0-b8e3-53a52b6c2a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d46e935-e8b1-40f1-b33b-ebd882ed525f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e63bac8-58bd-4058-a514-c5c939faad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bef95fca-7d61-4938-a808-b7d5cf936e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db184dd-eb97-4196-9a61-d94d12b87e8c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289d83d3-04bd-4cbd-ac03-f9956a8f8427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f618fe79-d077-43ad-9bdd-ca0b216743a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d530dd-b3b8-486b-8a8c-e92656cbaf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89f6bf3-9edd-4d07-b13e-d035d8a8db4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0572fca-9234-453e-b206-2e74ac5b52cf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6bca20-0496-49da-8798-2edb704e0c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b56264-37f1-4713-a6c7-ca9712701f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487b06be-b503-4590-93b8-a59af89286d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece94f3b-f0c7-4089-bea7-aece787971f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867b7d69-23f0-45a8-9179-c1a640eb9784",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872541c1-a1ee-465c-84c6-b2d1738a48b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7f2364-6c2b-4421-a044-911e86f9d999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1774c29-cd90-41d5-9218-99b0b4b7555d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7631d099-5aa5-4791-98fe-760be58c97f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad1e475-1ecb-4606-a933-afae3ad1d7f8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed66db81-5279-4968-aae7-07362aad02ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ca2551-d788-425f-b3ff-845b58aa1864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807a9a65-cadd-45c2-a527-5a4610ee6ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb457a24-72fd-49b1-8082-4f04061a5297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bfabfe-353e-45f2-868b-01af35566eb8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f8332a-fb5e-4273-9574-7fef7f7e0c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31172ad9-168b-47c6-ab39-b33aec234ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624d6c2e-c795-41df-ac08-3be4ba1fab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0d917b-809e-418f-8fad-67f7fdb85a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc6f57f-7a83-4c14-a734-4af0d052dd15",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d512c082-8155-4d62-904d-0bd32acf950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73675e5d-fa37-4287-83b9-04f7dc39d2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a1caa2-8c7e-4688-b654-5c2c2f0c16df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b786701-db74-49d8-83b6-eb1a449f8006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cb87eb-b5f2-4c67-b07a-e26eb0290aaf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255080bb-a1ab-4198-a5e7-c721efddcaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22bfaab-c03b-4f10-9937-99a44f52a007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38007e4c-2972-4e90-a34b-54856500b92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc545f9-f236-48b9-9920-055b4dce7448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c08d895-ccf3-4915-b038-e47cb5e4b346",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe11d66-87ee-438f-8c11-5b9e4cff8141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d830915-9d78-4ec7-8bcd-9508fcfd3ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0f61b2-2cb1-4793-af89-e409f576c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1566022-0693-453d-acc5-9958eb211d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3bdee7-ce52-4912-893d-501844a9156a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8e173-f937-4620-b8d1-7f7398bb41a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36af0ced-9f81-43ae-a10f-c08c734669b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5016221-28d5-4f32-9885-565528cdab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56d9ffa-0445-445e-8cf1-b005e1e0a45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae593e2-7bff-47d6-9289-67cf4f8a27af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b242a25a-8cfe-4a28-857e-170efe7443de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9705dd33-3a60-4d38-82de-63b00630b419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a683170-e381-4da4-a0f2-a07f92b7476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "388e65f1-4d95-45a5-b6a6-0f3fb269b987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed76c07-9c85-4515-8774-b01fa05b22aa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cacf79-7581-4ffb-afae-2a5a5a2f054f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bb36e9-027a-4f58-ad13-4bc111bcdbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c4d2b5-876b-4413-8618-f1ddf258a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "726b799a-b285-403a-945c-5d0667df2ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07824137-7962-41b9-8ec2-72ec97cc47da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b656be5a-2c64-4f8a-88cf-58bd5b6cc662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9ef4b8-f038-4a4b-8968-0756bb07ce77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda13e1e-40c5-4255-875b-5603757445f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dce6253f-6b73-4351-ab7c-831315ea3b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09836e39-465a-4246-8e6d-43482c27620d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e8764-e654-4c88-b051-507ebca1f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cf2cbe-faa5-429b-ad2a-5b359491ad34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682c7b52-c277-43cf-b7f3-4d3fd745c60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39abcc71-5414-45aa-8a4f-3497f401a30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d3965d-9baa-429c-b3c6-21d75339625b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa1cf4-fd7a-4603-b760-9d4d3cd07355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b68e03-2b1e-4fc4-89b9-592811925400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6db1ca2-da26-467b-bc25-7e90b346823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2afef1ba-7f4e-4047-980c-0b034e3a7e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924f799e-da81-40b1-afa6-92aa6da24e57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b928222-884f-4b1c-9753-cccec68ea6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4ef3c1-eb40-41d6-b986-4f0552d46751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42f2cd7-ca5e-487e-88d8-70ce837cc92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e34c11-19d2-4844-ba17-10ba9523f0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e839eb25-5c56-4832-b66d-e42c6f9f57da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b8f4b7-24fa-4862-a4e0-530a824aca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4130a7d2-b89a-4ef6-8b15-a4a0fff2cf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc2617-211f-414e-bb9b-63f183b6e25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79312016-64ad-4481-8c14-487c0e864dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5297a531-62d5-465d-85b2-06af85323595",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fd7a56-76d5-4c8f-b3bb-b4e105866ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b35b4a-c9fd-467d-a176-8ed9f2662d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740492aa-6622-4367-83e8-04798009fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "06854d15-0983-4fc8-92da-6ff1752d5ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27272cd6-5694-4f6b-b363-398db4268be8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae890bf-cc54-443c-b102-695d6a57c85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad0baba-a740-4c58-8892-d2a73128320c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72df224-2faa-4e5a-af23-7bc90fbfe661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6972b8d4-22f1-4523-91f6-94d7f5255f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1dbf67-26cf-48a8-a51c-a7ae79ca4438",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1a2ea2-2da7-4848-a4d7-ee54ed759ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf32d0-8d6c-4735-93bd-54e3fdd00503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fade3ea-7692-4e14-9529-7a7c00500b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49267a05-1cd8-4917-b6db-793f3d316d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870f2d90-75fc-401f-a04a-34ae12c65c3a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a178840-e21f-4924-91e8-71559b426a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342ce80f-926a-4785-ab20-68124b97e44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f531fcd9-209c-49ee-bc8e-99452f4e42cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "088c9a15-8872-4fe5-9aad-f875204c48da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f70a099-28fd-4f3e-8531-d1bb2cae32a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6fcfbb-5b94-42dd-8917-11299f3c7c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20a8a0e-0328-4231-a238-8a364bc01ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af6254a-bd3e-45ec-813e-21beeb268edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae167d7b-7754-4b7f-87a3-3976e8098646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7467a30-b164-42ac-b5b6-334d5a706113",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b1bc85-991b-4f46-91e2-925795f73f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9b32a1-7730-42d6-8fa7-de950c2afeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248bc2d5-ad69-4b80-b014-379534cc908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a70e47f-80bc-4648-84a6-7b54f094a27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcc7297-1910-40a8-8551-cf43da6f19ce",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bed54ad-46b7-4c25-b2f2-44c5b11ee5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18162e6-5891-4f58-8705-2f412de04a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5415d0-debe-45d8-85ea-15b1c0b436f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "319ab10d-54c6-4081-be26-7932915af6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa5d982-2248-462a-ba6a-1dd14175d891",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba54fa3-8dc0-4be1-bae0-bd913bd946d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a82708e-01bc-44d4-9366-4cd3617d5fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0169f564-a431-4760-aa90-1df827e7cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "735632b9-4c32-4d54-83c4-fc4d12fbebc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1be657-5db3-4b38-940a-3f443a139cd1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9cd0ab-5040-4454-8736-fe578f7ecafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3c3ee9-2ee0-4ff4-866f-a03a11a3bd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa63f4d-7ec8-40ec-b23b-8efefbd43a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "496ad77d-6278-4e09-9eef-ada9eb6c4d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6aa5c5-0e22-4d7f-b47f-5ec0ed6d0d9f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04ed1ca-7a17-4315-b039-f0fe8ac95ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96781aa8-4903-408b-9b1b-24216f690725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b43a837-74b1-4bcb-bce5-18b1eb4ef2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "330879da-a7b4-4371-b779-4ba896ce13aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2484a964-63b7-4682-ac65-d13a03587628",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f78b9e-17dc-4344-9aba-e75917bb76c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8136f29-a9a5-4139-a426-05abc5265fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f85ac1-d39e-49aa-9e72-882d3cf8a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3736a26f-8d7b-41f4-9073-88626482319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d5dd78-ca2d-438d-a8b7-2ba602980306",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c76143-ab86-4e71-bede-1ef03032080a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d442f431-35e9-4e93-a9d4-0e47529d2168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1503454-403d-4191-901e-757b84f260bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "852dc17b-d4ae-42d3-b934-53d8c5b99757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec105e75-75eb-4fe0-bb6e-1f097f70fc3e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ce7a29-6be4-4702-8681-b25340143012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7496f7c0-0bdf-4e3e-b232-764f176e632b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d57e7d-b12a-4640-b963-546e121acc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1924c24-faf7-4731-b9a1-75bb3357b0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368d47d2-6798-4d22-a648-a2ae0339b372",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7ec916-e634-4e3b-bd10-ca56185f7d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01f6107-bbd5-492e-b9dc-20cde9cde45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403d78be-5f7b-4d61-ba53-da7cef05d279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ac9b88-87c2-4816-96ec-2eee7cc3fd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1276489a-0168-412e-a1ee-428791f52159",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2573bf81-85e7-4fdf-91af-72878b3f9792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f0ce00-0f8c-44fa-97a1-c1208acf6cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db28cd5-d978-45d4-a1b7-c0e0218a7b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6c3bc0-efd6-4d16-bab5-34e4a5d7a6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90d5dd8-e076-4aaf-a5f5-ebe2f9b65230",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7320cc0-6529-4403-b2e3-408f8de154d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd05444-5e39-44bd-b0b3-56a152dacf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba8702-ccf4-44c8-bc72-6ea4d7a07572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0a247b-9307-4526-a186-f64ab52e53b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c57da6-12bc-4a36-81e6-7dbfcdbea4fc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bcd0cb-d703-4cb9-9ff1-4a35b75b6e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c15bc08-b204-42e2-9829-98bc539a37f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b04623-8e34-4fcb-81cf-14761bf286d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef65260-d88f-44b9-ad7c-4980d427a01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dfa396-7008-47d3-9088-2016abb85708",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5278f11-fe73-495e-b458-3fcb3d17ffd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b3ddab-5847-4926-911a-db11cd5c3245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443892d3-94f2-4866-b1ab-989a307a47ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5c7602-7e6f-4ecb-9013-802545717117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef4bc0f-4606-4071-aaa8-9c639ccb684f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab2f812-6240-4c6e-b03d-7236209ace1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbacf661-8d05-445d-bc18-8de66ccf94e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcca0d1d-16fc-46ca-8c60-a103fe5037ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ecb078-2d11-4625-859a-2ff91d9d1815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca2555b-1408-4912-9345-e92b1ac3774d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cccc92-089c-47cc-ae05-f05c5cce68ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a2a48d-8021-4d3f-9b11-1f0f702fa725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79676c9-702b-44fa-bc97-4d756dd9f0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee40e37-a98b-4991-b8e2-764d7b6504ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256de464-9195-4ef9-8cf2-baf429a9946b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e106cf-58a1-4daf-b421-336ab7edeab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641a7d87-4e08-4176-8f5d-6896a7275ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2a066f-328e-4e12-a87c-0678944a045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb9a4ee-3d94-4330-84bb-020ab75d5398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e6741a-ca15-4aee-8a8e-1d6f799bb4a4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cbcc62-e4c4-49d7-a894-32d7d41d8d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6101c2b9-0942-4bfe-970f-67725cbc4e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70929950-94b3-49a8-b01c-4a0ed299f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ede0f6a-0a99-4851-b61e-891a22da5215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87febfc-f4b3-4d6a-8229-87b63584e905",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade872eb-be87-41e9-8b03-22746577fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b623b0e-1334-4109-8b87-a97bcf238e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa87f9e-1c6e-45de-a775-7ad1faaab95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12efabc6-f073-4764-a41f-6c7cb284b169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89e1c09-05bf-4c00-a545-900e5e68b2e8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d460b9e-4b0f-4510-bf59-f0650d684a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834bcabc-ce74-4c74-ba79-2e0463d6af9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df93c43-9f2c-471e-8977-7a1be0cb0953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34130bc-f9a6-4923-9ab5-f9da388fb05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dc9c49-7103-4f83-aa92-5dd4ed854ea7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d37d472-063b-4a97-a36a-c04c844f6f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c4fda6-6d96-40bb-bb1c-e94f21dd12d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4005af4f-925a-46ff-93b5-0d8be6070ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a26c563f-44c8-495b-bb9f-6fc2691cd589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd7833-3081-443a-b69c-34f68c3ca5d5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802c086b-6307-4d3c-a653-a322e9036bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4670f599-92ca-42b0-b303-48fb5129b28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a44f8c9-0ddc-46d0-b10a-b01f367aac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f0b4dc-bbb8-4a80-843d-3f848558cdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8b6671-37c5-4dca-89ed-c5870e99ab2a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d07b6d-2ccc-4f9b-a78c-57b3f8da40f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ddb8e7-f246-4a88-93d2-76dc1a94f864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08550cb5-c5b9-4e6f-b875-c17d1c9101a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6048d354-49a4-422f-a8c5-d6edde6b45ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c91472-77b6-48f6-812c-2c394d745f8c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af2b5c6-81b0-4ac1-a5e5-caedc1ee98bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1f4f62-de25-464c-8919-0439a40a3cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eea64d-655f-4854-8825-55bab26d27f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "14b167d1-e0a1-46b6-b958-de089a981556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2642bb5-579a-47dc-b134-66d8dd14df44",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d52ae4-9746-489e-b353-7150b487edfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b495d98c-e53c-4136-9e31-44300ed1fc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88774896-ff80-49c0-888f-18df4c698dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c129cd12-54a5-48bb-9de3-911764122d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a602d6f-fb6b-48c3-a0d3-d30e35ca27fb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce87f38-edc5-417d-a847-e1b987ef6e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4755b713-0ffb-4acd-9952-90e74be3ec7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd682a13-5d9b-4e01-9ada-4e05de263096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "293a6701-8de2-4f91-beda-0d79e4c23330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0429f13f-398a-4950-ac6c-7bf5050e0bc2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99f3bce-fed6-40a0-ba4f-c7519116fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7a3c24-44ba-4a2a-91cf-659d7289ed23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dd8f1b-8a8b-4d8b-a1f3-54a3894ee064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0c4604-19d9-415f-ae2b-ee5c7b47b2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dcb31d-4299-4783-b45c-d3d43a2e76ee",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9fa2be-6ec0-4df5-9974-df35f4619004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b5286ba6-d16f-43c2-b543-67b4b911a2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7029f7-3d84-4c2e-8414-cf96949868af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73770c83-b238-459d-8731-93538dcfb663"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bb7f349-ea95-49d2-a4e5-5950196af3f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea2aee3d-66db-4323-89cf-9b182378b773",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a838e0-a378-4115-a8be-bc8486ab23bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "504759d3-d554-4c95-b05c-c8ad132323e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a89ae7-23c5-4fe9-b252-c8f1558e5070",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c774e8d4-2cfc-4d37-ae78-9f45018185b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288b0a77-0b87-479d-b932-e86565213cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b2d5d9-3a65-4c0c-ab16-21668a82ac3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba20f646-87b1-48cf-99bd-cf5e3fbe0606",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb56f3c6-3f6e-4e51-9d4e-83ab7291e15c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e43e853b-397f-4900-86ee-deaf8f4b89dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f64e6791-f4d1-4cc0-9616-998540d6e479"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b05030e6-a83c-41fb-9f55-44334b89a8eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98b10959-0042-4a6c-b2dc-c925dde08613"
                }
              }
            ]
          },
          {
            "id": "69364aab-9763-48cd-90e5-ddebb7390642",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a40e3c51-f433-47da-ae89-d05704d11f60",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11a050ab-5ae6-4d06-8ca3-4767d4dc97f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4baa658a-9941-40fe-9824-5b58b836b605"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f624792-e540-4b9e-ab9c-854cc447ad4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0db8d177-b078-41bc-9d56-6a3ccbaf59fc"
                    }
                  }
                ]
              },
              {
                "id": "d1b325e1-cc4d-496d-839b-ea0462742ee6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12d18324-86a1-4059-a9ef-a5c6bab7c8b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7208cf89-31a5-4c0b-ab33-ca53925e361b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a38e0b9a-e400-4dc1-aba3-716ce042076d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d32d9ae-a1c4-4529-8cd0-49bd5b393806"
                    }
                  }
                ]
              },
              {
                "id": "7da54d7f-f4b3-45bb-a1a1-b76bd68795a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2e9e196-55e0-458c-aa0e-ff7fc68b0b50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcd8d378-4c3d-46e2-90f6-9de7b3919e52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f300dcc2-dec2-4f8e-bd82-a4cdce397dcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6d06f3d-d929-4878-bdbd-e17ac6903991"
                    }
                  }
                ]
              },
              {
                "id": "b9d71bb8-2fd9-4024-910f-a5f0b8feee7e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37e50424-3c8e-4a7c-a51e-6181a9dfeeae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34a0f5ab-dda9-4543-acc7-9338a00d0892"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a89575b-2a78-455d-8448-0c710e8fc289",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bc671ac7-871f-44e3-aaa1-67767f07df95"
                    }
                  }
                ]
              },
              {
                "id": "e5f9750e-4ab6-489e-9ef5-bc38040c2686",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4aaafab-3918-4417-bc14-31a86426e69e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bad4a7a-5584-43ab-99ad-2bcf3e9bad46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01b3d31e-453f-431c-acf2-81bb58421698",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "031a4d56-1694-4ddc-b5f1-d666a37c52aa"
                    }
                  }
                ]
              },
              {
                "id": "13e51ca2-09b8-4bba-982b-59d35e4db945",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c149835-42d6-44cf-a026-de34ee24b240",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2812c876-1455-42c0-925d-f1037c0e679d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "368af9a0-1747-4727-b9bb-f9f714bbbac1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16847585-b1c1-401b-af25-2542baa0346b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4e91b92-0c8d-48de-a0f3-466efbec43d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a94151b-69e1-46f7-a502-081978b37243"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4fee1143-553c-4b68-b057-4cd598c81aca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75f38806-eaf5-4018-868e-dc3e562817a4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85a3a811-952e-4eed-b212-3ef824927cea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "afe5528a-e8fe-453b-83c2-7f6c043f3587"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb48fb55-8fb4-45d2-b373-2d17906a1b4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72a898d7-d1c2-4e01-976e-4754c3d78447"
            }
          }
        ]
      },
      {
        "id": "14edb18a-d74b-4d5b-94b6-85e334a6a732",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "67a636a3-55d8-4340-bf98-9a98b2bce297",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20e59078-1b93-4fdd-aabc-a5d4535c135a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "931c44c0-aab7-4cf4-a582-8727989e16dc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a97dee-64c9-4526-8454-7c19f0df18de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dedfa07-e3ab-45fc-b66d-37b8a1d59074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a2ac94-a0b9-4c83-961d-d3487d444443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "066a6164-d5e3-4fbb-a554-6481915125f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b29632-88a6-4247-aefe-1423098f1123",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128b5372-1493-4da4-aee3-3e67cd123e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab38f967-e16f-4ec7-9376-c63ee8c98a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3430a78b-d66b-4220-a1de-d8263db7d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "428feb6a-5795-499c-a834-def5ead1fa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad063160-da1d-4b87-b153-d35046ee8f72",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19dea15-3180-4a52-94ca-7ae51db24acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423cdd94-5731-4691-b7e8-6257f061b24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945c1524-3cc8-44a8-9077-b44af879e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e9273a-9adc-4742-9559-7ea45a348f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc8d3fc-9fbb-4fc9-b186-be8279b05458",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add0f70f-ff17-4113-b103-4d3094ceb2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a473770-2e23-4ab0-b84a-0861b33b7198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5137e15c-251c-4205-91b1-8fe2fd4e138c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1df1d46-f47e-47ab-af07-b0df31e89ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab92b52-111a-4412-90a1-1e39fed55763",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff7092a-1dbd-4326-a44c-9ae5f192dfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bef4696-e1da-4daa-bdfe-630f68fd5763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb48a9-d08b-4b8c-9d69-7a40b8c23717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34a8a536-b07a-4e01-9a60-3f702516ba21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b983babc-53bf-48b4-ab94-057d31ca43e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baec56e-1476-4a96-ba73-679ff9d31d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1b73d0-171b-4473-b350-1579def35a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d958dcbe-2ff6-4d66-8571-ae887373562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46573150-d703-47a3-ae0b-9bc4c3bfa835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a545f0-3065-487b-bb4c-bf57a5002046",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d917c3e-5e36-4d56-ae81-0842e40ec876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de90dfc-efb0-4a1c-a969-f0eef695ea45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca203fb-8cf6-4743-8a11-5dd52d57d871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb069776-d928-4f31-bf51-261953ae1a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e5e66-a11e-4ee1-8e8b-2ff9b3c75774",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b322be8-dbb4-40f5-8f40-a0f241d6a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ce17c1-fd05-4ad5-b881-b07cb939bdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f19fd4-0152-4b2a-9984-cd3e63fe8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab964d9-853a-477f-999b-2617def1ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45506ac-8ca8-4960-82d4-c852d4a7e5a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2da7e51-4d38-4bb9-ba2f-6eeac122d759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3a4967-e07a-4ee5-8130-62a8a8aa6e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feafd102-9768-497a-96cc-0342cc9d8e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b402133d-6fe4-4692-a216-306787863a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f16abf-87c8-4d69-82d2-406a11610a91",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7bee07-bc4a-4e26-953e-cf473569de4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3a6693-6fad-4509-aecf-0af313c32a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c3e5b3-4474-4a3b-9c45-4d38222637e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab650ee-73f7-4ecd-892b-cdfebe34a748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cd664f-e6c1-49bb-b7d5-dc222bf8fe63",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc39e83d-ee2b-4a66-80b9-17c42ce23225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a88be82-4c2e-4493-894a-3b48c93fbaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177b07d-6365-45d0-871f-08eb5cca9688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "065f68ff-ab44-42fd-9850-80587947c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daaf324-9fdd-4061-80d8-6d1c7909a6bc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656a59df-0524-4164-99d6-384e03e4b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5d9726-133f-4e02-842e-5d39f278629e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a7da87-0764-483f-8d94-e5cffbe5f738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e520c135-0b2a-4246-8741-a36d6bcb7e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fbd2da-feee-4bd7-89e2-c282d5ca8386",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ea4ebb-01bb-44eb-a929-256682d51973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29414d87-3c5b-4c13-93ad-c4b24f0cfa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9a98c2-1ecb-4e8f-b22f-87470f377967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f7e855-8663-43e6-806b-00cc6225bda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af8b22-56dc-4f23-8bdc-b262a452fe40",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b84c21-9d59-40d6-80ad-609d8967f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cdd2c5-9f80-4d42-8d42-0c5a3530ed36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ee1179-9a99-4e90-8489-38c733730f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "598ea548-483f-4215-aa82-c5d93bb139a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7526e8-3fa3-42a6-b108-34e334bf64b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b022b1-aa20-467d-a3e9-b967fe721c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427fc144-809f-46a3-8031-83b3a80f40a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf87d02-06b6-489f-b7c3-a1b042c39090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f98471-6392-4987-85cc-fa19d0da41e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596d3604-6df1-4351-ab8c-2cca1ce35e90",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e547fe-8dcb-4f4e-9b5b-cabb957fe709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75571252-3529-43f3-a3c2-c214e2755c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47abf8a-77cd-4cfc-b0bf-31068c0f3fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e26a60-f6af-4b27-9cc6-e59a4fc2a183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c781f014-25de-42c5-98c4-09b6be1d43a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3067aefb-ebe6-4754-8f42-d7fc66b27f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6910cee0-b275-4205-a470-6c180d4380c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e8bede-ea70-4597-8502-7953478151da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab855c44-0afd-49fb-b280-fc2588c27aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8f32f8-d499-446a-936c-8d13c2e27395",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daf44b6-b7ff-40a4-af87-f173dd34b655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ae64eb-ffef-48c1-b7a7-cb0adc6b490f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233def29-fee5-49ef-a7e5-5bbf504ba9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cddd57e4-4513-4bb7-ad66-7a41374f2795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc28760-3e5b-46a5-8fbb-359f036a99df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76290258-4ba9-441d-940a-d085fd74e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c09536-2ea4-4f13-927b-1b249c08736a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d4ae19-90a9-4adb-83ff-578d79e33d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04573a80-6d4b-4c9d-a914-3a1ae6403106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d01ecc-1bb8-4c22-ad01-fa7d8dab4ffd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e49d44f-836a-4190-b0d8-72453e4e3344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c51568d-0eb0-4883-9cd4-48188ae99382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5847a105-0727-47ce-a398-f0264381d4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "042017da-e26c-4bb2-90bc-0cb4145efcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2240a3-54e1-4e7e-9598-83158866a5b0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2785a1ef-6663-49ff-adb7-e5bc2abc586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8383323d-4e78-4a1a-9619-817f005fd0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f61143d-eaa7-4131-9084-8348f2c27a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb5d187-d139-457f-a016-078fe9b5d956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a571a69-e7ca-44c4-9791-6ebd12abdd69",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f5d109-c6eb-4a01-b2f6-d1402f4b59f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea9a6a8-d5c9-427e-8dbf-ae2001af9d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b353589-fda1-41d5-8185-976f5f659828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cc145b-30d6-4a5b-af18-03de5dc0c5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ae2a36-8f4a-4485-945d-b8354a320a5b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e4205-6b37-4bcf-8049-85844de5b438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4e511a-fc0d-4637-ac26-92413b990055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58ad8c6-b99f-4368-994f-981649e54616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da1014d1-c65a-44fa-8e16-31e6afd6e489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52741045-95fb-4e11-8ea6-8c222c203671",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656f9de3-beda-46c0-9014-cfb2356f7e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd79cc0a-b7bc-414d-8073-5e2ca35134fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c4520c-a847-4796-84a8-f6dc8727c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e902e4-5c77-47c1-b580-759aba1c407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e04669e-2291-49a8-8bf8-022c4a84d9a2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e1b7d8-fb80-4565-bace-0503a4bfb938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9519ad63-b323-4cdf-b51d-78070e455209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2796df4-b685-4808-9e72-7ddffef450c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3137ecb-e10a-4b45-9971-944d94496e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1347a859-c5e1-45b2-882b-5f3503432320",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5758ac9-7f9f-4ddb-bf31-88386d91a4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43de427e-3f72-4cec-be51-69f437a9293e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fa4239-0adc-4103-8e35-c06e1a24ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "215e13d6-7d56-480c-89c6-a1e74042032f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6778a4-286a-4968-b4cb-526cf1674ee3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae4fdac-bcc0-4ff1-80f0-98ba8b17fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ea8f4-2498-42fc-a063-73a0d957f337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74aece6e-bd5a-4181-9f43-5b57cfd989e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea1540-6c46-4182-b4bd-13828c0f8002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15ff758-057e-4196-b434-33af6024c178",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c3ff06-bb9c-479d-a210-f56cb3513ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f107a523-88ed-486e-b932-24d07e84bdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88013800-b83b-48e8-943b-873f4d9dde5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd49412-5fc1-4efd-8c59-4b3caf28c9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bb0c08-4f0a-4e7c-8e87-938f6ba71d9f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708d42cc-2bae-4bfa-aa3a-3dfe0c256806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9305e519-f17d-43dc-beba-a81af9a73dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4685438-5ac5-4c67-834e-05046cc67d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd48673-dbab-4198-86e5-88708e2c7130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f793731-4837-48de-b78e-525422651a9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5048530-99de-4502-96fd-5d9dfa5ad38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d760fb8-8c03-40d9-b789-0505bbf3b2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7613ccef-e212-4ea3-9944-66d644c77890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef1bc42-3a4e-4b8a-8491-54b62b477f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c69ef5-039a-4ec1-8c67-26468e3395da",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f2ce02-1f87-4cd0-a02f-08cfc06cfd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb64fdf1-a530-4292-a447-8291a940cb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c2524a-45e8-42b0-9ab3-42b25879fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1c9173-4fd4-4045-a486-24a1d5a2b53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dbd409-b8d1-43e6-a2ea-15562bc7df9b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e23d7a7-4bcc-44ab-bb74-1e072eceb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec057a6-77a5-4200-8df5-12669b6d4bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99f5e31-b208-43c4-965c-41be54c28060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "198d0976-e8bd-4421-8ac0-7931040642d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d375c0c2-e3f3-4763-b06d-c8c38ffed659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5fb84ea-ef58-427b-ae0b-d2b7899f17eb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca75bb3e-4b19-4d9a-b01d-dfb95f4216ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34298e08-1ef2-49b1-970f-8bba6d2d77fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2f1e7d-8695-41c9-82c6-4c3b403b8b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a95dc2e-5c1e-4739-9150-be34f0275875"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40bbf848-a8a3-4beb-943d-4b0b08eb8bde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4498eb90-1422-4661-a8a4-c148e63b9c50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e343c42-a555-4c98-978a-3c51bec570f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d22774bc-dd41-4487-99b3-9c9f71125d7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77e05bf1-c589-4aaa-8f04-3187fef56935",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd7f96b2-174e-4b7d-85dd-bd8705556f96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b72bada-c8de-4070-abf1-50ec41d25f65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b044a13d-0b76-459a-b2a6-f0447191f5aa"
            }
          }
        ]
      },
      {
        "id": "bcb5882d-22d7-42d9-86bd-7bfd4ae31ddd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "24c98c97-b32d-40e9-948d-a9b48dc7c379",
            "name": "Negative Testing",
            "item": [
              {
                "id": "881469e3-febb-4aa6-be07-9d972da485ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ec355c0-7a44-469e-b724-313ba7f2a438",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901ef2d7-fa38-49d0-8444-0b8afa0a3b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1219c732-50ff-49d3-a9a2-059e0bea6fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa24e1d5-4428-492d-941c-eef2a2e24cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c74e5044-f43c-4d02-b7d5-0b03823a273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345daf2d-33b0-41e6-95a8-244fdb3b9544",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18f676c-2024-4713-b58e-5dfd0881fd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9fa01d-cf8b-4f7a-afea-34e9198bde67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d937af98-d0be-4090-92a5-8c12152506cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb982ce-b970-40f3-aa7f-ea51e9055141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c3bc08-2530-41d2-9dbc-913e5d8dd7bc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7d95f7-06d3-4876-b415-f3d89972e1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba028cd-0cdf-43ef-9258-b75f0c97c122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade19dfa-f767-4eb6-8aec-e95370ad8869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f7acad-ce74-43ae-9cce-5a4cc59c1262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a93a14-8eb0-4940-ae49-d3096017082a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ed3e9d-b33f-4f0e-acc3-3071a4750425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45913fa-1e9c-4d63-b824-c829a122980d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927e6123-8e1d-48fb-8ccd-9b7098c8fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e89f53-d498-4970-b348-e4eaea35afca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c9689b-6663-430e-892b-7e96ad57eaf1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5563a93-3650-4e79-b1fa-4133a629161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17f4ad9-426d-487e-895a-d6b13ae1a5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7264b579-39e3-4612-9a55-5f205b2466d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d31bd2c-89c5-4135-adce-8e3af911c69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8109dcad-3be4-4ac6-b724-9ac9851d8e99",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192478bb-1142-4b55-9888-0491ec4f0947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3a7d16-dcbc-4f38-9252-de3dd3f810f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a852866d-f208-4b73-af11-bfb5ddb9e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5b743d-4580-4884-9869-461c1071a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db58b385-4c5e-4753-b925-3366d2678dfd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ebe8ae-cbfc-40fa-8429-755b6d8b71f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c011d83b-5232-4359-9b9e-ed92205dad9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc95db9-0901-4083-8e4d-662f220460ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e49d025-8e0d-46e3-9b95-af322767d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482c70f0-fe39-46f4-999a-ad90d95993d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eea87bf-7bc4-4beb-85c9-5c822a29a6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600723d2-6cb8-4e91-980d-c80a66f4b88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841ad87c-6f35-4916-983d-f2669e2aaf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "222519be-868e-42d5-bd5e-c15dc16928de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81db5fd-8f82-4ce7-a259-72f4d8bf93fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1078bafa-18c8-448f-8a7f-147eb9676c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb2b921-207b-4464-95c3-b126ceae5a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f186e507-d65a-4ccb-a9bb-fba01efbf3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c34ec9-7997-4133-b3d9-2fe29c7b9887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e701e642-4457-489c-b6d1-5b48d3f7bfc0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d4ddbe-1989-4a22-aa7d-31547bcbb2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff55a28e-9af8-49ee-b4bf-43a4da3af702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410ca8b7-df65-40d1-860f-692e9dc3b6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4231ba-f8f7-49d7-b6cf-2a583bfd45c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b47882-0a82-4742-bc1a-1430ae33c34b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c41c85-2277-4c5a-9a03-8a2b84eed790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0453fe74-7ee0-46e2-8896-073038f73a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95300d1-ad6f-4d09-89c7-1edb8f493135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e2261d74-83cb-467b-8d4e-cb4fdec00f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e491897-197c-47de-9955-fc8bcee9f2e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f962b-e351-402e-8309-e43df2704d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78255c5-822b-49be-9f1b-1fcfe31b5f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0996769e-fcad-4956-a124-fd10f012ecfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15f188e5-e8bc-4a98-8653-113b6bc904c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a7101e-ef2d-4723-9b71-c562f7c396ff",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14554bb-f4db-4d49-873d-555f8be58ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2f7316-b3d8-4c8c-b9fd-757917448e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d8f829-5c83-4e02-8d4c-57833187091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb424d11-bb53-47d6-accf-d26dcf56b4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452e622d-512b-4c47-b3c3-37452cdcda10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bc83f0-40ca-4da9-ac9d-8ddef68e749d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e9067b-44dc-4e14-823e-af877b9f7d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99910a5-b8cc-4164-8f77-5184946b4e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c0ad27-f5de-4abd-8ad0-1356187e7b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e5b419-d554-4b77-848d-99c5c69dfa79",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788b38e3-d78e-445f-8339-ca22bb23410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b444bfe-85a0-4b8d-a418-83765fcb2d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7678538-41c6-4789-a02b-59eb3cfeb74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "12504743-708b-49da-a905-b458438c0dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9538d9-a84d-4812-a7d5-4e82d58e0f01",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39055c82-c9fb-45b2-9cfd-0be64e4a9af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09615288-9475-4c78-8bbb-560ab69a19cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb2c292-7e76-412e-9ef2-39fbdd87a36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66cc3b78-7a16-433b-874c-ce2b12d139af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd5a948-edc7-4c6e-9f8e-661ea810d71b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11e703c-550d-48ff-b501-2363fceb0c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac13b70-26d4-4c10-a5b8-17db53441386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999bca45-2e36-42b1-8258-118db828bb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb19278-e5d0-4332-99aa-7070c8b6758e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2f0729-2f11-4f86-ad39-6ebc3d8661d0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8857d911-a9bb-445b-bf34-91b1de371161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d788a8-8c51-4472-9efc-ce24282043b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd32ad3-3d82-455d-948a-35fe31596d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2982582-f7e6-411c-a790-971a00cabb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ac1cb6-f2d2-4a4e-abfb-f6d505d849ce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0209cd47-4c04-460d-ac44-b326d27f02fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ee5f07-4cf0-431e-9d42-159056584f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac1ca77-7e40-4d9d-9719-102509de33f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f299d8-b90d-43f6-a691-ab0d2d46d2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec279b00-73f6-4ad1-b9a3-9195372a68d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce00c22-21c1-4501-b07a-864370d93123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df08293-1f58-4f87-ac66-0f42098a582f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365f9e58-59d3-41f2-8301-8b98cef4a9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e39491-5030-420a-9f42-657b94ee4d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8ee82d-0f85-432f-b55d-88394ea7a77e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45c07e0-4c40-487e-adf0-40fe497de83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc10cd0-5d87-4c82-9832-ec693e59ecbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad0f870-5b86-4fbc-a497-25e3671f362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24507eab-2eca-4673-a4f5-5bc03f564125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7428130f-08e2-43c7-9675-89ca041a58df",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e5972-6865-4359-bc9c-9e39ead7adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef200bd2-72d6-4920-8d60-dd4423218c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d436f844-73e4-4951-bfde-b71b6d0874d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebc62fa-4ac5-48b9-9021-2da43db04d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0b51fd-7651-4ae1-8df8-36addcfde366",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a04196-f4d2-4401-a6ed-ae39c96de7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1572ad-5ce7-4da4-bd85-ac1eae08a04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad5b276-2b84-4720-99af-3482456fe431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a502de-3ac2-49c8-9103-541da9830a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1295d9-5eb1-4e91-a7c6-8c13999b6189",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5ddd50-883e-4a93-9538-398b69b9827c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a251d1da-9906-44cb-a03a-7f039a0c1f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029213c1-adb7-4021-85f8-ee21955668b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02a7ff3-4204-4976-a0c9-88339c2455f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a390c4-1aca-4f9f-927c-bc0ff725d72a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890fc9bf-5605-4f49-b392-05e947afcbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438276ba-131b-4966-83ef-25ed1308dc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f6d840-4d67-43a3-9991-d43b53b183ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "287301ad-33de-4784-ad7e-b26e23e44402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d7fc71-9d95-42c7-a08e-fc5f0db754c2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f915d3f-dd66-4a93-8ed5-f55792f10efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6ab4c3-8d1f-413e-89f2-ddb8f5bf8bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979aca9a-02bd-4b8f-85be-4e6826d6c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa7eda3-aba5-41ae-b73d-5c2b70cfbe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1489051b-ce4f-4c3f-8659-e52f3ad5fdf6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa6ff6-db6a-4ec8-82c0-782b9c9d3c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63dd0c7-0731-412b-bab0-e0e3355abda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b7069-f338-4f1f-ba8d-d8b536cf2344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b98513-972a-4f48-9534-16a1a261741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2885a036-e24e-4580-b198-aac263926489",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d380cfe0-95c4-4ad6-8d62-70a8c6fc8afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f506975-3d40-4a8d-811e-d7ea1e898811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd05ce0-3599-437b-8574-5ad3b9eaa471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df2d3e20-7ee3-4cca-8000-2d203bdfa3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e620b9e0-8838-4d68-b702-bace451545eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac263e5-e47a-4f25-a9a2-290dbd5963cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8912b07-861f-4be4-b83b-41448930dbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d604c1-5f34-496a-9d71-3fcb2b1ed5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "155e8b7a-9883-4624-97f5-aa4a9bc1bb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fa567d-73c2-4ea8-b196-8f2a19c5c848",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e8555-0a17-4451-85da-162d665aab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbb2bd-575e-48d9-a904-142146f8ed42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d149df-dbca-4599-97d9-63a7af3498b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48894812-1349-4437-ad1b-b1b628d87dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8da97f3-9908-40ef-80b4-1e57e636276a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c177a2-218e-4930-9717-20dfb6dc2285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217872a1-49cf-4729-8e6a-97cc4061f2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c763783-0f98-4b88-8a38-356aef8d8714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d19d990-41cb-4458-b609-04910eba0c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5d4ae4-9a41-4177-8a48-24b06fca4a82",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444cc16f-e3e4-40d6-be02-4f13a9305b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b57cee-fb0c-45d6-a883-f50075ceea09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcfde96-80d0-4fcc-b79e-b6634ae8cc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55eb932-8e51-44d6-a1b5-4405bdfad6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b738006-1cf0-4bff-95ec-9d7daa8be3c8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc4879-bd62-4930-aa70-bbd45667f5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626a4593-68ff-419d-b734-cdfb2c2481ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1870161f-a3e0-42f5-b140-972d1e1671bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7cb67e-9cb5-4dc7-a80e-08ce46cd8f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0092a731-a2c0-4ea7-ae9d-219cd133682d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7800d0c3-f8a3-4964-b318-d1f09dfcbef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07488448-d149-45b0-8cc9-4758e2e421fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b64f09-6f34-445c-939a-e010de695f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db80bbf3-1c6e-403e-a2d3-1a4057c2514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23345c5a-f8df-4923-8e3e-2f26195b9bb8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e13c298-e83e-4212-94fd-1e3ba32d18eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d0024e-b25c-4a06-9d9f-4870c26bef3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07b0a37-f8e1-4b5a-a1f4-200e03a54bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd415fd-0514-4df7-8c30-28bd9ec0d83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00f47ab-50cc-401e-bbac-89f6c7ddf9e1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36edb6dc-5f46-4bdb-8d00-9d5a1d81e845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98fb6a0-2073-4607-a8c3-708d246686e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b1950f-480b-4057-a533-3c7278b6ba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "171c87eb-5851-40ff-b3c6-dbfbe6ed5063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbdeda9-d44d-4813-8e3f-c1974fd83398",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2763f9b-adaf-46a0-8675-62163ee3964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d82ca12-0b9c-4889-a9c4-aed770418de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cd5086-2317-4e47-a607-6551d06b5c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6451db-b5b8-4056-93b7-d9a8e0db7be2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0368e536-662f-451a-a5f3-8b99f2ab513b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46bee339-4255-413c-904b-3ec96e2f56a1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6262821-dc28-42df-9cee-874643e48615",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01a1e57b-f599-4677-a317-6b578f3a443a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07acf0e0-c423-46aa-88c2-5ee2c383058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c257dac-897a-4e25-8e80-17338b1b9019"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d664101b-86da-418a-8ef3-6fcca3ab29ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b590f9ab-c585-423b-b42d-55e81cffe83c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4fb2d29-e58a-48c8-aa4a-a553162c1c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a57375-9450-4a2e-923e-a56116aabb7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7146ced-0ef0-4da0-b504-5f0ca1b10449",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5070716-49aa-4f00-a529-67608b6e6e98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d933b38-1e2a-49ad-8ee6-3772e2048b13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f911718-3e87-43f7-b4aa-2ceb3298eb48"
            }
          }
        ]
      },
      {
        "id": "25b5fd08-5078-4292-8620-a90612439ed6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1bce350b-b017-4e06-bc44-464203da85c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48cbc615-ebc5-41b5-8795-92e6a6c7d695",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85939251-20ab-4930-b37a-ce3c4fa0017b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880ab1e2-58e8-4ea1-b97a-94d83ba7e59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46a59c3-c95d-4cab-8c6c-2ed1ef1bf695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f8e64a-e429-4fab-94e1-14a2def6ac2f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe978c84-34d3-46a8-b7ca-8608a955c9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7608dd1-1d1f-498b-bf62-799ce8173d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ca266-6ebf-4b5b-8cec-dd5b367e6b1d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259acc40-ec2c-432f-a758-3faf0b7e5d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba487e8-2890-4575-95e0-415480622ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8744996e-df00-439f-a5cc-83ca9e826feb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b4c16-ca95-43dc-8829-ce9d636c5358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be6f14c-abcf-4ddd-83cd-0b1a48a08fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd91648-4176-43be-928d-47142a037409",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a431d69-2f3f-4d9f-8672-2d61bfd4e55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7db1e38-5084-4440-a587-f656875dae3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220e7ba0-1e3b-4a31-80c5-881e42d39857",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c6554c-e49a-4bc5-a5fd-62b971834435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec6ea2f-9211-4a82-b518-f473bb7c0e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2d6a02-7056-4920-a93b-07179b59da6f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbe0fe5-5039-4c64-abb6-772aa946559e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae75348-a577-4d44-842e-61df69733aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dae168-dd98-4e7e-baf1-77b723dc91d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6944ff-804b-4fd5-aa8a-ebc27b3042bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3d241a-535b-4cf4-9cd9-b2025c2db5e7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3435487-744b-45da-a311-00925fb43ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a00cf9-d49f-46dc-b0d6-07da3209e04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b88c69f-8691-4d68-a65f-57d5475a3a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1c8afb-6cff-4114-9da2-d00a5d0a08a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75c27ed-94df-4adf-874a-80420d778813",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80b68a6-f4d4-44f9-a1f0-c785b81a4438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49f8700-e8cb-44fc-ac5a-0e85a4fc4cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3782487a-c12f-451e-8ef2-f7ed5000de6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acab945c-67f8-4584-a09c-2b077b178699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258950ca-ed0e-44da-91d9-5d355a9b0e2e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2510dd-4a12-4c03-a5e6-d31276965794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8826ab57-4500-4367-a0ef-3b8cd1cc55da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1c1164-e3c6-47a0-ae2a-94a41fe10257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dc836a-7941-4ea7-899b-23df6c1741c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6efc4ae-4050-41ec-b47b-3b3c5f94f29d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf531dde-7f8f-41df-a08a-9d9d9160b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7126b71a-6404-4243-a431-372de0867485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5b60b2-1c64-44f9-af2f-66e587b9ee22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23c53d4-a324-4a90-8184-a54cba56e76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4fc2db-8cd9-4022-9a48-7dcf2d278337",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e927a14d-5b8b-4ad1-a534-0297f883b017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca29aeb-4340-4d0d-9d0d-30278f97607f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11d2ce7-1a06-4d84-9650-52ff4039c6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f3d6c9-fd57-4367-83eb-677a16b5b895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c42829-a373-4127-81b2-3bfe3abbe357",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519c5a5c-a45d-4256-be3a-80ea3f6536a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619fe62d-51ae-407f-a27a-ba97b87c9aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc6d33c-c588-479e-b167-c277435b1c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1200fe-6409-4d59-a158-b075f3b6f1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a64eec7-998f-4930-a4e3-ffa41ad7fe7a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89961d54-9d47-4de7-bdec-9418a6bfd022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550cf126-c578-4264-aaf7-8a678bc141fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26805514-5f47-4413-bbec-0127064f2d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358825b0-9769-462f-a97e-c8d95824d76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3ce919-5e0d-4c5e-aafa-88e7bcc02b68",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17814754-d3bf-462d-8504-d8dba76af6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335d9329-187c-4398-9924-8cfd16bbd4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f187f7-66b0-40b0-a768-8d59e2131fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8bc9bc-1e85-4e1b-a1b8-c1ccaa56040f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e918cbf8-f764-4d85-bb8d-47634d9b7568",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b71522-1ff8-4852-a0c9-2a2a7069cb0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de988520-8a32-4fe0-a264-1219ab1f12e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb9dc59-a5e2-40af-a90f-f9a74a10c9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15f34d4-29e7-4a10-b327-eec7f1b3b1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c4e34b-c3d8-4510-8a6c-9ac4a3dc3ff7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08578a1-cbb1-410e-b4b8-9fc2fe62edbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddee278-c919-4288-b9bb-40037a978961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7980adb-72f0-44cd-8631-7fb45ac1ca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3564332f-9d58-47af-ae88-a8c59dbbb53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98c8b19-9b18-44d8-8512-eb8f7da927bd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf86f27-cb5f-4130-8cc4-765a71d7aab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a884c7be-0590-44d9-ba8d-e284fe1af5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1578e3af-8168-4f8e-a820-51e5b0400b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46272d27-9caa-40f4-8f99-402162325edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0071cf07-005b-4dc5-98fc-c9e616058a2a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a76357a-4213-4c8f-befd-b5784e428981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528f684d-4ff1-4e12-9ca0-eb54209ef5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbf1bad-9d62-4cca-ad30-721d0648fed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74f779d-1f0b-4fe2-af28-e8bc6487a481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4534fa6-fc99-4eb1-aea1-8228febf6c37",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a175bd7e-5a86-4b8f-92b3-f61448041621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3200047c-e15c-48b4-b43b-053720386da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ca4a9a-fbdf-4d15-bcf7-0ce9183bf387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5895cf2-d8dd-4268-8fbc-4ce5c2e66a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fa0a31-1f8e-400c-b3a6-25a6cb3041a5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e7892f-1b63-4079-b712-afccc9aa843c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4b1259-2efc-411b-923f-55a114fd24a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988d0e2c-647a-4865-ac5a-f1e60939c9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1578bbc-5b10-43be-bca1-6ec3c1031eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940224f-da52-4b85-a868-0bf0bca34d92",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf0e1e4-8980-4955-9034-de60b85d09c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820c828b-6fb4-4df2-b4a4-2c082a6c92bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1667d8f1-b4e9-4e03-9f80-a1a1c1798623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56230afc-f5b8-4bf1-863d-6bfbdf690968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722123bc-a447-44b4-ba69-19a853dbe636",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fe3f92-ee4b-4b88-b43f-eb952a4d6169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119ee10c-e223-4ec5-9351-2a9c45ac8a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eea36d-a386-4671-bfa5-74e585381f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f65342-0207-4499-a30e-d3346aaa0c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcc778f-7cc1-4c6e-8cd5-14ce34f79992",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7cc6a2-6dfc-4e0f-9490-4cbbbe2c0ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2746623-f92a-455a-8ba8-0618407f0037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eed2c81-d471-4178-b52b-8a9a24a03b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65a5f43-39a3-4efb-894a-b8d0a7acecb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb011ddb-cc5f-4e2a-8190-e29970c118e2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd534b7e-0ccc-4edd-a1d2-744f2dfdb73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f927cea6-2ad9-4e0c-b901-c2634f87b7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba20e78-d45b-4793-9a6a-cc15eb3a9899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33be1424-114b-40e0-b16c-41f35e302ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cd2959-bcd5-45e9-bf04-8169267ffb2c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7099c51f-a859-4116-83dd-ee13a6ca608c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b4e2421-7036-42b1-ba58-c73349cc8464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cd739c-61fa-4b55-ad1b-9ec569b50ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3694a2f-75d1-47dd-a06c-32d3ee0ed8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e996163-0a5f-407d-91b2-189589a9f246",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5001b6-8f4e-4414-b660-93839be77c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4221a571-39fc-4373-8c1b-8d5eae1b3c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de08b63-a418-425b-a689-d5f0d4d02a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216931ed-dab6-40a5-aba9-d2df1da93b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d33c5-f3bc-43a0-b912-144a5d41cd55",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f190f3-b32c-4ec7-a635-6116a9d0b3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167441f6-03bd-49af-8139-a2e5dc87c562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a3ab35-52ad-4418-a3fd-6905ef2e04e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb90dcbb-9147-496b-9b48-da508f494e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73391f4d-1e9b-4ebd-b765-bd7f54da0d08",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe34414f-d18c-4e12-a076-93f3d26ee0c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a0f85b1-5589-43df-868b-1561dc7dbb3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b3aceb-148e-43ea-a1f0-7a7d785c9ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d58f42-74a4-472c-9c52-0fde9630ba0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fef5cd-93c2-4d6a-bf56-6e2815ac728f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863d90a-6ede-4339-b992-9556e501fbb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e72c2a-27da-419f-ba93-c009ee24b4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb600d7-c74b-40b2-ad78-709cafbca4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8bad70-01bb-4a82-afaa-6317b9c5fa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e1959f-0bb3-4059-a28a-77e292859ca5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b3b969-c2e1-4843-b129-192bdefcf35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4ce8b5-86c8-49cc-93c4-e48450302de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d347a0-9a3b-4305-962c-b26bae4318e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28552c9f-71f9-4ffa-932e-7e8e3f5df3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a889c85-f504-4742-811d-d3106fe308cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b038baa-7b1a-443c-9352-96d624f72ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9a4f00-16ab-4993-8dd6-032e0bed15ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b67f370-2e74-4959-8990-7f257ccd40e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f6f76b-3c26-496d-a807-1780ecdefb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75579934-f503-42ea-95ef-51efd3fdc4e1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8563a708-982e-4b45-b742-99c1dc536001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4eb87ec-1b14-4f38-a5d2-13019a5ae310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ff19c5-7d28-4c4f-bae3-363bbe620993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d160e49e-0bd9-4753-afc4-18f2d2926bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f16b9de-2a47-48ac-9f5f-aba681729183",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba36260e-8cc5-413b-888c-12fa43104120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0091c1-1efb-4cc9-afde-e1d442b37933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed14ff5-6f17-406e-8254-ad577de740fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd55eb16-a41a-4a7a-9fc5-7e90fcf1f7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b760fba-003d-4d00-acf6-b07a16778257",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9e0647-418f-4278-9543-8b98e493c23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718bd870-7a18-4f3c-8e20-7afb1745a7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c8b7ad-0337-4bee-ac31-08799ed5d2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d32999-27b4-41b3-bfba-47f9f77f4d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f0cc12-442f-466e-8ef0-78fd39c72de8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc52f4c8-ddce-4775-aec1-b11fada08605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b18575d-09cf-4914-97a6-0532f588eee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047d7337-f725-4b06-b5c0-848d01750e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f32bca3-8950-4eeb-a98f-9a488b0f60ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50af9fcd-3217-4d48-834d-1ff111450634",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcabaa35-7ee3-4644-aad5-85eb939ec07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe08cfc-85ef-4803-9f77-847723f68809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4758a6c-3c35-481d-8c75-d797fe3f0434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c7121f-7bb0-4613-ac21-2f9dd5c46021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26de38a4-f286-4173-919f-043a3f61319c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aa129c-5bb7-459f-933e-535ba6dba7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0f2588-3652-45d4-a0c5-81d2c3bb05c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144a48a7-1d56-43d5-889b-ee2d3ace0428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c038abd-2f53-4089-ba15-c0d1cf230805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db40bce-044d-4060-8f55-f4c7fe0c5738",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b44ea8c-5317-42e7-b2df-31f7c994f758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73046b5c-8eab-4b43-a35b-697d40f8e710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce55a63-f2da-4789-a62e-8485e9f3fb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d66ea0-c37f-4fff-8d7b-20adcd3cfa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6857fd8-aca5-4436-811c-156d1f65a283",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30246fe3-a867-4b46-a70b-bb8e8b84e9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd22d6c-da83-498e-b97a-5e419179b27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdabcdb4-520a-4d98-814f-6e225833e3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e7e3b9-d061-42d0-a6a5-189d9c82fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63afa43a-f6ed-4dee-8394-a9431292377e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ac24c3-162b-4092-bd78-4e1d1e08a45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde99d7e-aae3-468b-9276-f525a15c466d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445ef4c7-d8d1-4fe9-8c72-df11d1136821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c6a940-904c-41ad-93b9-38e117b9bb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8e4d6d-0f25-4602-ba88-01000e218f64",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ee68bc-da15-4be4-abab-2299cf25db31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23041bc8-2eb8-409c-bc35-3243683fb6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387184cb-5f47-4782-be3f-b7cbc332bbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9102eaaa-de2b-419c-bdd5-ab02e0c76759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94ab144-3576-4d09-9d0f-192cd9ba33a4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6037d62f-5f40-45c1-aa04-0bc7d9b82267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028b5293-f9a7-4880-b4d9-dde2005459ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cc713b-ce4f-436b-8071-d6b424997f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c7044c-b1cf-412c-9e4a-2fc4da24311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dbf176-d82f-45c9-a874-57ea5700e283",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5424684a-c434-4f20-bbc3-2e7283f4de36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc27d4bb-7eb0-4a0d-9288-bb27f54885f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d67e6c-a62e-4c1d-813f-1a40b62f5100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04cf44f-ab77-446d-b08d-bd0aeea05bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334e7938-83c9-43be-bfb2-484dbcdd9920",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dad9ff-948e-4612-82d1-eac36a4ddf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a48ae6-5e47-4f3f-8ea9-5e451513bc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718f0392-6947-4216-92e6-b12a5e6ebeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374c0ba6-bb8f-4338-aeb7-d36c3525f0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce140821-23cc-4593-b869-cfecbb7d214b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddad558-f235-49c6-9bf2-8fe39cb8738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcebde9-efff-4d5a-8084-0bd20f42544d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb04db3-5e07-491d-8cc4-73fd4be2dee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309e9f11-4deb-455a-9cbd-e367ed729158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae4d9e3-c275-49e2-b237-a8613652df73",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e202bb-02a2-4da8-86a9-c6dd1c1ea8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6a6df3-785a-4f34-8042-285b69b04925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00a4472-7ea9-4e9d-ab66-cdb5f27c2a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec5188b-7fa1-42ee-b052-ab96002d28aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cea9b8b-38c4-4631-a6b8-2f22d33c4610",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c92d2a-e30d-4350-89e3-665530c388bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ed37bd-188a-4d2a-95a4-cca65f28fc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696859a1-0f0b-41b1-8458-75923356fd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efbdb6c-8dda-4859-841b-4233c1388415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfbd7ab-bd59-42cf-8fe7-922e256c97d5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0dfbde-aa3e-4bb9-9670-42db32898e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f41cfdf-3b7a-4ac7-80ff-a816b3dfd266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e5b14-4cff-4c0c-8c7e-9c6d2390e194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638195a4-721a-49cd-ab5a-8f118f304821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096b6d00-258b-4870-a8a3-f78517484b87",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4828d5-a6e1-43e1-becc-ee2d0b7a5203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f56d262-9763-4958-bae6-447fe2e8f98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3021bec6-dffb-4f60-8f34-e040ad32adb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53125981-3fde-4903-b22e-a7c2f359f509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102853d1-efec-4062-8160-1538857b0977",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c7214c-c7ac-43b9-9074-363be27d58d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a132c21e-d633-4d4b-bf56-682fb1027556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a05e41-b84a-42eb-89e7-e996a7f402fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fe3d68-2556-41f8-9d90-9441e198fdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2e8c7f-b60c-4663-9ed4-f6b44964a490",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81a2c0d-034e-4f27-bf70-4b97710bb4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0eeec4-407e-4c97-943c-2be063c61885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e07732-e43f-4e8b-bed8-a9d7f2a08a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d0cab3-d250-4645-b96c-0bd903d4e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a09b74-8bfe-44e2-baa5-05df4ac7283f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57106a2-1ab4-48f4-8dd0-bec7eea126e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aef5e64-cc7c-49da-9116-c0f241cbaec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c63d23-45b1-447a-9518-bf41b9738fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ca0eeb-7239-4714-ab3f-fba4e64eff89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f7e81e-d6f7-45ab-b3c7-14b2428a19e3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16957bf-c5a9-4699-b7ed-d7ccaf40476c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715d0b13-53c1-4aa5-9e67-741239247fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40675700-e173-4f2f-a81b-188376e79f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be8d639-5ed1-427a-9de9-e8dd183455be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144be9a9-c580-4405-adec-4b3ddeec9c9d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa92797-0cc5-4962-a461-25bda13b18c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b9f7a4-d428-49b3-8d27-876e07e7e9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071a1789-fcee-43f8-a317-3cd6b1b62782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9e737b-33c0-4cf7-bc77-2291b7db6190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e45ecd-743d-490f-96ef-fdc9f46b5124",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ce4557-0632-4294-b830-8cbd314cc96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfc1b2a-5f6c-40e3-9c80-42464df15ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f722139d-4071-4d95-8b0f-f09f8592fb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baebde3-f12e-4944-8502-f3514ed2126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef16b4b3-ba19-43cc-a604-a9791b0ef914",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe175fe-8215-440f-a49e-09d6c135adbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b84c0f-32b8-432f-80f8-2fd43f287ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cdb8d2-d5b4-49c2-8eab-3896848ef510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3552182a-187c-4fe7-b607-e325ad8f7b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66280af-6a1a-4256-a296-a8d0dd91bfd2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a827cf6-ae37-452a-9feb-f3196ae415e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9756362e-98c0-4b81-be27-8439afc351c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeb0bae-8f4c-4e7d-8183-8fdf32c90e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a4e22a-b26d-4d25-bc70-bad04a539c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770354cc-29e2-45b3-8fdc-bf35cd1b5865",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9368cd5-ace2-493f-8e43-1918e07f134d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2e2471-54dd-425e-8921-854abee1f65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e60cf3-164f-4231-a8fc-f90f0b083dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e245b7f-4dcf-43ae-9ffa-2a6b4c97b74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c009f1aa-7c85-4bd3-99ca-67b0ded9de17",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c6f995-d731-4f14-902f-76886f5dff22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925cb50e-908c-475d-8c60-013c7ba6bca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aea53e-b30f-43f8-9afe-3c44438d9700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0dafe4-c675-400e-8aec-5a693d07ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337ac60e-d8f8-4c7d-9dba-11a22fc7fbd7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77595345-7d43-4c2c-b570-01a888a3347c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bf63f3-9eba-40db-a1f8-796c0ce91a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b1df7f-cbd8-45a1-bfa9-74fb7d86f5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a31bf77-3140-4992-83c8-6db20c6dc352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0dc1fd-b2b4-47ca-bc6b-c7f8e79facd4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66179dc2-337c-432d-a9c8-07ed5543056e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b34439-7c91-4635-9b60-0bd46bf7a1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26000b7-ab6c-4842-bd32-11e658d3a22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68417c6c-ddff-4bcd-8c7d-c83fcdb119ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c94f571-e694-45fb-9f2b-204af793af6f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a15e23-d865-498a-af6f-d33f9f21acda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a46b8a2-ad04-4c57-8333-f335219c754c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85c251b-4274-45fb-8026-2abb67bf88f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d68985-af20-459e-aa7f-3f20fbb116f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbf8896-9906-43a3-90ec-af17bb409e08",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912edb30-3d09-4d3d-83c6-63b7c66a34b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a429b474-c526-4295-b303-5f5d98654380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f05bf06-cc29-4c38-82d2-c42d758189c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c631da0-6080-4914-ac12-1fa75a68a922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a510e0-28c0-4237-8427-2de3e2f43794",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a7408d-f04e-4d2f-99f2-4236555e085d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66656a5-e9be-4745-9ab9-df02b260d03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea83ebeb-45de-4aa5-9ac2-9778cf0b931b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27da4672-1900-43ac-9590-360c30e2cf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d532627e-83b8-4b65-91ed-bfb658f0e5b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c509bb-ac27-4aef-a632-a6676608b861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebcefdaa-7971-4b10-9dca-4a013eed0a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f41f4b-152b-4fc6-8ab7-a55bc8c664e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798e91bd-0047-4c06-a8ce-4522846c92e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79df196a-0845-459c-969a-dc2898cf1a9c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1032d4ce-4588-4900-a468-af908d0629e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61918c0f-316e-4216-a07b-c388946d8ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cc8e04-4341-4c1f-89e2-d6abb79ae79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf55af6-8ed1-4930-971d-382ef90faaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72dc76e-c764-4efa-b39e-1b5d2bf69971",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10f6091-5cae-4dd1-94a9-dcc494924b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b54efba-b5fb-489a-852e-51f0744f7c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb95c8a-7f5c-43bb-8d81-060bbe67cdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ead3ae7-8a55-455a-8b79-0ec055b27ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053f622a-c666-485b-b5e6-17104e6ff135",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68652117-f245-49b6-9ef1-0eeb2118152b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90c9049-ff91-496f-ad8f-12c26fd4bb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8d5528-d038-4d17-9982-91717bbe126f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e787328a-eb7b-41de-a2f9-a2f021052402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d259ab0b-9e71-4557-94ea-910c3c8e0995",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc49fff5-a11d-4f93-a496-3ceb0d0fc637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb55b953-5bc2-46c5-9ae3-98e3821e14af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3e2839-f92f-469e-8115-dd2771ac6f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f76a18-c8bc-41f5-b685-28f074e8bf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654501e6-61dd-4e4f-bcc5-0f2cb9a9eb89",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cec190-0f88-46a2-b1c5-86a74cbfac43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b68ed61-a98c-4eed-afd3-8a5aeb8932ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fdd39d-2972-40f0-96dd-2007edc3d496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9412caa-1b8e-45bb-b50d-ae7fb3a03274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d528f8-d26b-48b6-a240-906d54e3e885",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458fa9f4-075b-43ba-877c-aa80735f6045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e341cb-3425-46dc-a420-e10551d53945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0095abb9-2296-4dc6-a5d7-c063da5ffccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac1fae4-60c4-43c4-953e-dba766403478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11e0994-5eb8-41bf-9a38-ed4037b8a7d7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b49654-386e-4f7b-8340-7f8dd18662ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68fee502-7ea8-4d57-b565-1d7bc3926a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ddfa49-83ab-4f61-967b-0421dea3cc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9445dbe-eb64-4e17-8507-d528c4a6c38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2547d9e-3173-4d17-abe7-063f162a53ed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d709695-35df-4a77-ad77-234f207dcb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3b721d-bb3c-4966-928c-b569f03e4f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e45669-5aae-4ad5-b40f-725f708d8812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8582189-1961-46e3-85f3-7ff168946871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0046fa6a-dd3c-4ebb-8061-589c1aabfbd9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac3fbd2-1f0d-415b-bc21-142c9bcff52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f242b2-2b7b-45d3-a79f-6d25c7e5786c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f12177d-e0ea-4731-8b48-0b8c5c64461b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426262de-053a-4dd5-a331-f72732733133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6df412c-9ae6-4104-8ad1-ad0297f9e913",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2132b2f9-c0ab-4480-a879-26fbf3ff5658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1501dc3-f6dc-4dba-9721-ae7964d6f4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2722a4-e55d-4605-90dc-1b6f387016dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b41370-a8c6-4b66-8be4-a9a7eff50e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d4cc13-0cb1-4255-b7db-4af4507d27c2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48999a55-87d4-40c3-99b2-47d93016f80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac7546d-1ad1-4e88-96f6-428c4ea2b799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2769e24b-f6b6-46a7-b4c7-28ab85eac45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7685537-1829-4ccb-8cba-8a7c440a6f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a1897c-9b7e-4a6f-875b-c13c36cff330",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2962eab9-b39e-4131-a1a8-c50497b80efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19cdcb1-5a44-4dc7-9f6d-469e143dc86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70203924-80f5-49e6-9f38-44442619bcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bc73bc-7e9e-4ea8-8186-31588917bcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5e7c9a-061b-4118-a832-4880a0bdc972",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a5520-5a70-4d52-b6b5-264e60d2203f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1b850d-97e3-4d81-b499-5314d59c27ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b59683-6526-4a34-b5a2-a821557c2dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad365af-3e33-4035-a07c-45e09efd534a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda77633-ba4a-455d-a33c-12cece79083c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca71de4-19e2-41b6-91d7-75005fe84bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd071fb-d3ca-4115-b983-463364a55528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09368412-e7db-4b90-b448-7ff963f747a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a2d1a3-8ebf-45ac-9558-21a157312a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531c4947-6b5c-4f07-b078-e2332b51738d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5543d0-ed02-4cad-a7c8-8a46b198af8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34fe9c2-8f44-4ead-b2c9-83c27c5c1ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f62488-b921-46ef-8f3f-0fc2df45b77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72838260-6dbe-4ca4-a60b-a86d6e22d615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0785eec1-c7cb-4efb-9365-b84d89d1de40",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060f7f35-59b1-45d4-b576-a86b364381f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802e4785-f34e-4844-9631-31c40e87f6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e65e236-25f4-4dda-b055-b198655f04a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944975c3-9fa7-4ad0-93a9-03873d45496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a457b70-6e5a-4c2e-890a-f989a3799e7d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df276e29-53d6-49bd-b520-c04f04f52706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b621d38-3f57-47b4-8c5e-15fc13d8f032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b582394d-4674-42f1-b9ca-5f34be20ff56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd624bd1-e72c-49c2-bca1-97fbf6f8b4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9f482c-7955-4aa7-8f39-354356701cf3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb44dc6-9594-4c41-baef-7f51b4e5c706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a230d3c3-5e32-4c59-8d58-26b53dc3930c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4c1d30-36d4-4e36-9080-e713ce42fc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d268259-168b-457c-b74c-e9ac64c1c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120793dd-0650-402c-b3d1-db0e4c7cc649",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a123dc-9556-424e-aeba-c6a329b489b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fbda6b7-730c-4dcb-8d91-155f7e1b7c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65dcab9-049f-4fdf-b626-2bf3491b6b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756cf4d9-a73a-4868-9e4e-e4e663846fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a21e1dc-0dee-4f95-b215-658afa44eb88",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e9a641-a94d-41d0-a73e-062e6d90c971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b257dd7-7a10-4f43-9753-515c98a1d9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0744ee-b8dc-485b-b4d0-24672643ee61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03006645-1870-47f3-8902-1e112f635b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4869ecf-a707-4e56-8ce2-7e84cfe8d580",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f2ca9f-7a1d-4631-8134-48ab850d8334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8dadbe2-93fc-4287-8886-a7f4342b6761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c49f40b-02b6-4ce6-a862-f4c8844d4f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a55b9a-d7b7-4733-b351-981e9fa24593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa51f864-cbf1-41ff-8830-9a2f15ed3425",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e980c621-6ff8-4393-990e-152ec9f207e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7362a0de-c3ea-4fba-80ab-7691ddd4a987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b225a1-13c4-4039-9690-30158c3d716e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e7ecc8-c21f-4cb6-a8ca-a173f1a92280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29826a80-84c5-42f2-9aba-1dc74fec9829",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926bbbdb-a974-4549-a945-97fcdf5fd111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833c4129-3ed0-4675-8846-1c9c8037fb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3f9ce5-b331-4f9b-bb99-568099230928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7e12ff-09cc-456f-979a-767960bc08b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153d40da-17b1-4ea5-a963-3a53d4ca0afa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edebacc8-3e73-4a87-9bd3-673eb02a74b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5482e275-ecf4-4648-91e7-016df8e4e1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8610e4-819c-4518-abb9-215f55ba10f3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f75808-ff94-4365-88fe-9deb27d43d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4676c6de-9b15-4173-b1da-99d431cb07ba",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fece2c-0d28-4351-9acd-c9d10d66663d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e1f110-0fd0-4db7-ba10-d1684af167fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112a10d5-fdbd-4088-a6ae-cc4bfd6e3f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca3bbdc-10c7-49d8-be7b-4ed140778b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc01eb9-18a9-49e9-a4f9-83328700f2ef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ba9a9-afb1-43f4-a9b0-344c844ac2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f13646-3a23-48dd-b2f3-5771d80cb532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c574d012-e82f-4f2c-a70f-464700066fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2418bc6-272d-40b8-be7f-b0f442ca54bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25736db5-1c2d-459b-a139-2caee96fe2ee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eeaad6-3efd-4091-8ddd-c449a81aca2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89863534-3c4f-4f27-b103-7cc76e2e559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c18b47-c583-46b5-a9e2-f17d2e974dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8faefd38-b88c-43ee-85ce-9b6bddadd004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d29b7fe-3394-4677-a536-8b85512aff2f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef040824-dac0-40a9-a6b6-c7c59c187949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151697fd-7051-4d22-8290-099d78e9d424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ede3dcc-f405-45f7-a982-439045729a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b132a2-1704-4f0b-8025-c498ce9bac27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00375d20-e22a-4a17-809c-2ad20a38ec9d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dcd94f-a665-4b2d-9e23-9bba373b707c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87cabb0b-7799-40b9-b06c-710e82a0a0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c1ed46-cb8d-4d61-a88e-d04f6a089239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3075496e-04a4-418e-bf8f-f949a6a5c93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee17d70-dd8f-4652-b7cc-da53a9fbf1fb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f477f1b1-4123-4296-a826-a6baf24547ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e09adc-19d3-4fc6-9c52-3fa19d1a1499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b7c94-20ae-4172-a2d3-716dc82381a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcab4306-216a-43ef-91b2-e591a9919457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80db1eb-a5a1-4487-9a14-c59eb64edb85",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d132eabf-05e0-4542-9860-835d60e27172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bea00e0-ea03-445f-8ed1-26dd8a059753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e22b9e-d0d8-4ca7-838b-f15001691805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124d5c44-d210-47b1-9a6c-37a5f2a7fadf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be2c1bf5-85fd-47dc-8f29-b7d93911fb5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc9849ce-2f32-4336-9571-6d1613f090db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a5688ce-4031-40cf-9bbb-fc0081fc3486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a05cc557-5979-49a4-a062-f0fd322d4e41"
                    }
                  }
                ]
              },
              {
                "id": "36f242d2-e904-4b5e-bff5-8892a8b034af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e2a2d0b-d406-451f-a833-0cc6bd34080f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92618f7a-1cc6-4232-be80-e1bab7a53d41",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f438d312-0967-41ba-a31e-fc979a9fb509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a9d107-bfba-4d9a-9028-a61619f0f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34bd3553-3589-40ef-9362-b2808658f7c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc77a585-4ac5-441c-b219-fcde6379ece6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2da0952-71f6-48bd-87d3-57f6c2f52456"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1944d1fd-49b0-4946-a12c-2ef90014b144",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34484f00-d330-4839-9c1a-f1901b113884"
                    }
                  }
                ]
              },
              {
                "id": "a26164a6-fb9b-42f3-b340-edc383f0312c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3432469d-4c1d-43b2-b3a0-948f96992f60",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d77b3f-9a5b-4379-93d0-1ad5efb4b837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "34a0c162-2208-4a81-96b2-0283af369157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e4dff3-92d0-49bd-8157-42d130f6213d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec455f2-02dd-453d-8d85-d1172871bf46"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "beed262c-8c4c-4f78-b3ff-6fa461b90cbf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "596934b8-c548-4ce9-98e7-c3a53ad8dfec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b45fed9d-8f07-4dd9-99ab-ffc2f08f94c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48b4b517-9127-4213-9f1e-6c248a5d6db9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66aa454e-d131-412c-a5a5-f6c096f4d563",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7302f06d-b77c-4526-b0bc-fa4350373612"
                    }
                  }
                ]
              },
              {
                "id": "4bdc8575-8dca-4056-b7a4-2983d8ed8d17",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f6149cc-a44d-46c5-97d8-4731ec7e9ac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95e20872-e920-498e-a95e-dafb6e5fdc48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a72cd5ef-174e-494e-84bd-e31a30fb9542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b58ef46-9f19-427f-b536-b7a696ffe0b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e94937ef-7257-4910-a3ce-19a68ab3c600",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "31ef576b-4607-4395-a8ee-c3db586fedf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "721479ca-3c66-4ec2-93a5-49b3c5e14a0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f678ecef-74ea-46af-8d03-6caaf57a07ee"
            }
          }
        ]
      },
      {
        "id": "be7baba1-cd4a-4360-919a-d308092bf875",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "02292cbd-ef6c-4a7f-a771-0c69e514866e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62d88d16-daa5-4e66-a893-c4d76d2642dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89bd278d-14d8-4f00-a009-2184a221af61",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fe3054-68e0-4dfa-a625-3e2fd22d09ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f56f131a-56e9-4fb8-b364-8e9028e9137b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe7cc8b-7fab-4aa9-b6db-f8fd32bcb362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb085eae-420d-42fc-a46e-5ca4c33cb74b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b79f786-cee4-44f7-8e4c-db32383adc0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "839a1910-1955-408f-a093-9c09bf3a2aa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c92fb058-21aa-4d1d-b235-3ee3e79dbdd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61177906-e63a-4d1d-8a6c-6657a5c45f6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20532e68-e24d-450e-83c9-7dc071d79f22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3dbefe40-67e7-4d27-9029-22253722e52b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "135b39f0-a254-4f26-b401-5041460a456d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba510831-9935-42fe-a15a-40cf9ed162f4"
            }
          }
        ]
      },
      {
        "id": "cf419a76-80a2-4fd6-aea3-841e79b66901",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cd3c992b-2022-4f64-99ea-21c2ef0d7b65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5410dc68-aefc-4a79-8ee7-5860df25fdc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c1fe9a1-fd1a-4557-b2d9-b6cf5ec1f714",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f9124d-9088-4a3d-a56f-c2d75c9fd1ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63752e97-4c67-487e-8f29-b043247e8061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214d6767-79d8-4091-92fb-13c2bf0c1fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4567f33c-b0dc-415a-89b7-04946709afb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3f3cce6-d3b8-4011-b47c-f757fd900415",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c35645-dd60-4414-a072-50a53af25427"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d933633-2352-46cd-9730-c3efd5d7e933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4412f814-c2e9-4d8f-99d1-577fb1449170"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "600e55b7-9425-45c4-81cc-0bc2e9e87e35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93e27337-e067-4fd8-aa57-048f5eea4e13"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1781a3c1-af40-4735-9bc6-f35bad133086",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29629079-55f3-4a90-a385-62a2859d4d9e"
            }
          }
        ]
      },
      {
        "id": "3f79f92e-67fe-4584-b703-a6154ec4d0f9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "11b50ba8-569a-4607-b16a-ea84a508f3e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a985c4d0-86d5-4eb2-8982-69390f01e012",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06ce9df6-100c-416f-b5f4-16bbdb42b756",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c518ee-0898-46fe-ac06-8cbd16c25cca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63c3cc3f-eebb-4382-97ed-6e009072c62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4957fe25-cbe0-4c68-bc37-243d5f045564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a18272b4-3b91-4766-8876-123435ec38f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ab2f40c-4877-455d-9c22-a436dbdaf546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56866587-a28b-47ea-adc6-4c5519123955"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93d2f2b7-d86c-4995-9ba0-bb6be668b53d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08dcb991-ccce-4889-85ec-145bd8f903e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "719781e6-cd98-4710-af39-6fd7cad25e41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0aa582f-6cc8-4c59-bd52-a0a75c45d921"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0a7d4fe-8fea-425a-b676-c64d12043a43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4661251-4935-4430-8be2-1d46011ebb93"
            }
          }
        ]
      },
      {
        "id": "0613f577-a561-4dbf-b4a9-f56a68b7a797",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b07eca4-babe-4d98-aead-06b6d1e49a0d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acf0bd16-5411-410b-806d-6aaef1e8688f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "843afd7a-770d-4ee3-a216-bbf9de9f9c56",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c00f40df-9fd2-408b-bff7-46e38e26f11a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3440a23-a1df-4c92-83e7-1ca40d1e8431",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.890845070422532,
      "responseMin": 6,
      "responseMax": 308,
      "responseSd": 19.72126329742643,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688690938855,
      "completed": 1688690954099
    },
    "executions": [
      {
        "id": "0f193bc5-ce5a-4e01-9872-b8cde7a9861c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "84696049-bdc0-416d-b7ed-d103000ce85a",
          "httpRequestId": "29365dbb-095c-4b39-8d1d-54d4c6a674f2"
        },
        "item": {
          "id": "0f193bc5-ce5a-4e01-9872-b8cde7a9861c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7c357fbd-05c6-4232-a31a-6f9cb8a7ac9b",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "eaa1a803-d9fa-443a-bc46-a204cb17655e",
        "cursor": {
          "ref": "b4430c35-baa9-42e4-8be7-aab6a99ae390",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c965eea8-9dd6-496d-87dd-11ac79cc689d"
        },
        "item": {
          "id": "eaa1a803-d9fa-443a-bc46-a204cb17655e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7ec58f14-fd40-4cc0-938f-c0ec69b4428f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "872427fe-1c72-4879-8c62-540c367658fe",
        "cursor": {
          "ref": "ddf37f72-5d7e-42fb-a904-b775a44d4662",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "80773a1b-6892-4bc1-b735-103a0cb12ca9"
        },
        "item": {
          "id": "872427fe-1c72-4879-8c62-540c367658fe",
          "name": "did_json"
        },
        "response": {
          "id": "81e45382-9d11-4e01-b611-1ac46ed62dbd",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b7f6d3-083e-4084-bea3-fe95198d793e",
        "cursor": {
          "ref": "ffd06c32-670d-4bde-a40e-409f3886ec66",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "084bd647-d8e2-457b-996d-93ef89f02a95"
        },
        "item": {
          "id": "82b7f6d3-083e-4084-bea3-fe95198d793e",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3090f94-24c3-403b-b09b-e33e0e9b6071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b7f6d3-083e-4084-bea3-fe95198d793e",
        "cursor": {
          "ref": "ffd06c32-670d-4bde-a40e-409f3886ec66",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "084bd647-d8e2-457b-996d-93ef89f02a95"
        },
        "item": {
          "id": "82b7f6d3-083e-4084-bea3-fe95198d793e",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3090f94-24c3-403b-b09b-e33e0e9b6071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826e2729-fdf2-4983-8292-d361003ebd3a",
        "cursor": {
          "ref": "0558306b-2d9c-44ed-af77-82e7a273001d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a607ea35-ac1d-4de4-8a0b-4fb0d689a6b2"
        },
        "item": {
          "id": "826e2729-fdf2-4983-8292-d361003ebd3a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b2849d3b-5fdc-4178-832a-6124fd4857d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b331081-fb3e-4a22-95dc-e20be4aca066",
        "cursor": {
          "ref": "2f10823f-4c40-478b-ba44-c2ac33b698dc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff8d72b8-21d4-46ea-b4ec-52083531b5ed"
        },
        "item": {
          "id": "2b331081-fb3e-4a22-95dc-e20be4aca066",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3b777dff-dc43-4410-b480-3d80822ccc2b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60d87d7-8d58-44ac-b25f-717e2db31fbf",
        "cursor": {
          "ref": "100d1ff1-0d10-4ca3-8ae6-a6ebf0331f94",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5b4eb2e2-5a95-482f-8c44-c64bd3b5baa3"
        },
        "item": {
          "id": "a60d87d7-8d58-44ac-b25f-717e2db31fbf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10e4de79-2ece-4793-af5f-5966d2bd5429",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a76ee3-e04b-4d4b-b7aa-0c3081bfe5aa",
        "cursor": {
          "ref": "7bd6a7ad-267b-48e2-a755-6a388d25ceea",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d718d41c-19fa-45d6-afa5-252b3c9a5d17"
        },
        "item": {
          "id": "66a76ee3-e04b-4d4b-b7aa-0c3081bfe5aa",
          "name": "identifiers"
        },
        "response": {
          "id": "5c099ab2-e77e-4685-92e8-a7b91ca04be1",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70df8ee2-3895-4baf-981f-eb8491ed9855",
        "cursor": {
          "ref": "8a93030c-1ae7-41f3-a011-57ce49a0913a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a59bcfa8-d6f1-4b74-947d-c769cfa015e2"
        },
        "item": {
          "id": "70df8ee2-3895-4baf-981f-eb8491ed9855",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "533df0ea-d824-4980-be38-854bb24e63da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b461f3e9-eccc-445f-ac89-5fd2fde768c9",
        "cursor": {
          "ref": "cbe9535e-bd63-41c3-9b89-178e4760c06e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "226c129b-dd1c-4a3f-80ff-cc58d9c82b43"
        },
        "item": {
          "id": "b461f3e9-eccc-445f-ac89-5fd2fde768c9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "932ead2f-d1cc-4f92-b636-8bf57db93ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca4312-0705-4e15-b8de-6956f6b2957a",
        "cursor": {
          "ref": "e9154fe0-8180-4e18-96a9-b371a832d99f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1f6138c3-4a21-4a0e-b174-11656277cc85"
        },
        "item": {
          "id": "70ca4312-0705-4e15-b8de-6956f6b2957a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2909ff59-6aac-4d46-b007-f9af6ef246c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c4c9c5-1d8a-4c7f-b7eb-3696ae05ea42",
        "cursor": {
          "ref": "61c7804d-25bb-4f1a-a230-e75155422c73",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d28f8153-9db5-4218-bcf3-9004bc8833cb"
        },
        "item": {
          "id": "08c4c9c5-1d8a-4c7f-b7eb-3696ae05ea42",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cebb63e1-01a7-4d98-af85-75c9becc7c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939f1239-4736-466e-8c51-05edbaffcf49",
        "cursor": {
          "ref": "cfad19fc-e6ab-49c9-85cb-fad1f4257cb5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "455d11c3-f87a-4430-a785-531658d7088c"
        },
        "item": {
          "id": "939f1239-4736-466e-8c51-05edbaffcf49",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a077829-cb02-4145-ae4e-a321430d62d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e1d8f-93f3-4684-9580-eac3ef900e16",
        "cursor": {
          "ref": "6e841337-7ae9-41bd-a076-3b8bf85d4993",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "832e2979-19b1-4e54-8ac9-38f5aa2d2441"
        },
        "item": {
          "id": "6d2e1d8f-93f3-4684-9580-eac3ef900e16",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e38ad9e9-12b4-44c3-8f94-32097c9d6194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a038a8-a1d2-4fe8-8608-45842c4273c5",
        "cursor": {
          "ref": "48424c9a-4a88-4cf9-9189-b4dbf2f24fdf",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a7dffd41-e24d-4434-9e90-602a510248be"
        },
        "item": {
          "id": "b1a038a8-a1d2-4fe8-8608-45842c4273c5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "458f0a85-5a9a-4884-a78e-1210ac68b916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5671ea9e-9471-4e31-bed6-d8318a77ceec",
        "cursor": {
          "ref": "8e46f22a-4f54-467e-86b4-e8a384ebdffb",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "633dd805-5acc-4a91-97d3-63af51670950"
        },
        "item": {
          "id": "5671ea9e-9471-4e31-bed6-d8318a77ceec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e6aec1a3-97ac-4879-b93f-10f13ea214de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8a870e-aa82-4166-8ffa-b94301a6ab30",
        "cursor": {
          "ref": "1b44f6de-6288-4727-8b9b-170592939928",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3f58a7f1-22e8-4f96-8cda-52d32f302e33"
        },
        "item": {
          "id": "7f8a870e-aa82-4166-8ffa-b94301a6ab30",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e8afb77c-a627-47cd-a000-5067ffedac0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591e8444-2770-4329-8f82-5e3d62266fd6",
        "cursor": {
          "ref": "c454b252-32f9-4a8e-bcdc-6b723f834f6a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ea9e5332-db1f-435b-a604-67695eacf5dd"
        },
        "item": {
          "id": "591e8444-2770-4329-8f82-5e3d62266fd6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "de967840-2723-4f06-b497-1a1f742c02ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aecc1a-c599-4c8a-9982-6f20bbae6d02",
        "cursor": {
          "ref": "5d104e9c-2bc9-46b1-b0a5-60eb73101582",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "492df23b-d724-45dd-b2bf-0d768368f602"
        },
        "item": {
          "id": "f9aecc1a-c599-4c8a-9982-6f20bbae6d02",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5f79dc41-d811-4c78-9173-b69a5ee8f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfe434c-2991-4f80-9aa8-3ca073900bc6",
        "cursor": {
          "ref": "63417b84-ea6b-4dbd-ad4a-bb72fc8715e2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b0d95ff-8dd3-44b0-895e-1c5cb893a40a"
        },
        "item": {
          "id": "5dfe434c-2991-4f80-9aa8-3ca073900bc6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e882de06-a403-49d7-a1e4-83e30bf56238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d0122a-dde7-455d-bd79-3886d30c0837",
        "cursor": {
          "ref": "575dd73d-c8a5-4053-8512-67ecfc336fb4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7050ec4c-7f19-4080-ad7b-ae2485f832d1"
        },
        "item": {
          "id": "b6d0122a-dde7-455d-bd79-3886d30c0837",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ced0db5b-bb55-4ed7-979d-45af4ff919f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6de0dd-7301-4673-97d1-17b06ea3578e",
        "cursor": {
          "ref": "3470184f-a299-4856-936c-5e528d02ff25",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0cf968ce-5b32-42cc-96ef-69cd91d2d502"
        },
        "item": {
          "id": "dd6de0dd-7301-4673-97d1-17b06ea3578e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "88598bf5-44dd-4294-928a-626d75a09b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da0f258-752b-447c-8d51-0245209c5aeb",
        "cursor": {
          "ref": "df352ad2-8063-483b-9aab-8e556ec57541",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "90e6e465-eadc-4d00-9f45-066afe90c29e"
        },
        "item": {
          "id": "8da0f258-752b-447c-8d51-0245209c5aeb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3c08863a-7f4b-4e7d-92ef-798dcf97c81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b447645-a69c-417d-bdc0-26ca1cc72da2",
        "cursor": {
          "ref": "9dac462a-3b39-44d8-ac32-af2689ee47ca",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "086ae5e0-1d28-42ae-903d-8d8ce01e5b7f"
        },
        "item": {
          "id": "8b447645-a69c-417d-bdc0-26ca1cc72da2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d14ded1a-6451-4cbf-bb22-63f8a897c338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439e01b8-a4cd-469a-9526-81da680005bf",
        "cursor": {
          "ref": "60147bfa-8ee0-45ba-baed-5ddedf56192c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f4f1e074-feea-40ad-b2ee-979021946ad8"
        },
        "item": {
          "id": "439e01b8-a4cd-469a-9526-81da680005bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "18a88da1-9a5e-4ac2-9394-33e6d6afd90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75146122-3c27-4429-8af9-4aa56595e00e",
        "cursor": {
          "ref": "5eb4018b-bee9-4c3d-a24d-16f26703e0ed",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9aec1e76-9994-4c4a-832c-509f318bb7ad"
        },
        "item": {
          "id": "75146122-3c27-4429-8af9-4aa56595e00e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3c35b757-d855-4dbe-981a-5ed226266e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a31ecde-87bd-42a1-8b03-d90c52cc8c87",
        "cursor": {
          "ref": "5a9876e6-4d6b-443f-9509-7036d931c368",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8e045a1d-2bc0-44bc-a825-b51e399f6fc4"
        },
        "item": {
          "id": "8a31ecde-87bd-42a1-8b03-d90c52cc8c87",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0f401792-6a78-4979-b7f2-0865ae09fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae6249-936f-4129-8fb3-05e6d01c50e1",
        "cursor": {
          "ref": "f8ba3d04-29e3-46aa-9089-277e1c73c29d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0e590c4a-4f3b-4bc8-9b1b-25df26a99c15"
        },
        "item": {
          "id": "afae6249-936f-4129-8fb3-05e6d01c50e1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "52701c06-5ddf-4aac-b807-df46fbe9d130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4add47-b700-4abd-b304-957b642aa4c6",
        "cursor": {
          "ref": "ee1dd972-b5d9-44bd-9122-b0162334a737",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "07eca429-5b9c-4cf4-b786-8d56a1d6e08c"
        },
        "item": {
          "id": "5a4add47-b700-4abd-b304-957b642aa4c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1101f866-bda8-4b89-b455-e7fc083e8f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113bb775-9460-4b7c-8c73-65e63e1e0fda",
        "cursor": {
          "ref": "c199cfa8-b4be-4c6a-814e-63b4ce83222f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2087d144-3ab7-4829-a139-b62ddfead8ea"
        },
        "item": {
          "id": "113bb775-9460-4b7c-8c73-65e63e1e0fda",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e4c0c21a-6ee6-499d-af78-3fcf89ccc82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9cf1b0-b052-4c4b-bef3-400231d72bbb",
        "cursor": {
          "ref": "8f131cd9-3f76-455e-abe3-e13956572a36",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7647cd13-fe75-4e09-823e-e86cfa3baddb"
        },
        "item": {
          "id": "7e9cf1b0-b052-4c4b-bef3-400231d72bbb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eb9d78c4-d059-4f09-a268-af0deac7ba52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4425830-5103-4478-99d4-9e27bcae664d",
        "cursor": {
          "ref": "f72d0ab2-4ae2-486c-9846-a8685ab5286a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8dcc663e-423e-42cf-9c0e-b61a2032c45e"
        },
        "item": {
          "id": "f4425830-5103-4478-99d4-9e27bcae664d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1530fefa-edc8-4e1a-9493-375936cafb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80167d30-f294-4a67-8c8b-6345b189406f",
        "cursor": {
          "ref": "065d5c83-4712-4761-a485-67f6f5a3ceb6",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6f65d03a-cca3-4953-a84e-4693436570f1"
        },
        "item": {
          "id": "80167d30-f294-4a67-8c8b-6345b189406f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9d9b5db7-0921-461b-bc57-626a37607e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e586441b-3ec7-44fb-ac03-f709ed01c50e",
        "cursor": {
          "ref": "37493ef9-4885-480c-801c-8d2378f607e8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fbbfc65f-5c52-46bb-8fa8-a0e42562f401"
        },
        "item": {
          "id": "e586441b-3ec7-44fb-ac03-f709ed01c50e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d7ca63f7-7801-47b3-9690-887a2a014dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce690089-8b75-448c-946e-5eaac30f2a71",
        "cursor": {
          "ref": "678fe1d3-4604-4060-98aa-5a009d9db67e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3923cf92-5626-4e18-82d9-33d8fe879906"
        },
        "item": {
          "id": "ce690089-8b75-448c-946e-5eaac30f2a71",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b0c601f1-fb5d-4f62-af1b-0cf785bffffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1c30a1-b57c-4994-bac9-1613ba846d9e",
        "cursor": {
          "ref": "d46ba204-8155-4218-955b-2645d1db998b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "47a3ff39-7644-452b-8186-c3844e903330"
        },
        "item": {
          "id": "eb1c30a1-b57c-4994-bac9-1613ba846d9e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e5c74b55-4691-45fe-96c8-caf7d3c80ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec86eea-cc89-45f2-bdf3-3d0ed517af92",
        "cursor": {
          "ref": "14399031-0669-494e-a782-d8c6d96b5eb5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "215db0b8-e526-4dfc-a5dc-887a74a0267f"
        },
        "item": {
          "id": "9ec86eea-cc89-45f2-bdf3-3d0ed517af92",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d773286c-d959-478a-ac1b-fd1944ab15b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce22cdc9-14ea-4788-ade8-fb4d44627d62",
        "cursor": {
          "ref": "a1829896-409c-4e66-a90f-943fe06ed10c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1bd9b919-27d4-4390-a617-288858b6ff74"
        },
        "item": {
          "id": "ce22cdc9-14ea-4788-ade8-fb4d44627d62",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "93094053-99eb-4f8c-9920-4c5d48735fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad5020a-0109-4f12-98ce-6298373a601f",
        "cursor": {
          "ref": "00d79bec-754a-4718-bf45-f24467680bf5",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5614d3d3-8faf-4289-8d6c-312a86bfc04b"
        },
        "item": {
          "id": "dad5020a-0109-4f12-98ce-6298373a601f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2092865e-d00c-4b44-9343-a28bffcb38e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470eb2e7-13ab-4f0d-9683-f81d3fef40eb",
        "cursor": {
          "ref": "7b65ed42-b310-4a9e-8572-b5be1b7d4d37",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0b7241d9-169f-4c58-9c1f-e3b0b6a16468"
        },
        "item": {
          "id": "470eb2e7-13ab-4f0d-9683-f81d3fef40eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3e6baa9d-d394-4d19-b13f-bee004f29745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a5bc87-6791-4933-8ab5-e27451fcba84",
        "cursor": {
          "ref": "474b28ff-9bcb-4007-b829-2c93f86b500c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6eb567a5-e549-42b6-a718-625a95e8dff1"
        },
        "item": {
          "id": "c4a5bc87-6791-4933-8ab5-e27451fcba84",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "81e44c03-db22-46e6-9c0d-57cd056a6abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7fb38e-fdf2-4456-9cbb-d308b087e328",
        "cursor": {
          "ref": "1e324b83-94c9-41ba-be79-f94b9b6effc0",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "88a86e65-453d-4ce1-a898-1a86bacc77ff"
        },
        "item": {
          "id": "ae7fb38e-fdf2-4456-9cbb-d308b087e328",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "11b1448e-a1d9-4460-8045-10f95b4fc5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5235a9d-00f6-4f95-a5b0-104fda8ea67b",
        "cursor": {
          "ref": "263318ba-1dc7-4972-b8f5-b025263d7ae4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ae81be96-2109-45b6-96d5-3c2a33478b2e"
        },
        "item": {
          "id": "b5235a9d-00f6-4f95-a5b0-104fda8ea67b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "95fb0b13-4deb-4041-a369-3ba1a1022ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dffa2a9-329a-4a2f-b7e1-462f1b2aed4e",
        "cursor": {
          "ref": "faf7ac65-0b20-4c9e-8c2a-107706f61b10",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4f88d11a-831f-429a-be20-deec2b3e5e9a"
        },
        "item": {
          "id": "7dffa2a9-329a-4a2f-b7e1-462f1b2aed4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fc043ff7-b00d-4b77-91e9-35d8a5b741eb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a39dd8-6403-467c-85b4-e57253c2e38a",
        "cursor": {
          "ref": "2dabba80-0cd3-4e77-aaea-b3802074abfd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "13b165d3-22ad-477f-850d-e706c9c6e087"
        },
        "item": {
          "id": "a6a39dd8-6403-467c-85b4-e57253c2e38a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f827e459-6c74-44f9-a61b-cbe9d051f200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd57e8a-c1ce-4030-8a4d-6ce06ec0e4cc",
        "cursor": {
          "ref": "65e6fce4-92e4-4e2a-92bd-7a5cd7fc2eaa",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0ebb2059-2159-4a1c-bbf0-6e085e4bb792"
        },
        "item": {
          "id": "1cd57e8a-c1ce-4030-8a4d-6ce06ec0e4cc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1bc524e2-88f3-49f3-bb11-0558ee2c4a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c82acbc-4815-42bf-83e4-249679181ff7",
        "cursor": {
          "ref": "a801b98d-ee8c-4ef5-9ba7-66d2637d4652",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "90f94b89-9c85-4f93-9dae-a0ca81a4cf5f"
        },
        "item": {
          "id": "1c82acbc-4815-42bf-83e4-249679181ff7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "57b893b3-5897-4d7b-96f0-109f1c00e545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecedca1-31fb-4d21-925e-8d112946d288",
        "cursor": {
          "ref": "fefc8106-27cf-439e-94b9-81bda2168071",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "46735a35-9a14-4630-a1a7-7e5003f30f2b"
        },
        "item": {
          "id": "7ecedca1-31fb-4d21-925e-8d112946d288",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "96ff77a4-a028-47a4-9ef3-e6d386dbf6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc02e99a-1999-4511-b908-41ca6dcd7db0",
        "cursor": {
          "ref": "087b5077-a7a7-4371-b3a2-f93d62596b9b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "92f22891-03de-4b1b-a584-18a0b876c744"
        },
        "item": {
          "id": "cc02e99a-1999-4511-b908-41ca6dcd7db0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2226d7db-ff04-405a-a588-095f7cfc963f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ea1f01-2cda-4b91-ad80-c3bedb631bba",
        "cursor": {
          "ref": "07848016-8132-4194-bf4e-f82fbff968eb",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3c49517c-24f1-48d9-a133-498c87c70bfb"
        },
        "item": {
          "id": "95ea1f01-2cda-4b91-ad80-c3bedb631bba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5144f12f-6a6a-4b92-b093-d054837f3c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df656571-c03f-498d-9e82-45a7f3ffd68e",
        "cursor": {
          "ref": "5c6d401e-6227-4a13-9e04-0a3eb5a884fa",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "eb14af08-4301-4dd0-b9fa-8c0137aa051c"
        },
        "item": {
          "id": "df656571-c03f-498d-9e82-45a7f3ffd68e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "35990214-e8bd-49ab-a11a-047933616da8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18988599-f638-48ba-927a-7442db6ec67f",
        "cursor": {
          "ref": "5c1df796-3357-4a21-9d9d-9f85122adb0e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1040c943-f376-42d9-9de7-cd3a4ebc64e2"
        },
        "item": {
          "id": "18988599-f638-48ba-927a-7442db6ec67f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6ba9dcca-999f-43f2-bc56-fbcbfce48747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db184dd-eb97-4196-9a61-d94d12b87e8c",
        "cursor": {
          "ref": "3e56ffbb-1b72-4735-b43c-eb30e59e1080",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "41e768e5-4268-4dbc-bc63-fe4fa6a20156"
        },
        "item": {
          "id": "8db184dd-eb97-4196-9a61-d94d12b87e8c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "65aa7210-cb72-4297-9b40-bb5d1f2c3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0572fca-9234-453e-b206-2e74ac5b52cf",
        "cursor": {
          "ref": "9a33c774-39ad-45cd-ba40-fed818cf1965",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8b9168e3-8392-4210-be6c-e9c2e6ff731e"
        },
        "item": {
          "id": "f0572fca-9234-453e-b206-2e74ac5b52cf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "03cd7d34-1897-49a8-a2df-0c0af24b6155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867b7d69-23f0-45a8-9179-c1a640eb9784",
        "cursor": {
          "ref": "ae23e3ac-7b88-49f6-a4ac-765a5a6b947a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "db19597d-1a19-4045-84f4-89c41256f39d"
        },
        "item": {
          "id": "867b7d69-23f0-45a8-9179-c1a640eb9784",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "16b645f3-22dc-48d7-bf91-39bebfb95c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad1e475-1ecb-4606-a933-afae3ad1d7f8",
        "cursor": {
          "ref": "274b6aa6-bb96-44c4-8d5f-ac4b61906718",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8e3091c9-6d94-4a35-8d51-0cdcb328a854"
        },
        "item": {
          "id": "bad1e475-1ecb-4606-a933-afae3ad1d7f8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b838b86f-73ed-43bb-a5e1-828327782bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bfabfe-353e-45f2-868b-01af35566eb8",
        "cursor": {
          "ref": "d231cb9a-493a-486e-b571-b614bd936993",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0380e022-5356-4bdc-a616-ece1e03c121c"
        },
        "item": {
          "id": "78bfabfe-353e-45f2-868b-01af35566eb8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5c09fa76-295d-4110-9e9c-3673882cb052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc6f57f-7a83-4c14-a734-4af0d052dd15",
        "cursor": {
          "ref": "ba93c9b5-6bb3-472e-9f30-d0ef763fa948",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5359eeb-734f-4dfb-863c-34558fc5e93e"
        },
        "item": {
          "id": "6fc6f57f-7a83-4c14-a734-4af0d052dd15",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "437495c3-1422-4ff6-846b-ed130fced27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cb87eb-b5f2-4c67-b07a-e26eb0290aaf",
        "cursor": {
          "ref": "7ea9698c-99f1-4e51-95d6-5d9d6f41c2ba",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8bdf8659-b2db-4ab8-a2e6-56b6614f984c"
        },
        "item": {
          "id": "50cb87eb-b5f2-4c67-b07a-e26eb0290aaf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "329c8184-ec48-4111-94c2-3b6288ad7714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c08d895-ccf3-4915-b038-e47cb5e4b346",
        "cursor": {
          "ref": "f18be158-84f2-4f5b-a5b5-d143727a7922",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4de2038f-36fd-4b9c-bf95-87021ec66cc3"
        },
        "item": {
          "id": "5c08d895-ccf3-4915-b038-e47cb5e4b346",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6a790164-bde8-4a37-a764-895173b2993f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3bdee7-ce52-4912-893d-501844a9156a",
        "cursor": {
          "ref": "435967fc-375b-497c-b184-112a568a8db8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "faad5698-6ffc-4d82-a503-2af2b6d4db93"
        },
        "item": {
          "id": "fb3bdee7-ce52-4912-893d-501844a9156a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1b24085f-2c0a-4e1f-951f-a5e007b874ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae593e2-7bff-47d6-9289-67cf4f8a27af",
        "cursor": {
          "ref": "b8ae7daf-04ee-4aff-9c9c-e034faf01d3f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5bea9534-579a-4479-9ec0-8d784d7747ec"
        },
        "item": {
          "id": "8ae593e2-7bff-47d6-9289-67cf4f8a27af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "106aace9-faae-41c5-a64e-d910356b45e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed76c07-9c85-4515-8774-b01fa05b22aa",
        "cursor": {
          "ref": "79b02075-e3c7-48c0-a3ae-1b8e3867797d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "df61ef0a-e8de-4cc6-bf14-a27b3b7a2643"
        },
        "item": {
          "id": "6ed76c07-9c85-4515-8774-b01fa05b22aa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f395b3bf-8f77-46a5-8a8b-63fd45ac8b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07824137-7962-41b9-8ec2-72ec97cc47da",
        "cursor": {
          "ref": "dc3adaad-6476-42c5-a4ca-7e52bedb1b4a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "08e5758f-0685-4aad-824f-bbc637def31f"
        },
        "item": {
          "id": "07824137-7962-41b9-8ec2-72ec97cc47da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3cc74e22-7011-4f08-b7f2-d45eb46293f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09836e39-465a-4246-8e6d-43482c27620d",
        "cursor": {
          "ref": "0e2f75a9-f47d-4413-8e44-6cfd042dc227",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "716dac96-af60-4d04-bf3a-981d54002252"
        },
        "item": {
          "id": "09836e39-465a-4246-8e6d-43482c27620d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d17170ce-bf02-4d43-aac3-2ca17e7e5551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d3965d-9baa-429c-b3c6-21d75339625b",
        "cursor": {
          "ref": "d2de5663-28be-47a9-a6f7-8e849b7077ee",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "917dc58d-05b7-461a-bf57-e8981ef77662"
        },
        "item": {
          "id": "d9d3965d-9baa-429c-b3c6-21d75339625b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e8c513d9-e509-4e16-b976-7e92c294ccbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924f799e-da81-40b1-afa6-92aa6da24e57",
        "cursor": {
          "ref": "c0336712-b02f-4149-a22c-af206d74f700",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "834af199-6307-4d2a-b06e-61e54a1dd436"
        },
        "item": {
          "id": "924f799e-da81-40b1-afa6-92aa6da24e57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3e78943d-9343-4fa3-b57c-3b39a109a81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e839eb25-5c56-4832-b66d-e42c6f9f57da",
        "cursor": {
          "ref": "7445b089-7e67-42b3-b50d-4566910ba2c5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cedfb8e6-a7b7-4e2f-9e45-3f555b563e5e"
        },
        "item": {
          "id": "e839eb25-5c56-4832-b66d-e42c6f9f57da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3ebeb9a4-2ec5-4f04-9256-c28dd26ff862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5297a531-62d5-465d-85b2-06af85323595",
        "cursor": {
          "ref": "129ac7cc-2ace-42eb-84b2-ea6b8fc98e50",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3659be2-cd56-414e-bfd2-4145584d2110"
        },
        "item": {
          "id": "5297a531-62d5-465d-85b2-06af85323595",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "20174500-a9cf-47f8-b84f-cff158d5fc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27272cd6-5694-4f6b-b363-398db4268be8",
        "cursor": {
          "ref": "24b0fe7c-1d51-4d1b-9deb-78b5e22458ac",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f5b27511-09a6-4555-bdcc-01a90612e536"
        },
        "item": {
          "id": "27272cd6-5694-4f6b-b363-398db4268be8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "565621bd-6be3-4432-b214-eae17485590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1dbf67-26cf-48a8-a51c-a7ae79ca4438",
        "cursor": {
          "ref": "984e6400-2334-4c57-a728-62ac6645c17e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "096f4640-4e00-46c6-8a17-a14886ddf187"
        },
        "item": {
          "id": "dd1dbf67-26cf-48a8-a51c-a7ae79ca4438",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0c34111f-7918-45ec-a1fe-d6ec75370566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870f2d90-75fc-401f-a04a-34ae12c65c3a",
        "cursor": {
          "ref": "f3af878e-cba7-44c3-8472-8ae9f54ccfe9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "45da473c-51da-4138-82f6-95b4007bf3e5"
        },
        "item": {
          "id": "870f2d90-75fc-401f-a04a-34ae12c65c3a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "634117fa-81a7-40d6-8db2-e5b039b44b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f70a099-28fd-4f3e-8531-d1bb2cae32a2",
        "cursor": {
          "ref": "09337412-0b63-498f-b8df-966d0dca7741",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7f3e1ab9-653d-427b-aea3-ac47d8051913"
        },
        "item": {
          "id": "3f70a099-28fd-4f3e-8531-d1bb2cae32a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "963191b3-49d2-4318-b415-2f7d04057771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7467a30-b164-42ac-b5b6-334d5a706113",
        "cursor": {
          "ref": "f012b024-005e-40f7-83a1-19f7263b486d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a8f11f92-02ae-4f00-8904-3e1c3da7cc48"
        },
        "item": {
          "id": "d7467a30-b164-42ac-b5b6-334d5a706113",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d0fd9e2d-5817-46dd-9b0b-6abb7906278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcc7297-1910-40a8-8551-cf43da6f19ce",
        "cursor": {
          "ref": "02a25a6f-7e9e-4eb9-a23f-bd22a2653321",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7c8fc228-b585-484b-bd58-78ef2e20b9dd"
        },
        "item": {
          "id": "7fcc7297-1910-40a8-8551-cf43da6f19ce",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c13f716e-601c-4099-8f37-1adbe215a82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa5d982-2248-462a-ba6a-1dd14175d891",
        "cursor": {
          "ref": "bb7dc788-9afd-48db-8f92-4e1d15039686",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "43dd3964-c2bf-41e8-a58c-543d96442f54"
        },
        "item": {
          "id": "caa5d982-2248-462a-ba6a-1dd14175d891",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0dbd9d03-1ba0-4cd8-9b1d-3e9c361694f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1be657-5db3-4b38-940a-3f443a139cd1",
        "cursor": {
          "ref": "debb499e-23c9-4a48-bc50-bc9e20862da3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ab62b566-60d2-4cdb-9db7-658afeaad638"
        },
        "item": {
          "id": "5c1be657-5db3-4b38-940a-3f443a139cd1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "364ef63b-c175-4ffa-b71f-b69f4c3e47b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6aa5c5-0e22-4d7f-b47f-5ec0ed6d0d9f",
        "cursor": {
          "ref": "a9882188-e345-49b6-a716-03d91d58c7ef",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "042b43e3-b20d-46b0-8433-f580086e0698"
        },
        "item": {
          "id": "ed6aa5c5-0e22-4d7f-b47f-5ec0ed6d0d9f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28f2a0f2-c1a7-4d99-9540-74f3307e2ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2484a964-63b7-4682-ac65-d13a03587628",
        "cursor": {
          "ref": "25afcb07-4550-474a-8ebd-ad2d6333ff84",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "09fa2b83-0669-412b-9120-530965ed0e7a"
        },
        "item": {
          "id": "2484a964-63b7-4682-ac65-d13a03587628",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9cb21f93-28be-450f-b53a-3f0e5c848ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d5dd78-ca2d-438d-a8b7-2ba602980306",
        "cursor": {
          "ref": "6e119b1d-6dba-4172-a400-5280fd941f81",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "68ff3eb3-1965-4179-b4ae-69a2309a22c3"
        },
        "item": {
          "id": "f3d5dd78-ca2d-438d-a8b7-2ba602980306",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "da703f42-c75e-4f47-8451-93f2bd753b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec105e75-75eb-4fe0-bb6e-1f097f70fc3e",
        "cursor": {
          "ref": "2996fb10-9bd6-412e-b077-c37670031833",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5e46d427-df21-47c4-9f44-f5efba7cb8ee"
        },
        "item": {
          "id": "ec105e75-75eb-4fe0-bb6e-1f097f70fc3e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "af3c73d1-d23d-4944-b98a-a8e1a168c1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368d47d2-6798-4d22-a648-a2ae0339b372",
        "cursor": {
          "ref": "9314a399-3cfb-4d52-b902-e8a925923987",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ae209fcb-b967-4bbc-9c13-587ce547604f"
        },
        "item": {
          "id": "368d47d2-6798-4d22-a648-a2ae0339b372",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "51261e0a-0fb5-4c12-9ddc-c765a119fe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1276489a-0168-412e-a1ee-428791f52159",
        "cursor": {
          "ref": "56384c69-cf18-4932-9b21-a72ec1e8871f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eb0bbb82-384f-4a99-82aa-5dc01a475e35"
        },
        "item": {
          "id": "1276489a-0168-412e-a1ee-428791f52159",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f5b70ab3-c4a8-49b7-8cdd-9cb4d6102ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90d5dd8-e076-4aaf-a5f5-ebe2f9b65230",
        "cursor": {
          "ref": "b0500c1e-7191-45cd-b3e2-e9c422a8b619",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "392482f5-c106-488b-aa66-ff84092ebdd0"
        },
        "item": {
          "id": "d90d5dd8-e076-4aaf-a5f5-ebe2f9b65230",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3fde3be4-695b-4d9f-90b5-a9d020eae78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c57da6-12bc-4a36-81e6-7dbfcdbea4fc",
        "cursor": {
          "ref": "241bbb79-f1aa-4165-9e0d-d45ab546aa1a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c240d1ad-ff2f-4b8b-83e6-1f5492352630"
        },
        "item": {
          "id": "44c57da6-12bc-4a36-81e6-7dbfcdbea4fc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a789e59e-07ef-4640-9413-6f60f7db344b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dfa396-7008-47d3-9088-2016abb85708",
        "cursor": {
          "ref": "94697073-7ec5-4bf3-be34-c8f1bed88d32",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "73577e2e-b211-4bbe-9b51-7588684a8fb0"
        },
        "item": {
          "id": "d9dfa396-7008-47d3-9088-2016abb85708",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f33a22b3-ae81-4bbd-8820-4e5fd463d519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef4bc0f-4606-4071-aaa8-9c639ccb684f",
        "cursor": {
          "ref": "ab7d1aa9-f59e-4c28-b2bc-fcfeed42995a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "04b53123-b7da-4c24-a188-5d7971ca3da6"
        },
        "item": {
          "id": "2ef4bc0f-4606-4071-aaa8-9c639ccb684f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fa0bef27-e953-4165-99f6-62f6fb77004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca2555b-1408-4912-9345-e92b1ac3774d",
        "cursor": {
          "ref": "8778e243-3c7f-41f7-8023-d0369ab7eca2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0096d333-e827-4c24-baad-edf39a127b58"
        },
        "item": {
          "id": "7ca2555b-1408-4912-9345-e92b1ac3774d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b73cec5a-b85f-4263-af25-2d490ddae014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256de464-9195-4ef9-8cf2-baf429a9946b",
        "cursor": {
          "ref": "7580d231-20bd-4bbc-a6b0-f14eb374679f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c9583d9a-e585-4cfb-86a9-ec2ca8ded8c5"
        },
        "item": {
          "id": "256de464-9195-4ef9-8cf2-baf429a9946b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fb65bdfb-55f2-4b60-a8ee-4adcdf5dd94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e6741a-ca15-4aee-8a8e-1d6f799bb4a4",
        "cursor": {
          "ref": "48e99c4d-443f-4d94-b82b-40caa91a8f42",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0ca765da-b7a1-484f-a8bb-d08037fffcf8"
        },
        "item": {
          "id": "c0e6741a-ca15-4aee-8a8e-1d6f799bb4a4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "91b8070b-4ed1-41ee-a3e0-a6032cc9e8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87febfc-f4b3-4d6a-8229-87b63584e905",
        "cursor": {
          "ref": "47d6d8ea-7067-46ec-b309-d5a99bcbe3c0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c9eab409-bdf1-49a2-aa54-86d8d0768a4d"
        },
        "item": {
          "id": "c87febfc-f4b3-4d6a-8229-87b63584e905",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fe0ec589-1588-4f11-bd25-1540a40dc2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89e1c09-05bf-4c00-a545-900e5e68b2e8",
        "cursor": {
          "ref": "4204d0fe-6a7a-4e5f-9d64-0ba370256648",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0d4c7f2c-7948-434b-9a2c-59dd0a2b66db"
        },
        "item": {
          "id": "e89e1c09-05bf-4c00-a545-900e5e68b2e8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "33c32db1-6310-4dba-b00e-c08e2820b6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dc9c49-7103-4f83-aa92-5dd4ed854ea7",
        "cursor": {
          "ref": "f483d8bd-6f87-464b-bb42-dac386c1e781",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4d37ae03-0a39-4d6f-90f4-34458a724e34"
        },
        "item": {
          "id": "51dc9c49-7103-4f83-aa92-5dd4ed854ea7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "033ec872-6d47-4a35-871e-3481463a3bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd7833-3081-443a-b69c-34f68c3ca5d5",
        "cursor": {
          "ref": "4af123ac-d7d4-4dd1-a878-74057fe331e4",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d2fff9af-8e97-4381-b28a-b714b1a86967"
        },
        "item": {
          "id": "75fd7833-3081-443a-b69c-34f68c3ca5d5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1cff2259-edb9-4e2e-a370-115a6790de61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8b6671-37c5-4dca-89ed-c5870e99ab2a",
        "cursor": {
          "ref": "94a25b58-7a82-45b6-9f42-2765b10fb478",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c59d264a-b899-4e60-b3b7-db3a554a0fdf"
        },
        "item": {
          "id": "0c8b6671-37c5-4dca-89ed-c5870e99ab2a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "56e2e1c1-8bd6-48e4-bacf-ad890d608530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c91472-77b6-48f6-812c-2c394d745f8c",
        "cursor": {
          "ref": "80468420-c545-4a38-81fa-c76a3f2726a4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f46c82c0-4f88-4cfd-a5c0-249784cf19d2"
        },
        "item": {
          "id": "a4c91472-77b6-48f6-812c-2c394d745f8c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fa89dde1-7c3f-44fd-8de0-786573c9877d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2642bb5-579a-47dc-b134-66d8dd14df44",
        "cursor": {
          "ref": "a72f09ea-6a79-4347-80fc-31c3d3faa412",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f426aff6-f9fd-4887-b619-ab99bdd5a989"
        },
        "item": {
          "id": "d2642bb5-579a-47dc-b134-66d8dd14df44",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "23041434-2a7c-4525-ae93-6e43b9addae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a602d6f-fb6b-48c3-a0d3-d30e35ca27fb",
        "cursor": {
          "ref": "da3092bb-b9a2-49a9-a583-13bf291ca878",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "df308331-3361-4ffd-99a6-17319b2fd362"
        },
        "item": {
          "id": "6a602d6f-fb6b-48c3-a0d3-d30e35ca27fb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba38a26d-ad2b-4901-9f15-813dc3c917ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0429f13f-398a-4950-ac6c-7bf5050e0bc2",
        "cursor": {
          "ref": "9c49fb79-dfea-410b-8d82-2678ce76d65e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41e19366-08cf-4d90-ae75-7de6106eafc4"
        },
        "item": {
          "id": "0429f13f-398a-4950-ac6c-7bf5050e0bc2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f43e61b-c2b2-4373-87d1-af14629baccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dcb31d-4299-4783-b45c-d3d43a2e76ee",
        "cursor": {
          "ref": "a50406de-98d9-43b9-9d1f-2b8796fef268",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "53b55d94-52f5-4154-9f77-5e4e94643445"
        },
        "item": {
          "id": "78dcb31d-4299-4783-b45c-d3d43a2e76ee",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "17066753-ca19-4a41-be4d-da38327d805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2aee3d-66db-4323-89cf-9b182378b773",
        "cursor": {
          "ref": "d0013107-6278-4e90-b2c9-60b968155f35",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "14227078-e502-4b52-be67-59f62ad82dd3"
        },
        "item": {
          "id": "ea2aee3d-66db-4323-89cf-9b182378b773",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c14f5272-be0f-4a64-acf8-19d1cfc46763",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40e3c51-f433-47da-ae89-d05704d11f60",
        "cursor": {
          "ref": "e8fe87a6-2007-428d-8ce9-6bed64e71e71",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "64e81605-b847-4f71-bd81-3890b9d28447"
        },
        "item": {
          "id": "a40e3c51-f433-47da-ae89-d05704d11f60",
          "name": "credentials_issue"
        },
        "response": {
          "id": "37d812c4-076d-4072-b0f1-46cb5a132473",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b325e1-cc4d-496d-839b-ea0462742ee6",
        "cursor": {
          "ref": "52ba59d7-28cd-435f-9441-f4109215a54e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c66f42f4-692a-4d89-8b2e-04a62af94e75"
        },
        "item": {
          "id": "d1b325e1-cc4d-496d-839b-ea0462742ee6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7bda901e-088a-4099-905a-96b2320b1879",
          "status": "Created",
          "code": 201,
          "responseTime": 105,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da54d7f-f4b3-45bb-a1a1-b76bd68795a3",
        "cursor": {
          "ref": "715fad36-d496-4e6c-ab62-1a28b8b56770",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7ebdaa3f-2c32-4f8f-b5c7-b5b2f688e491"
        },
        "item": {
          "id": "7da54d7f-f4b3-45bb-a1a1-b76bd68795a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "46312b32-4af8-4dbc-ad64-099b4d630c28",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d71bb8-2fd9-4024-910f-a5f0b8feee7e",
        "cursor": {
          "ref": "8e8e78c5-6f7e-4ca2-9067-5280ff04a160",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f02257c6-0821-4370-80e1-259d26397fb2"
        },
        "item": {
          "id": "b9d71bb8-2fd9-4024-910f-a5f0b8feee7e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ff37552c-f118-42c4-99c0-6ae86c7c642b",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f9750e-4ab6-489e-9ef5-bc38040c2686",
        "cursor": {
          "ref": "447aa95d-c65e-4ca6-acbf-0f8e7979e271",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6e08cc3f-5fed-4aa4-85be-b7624a1a3776"
        },
        "item": {
          "id": "e5f9750e-4ab6-489e-9ef5-bc38040c2686",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c64e853b-b6f1-4d8a-a426-abaaeae33c83",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e51ca2-09b8-4bba-982b-59d35e4db945",
        "cursor": {
          "ref": "db630b0a-4710-4d9c-8fdc-af4e90e5e68b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4ba7d53d-a4b7-425d-8447-97d7857cbfbc"
        },
        "item": {
          "id": "13e51ca2-09b8-4bba-982b-59d35e4db945",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e0714d69-76a5-4b45-a805-842f9671c3c7",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c44c0-aab7-4cf4-a582-8727989e16dc",
        "cursor": {
          "ref": "be85dfde-11f2-48ac-832b-9654436f3b5d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "61e9891d-3587-4cae-be0c-c3dc8ad013e8"
        },
        "item": {
          "id": "931c44c0-aab7-4cf4-a582-8727989e16dc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cda237c5-ac0e-412d-b885-2c79a09c92f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b29632-88a6-4247-aefe-1423098f1123",
        "cursor": {
          "ref": "112b9a2b-15e1-427c-810c-3e83c27e530f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5d508b00-5ab0-4fa7-a3fd-eee722427da6"
        },
        "item": {
          "id": "56b29632-88a6-4247-aefe-1423098f1123",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3fff082a-a00d-4694-8ae2-a1f74911ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad063160-da1d-4b87-b153-d35046ee8f72",
        "cursor": {
          "ref": "a4c78b29-2608-491b-8939-ba0f02c1fd56",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02bb320f-3e24-4b2a-a339-bc1784e2e658"
        },
        "item": {
          "id": "ad063160-da1d-4b87-b153-d35046ee8f72",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "91e11648-4d1f-42e0-a316-1735b1493bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc8d3fc-9fbb-4fc9-b186-be8279b05458",
        "cursor": {
          "ref": "2531ccd8-7b56-4969-b797-f0b7ea511614",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "428a1914-c026-4874-aec5-5e7c100ac8cd"
        },
        "item": {
          "id": "6bc8d3fc-9fbb-4fc9-b186-be8279b05458",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a4019ea6-7013-469f-9e27-e63972ce206e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab92b52-111a-4412-90a1-1e39fed55763",
        "cursor": {
          "ref": "063864e3-5ece-4101-8707-e0e38e134b1b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8ddd7e9b-efa0-41e8-96ab-63f95bd9f402"
        },
        "item": {
          "id": "fab92b52-111a-4412-90a1-1e39fed55763",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "19158a11-3bb8-4c7e-8ee9-1c448c756699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983babc-53bf-48b4-ab94-057d31ca43e8",
        "cursor": {
          "ref": "8b18aa8e-dde7-4ab1-9d20-8b030706d014",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f472687a-8f05-4759-ae95-d039d517e585"
        },
        "item": {
          "id": "b983babc-53bf-48b4-ab94-057d31ca43e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e3f7712-419e-4b25-a377-956c7a56fbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a545f0-3065-487b-bb4c-bf57a5002046",
        "cursor": {
          "ref": "d0f0ddcc-8cd2-49b5-af10-47b3f1729a8b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f5aab27f-5be1-45e7-a22c-582bcf002a3a"
        },
        "item": {
          "id": "01a545f0-3065-487b-bb4c-bf57a5002046",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e3abf9b3-b6be-424d-a38b-01c5f0b66046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e5e66-a11e-4ee1-8e8b-2ff9b3c75774",
        "cursor": {
          "ref": "012f4dff-0cba-4083-b0fe-c6fbd9bf479e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f6ff4646-2255-4f25-b1e2-bdf751a0ee57"
        },
        "item": {
          "id": "f25e5e66-a11e-4ee1-8e8b-2ff9b3c75774",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d7b8c7cf-41df-4127-8963-23da5be3ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45506ac-8ca8-4960-82d4-c852d4a7e5a9",
        "cursor": {
          "ref": "fe33d5b4-8edd-433e-833f-afe624a529ef",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "36c1e3b5-9c84-462d-ac93-4805c23d150f"
        },
        "item": {
          "id": "e45506ac-8ca8-4960-82d4-c852d4a7e5a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "74c868ab-de66-462d-a10a-c401e0e65231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f16abf-87c8-4d69-82d2-406a11610a91",
        "cursor": {
          "ref": "ddae946c-3733-465f-ae5d-d95d535c9a58",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2cc1e424-4e55-49cd-83bc-a4964fbe29fd"
        },
        "item": {
          "id": "75f16abf-87c8-4d69-82d2-406a11610a91",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a68867aa-c581-416b-8abf-2eb67234242b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cd664f-e6c1-49bb-b7d5-dc222bf8fe63",
        "cursor": {
          "ref": "13bcb799-a531-4c5a-90f4-34c58626bba1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ecd7f2c1-b109-4813-bdfd-e4b641420474"
        },
        "item": {
          "id": "79cd664f-e6c1-49bb-b7d5-dc222bf8fe63",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "52001e24-83b5-48aa-be3d-cac0bdc87913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daaf324-9fdd-4061-80d8-6d1c7909a6bc",
        "cursor": {
          "ref": "18274b50-a117-4be4-b8c0-d62e2c0903ff",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "968f108e-5039-424c-9eb7-af77a52e7899"
        },
        "item": {
          "id": "4daaf324-9fdd-4061-80d8-6d1c7909a6bc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d18e6509-3d2a-4cb1-9c24-af6460aafa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fbd2da-feee-4bd7-89e2-c282d5ca8386",
        "cursor": {
          "ref": "9c44ce1f-dea4-432f-854c-063396cb3e24",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8bed94d3-a360-4556-9dbd-b1074a91778d"
        },
        "item": {
          "id": "94fbd2da-feee-4bd7-89e2-c282d5ca8386",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "48c5312c-424c-48c8-b8fa-c4d8320b277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af8b22-56dc-4f23-8bdc-b262a452fe40",
        "cursor": {
          "ref": "c688dacc-b4c0-484f-8973-5d2bfdcc9d17",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c1dc295e-2671-4b31-a9e8-09b4f2c726fa"
        },
        "item": {
          "id": "e5af8b22-56dc-4f23-8bdc-b262a452fe40",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae35009c-2c4a-4646-b367-97c39be7325b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7526e8-3fa3-42a6-b108-34e334bf64b6",
        "cursor": {
          "ref": "0d455b52-0b60-4d5c-b9c6-1542b94e81a9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b6727291-70c3-4d74-8a92-7f4dcb26e2a8"
        },
        "item": {
          "id": "aa7526e8-3fa3-42a6-b108-34e334bf64b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6830a601-18eb-4c52-9ad8-9ca441f641ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596d3604-6df1-4351-ab8c-2cca1ce35e90",
        "cursor": {
          "ref": "4daee6c0-aae4-4f42-81f7-960ee8e85a17",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fdf3a740-0c13-4988-9bc4-1df4bed444d9"
        },
        "item": {
          "id": "596d3604-6df1-4351-ab8c-2cca1ce35e90",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "92603039-7805-493b-9516-321921cd4024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c781f014-25de-42c5-98c4-09b6be1d43a9",
        "cursor": {
          "ref": "71d94327-45da-43be-aeda-5892891485e2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "acaab273-317d-409e-946b-e7bf48aacd10"
        },
        "item": {
          "id": "c781f014-25de-42c5-98c4-09b6be1d43a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dca47a0c-ade5-426a-8acc-04e0901098ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f32f8-d499-446a-936c-8d13c2e27395",
        "cursor": {
          "ref": "7ef2c825-7bf0-45aa-aacf-cd220b818806",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a09e71df-995f-4cfa-b516-cde7d3f43935"
        },
        "item": {
          "id": "3d8f32f8-d499-446a-936c-8d13c2e27395",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "304e6e2b-010c-449b-9970-e5b0327a0353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc28760-3e5b-46a5-8fbb-359f036a99df",
        "cursor": {
          "ref": "8165ccf2-3b3a-4ea9-8ad1-b72caee0ae04",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "063d8f7b-dc19-4cbe-bf3b-37e1b6dbbfc4"
        },
        "item": {
          "id": "8cc28760-3e5b-46a5-8fbb-359f036a99df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8ffef054-45a6-47a6-8515-237fdddc73af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d01ecc-1bb8-4c22-ad01-fa7d8dab4ffd",
        "cursor": {
          "ref": "1a757f29-96e1-4dae-9b85-ef59149c35df",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a899f0db-b874-47bf-925f-0459794ca2dc"
        },
        "item": {
          "id": "20d01ecc-1bb8-4c22-ad01-fa7d8dab4ffd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b262df2-7c4c-4306-9489-6f6c8d1266fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2240a3-54e1-4e7e-9598-83158866a5b0",
        "cursor": {
          "ref": "43c59888-8b08-4646-b669-1e0032962cff",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "94ffff90-9b22-4b61-9ab0-e36cb9783847"
        },
        "item": {
          "id": "2b2240a3-54e1-4e7e-9598-83158866a5b0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "19ee57ea-098a-480b-a4ee-740e4c78dc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a571a69-e7ca-44c4-9791-6ebd12abdd69",
        "cursor": {
          "ref": "62d69e96-7e36-4925-ba1e-6c46614254ac",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e69312a2-e0a3-4b48-b14d-991d9210182b"
        },
        "item": {
          "id": "2a571a69-e7ca-44c4-9791-6ebd12abdd69",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c4d576c-9e87-4f30-bb90-717fbfca9ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ae2a36-8f4a-4485-945d-b8354a320a5b",
        "cursor": {
          "ref": "bbd1bd17-828b-47ec-bbb1-f0a30a3455aa",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2bf94c0f-f6a2-43a5-bd4c-bc240db8b660"
        },
        "item": {
          "id": "56ae2a36-8f4a-4485-945d-b8354a320a5b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44cd09d9-1040-43a0-b245-3c4f4482c2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52741045-95fb-4e11-8ea6-8c222c203671",
        "cursor": {
          "ref": "b594da8c-1ee3-40f9-9f46-57c152c9c725",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1367ecfa-be3d-4a39-8888-b792d8b447ee"
        },
        "item": {
          "id": "52741045-95fb-4e11-8ea6-8c222c203671",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f15d1a60-b217-4a8f-868c-5df1adb14dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e04669e-2291-49a8-8bf8-022c4a84d9a2",
        "cursor": {
          "ref": "9eb61990-2277-49c2-b860-6b63d3a8ef05",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "00d76e91-499d-4ff8-be2b-721848c9345d"
        },
        "item": {
          "id": "7e04669e-2291-49a8-8bf8-022c4a84d9a2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "312ce494-cfad-417a-820b-7ec09afc2c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1347a859-c5e1-45b2-882b-5f3503432320",
        "cursor": {
          "ref": "afc07b17-3775-4c30-b6b0-5dd66254b840",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3f0dffdb-e58e-420b-868f-ccbb72309a4d"
        },
        "item": {
          "id": "1347a859-c5e1-45b2-882b-5f3503432320",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "32712f25-db5a-49e4-aea6-badeb7fa564a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6778a4-286a-4968-b4cb-526cf1674ee3",
        "cursor": {
          "ref": "90ed4fcf-438b-435a-9f19-d3dac342888c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2f8cd77d-c101-4a4c-b893-648235d53aaf"
        },
        "item": {
          "id": "2f6778a4-286a-4968-b4cb-526cf1674ee3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f2a984a-96dd-417c-bf3f-ab91a57bde0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15ff758-057e-4196-b434-33af6024c178",
        "cursor": {
          "ref": "c9c60807-81f4-4db7-8bfa-5e4b48ecb160",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9be5bbf7-ef06-4131-955e-fbedb993cb34"
        },
        "item": {
          "id": "a15ff758-057e-4196-b434-33af6024c178",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7a5919e3-e56e-424b-9aea-1ba05d54c9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bb0c08-4f0a-4e7c-8e87-938f6ba71d9f",
        "cursor": {
          "ref": "1128f9e5-3ee9-4264-b4c6-a00081442af6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6e4bbb51-3e8e-4e47-aac7-d7c73949e416"
        },
        "item": {
          "id": "b0bb0c08-4f0a-4e7c-8e87-938f6ba71d9f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f67e7763-d5fc-4e54-8c44-67eb6b76633f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f793731-4837-48de-b78e-525422651a9d",
        "cursor": {
          "ref": "6d8344a9-3a65-4b40-9c25-08c7d7c4bfcf",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "385607a8-5866-4c63-93a2-a792a1edbf0b"
        },
        "item": {
          "id": "8f793731-4837-48de-b78e-525422651a9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e677ec7-8876-4ab6-ad6f-e68d4c720f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c69ef5-039a-4ec1-8c67-26468e3395da",
        "cursor": {
          "ref": "da29b401-c89e-4e1d-a581-188149688dd0",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ae9be17-437d-4970-96e1-50b0bfedf881"
        },
        "item": {
          "id": "71c69ef5-039a-4ec1-8c67-26468e3395da",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ef1be22d-0c21-44d0-9e34-5eb033f90cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dbd409-b8d1-43e6-a2ea-15562bc7df9b",
        "cursor": {
          "ref": "0d6111c9-00fe-4ce9-8dd2-43a7548346eb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b5ac12fd-09c4-4b9e-a457-ab59cadacd4a"
        },
        "item": {
          "id": "f2dbd409-b8d1-43e6-a2ea-15562bc7df9b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e177af06-e2a8-4b2d-a337-e6aff3746d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fb84ea-ef58-427b-ae0b-d2b7899f17eb",
        "cursor": {
          "ref": "26b1f506-ad00-41e2-81bb-df549931a01f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "efd4f940-b193-426c-97fc-0ccf5b0f715e"
        },
        "item": {
          "id": "b5fb84ea-ef58-427b-ae0b-d2b7899f17eb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4cb5fa7c-b25a-425e-a64e-a1e74fbebc0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec355c0-7a44-469e-b724-313ba7f2a438",
        "cursor": {
          "ref": "3b376cf5-e70e-4635-8f2b-7321ee093744",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3e16e8ff-fc8c-4838-a4a3-9d88c784315a"
        },
        "item": {
          "id": "8ec355c0-7a44-469e-b724-313ba7f2a438",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bfb56427-f945-4510-9004-f48f59ba4c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345daf2d-33b0-41e6-95a8-244fdb3b9544",
        "cursor": {
          "ref": "470eb9d3-d0c5-45cd-82f6-ef28d77a6ec9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7ae53574-b294-4bb3-af1b-0f9befc056c8"
        },
        "item": {
          "id": "345daf2d-33b0-41e6-95a8-244fdb3b9544",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d936e2f6-4d81-4edb-ae78-8deeece7bfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c3bc08-2530-41d2-9dbc-913e5d8dd7bc",
        "cursor": {
          "ref": "2238322e-b6ac-4381-9787-ec24790e5011",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "667c2469-56da-4cec-99e3-20057fdd38b2"
        },
        "item": {
          "id": "f5c3bc08-2530-41d2-9dbc-913e5d8dd7bc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0a9b44d-21cf-4797-8b08-817be6327742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a93a14-8eb0-4940-ae49-d3096017082a",
        "cursor": {
          "ref": "e64c3fbf-c419-4460-834f-19476f76de46",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d88b5ee4-9177-4cd2-ae0a-5cf28afc751c"
        },
        "item": {
          "id": "96a93a14-8eb0-4940-ae49-d3096017082a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a9d1013b-ee54-4f4e-874d-2cf09f1f87fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c9689b-6663-430e-892b-7e96ad57eaf1",
        "cursor": {
          "ref": "3e72ebe2-31eb-4f80-9f54-31471ec08254",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2e34b24f-3ebf-410e-ab4c-75c8cde94e5a"
        },
        "item": {
          "id": "59c9689b-6663-430e-892b-7e96ad57eaf1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f0575c84-28c0-49db-8543-2222d2bf567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8109dcad-3be4-4ac6-b724-9ac9851d8e99",
        "cursor": {
          "ref": "b6968d25-49c8-492b-864c-9c256db6ae7b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f746aa81-9c7d-4c0b-a05e-162c3b7d49ce"
        },
        "item": {
          "id": "8109dcad-3be4-4ac6-b724-9ac9851d8e99",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4f717e25-c734-4043-a2ea-93e5694c032f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db58b385-4c5e-4753-b925-3366d2678dfd",
        "cursor": {
          "ref": "b7f72a55-d6c0-4a66-935a-ea4e6d36190e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f6726520-8f45-4d06-adc1-482a402c47c5"
        },
        "item": {
          "id": "db58b385-4c5e-4753-b925-3366d2678dfd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0597b364-4c48-45e7-add1-8fea1ff9fa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482c70f0-fe39-46f4-999a-ad90d95993d2",
        "cursor": {
          "ref": "39782346-e35d-478f-a9dd-b38012fb0ed7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bc152713-4c39-42db-918c-dd1bc9cecfea"
        },
        "item": {
          "id": "482c70f0-fe39-46f4-999a-ad90d95993d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "67e3d505-0723-473e-b50b-669f0f2dcdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81db5fd-8f82-4ce7-a259-72f4d8bf93fc",
        "cursor": {
          "ref": "50211084-d6ab-4a33-8db1-7670124e708a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5ce3ce10-bf4c-4698-aeb6-0e8a94a8773e"
        },
        "item": {
          "id": "b81db5fd-8f82-4ce7-a259-72f4d8bf93fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "216d7aa4-83d5-4f3e-871d-0c7e40052f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e701e642-4457-489c-b6d1-5b48d3f7bfc0",
        "cursor": {
          "ref": "388fa3a0-7b97-46fb-be6a-9403f924dfb9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7f65be4c-f570-44e1-b2e3-0dc5393f22b0"
        },
        "item": {
          "id": "e701e642-4457-489c-b6d1-5b48d3f7bfc0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fbcac419-781a-407e-be94-bbe992df96bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b47882-0a82-4742-bc1a-1430ae33c34b",
        "cursor": {
          "ref": "6dacab4f-d5ff-4f81-bb32-1f8e77dae7ee",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1ef0a8c0-14c2-4e7c-9d38-77db353c0ca2"
        },
        "item": {
          "id": "c4b47882-0a82-4742-bc1a-1430ae33c34b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1c62dc3d-d8e2-4b6a-9398-6b1fcbc1656f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e491897-197c-47de-9955-fc8bcee9f2e6",
        "cursor": {
          "ref": "1780616d-143d-45fa-9f3d-14381fed8f0f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ce33db8c-eb80-4202-bd75-b35db883a915"
        },
        "item": {
          "id": "2e491897-197c-47de-9955-fc8bcee9f2e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eab70e19-93b9-4a2c-b7a3-be92dd1c028f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a7101e-ef2d-4723-9b71-c562f7c396ff",
        "cursor": {
          "ref": "4bc3c225-fd37-443a-a268-045a1544d2e0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0b85ea7b-ba50-42bf-bf08-a166828a338a"
        },
        "item": {
          "id": "e9a7101e-ef2d-4723-9b71-c562f7c396ff",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b34e2535-f017-426f-ada0-aecd26cb7480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452e622d-512b-4c47-b3c3-37452cdcda10",
        "cursor": {
          "ref": "6c02215d-0ba8-44ea-8fc4-7ea61aab213e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0ece0d2b-b439-4e6a-9229-92a3d76efcdf"
        },
        "item": {
          "id": "452e622d-512b-4c47-b3c3-37452cdcda10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "898c73f2-ac2a-48e7-9d33-474cd86b2847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e5b419-d554-4b77-848d-99c5c69dfa79",
        "cursor": {
          "ref": "b3fe944a-ff6d-4808-909b-811d388fb217",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "057152e0-388f-4030-829d-a481c8de3c14"
        },
        "item": {
          "id": "17e5b419-d554-4b77-848d-99c5c69dfa79",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "55cd4e14-5488-4ccc-a249-8eea33195825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9538d9-a84d-4812-a7d5-4e82d58e0f01",
        "cursor": {
          "ref": "69bad5b8-824c-4a5e-b0bb-50e642898783",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e997f2d1-d3b9-488b-8993-f9911b649e16"
        },
        "item": {
          "id": "4e9538d9-a84d-4812-a7d5-4e82d58e0f01",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f38dd4f6-8714-43f7-9683-6d9d69d2c978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5a948-edc7-4c6e-9f8e-661ea810d71b",
        "cursor": {
          "ref": "c4e64459-c100-4fe6-8c0a-a3e299102aea",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6a669ab6-0f99-4910-8250-5cfefc845ee9"
        },
        "item": {
          "id": "edd5a948-edc7-4c6e-9f8e-661ea810d71b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8a01327-6269-4fbb-bf51-c7b7414cd230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2f0729-2f11-4f86-ad39-6ebc3d8661d0",
        "cursor": {
          "ref": "d7283f4a-1a4c-4d4f-9bbb-ef16805629e8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65784e73-e1f5-4c2b-a030-8cafc5f57735"
        },
        "item": {
          "id": "af2f0729-2f11-4f86-ad39-6ebc3d8661d0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4b07ede4-198a-4ca3-85ae-763df5853040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ac1cb6-f2d2-4a4e-abfb-f6d505d849ce",
        "cursor": {
          "ref": "18fba3cc-5e15-406a-96c7-83b638ba9ee6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2d523727-cee7-4d2f-80c1-2edb54b04c36"
        },
        "item": {
          "id": "16ac1cb6-f2d2-4a4e-abfb-f6d505d849ce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93d22db8-399c-4ad0-a350-c8ae088f5a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec279b00-73f6-4ad1-b9a3-9195372a68d4",
        "cursor": {
          "ref": "28e99341-9e99-44bb-a489-f286d9768980",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f0fe34c7-00d6-4456-ac92-b080e1cf4ffe"
        },
        "item": {
          "id": "ec279b00-73f6-4ad1-b9a3-9195372a68d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c04d4b1a-a05e-478f-af94-ff64e500da69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8ee82d-0f85-432f-b55d-88394ea7a77e",
        "cursor": {
          "ref": "c51616d9-1fb1-46d1-bad8-9227040727b0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e5936e3c-e6f3-4a54-9a2c-90ecafa13f03"
        },
        "item": {
          "id": "3c8ee82d-0f85-432f-b55d-88394ea7a77e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3334c988-a556-4d65-b1e2-8e7c3b7c20f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7428130f-08e2-43c7-9675-89ca041a58df",
        "cursor": {
          "ref": "bc1ff9ed-2a74-4fdf-b458-eca49e6a13ca",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "340e461f-9558-4d7a-a4af-9623d61e93e2"
        },
        "item": {
          "id": "7428130f-08e2-43c7-9675-89ca041a58df",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8466b021-d19d-4b81-9942-d46c6fadff66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0b51fd-7651-4ae1-8df8-36addcfde366",
        "cursor": {
          "ref": "c74b50f7-9177-423a-812b-5c68b3f2738f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "236776e6-6621-4265-9dbe-32c6309af262"
        },
        "item": {
          "id": "9f0b51fd-7651-4ae1-8df8-36addcfde366",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "01e40dc4-0350-4689-8077-69bf06469986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1295d9-5eb1-4e91-a7c6-8c13999b6189",
        "cursor": {
          "ref": "916b3990-1ed6-4687-904b-41dab4638732",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b3190f4-bd5d-4f59-947d-aba729486e0e"
        },
        "item": {
          "id": "fb1295d9-5eb1-4e91-a7c6-8c13999b6189",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f429a3e7-a53f-4a71-9278-eeb2a0ce5a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a390c4-1aca-4f9f-927c-bc0ff725d72a",
        "cursor": {
          "ref": "32767e91-fa85-42d5-9f86-31f0a4a2b629",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a81cfc84-2a1c-4159-b8b7-b60dd09c8b70"
        },
        "item": {
          "id": "63a390c4-1aca-4f9f-927c-bc0ff725d72a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01eccb95-6c1a-40a2-8f2d-c224480d32a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d7fc71-9d95-42c7-a08e-fc5f0db754c2",
        "cursor": {
          "ref": "134c96da-9a49-49be-8ded-9d68048ff730",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "af52e423-22a3-4dbe-b9bb-b19481d4f141"
        },
        "item": {
          "id": "47d7fc71-9d95-42c7-a08e-fc5f0db754c2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7ddcdb3-022f-463b-805f-796740dcc142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1489051b-ce4f-4c3f-8659-e52f3ad5fdf6",
        "cursor": {
          "ref": "4dfa551b-2643-4118-8111-931963770231",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cc83dbc9-666c-4f92-81f9-88082601bceb"
        },
        "item": {
          "id": "1489051b-ce4f-4c3f-8659-e52f3ad5fdf6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9bfaed1e-d33b-429e-a743-1d22ab33089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2885a036-e24e-4580-b198-aac263926489",
        "cursor": {
          "ref": "c7ae199b-ec84-4a6d-904c-52670d986160",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7261a796-2bf0-46ac-aab6-c897fabcdfdc"
        },
        "item": {
          "id": "2885a036-e24e-4580-b198-aac263926489",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e3de1f2e-be2c-48ba-a4e5-f987026bc17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e620b9e0-8838-4d68-b702-bace451545eb",
        "cursor": {
          "ref": "de1b79ec-e703-44ae-898b-975d304b1028",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d4076042-deaa-48e0-b82d-0d1fc8bffb5f"
        },
        "item": {
          "id": "e620b9e0-8838-4d68-b702-bace451545eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f8543ab8-9e5a-43f0-9cfc-ceeae2d20cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fa567d-73c2-4ea8-b196-8f2a19c5c848",
        "cursor": {
          "ref": "c39ea9a9-9060-46bd-9de2-eb9353e8ff83",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e56b3db-470d-4035-afca-04906bb0314f"
        },
        "item": {
          "id": "92fa567d-73c2-4ea8-b196-8f2a19c5c848",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cac554b5-0348-478e-a4fc-f12a654c84dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da97f3-9908-40ef-80b4-1e57e636276a",
        "cursor": {
          "ref": "ba95ee32-9483-4d66-9172-23660cba8bc1",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "043f54aa-407f-4694-a0fc-2c2ff7c2fc69"
        },
        "item": {
          "id": "d8da97f3-9908-40ef-80b4-1e57e636276a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ef6d2418-169c-4cd8-a2b3-28984cd05f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5d4ae4-9a41-4177-8a48-24b06fca4a82",
        "cursor": {
          "ref": "0f841261-10dc-4d0e-9c9f-f79223b5b78d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d9993ae0-e69b-42a5-9dfa-7efec7143730"
        },
        "item": {
          "id": "de5d4ae4-9a41-4177-8a48-24b06fca4a82",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5ec868da-75aa-4791-889b-b0cc70642286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b738006-1cf0-4bff-95ec-9d7daa8be3c8",
        "cursor": {
          "ref": "d06ed20b-0146-4f49-83f9-0b1fa6943332",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b262a64a-d826-47a9-aa9b-67c742ef3e3a"
        },
        "item": {
          "id": "2b738006-1cf0-4bff-95ec-9d7daa8be3c8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a703b484-b136-4c14-aecc-4b572cc26836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0092a731-a2c0-4ea7-ae9d-219cd133682d",
        "cursor": {
          "ref": "775b8927-1cb5-40be-90bf-87b23bd15b9e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "388d84d4-90f8-4936-8a2b-a99d1f61bfc4"
        },
        "item": {
          "id": "0092a731-a2c0-4ea7-ae9d-219cd133682d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a229bda2-a2f6-4e56-96e3-511911e4e68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23345c5a-f8df-4923-8e3e-2f26195b9bb8",
        "cursor": {
          "ref": "f33c78ae-d2c0-4bf3-aaf9-72561b0ebe15",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dbd02ee9-cca1-46b5-a7e2-f8c33509bd4e"
        },
        "item": {
          "id": "23345c5a-f8df-4923-8e3e-2f26195b9bb8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bbc0b84c-dbc5-49a1-b9aa-166339acb090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00f47ab-50cc-401e-bbac-89f6c7ddf9e1",
        "cursor": {
          "ref": "a2446696-671e-4b72-85c8-4e3441330f10",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f9158240-2671-48ec-b6bc-df744b1f57ed"
        },
        "item": {
          "id": "f00f47ab-50cc-401e-bbac-89f6c7ddf9e1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4d56f8b4-5594-4332-acc2-15418055f6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbdeda9-d44d-4813-8e3f-c1974fd83398",
        "cursor": {
          "ref": "d8290a03-d5da-4d6c-a640-cf0dd0fefdfc",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c26a753c-c581-464c-ad11-5eefe98bf8e0"
        },
        "item": {
          "id": "fdbdeda9-d44d-4813-8e3f-c1974fd83398",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3a7b912f-5e88-4d02-901e-f4599c8cd8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bee339-4255-413c-904b-3ec96e2f56a1",
        "cursor": {
          "ref": "420e14a5-73e8-4b99-b81a-72e6973c5f7f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "984e53af-b406-4a90-bdce-4df89e227881"
        },
        "item": {
          "id": "46bee339-4255-413c-904b-3ec96e2f56a1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bca8a109-ac3c-4a27-9eab-15a2288b5921",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85939251-20ab-4930-b37a-ce3c4fa0017b",
        "cursor": {
          "ref": "073a83eb-c563-4451-929b-6679a0750f21",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "937af8cf-bd80-450c-b2bf-0d8ea9922efd"
        },
        "item": {
          "id": "85939251-20ab-4930-b37a-ce3c4fa0017b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "176b7dde-4e8e-430d-acbb-09ac757d7f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f8e64a-e429-4fab-94e1-14a2def6ac2f",
        "cursor": {
          "ref": "2b684f65-fb60-4967-b543-3b8da8ed8333",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eec19048-4514-43c6-bdee-376b677c3f8b"
        },
        "item": {
          "id": "34f8e64a-e429-4fab-94e1-14a2def6ac2f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "857fe47f-0d90-425d-afdd-c2ad98581c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ca266-6ebf-4b5b-8cec-dd5b367e6b1d",
        "cursor": {
          "ref": "c9b56de4-a2e9-4ecf-91bd-ac5fdf0a0444",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e384b12e-f01d-4367-98b9-12a75b05db0f"
        },
        "item": {
          "id": "da1ca266-6ebf-4b5b-8cec-dd5b367e6b1d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "635875f5-dde3-404a-b635-e6161034291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8744996e-df00-439f-a5cc-83ca9e826feb",
        "cursor": {
          "ref": "e47119fe-c770-4ac9-8a9b-9cba21d0fe34",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "06cedb45-7e2b-4e9c-a0a2-eb01d23e87d7"
        },
        "item": {
          "id": "8744996e-df00-439f-a5cc-83ca9e826feb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "05164743-b2a6-49f1-9a05-8afea00fd294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd91648-4176-43be-928d-47142a037409",
        "cursor": {
          "ref": "3e7ba81b-0dc4-4fa2-b30c-08017b9be9a4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ee4f3c11-e185-404b-a0b6-6b9fd2ebcee6"
        },
        "item": {
          "id": "ebd91648-4176-43be-928d-47142a037409",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "662f7b61-7bff-4ca9-b100-6811ee1605d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220e7ba0-1e3b-4a31-80c5-881e42d39857",
        "cursor": {
          "ref": "331527e7-f34f-4ce4-9d70-01bfbc532ee2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1f8e8dff-2b9a-4edd-81d1-6ff97c524373"
        },
        "item": {
          "id": "220e7ba0-1e3b-4a31-80c5-881e42d39857",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce150750-816d-4725-9f5a-0382b829fe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2d6a02-7056-4920-a93b-07179b59da6f",
        "cursor": {
          "ref": "fe0c867c-4b2e-4409-a355-a62350b09d63",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "965a385f-9840-4ff5-88a0-ef11bb176831"
        },
        "item": {
          "id": "5b2d6a02-7056-4920-a93b-07179b59da6f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "19bc51d3-f72d-4842-ab77-cafaf022e552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3d241a-535b-4cf4-9cd9-b2025c2db5e7",
        "cursor": {
          "ref": "f626c703-d361-429f-92ed-6771ebed598d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a0d450cf-274c-48de-96b5-22c5057fd6c9"
        },
        "item": {
          "id": "4a3d241a-535b-4cf4-9cd9-b2025c2db5e7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ece12181-2f65-444b-b1d1-f15b927df30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75c27ed-94df-4adf-874a-80420d778813",
        "cursor": {
          "ref": "0a8f5e09-bd41-4ada-8b49-e6891c925c03",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8b8bebc-b4aa-4800-a445-03b7616f37ed"
        },
        "item": {
          "id": "f75c27ed-94df-4adf-874a-80420d778813",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "962c530f-a979-4011-9a5f-4f574d570c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258950ca-ed0e-44da-91d9-5d355a9b0e2e",
        "cursor": {
          "ref": "809b7980-c28a-4d1a-a7d4-ae51ad9e5f8d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "949bdd6d-10a9-4802-8db2-3e30fabd78ea"
        },
        "item": {
          "id": "258950ca-ed0e-44da-91d9-5d355a9b0e2e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0283d3e-5980-4a4a-89ce-e100720a79b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6efc4ae-4050-41ec-b47b-3b3c5f94f29d",
        "cursor": {
          "ref": "b3004a4e-c29a-4a97-ba3a-9b140473998a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4675ff95-13ba-41cd-9517-512949aff5a0"
        },
        "item": {
          "id": "c6efc4ae-4050-41ec-b47b-3b3c5f94f29d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d3232437-d931-4a01-b800-af9dda2b1f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4fc2db-8cd9-4022-9a48-7dcf2d278337",
        "cursor": {
          "ref": "b82014ea-c018-4b80-abd1-8db2492aff82",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "69a3b9d2-b0ca-41b7-a6ef-803649d2c382"
        },
        "item": {
          "id": "fe4fc2db-8cd9-4022-9a48-7dcf2d278337",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11fb1e89-3b41-4ef2-984c-8c5bd6b45c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c42829-a373-4127-81b2-3bfe3abbe357",
        "cursor": {
          "ref": "a687a0dd-e588-48d2-b98d-49deee844cea",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a057606b-a00e-4402-82ee-ecbb1f8900f0"
        },
        "item": {
          "id": "79c42829-a373-4127-81b2-3bfe3abbe357",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ecadce70-c885-40a0-b344-d931f709d3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a64eec7-998f-4930-a4e3-ffa41ad7fe7a",
        "cursor": {
          "ref": "7eaa2a13-1cf9-4978-a889-980fc627e50f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "93b08fff-0596-4da6-a4f8-4bba6233d1b2"
        },
        "item": {
          "id": "0a64eec7-998f-4930-a4e3-ffa41ad7fe7a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b547dd48-b366-4c91-b049-4cc1385305fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3ce919-5e0d-4c5e-aafa-88e7bcc02b68",
        "cursor": {
          "ref": "534c485a-f131-4ca6-8127-015f090dc819",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c953dcfe-4ab0-495c-b26d-c28f7e52c30a"
        },
        "item": {
          "id": "ac3ce919-5e0d-4c5e-aafa-88e7bcc02b68",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "86913332-b370-43d9-a13b-31e397cabc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e918cbf8-f764-4d85-bb8d-47634d9b7568",
        "cursor": {
          "ref": "3ecb3539-7a18-4ec8-887c-4b24debca066",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "70835ac9-3d6e-465b-b2c5-f07ba8b4d44d"
        },
        "item": {
          "id": "e918cbf8-f764-4d85-bb8d-47634d9b7568",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "caa03f7e-8f72-45cf-8132-9130f24ffa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c4e34b-c3d8-4510-8a6c-9ac4a3dc3ff7",
        "cursor": {
          "ref": "88ccc68b-eec1-49aa-802a-fb79087e4636",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "67bb63ef-dd48-4c6d-be37-68849eeb7e27"
        },
        "item": {
          "id": "41c4e34b-c3d8-4510-8a6c-9ac4a3dc3ff7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca38224c-2264-488d-af33-88b0474c4186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98c8b19-9b18-44d8-8512-eb8f7da927bd",
        "cursor": {
          "ref": "21a4802a-79aa-4ab3-89fd-95bd75dfd795",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2017b01d-c5fa-4f61-b980-84ecf13fef7f"
        },
        "item": {
          "id": "c98c8b19-9b18-44d8-8512-eb8f7da927bd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cde55cae-b003-447c-886b-4e204c218516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0071cf07-005b-4dc5-98fc-c9e616058a2a",
        "cursor": {
          "ref": "7593e843-4efc-4093-b329-f34aee28f35d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9acd1563-b5a8-43da-a384-3202926b155b"
        },
        "item": {
          "id": "0071cf07-005b-4dc5-98fc-c9e616058a2a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a9fedfe7-b683-4da9-b209-e63dca5a684b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4534fa6-fc99-4eb1-aea1-8228febf6c37",
        "cursor": {
          "ref": "83adb773-521c-47f7-8ea1-51c74a854622",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "49b9045e-7aad-441a-967b-597fd7f143d7"
        },
        "item": {
          "id": "f4534fa6-fc99-4eb1-aea1-8228febf6c37",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d52b7ad-b04d-46a0-af4f-bb560a49d3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fa0a31-1f8e-400c-b3a6-25a6cb3041a5",
        "cursor": {
          "ref": "3e127fb4-7e69-415b-b5a0-2d8aeadb39a6",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8ee3b0d0-018e-45e8-84fe-dfd9b0041b33"
        },
        "item": {
          "id": "01fa0a31-1f8e-400c-b3a6-25a6cb3041a5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5f1b7e2a-4234-41df-a9a1-684cac713d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940224f-da52-4b85-a868-0bf0bca34d92",
        "cursor": {
          "ref": "5c2303ff-df61-4917-9e41-42c9708b8777",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ef6f3a2-88a8-463f-864e-06bddd930255"
        },
        "item": {
          "id": "d940224f-da52-4b85-a868-0bf0bca34d92",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91d71b84-a2bf-4210-acb2-c8f2c165ed46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722123bc-a447-44b4-ba69-19a853dbe636",
        "cursor": {
          "ref": "fe7e2e68-b9c0-47f8-a25d-0ca5374004dd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb8fadd7-a6de-4128-a581-6443d801f530"
        },
        "item": {
          "id": "722123bc-a447-44b4-ba69-19a853dbe636",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5c4f63ed-f3a7-4793-9fd4-93ddeece67a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcc778f-7cc1-4c6e-8cd5-14ce34f79992",
        "cursor": {
          "ref": "33d46bfb-5b14-4867-91b3-7f73f1150e1d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1d559097-9282-4bdf-8dd6-51c5d3b22f18"
        },
        "item": {
          "id": "bbcc778f-7cc1-4c6e-8cd5-14ce34f79992",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d0b72ab0-0080-4610-9586-9e6c79990a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb011ddb-cc5f-4e2a-8190-e29970c118e2",
        "cursor": {
          "ref": "1916cc15-f4c2-48e0-bc36-67047bff9029",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "63a0e635-fc5d-4197-a6e0-f7434f1efba0"
        },
        "item": {
          "id": "fb011ddb-cc5f-4e2a-8190-e29970c118e2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5ebfa0ce-67fa-4537-82d7-93d7e089ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cd2959-bcd5-45e9-bf04-8169267ffb2c",
        "cursor": {
          "ref": "553044f7-e2ad-4343-bb6c-38fccd6f4700",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "84170e81-361b-4831-9c63-8732e667de88"
        },
        "item": {
          "id": "d4cd2959-bcd5-45e9-bf04-8169267ffb2c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "94c529e7-2aa2-44d1-bfeb-4d2e8cf84f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e996163-0a5f-407d-91b2-189589a9f246",
        "cursor": {
          "ref": "bc8bbb55-9309-44e3-ac58-5bf0d86600dd",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "35f263bb-4083-406c-b903-b0516bd023ae"
        },
        "item": {
          "id": "6e996163-0a5f-407d-91b2-189589a9f246",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "af9cbeb9-d3ec-4d16-9bc1-488a8ce37608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d33c5-f3bc-43a0-b912-144a5d41cd55",
        "cursor": {
          "ref": "09a37bfc-7ca2-4e9d-8d1b-e75a02380298",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3f434634-0da9-45ab-b64e-e59097e201c5"
        },
        "item": {
          "id": "721d33c5-f3bc-43a0-b912-144a5d41cd55",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0ddc4953-02f1-448a-9593-c3320a3b8398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73391f4d-1e9b-4ebd-b765-bd7f54da0d08",
        "cursor": {
          "ref": "35eb68b5-a8b7-4a85-8bf0-a41ea7ffbbbf",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "68c02b34-95fb-475d-a986-a707f12fa6c2"
        },
        "item": {
          "id": "73391f4d-1e9b-4ebd-b765-bd7f54da0d08",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "487ba3e2-db90-4e79-8a10-7592afc9bd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fef5cd-93c2-4d6a-bf56-6e2815ac728f",
        "cursor": {
          "ref": "e16224fd-0103-4118-a1bf-cb75709ed2eb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4c30b7d0-e18e-4ff7-877c-7c9951054a0b"
        },
        "item": {
          "id": "d3fef5cd-93c2-4d6a-bf56-6e2815ac728f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "84433a93-da56-4415-8e15-e405c0ce66af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e1959f-0bb3-4059-a28a-77e292859ca5",
        "cursor": {
          "ref": "9b11f9dd-94d8-4612-8d28-4037b0cef201",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d76be4a0-6b0f-4ac9-9da6-6b98288bda6a"
        },
        "item": {
          "id": "b4e1959f-0bb3-4059-a28a-77e292859ca5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2b157dd-3a0d-4daf-aa77-011eb3f84876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a889c85-f504-4742-811d-d3106fe308cd",
        "cursor": {
          "ref": "fabbd255-edc4-4039-b389-adb1463d9112",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "701bf157-b34e-4ab1-a494-dfc70f45cb4e"
        },
        "item": {
          "id": "4a889c85-f504-4742-811d-d3106fe308cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e6c7bd4f-ff6f-4992-bcca-7a575ab23728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75579934-f503-42ea-95ef-51efd3fdc4e1",
        "cursor": {
          "ref": "bc630655-cbc2-4160-b0a0-b89fdc5c224e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "06161575-8179-48d7-bb64-8988a5b5d62a"
        },
        "item": {
          "id": "75579934-f503-42ea-95ef-51efd3fdc4e1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b2faf9d6-4986-4159-873a-7f5f42aa4bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f16b9de-2a47-48ac-9f5f-aba681729183",
        "cursor": {
          "ref": "83b8a50c-31c7-4893-a17a-beaa92e3df95",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed7f173e-d2c6-4e53-b3dd-62dc31025204"
        },
        "item": {
          "id": "5f16b9de-2a47-48ac-9f5f-aba681729183",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2652d134-72ed-41b5-a6b7-b032c46d53a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b760fba-003d-4d00-acf6-b07a16778257",
        "cursor": {
          "ref": "1bab05fc-02b3-4b1a-a95c-247e9431934b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "af679665-9e38-499b-bc25-36b0f3b7211e"
        },
        "item": {
          "id": "1b760fba-003d-4d00-acf6-b07a16778257",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "da2e2685-bf17-47f8-b3b6-01229c6cdd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0cc12-442f-466e-8ef0-78fd39c72de8",
        "cursor": {
          "ref": "9bb59d46-c95a-4c36-85ac-fc149f70246f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "826e6296-3f24-4c20-817f-0aee8506ba11"
        },
        "item": {
          "id": "79f0cc12-442f-466e-8ef0-78fd39c72de8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9d2c5a54-f70a-4c3e-9d7f-de3e8e6512c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50af9fcd-3217-4d48-834d-1ff111450634",
        "cursor": {
          "ref": "2ff8c0ca-ec4d-4910-9324-de350a34e5e1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da425337-ce79-411b-be29-697b259f16b9"
        },
        "item": {
          "id": "50af9fcd-3217-4d48-834d-1ff111450634",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3d58be2a-9c4b-4740-9f4f-05453c048ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26de38a4-f286-4173-919f-043a3f61319c",
        "cursor": {
          "ref": "a4475614-998a-4bb5-b713-3d7910991225",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e4a61024-b6f6-49c1-b80a-807bfbf8a898"
        },
        "item": {
          "id": "26de38a4-f286-4173-919f-043a3f61319c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "738f5f88-5e73-4031-9779-989f78dd0cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db40bce-044d-4060-8f55-f4c7fe0c5738",
        "cursor": {
          "ref": "a60e8610-8e93-4c86-9ea6-cfb2bae979f5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6c9c0668-5d57-41c9-86c4-9e7ef1b1476b"
        },
        "item": {
          "id": "6db40bce-044d-4060-8f55-f4c7fe0c5738",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d875d740-b4d4-4b2e-bcb2-e039fb9c3e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6857fd8-aca5-4436-811c-156d1f65a283",
        "cursor": {
          "ref": "ea4d89f6-ffb3-4d66-a73b-f3e672288623",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d8648f40-ffff-4ead-a23c-7f5f6456bd1f"
        },
        "item": {
          "id": "c6857fd8-aca5-4436-811c-156d1f65a283",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c3921698-6d67-44fc-90ad-0b70d637d91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63afa43a-f6ed-4dee-8394-a9431292377e",
        "cursor": {
          "ref": "ed1db9ec-bed5-4ad3-b5c7-ee0cb4b58276",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "925e6c8e-1e09-498f-9049-988a3f018234"
        },
        "item": {
          "id": "63afa43a-f6ed-4dee-8394-a9431292377e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "55bd1373-cd59-48de-aa1c-bd861acc758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e4d6d-0f25-4602-ba88-01000e218f64",
        "cursor": {
          "ref": "1988b69d-e5dc-46b4-b3af-7e3e52d496dc",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "37a50c7d-7227-4432-80ae-cefe7e7c0bf8"
        },
        "item": {
          "id": "2c8e4d6d-0f25-4602-ba88-01000e218f64",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f628c69-8eb0-471a-9c96-a44d5e892ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94ab144-3576-4d09-9d0f-192cd9ba33a4",
        "cursor": {
          "ref": "88a196e3-2db5-42b1-b6de-3820eec9f990",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "acd42ff4-c563-4af6-9b5a-ea909c012c0c"
        },
        "item": {
          "id": "a94ab144-3576-4d09-9d0f-192cd9ba33a4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "58e92b15-31cf-48f5-83f3-eb5047f60c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dbf176-d82f-45c9-a874-57ea5700e283",
        "cursor": {
          "ref": "990785b7-08b2-4100-852b-be996cf6bd04",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d97c9e7-891c-43d3-ac97-cf4d7ad24224"
        },
        "item": {
          "id": "38dbf176-d82f-45c9-a874-57ea5700e283",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1daa0456-d6c5-4f15-86a8-97ee2731a9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334e7938-83c9-43be-bfb2-484dbcdd9920",
        "cursor": {
          "ref": "b977896a-8871-4843-b4fc-de54a6ae8a82",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2954bcdb-69b6-46e1-b646-58bda77b38c5"
        },
        "item": {
          "id": "334e7938-83c9-43be-bfb2-484dbcdd9920",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "34104648-d59b-45f0-8088-010616066632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce140821-23cc-4593-b869-cfecbb7d214b",
        "cursor": {
          "ref": "4e1ab661-a523-450f-9f13-cc083dd89ca2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c65046b6-5270-4793-a7ec-75a0ca70ff11"
        },
        "item": {
          "id": "ce140821-23cc-4593-b869-cfecbb7d214b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2f36ca15-e824-4077-98ca-aca8936e67e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae4d9e3-c275-49e2-b237-a8613652df73",
        "cursor": {
          "ref": "d1729190-9a1a-415b-8280-d8a19a0d5d1c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a1aa4cc7-6b29-4c72-87cf-47c1771dfa0f"
        },
        "item": {
          "id": "1ae4d9e3-c275-49e2-b237-a8613652df73",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "86384c94-b645-4614-9823-3108425315d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cea9b8b-38c4-4631-a6b8-2f22d33c4610",
        "cursor": {
          "ref": "f04b55af-dc40-41ca-9d5b-64284f1bd1f0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6c87ffdd-7431-41f7-99fc-5a2c3f5d5949"
        },
        "item": {
          "id": "0cea9b8b-38c4-4631-a6b8-2f22d33c4610",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "617e3b28-3e0f-4ebf-8b76-f27361c572d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfbd7ab-bd59-42cf-8fe7-922e256c97d5",
        "cursor": {
          "ref": "7fc3cdf0-dfbb-4be7-9dcb-10675c4ffd49",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c4241009-79ab-4687-ae78-30b514d66fe9"
        },
        "item": {
          "id": "6bfbd7ab-bd59-42cf-8fe7-922e256c97d5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8aada68a-4bbd-4820-9db4-b17a449129f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096b6d00-258b-4870-a8a3-f78517484b87",
        "cursor": {
          "ref": "9ab47c47-8fab-45f0-82ea-1f0bf72f59f9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9357c464-36e4-4316-b2dc-cd1191e44dfd"
        },
        "item": {
          "id": "096b6d00-258b-4870-a8a3-f78517484b87",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "79140c24-a533-43a5-ae04-d9f735c5f336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102853d1-efec-4062-8160-1538857b0977",
        "cursor": {
          "ref": "4e70271b-ad6f-4a87-b63f-ea9f28dd4543",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "09b39793-41de-4721-b8a7-fc1036430a02"
        },
        "item": {
          "id": "102853d1-efec-4062-8160-1538857b0977",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2986e8a6-5c5b-4557-8ac8-54ce3c86b124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2e8c7f-b60c-4663-9ed4-f6b44964a490",
        "cursor": {
          "ref": "db4f0fb1-0bec-4f2e-a7f3-f4bbdfb45906",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dfa25e5c-48e2-4499-8528-aa8737827e98"
        },
        "item": {
          "id": "6c2e8c7f-b60c-4663-9ed4-f6b44964a490",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0e464bb7-35f6-461a-bfdc-7f8c2d51eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a09b74-8bfe-44e2-baa5-05df4ac7283f",
        "cursor": {
          "ref": "669780aa-7290-4776-afb1-a3967d56d4fe",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "90551556-182b-4971-b2fb-113345982155"
        },
        "item": {
          "id": "71a09b74-8bfe-44e2-baa5-05df4ac7283f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "87b45817-1763-41a9-b408-4202710a9308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f7e81e-d6f7-45ab-b3c7-14b2428a19e3",
        "cursor": {
          "ref": "c0ca5dd3-6c7f-4dde-bdbc-3e59696c1d8a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "12579bea-5eb1-4029-b9fa-bc0c03bda9b5"
        },
        "item": {
          "id": "23f7e81e-d6f7-45ab-b3c7-14b2428a19e3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4e27f498-8ac4-4d50-a91f-c5220c0a8cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144be9a9-c580-4405-adec-4b3ddeec9c9d",
        "cursor": {
          "ref": "419b0d9f-75f6-4699-9c40-b81d7fb4ef6c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ab722609-527b-49b0-80ce-f5fe3a244e09"
        },
        "item": {
          "id": "144be9a9-c580-4405-adec-4b3ddeec9c9d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d4820bff-de59-45a2-8d36-1383ab5d18fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e45ecd-743d-490f-96ef-fdc9f46b5124",
        "cursor": {
          "ref": "f088add2-40f6-4ab4-9990-799102fabbf4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "16b54f1e-0239-4f21-81c1-35cb117e369f"
        },
        "item": {
          "id": "89e45ecd-743d-490f-96ef-fdc9f46b5124",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a1e3decb-9a90-49f4-9cc9-79ec4a67623a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef16b4b3-ba19-43cc-a604-a9791b0ef914",
        "cursor": {
          "ref": "4ff212c3-b388-4680-8526-aa063b850dcb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b2cf179d-3ea6-414d-978c-56878a33f24d"
        },
        "item": {
          "id": "ef16b4b3-ba19-43cc-a604-a9791b0ef914",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5c7fbb3-97bf-4290-a2d8-14a14abd1af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66280af-6a1a-4256-a296-a8d0dd91bfd2",
        "cursor": {
          "ref": "070dbd4f-cb19-46f5-a185-9fd99fe98b43",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3a18c978-1567-4f85-b57f-16733b941fe0"
        },
        "item": {
          "id": "d66280af-6a1a-4256-a296-a8d0dd91bfd2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "164ddbb0-377f-436e-95bc-fc1f981aa762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770354cc-29e2-45b3-8fdc-bf35cd1b5865",
        "cursor": {
          "ref": "6af2d3c7-0cb9-4c8b-b868-087eebc3acc0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ce78457b-6af8-4fe6-81f5-91e9d867303a"
        },
        "item": {
          "id": "770354cc-29e2-45b3-8fdc-bf35cd1b5865",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5190712c-0aa5-41e9-b7d3-20f49bdff474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c009f1aa-7c85-4bd3-99ca-67b0ded9de17",
        "cursor": {
          "ref": "1da96e82-3549-4d51-881d-1a9d4195d35c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1a5c86df-b4d6-400f-ba99-9bef369c7483"
        },
        "item": {
          "id": "c009f1aa-7c85-4bd3-99ca-67b0ded9de17",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6428ecaa-47fd-44e2-8865-39659eff6fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337ac60e-d8f8-4c7d-9dba-11a22fc7fbd7",
        "cursor": {
          "ref": "2d613868-694b-4d92-a3c1-b4e4e788cf9d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8e222f6f-beac-44b1-ad84-84cdb817105c"
        },
        "item": {
          "id": "337ac60e-d8f8-4c7d-9dba-11a22fc7fbd7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dfd56134-dc62-48b0-a9a1-4d67cb1a56f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0dc1fd-b2b4-47ca-bc6b-c7f8e79facd4",
        "cursor": {
          "ref": "8be4c5a6-6655-49ef-b15e-9202557796b9",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9d766884-e6ec-4ea0-8749-94e375a5d697"
        },
        "item": {
          "id": "0d0dc1fd-b2b4-47ca-bc6b-c7f8e79facd4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1b606eb1-2606-4448-9b48-ab1999120e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c94f571-e694-45fb-9f2b-204af793af6f",
        "cursor": {
          "ref": "1b934183-2ada-4c4d-9294-385d01daaee0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "77e39dde-63da-4789-b904-055f517e9572"
        },
        "item": {
          "id": "8c94f571-e694-45fb-9f2b-204af793af6f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fcbc26b9-cca6-421f-af5c-17aa076bb519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbf8896-9906-43a3-90ec-af17bb409e08",
        "cursor": {
          "ref": "8fedeec8-3961-472c-86f3-73c570932597",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8abcc29b-9cd9-49bf-8c32-e5476e808847"
        },
        "item": {
          "id": "bfbf8896-9906-43a3-90ec-af17bb409e08",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a918fab4-4bd7-4c1d-9eff-10f53f5871b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a510e0-28c0-4237-8427-2de3e2f43794",
        "cursor": {
          "ref": "f8789bb2-4d97-4769-9f3f-d06e0c423a53",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "75232081-2ff2-45b0-966b-67fd7a70b6c7"
        },
        "item": {
          "id": "30a510e0-28c0-4237-8427-2de3e2f43794",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "624c0007-f3ab-4c3e-a9c7-8d47129b64d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d532627e-83b8-4b65-91ed-bfb658f0e5b4",
        "cursor": {
          "ref": "78997fab-8a00-4115-9b13-c2eb8cf24b24",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "12cc0771-fb02-4420-8c29-b819bb3d2f57"
        },
        "item": {
          "id": "d532627e-83b8-4b65-91ed-bfb658f0e5b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5a53491b-6e70-4cd6-a045-358c55084e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79df196a-0845-459c-969a-dc2898cf1a9c",
        "cursor": {
          "ref": "d298cab5-d7e7-40e6-8422-87171dc6f808",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0807e681-9a13-4ab4-b78c-ca637ea7feac"
        },
        "item": {
          "id": "79df196a-0845-459c-969a-dc2898cf1a9c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "451c20d8-acc5-471a-a8ba-c32f32c071f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72dc76e-c764-4efa-b39e-1b5d2bf69971",
        "cursor": {
          "ref": "952f1b9a-93d0-47ef-b0c3-d2e75b744b01",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "04c886a2-c9e5-47c7-989a-0a4dedc1cc9a"
        },
        "item": {
          "id": "f72dc76e-c764-4efa-b39e-1b5d2bf69971",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7fd087d3-dee3-4945-857a-54940ebc964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053f622a-c666-485b-b5e6-17104e6ff135",
        "cursor": {
          "ref": "1d05faa7-6b17-4611-ac16-5aad7f465302",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1357f06a-df88-468b-bed8-40a55e2a6dee"
        },
        "item": {
          "id": "053f622a-c666-485b-b5e6-17104e6ff135",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c3894b0-c2d9-4b5d-bd49-eb62d5783683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d259ab0b-9e71-4557-94ea-910c3c8e0995",
        "cursor": {
          "ref": "44325829-ece2-4f43-a47e-e182bb1b5ccd",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dcb60e17-fb69-4609-b211-cbf533abe542"
        },
        "item": {
          "id": "d259ab0b-9e71-4557-94ea-910c3c8e0995",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "00cd7a78-c491-49ac-b025-8448ac9dd042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654501e6-61dd-4e4f-bcc5-0f2cb9a9eb89",
        "cursor": {
          "ref": "ee780a92-72f3-4508-8ade-b37cc282614b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0484806e-6db3-4369-8eae-f516715a913d"
        },
        "item": {
          "id": "654501e6-61dd-4e4f-bcc5-0f2cb9a9eb89",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "391c55fd-8fe6-4068-ac90-0aee452eef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d528f8-d26b-48b6-a240-906d54e3e885",
        "cursor": {
          "ref": "59149a64-fa05-46d5-9b5d-6144ab45ff15",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "87ae76a6-ad0e-4226-922b-f65098789dcb"
        },
        "item": {
          "id": "b6d528f8-d26b-48b6-a240-906d54e3e885",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6f33187c-c26c-4aac-8470-dbab54affb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11e0994-5eb8-41bf-9a38-ed4037b8a7d7",
        "cursor": {
          "ref": "34cb331e-44ce-4499-97ea-bd04e4408ae6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "57d20db5-5134-405e-a8b1-b35c22d3008b"
        },
        "item": {
          "id": "b11e0994-5eb8-41bf-9a38-ed4037b8a7d7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50bd1659-a84d-4279-989d-f0720cb3ff46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2547d9e-3173-4d17-abe7-063f162a53ed",
        "cursor": {
          "ref": "8f5c57f6-c9c4-45e8-b9ae-48000a83b998",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c814455a-a16d-400b-8620-4affda860373"
        },
        "item": {
          "id": "f2547d9e-3173-4d17-abe7-063f162a53ed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "997868c1-bd73-440a-9465-bfff9d14e7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0046fa6a-dd3c-4ebb-8061-589c1aabfbd9",
        "cursor": {
          "ref": "0d5b60d6-a3c2-4590-9c96-7ff42e0b41f8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f0d68b20-da51-4e1a-9136-d2cdfa4f9fd7"
        },
        "item": {
          "id": "0046fa6a-dd3c-4ebb-8061-589c1aabfbd9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "168b818f-e920-4a44-8c19-25673f5a5836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6df412c-9ae6-4104-8ad1-ad0297f9e913",
        "cursor": {
          "ref": "59442da0-3c19-4319-9efb-c8ffc8f65040",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ba7b1154-f656-432e-afdd-b7a78a9ef2cf"
        },
        "item": {
          "id": "f6df412c-9ae6-4104-8ad1-ad0297f9e913",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66a942c9-3548-4289-aecd-378ed3058384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d4cc13-0cb1-4255-b7db-4af4507d27c2",
        "cursor": {
          "ref": "89a6660e-7870-4d6c-8b2f-5a924d558e05",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f90e16f3-3184-489d-a902-24085584f47c"
        },
        "item": {
          "id": "47d4cc13-0cb1-4255-b7db-4af4507d27c2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "edf56349-1a56-4c6f-bff2-f43545dd4b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a1897c-9b7e-4a6f-875b-c13c36cff330",
        "cursor": {
          "ref": "bed93782-5f5e-499a-b140-973965d339f5",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "233c13ee-49c5-4a21-8d85-27105e052e3f"
        },
        "item": {
          "id": "d0a1897c-9b7e-4a6f-875b-c13c36cff330",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b999d4ea-f91c-436e-8db1-bf5ed2b83bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5e7c9a-061b-4118-a832-4880a0bdc972",
        "cursor": {
          "ref": "bc4d4889-b7fe-49c3-be36-5472e2b3852c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8420a48f-89bd-490c-ba3a-48716c672b15"
        },
        "item": {
          "id": "de5e7c9a-061b-4118-a832-4880a0bdc972",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6b7b7f53-c15e-4163-ab48-04b51c85221a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda77633-ba4a-455d-a33c-12cece79083c",
        "cursor": {
          "ref": "9efb3e3f-b9ac-4811-a7ca-6a3611e462f6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1f1b508f-c0e8-42cc-b688-f926523513a1"
        },
        "item": {
          "id": "cda77633-ba4a-455d-a33c-12cece79083c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c7bd2f5a-a661-4d21-8d6f-689538096e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531c4947-6b5c-4f07-b078-e2332b51738d",
        "cursor": {
          "ref": "4d951313-15b9-498e-8acb-4c7385571f0a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2b82839e-a44e-4485-a5a0-4a0d443ae976"
        },
        "item": {
          "id": "531c4947-6b5c-4f07-b078-e2332b51738d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c46360ab-cf7c-45d6-99da-3045fb4c4c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0785eec1-c7cb-4efb-9365-b84d89d1de40",
        "cursor": {
          "ref": "f7f8ff1f-74b9-476b-8d8c-a2c9996dc69c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "170c7f38-a6ee-4f1f-b32e-5890f67cfa2f"
        },
        "item": {
          "id": "0785eec1-c7cb-4efb-9365-b84d89d1de40",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bcfd67ac-fa55-4091-a43a-31d3b74f6172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a457b70-6e5a-4c2e-890a-f989a3799e7d",
        "cursor": {
          "ref": "cfa2cd97-1d7f-4561-ac6d-6bd7f01e56e4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0493dab8-b318-4fe1-a9e3-92b1898698f8"
        },
        "item": {
          "id": "0a457b70-6e5a-4c2e-890a-f989a3799e7d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6b621f0f-03a8-40b6-b825-1a986adf546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9f482c-7955-4aa7-8f39-354356701cf3",
        "cursor": {
          "ref": "8971c1ac-4b27-4530-bf70-2d4aa6d52b1b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4d17d1f4-28c9-45d9-ae83-3fe1e1fc2c19"
        },
        "item": {
          "id": "ce9f482c-7955-4aa7-8f39-354356701cf3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8733571d-8572-410e-85bb-a50a12e1e2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120793dd-0650-402c-b3d1-db0e4c7cc649",
        "cursor": {
          "ref": "c362311c-706d-42cf-a171-e33e994e023a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "880308ba-ace5-4b0e-8568-bcf589659e10"
        },
        "item": {
          "id": "120793dd-0650-402c-b3d1-db0e4c7cc649",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c28b284a-82ae-4083-bd66-085b842354d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a21e1dc-0dee-4f95-b215-658afa44eb88",
        "cursor": {
          "ref": "3b69bdc0-464b-4d41-98ac-d5f23e8dae51",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "610ff173-3750-43e6-885f-6753421363a6"
        },
        "item": {
          "id": "6a21e1dc-0dee-4f95-b215-658afa44eb88",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b5b93060-7156-424b-a786-5ac4d76935cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4869ecf-a707-4e56-8ce2-7e84cfe8d580",
        "cursor": {
          "ref": "f04c58a9-01bc-403f-a8a9-7a813ef06f1b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bc0a1394-95ad-4d44-b657-1269856bc9dd"
        },
        "item": {
          "id": "e4869ecf-a707-4e56-8ce2-7e84cfe8d580",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "219c1271-5378-44fa-9009-d32da10da40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa51f864-cbf1-41ff-8830-9a2f15ed3425",
        "cursor": {
          "ref": "0bd8ef1a-2d65-4a7b-aeae-b5cd0418327b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "11f671d0-d034-40eb-b4f9-8056c27b85c7"
        },
        "item": {
          "id": "fa51f864-cbf1-41ff-8830-9a2f15ed3425",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "79d0497f-eeee-4ccd-9e1e-0442f28d4094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29826a80-84c5-42f2-9aba-1dc74fec9829",
        "cursor": {
          "ref": "0593f006-4319-4cd1-8c1e-c4576fb04011",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2b2d13f1-08bb-419e-8ec2-dae3ffc7d839"
        },
        "item": {
          "id": "29826a80-84c5-42f2-9aba-1dc74fec9829",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80240220-cf99-4e36-af30-78d60be34991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153d40da-17b1-4ea5-a963-3a53d4ca0afa",
        "cursor": {
          "ref": "f99b570a-a811-4a82-8358-e95391dbf9cb",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c75b7850-aaff-44f6-91b5-66f91fa1a090"
        },
        "item": {
          "id": "153d40da-17b1-4ea5-a963-3a53d4ca0afa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b8607ec0-7d70-47f6-85c7-5b26daadad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4676c6de-9b15-4173-b1da-99d431cb07ba",
        "cursor": {
          "ref": "307921e0-01e2-4b19-85c4-bbe454f261d8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "998510a6-1d01-4744-a600-c4f79ffadd93"
        },
        "item": {
          "id": "4676c6de-9b15-4173-b1da-99d431cb07ba",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70aac70f-d017-4c4f-b3c8-f0eab9e8b944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc01eb9-18a9-49e9-a4f9-83328700f2ef",
        "cursor": {
          "ref": "81ba76e4-1f0a-4755-a16b-f6eb7f0b6ee0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0c32ac21-0aa2-4f39-9209-15b1cbc40a47"
        },
        "item": {
          "id": "ebc01eb9-18a9-49e9-a4f9-83328700f2ef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "021d2bc2-d5ff-43d0-b90e-01c539d6f90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25736db5-1c2d-459b-a139-2caee96fe2ee",
        "cursor": {
          "ref": "53333d0a-b027-4c48-85ef-372f31e7efc7",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3052032b-d1aa-48c6-bbc2-3f9111b701ec"
        },
        "item": {
          "id": "25736db5-1c2d-459b-a139-2caee96fe2ee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74b212ca-404b-4ca5-a88c-e40d84a6f648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d29b7fe-3394-4677-a536-8b85512aff2f",
        "cursor": {
          "ref": "465df260-3e1f-42d9-b943-2d4ad73ba8c8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b1487c00-616e-4a61-8bbd-45d0666956bf"
        },
        "item": {
          "id": "5d29b7fe-3394-4677-a536-8b85512aff2f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a01a8654-86d6-4749-9736-dc1f1a662d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00375d20-e22a-4a17-809c-2ad20a38ec9d",
        "cursor": {
          "ref": "b377a0da-06ce-4452-b5e9-5dab26a98d65",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "43728f93-ecdf-485c-a009-d2aed3e24fef"
        },
        "item": {
          "id": "00375d20-e22a-4a17-809c-2ad20a38ec9d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "63b24cf5-d40d-4d8c-b0e9-6b66f6f1d715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee17d70-dd8f-4652-b7cc-da53a9fbf1fb",
        "cursor": {
          "ref": "e58bb2d6-9dad-4f3d-994e-f3cf9ba37641",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d51b3c33-53a7-444b-8a3a-ead78ab2410a"
        },
        "item": {
          "id": "6ee17d70-dd8f-4652-b7cc-da53a9fbf1fb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d030b7d4-88b3-4a28-a9b1-a8ea76f59d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80db1eb-a5a1-4487-9a14-c59eb64edb85",
        "cursor": {
          "ref": "ae22f537-265d-4325-9790-2b9f74712f91",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1016dfe2-6a0f-41b0-9e11-17ff35bf30ea"
        },
        "item": {
          "id": "e80db1eb-a5a1-4487-9a14-c59eb64edb85",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0b74b4df-3572-4c1c-a420-2a21571686f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2a2d0b-d406-451f-a833-0cc6bd34080f",
        "cursor": {
          "ref": "192a70e0-9537-4343-ac97-4b7d3aa2e127",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "da7b5fff-3499-471f-ad69-e705644f9261"
        },
        "item": {
          "id": "0e2a2d0b-d406-451f-a833-0cc6bd34080f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "deddb2b7-2da7-4d57-8741-9eab968b556c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3432469d-4c1d-43b2-b3a0-948f96992f60",
        "cursor": {
          "ref": "2c3da1e2-98fa-4672-ab5c-73619a9a8215",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8c479632-4e4a-454b-b251-67d86094c73e"
        },
        "item": {
          "id": "3432469d-4c1d-43b2-b3a0-948f96992f60",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d7351c79-3993-4150-9fa8-3b1c8987eb30",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "596934b8-c548-4ce9-98e7-c3a53ad8dfec",
        "cursor": {
          "ref": "9371f785-959a-466f-ad42-91cf79bbcc35",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "725592b8-7473-44e0-b636-25828eb6afa2"
        },
        "item": {
          "id": "596934b8-c548-4ce9-98e7-c3a53ad8dfec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "20bef3bf-5f8c-4e11-ab6d-5a3564c78812",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdc8575-8dca-4056-b7a4-2983d8ed8d17",
        "cursor": {
          "ref": "e2139e96-8f95-41d0-8e5a-7fe1b51dcd0e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "35a6e5bc-c646-4167-ac2d-77e98ab776ea"
        },
        "item": {
          "id": "4bdc8575-8dca-4056-b7a4-2983d8ed8d17",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7738956a-8b45-46c9-be51-0b376042e3b9",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bd278d-14d8-4f00-a009-2184a221af61",
        "cursor": {
          "ref": "e9121cac-8385-4f93-9a68-3d6b77d23238",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e425f161-b316-4bc1-b05c-812cbd8fc293"
        },
        "item": {
          "id": "89bd278d-14d8-4f00-a009-2184a221af61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "91011d53-e1c4-467b-bb58-64d933545f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bd278d-14d8-4f00-a009-2184a221af61",
        "cursor": {
          "ref": "e9121cac-8385-4f93-9a68-3d6b77d23238",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e425f161-b316-4bc1-b05c-812cbd8fc293"
        },
        "item": {
          "id": "89bd278d-14d8-4f00-a009-2184a221af61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "91011d53-e1c4-467b-bb58-64d933545f51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1fe9a1-fd1a-4557-b2d9-b6cf5ec1f714",
        "cursor": {
          "ref": "ae975135-25e6-4c23-a39d-0423cc111dfe",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "85561504-db99-4a25-a1c9-03b2b5c49711"
        },
        "item": {
          "id": "0c1fe9a1-fd1a-4557-b2d9-b6cf5ec1f714",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a3984dd5-8a26-4274-968a-335231f96717",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ce9df6-100c-416f-b5f4-16bbdb42b756",
        "cursor": {
          "ref": "9735f0e0-f428-4e3f-b7a0-7ca2b0d46da3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f77ed6c6-cb17-4fb9-b4c1-7c6bb1a20c74"
        },
        "item": {
          "id": "06ce9df6-100c-416f-b5f4-16bbdb42b756",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "00ea3783-2b77-4021-bfe1-c21e0c71d7ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}