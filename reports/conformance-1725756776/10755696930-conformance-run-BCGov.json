{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b299affd-da80-4390-b5e5-c27ad5053702",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b97ce478-12df-4b0b-aac8-fd29d27cf8a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc1f8e38-9778-499e-b1fe-3b7c5bf8c511",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2815281a-a039-48bc-9e75-bb51189c854e"
                }
              }
            ]
          },
          {
            "id": "619241df-9150-4e97-9e0b-4b067baf2787",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95904dfc-92f5-44d8-80a2-31b8c505fff6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01051336-4b9f-45d6-80d6-256debd50544"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c0110e0e-904d-450c-99c0-f05b1d6782db",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d442ca0c-fcde-4df5-85d4-3984d3b2df84",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb8eef9b-b313-45df-82ed-8248e5dc4985",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "757cc97d-5daa-42fe-b896-3cf176e0ee50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abbb377f-5307-4df0-a312-9bde994ed8a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9290c30f-85d6-492d-90a9-203181ab3d2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02c3bd96-7eda-4836-aaaf-00f6ac74aa0d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "39efb6c7-051a-4cc7-aba1-55c24c394e6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2bd7942-0bac-433c-9b6b-83220014ad21"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a41b421f-71b8-4bf7-b75d-c0ec9667dc89",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e3c26cc-38f5-4aa5-b992-29964236254e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a6a6453-3b85-42fd-b92e-6ff6ed2331d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8b69a04-26bd-44c4-8127-52032b69d0c9"
            }
          }
        ]
      },
      {
        "id": "367ddecf-2503-4069-ab18-5cf24801804c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "026d3d9d-38e3-4710-a768-020d61628d26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98678e61-9e04-4265-8b99-710ee0315160",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff28e085-7c17-421a-80bf-62a0526d6e38",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbb76bd-fdde-4a41-bc9d-8ebbfb7ee11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5a79079-3661-4a25-93b0-f1c44f4e0a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e0777f-5a5d-447a-a2b7-d3c2f38b513b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e090fc55-fbca-423f-be01-75dd749cc574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81a97f52-f677-44ae-a6f4-dcc90538bdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb9024-50b3-44eb-bef4-9f75988207ea",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3077e6b1-22f8-48a7-87ab-eee650afba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fc0385b-4a4d-49e8-a0a7-0de724e56bc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd8eed06-c96e-4070-8ae6-983ad045758f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a707367-be1d-4b7b-8508-99f938921a7e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f002f7b-fec3-41e3-97b0-b179c6a1501c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "831b7aa7-1e7c-496b-a497-a38cbec95cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7e8afd-2998-4838-a335-148218252abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1374e4-77ff-4495-b355-68dbcafcfd5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46e7b98c-5b9a-4391-9b2d-cb6163b860f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa3b134b-187e-4c83-8aae-4da257edb33f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7be9c5-a60e-4497-ab65-90de5fc34961",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "02f101fc-3468-4fdd-b353-c74a6662dc84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a584c03c-ae2b-42f8-8c3c-bc143aa37259",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "36511e57-ff2f-40ff-8d14-1aa430ab4800"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e50191f-52a9-4f52-bfca-bafe2816bd9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d41d5354-5ff7-45ed-9876-0c329d624547"
            }
          }
        ]
      },
      {
        "id": "0ec43fef-5a4b-4283-afb3-cd3779604cf2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f91fdb8b-2ebe-4c8a-8cfc-5238a442c3f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3775a818-a898-464d-8c00-5298d3d005e1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5d0dc406-09df-43d7-a5e6-797a598a967f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0417e575-7d13-44b3-a5e7-b2bcc35db274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5407b05c-eed1-4cea-87e9-7ca33e39ae6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2336d865-c153-4516-a16f-ea0eeb02e362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52649ac9-ae34-4df1-b1bd-26e6ff21b2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5358629d-6b7b-43a3-9a1d-82380df6ca11",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3943b1-4749-45c9-aaf1-c55e47e0fa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c49ab41-ac18-4d26-b24f-be9fa3d187fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdeb954-7590-4732-b6b7-b99c1a176898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "234a8be7-cf30-4050-a41f-5d4cb030b7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d9252-cd9b-4a63-8e8f-43bd00ae99b2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac11037-be46-4c10-9f03-b387a7e748e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d443c831-a5d0-4689-887e-eddb2ff64beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584a938a-36d1-446d-a759-6cb1ea9cedc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e708e7f0-97fd-4761-b70f-2b0db58138ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d32ecef-c3de-4a40-81a9-0efa2b3ad59f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056a9535-d8d0-4e8f-881f-c2194b236145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357263e0-1bff-47b1-acb4-e27ccd7305f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1615dee-55b4-4b4e-a087-8a5f21ed1dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8d1acbd-1752-4edd-bb46-c14c2ed06c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354d42da-f2c1-4d05-af1e-afc2f9d7fbe6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db8a337-8cbc-40ad-8cda-734b8c5fe7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb62969-27cc-4d23-bc00-41cd5e08ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a9c0ed-8ba7-47e6-a39c-9475c0b6242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15fd8f67-e62f-4b3c-b3e1-4f309e94135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89acd35-5d8e-4fce-ba34-55a21ee4a8f4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b860bbb-c16d-4cd1-bf38-47d5d96008bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d00d99d-4024-44de-8a27-12c5771b3f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91332f44-1ad1-4e18-8f5e-99f1f6ff55ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f540f60f-6fd7-4766-9dae-3fcfb78b1f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82760792-e794-43f7-861d-05bcdff67903",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa7395a-3daa-4756-bdfe-824d60d7ff24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2f17ef-e0b6-4955-a29c-a2fdf941fe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa1c5c-da6e-40f2-aef1-b16e5da6d1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d544cbe-704d-469b-a8e8-53892f53a9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562a6928-3950-4357-8003-bd95cc9eb84b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7030889a-b174-42bb-8d0c-56ed972c0b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254201dd-53b6-47cf-9811-8f1e7891c427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c61b51f-16f6-457e-be7b-4c83ebeb8840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3da8940f-b155-44f6-aa15-711d6e8a30d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc6010b-11d0-4c54-862d-5c82a033e12f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434e5b23-fa6f-46d5-9652-b01877c5dcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a96ef6-18ca-4edb-9404-4c094286651a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed7dd7-f8e1-4e41-87f8-63ba795f35ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f1921b6-ea4c-4fc9-865e-43ee78c05edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69bf572-4eae-4b50-8a8b-1948c2db86b8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5bc3ee-3686-4e4f-9b8e-b112dea5fa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deca490b-47ab-4de5-b145-e9b7bbd9857d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6987cf7d-b049-4b18-9302-1dee4a5fb721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5f0dc53-5cf6-4cd3-bf6a-57149cc233d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dd3232-e0d6-49db-aeda-e5e4dd6982cb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7211678a-8b4c-4b68-a3df-ffd7babb3ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fabb720-e32b-44a8-b367-e7e7d74dbcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4928f0-0e19-4890-94f3-d875f11ff2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffacb4f5-9577-4b90-bf17-162b0180e273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecc29d4-668b-4466-a71d-8c480f5636a9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bfd444-dddd-486f-9524-e84163bfbe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18757041-ce19-4d46-a8d1-b83829bd53f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02315b5-9474-4b6b-8499-59b97330f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9362c93b-48fc-4486-b0b3-d914dd190589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda37325-bacb-4a12-8066-658be6f93a82",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a41973d-72c1-4d8b-9c91-b178e1773222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af21c04f-a431-46c1-b2f9-60a8ea74e687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0144c160-cedf-47ac-a8da-8a8f433e8b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3320d277-5656-4819-96da-1027686927a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed02ba7-1116-4f6b-a746-379bc9a89da8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faa3447-2d0c-436b-9f02-8589e7f079f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e2b601-3190-42c7-9096-0ef7eb45c179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bff3c71-88f1-4d20-95a9-58b1511e2ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d0b6618-edaa-4612-9835-12e79b7d491e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d8eb8-55e0-47a2-9cc3-b5b9acb96d9d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664bf1b3-6b8e-419f-a89b-5570ea0069be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe48587-82cd-4a09-94f0-6f16389f6d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76caf33-c53c-4e5d-8553-43f1f5402811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "833e738f-2296-47a7-981f-7f5542e15993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5579f174-7337-4e20-af0f-566a097ac114",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ab510c-a62d-4ece-810f-bbff54a026d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1647ac-8737-4dd6-be32-6bbbaf72c874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfc8631-7ff1-4f93-b9ea-620fb8f5c546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ef9e7e-7bfe-46fe-a9b5-2540859cb938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a56208-494b-455d-9b7a-4f3832cd41d9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debf5f1e-a1d9-4366-b771-92d1e69684b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc6f554-27dc-48dd-91d2-9c9ff2f3ee10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e46a457-2bf0-49d0-8a40-e597678189d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c8a671c-c1de-44dd-8b99-2ad52218bc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07729a90-12a5-49c2-ab01-a7109e647212",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d0c978-7b37-45de-bd76-a4694e6e0589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5e4cbf-e6b6-476b-b2bb-0a5f2eea9185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022c8a6f-bad3-4869-a72e-49d17b4c1b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07165b6e-87f9-4d4f-894f-109fb4ba396d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db25ca-0b5a-4915-a783-00a622e000d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faa6f6b-f6b8-4b8b-b0aa-6aebbe042c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586e3a8f-ec7b-455c-bf58-bd3311d17e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28281bde-5a6b-49ed-b01f-7ef6dcd1e563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d36c7c-208c-438d-a74e-8e8475f21c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e6ecb4-cf0b-4a40-9d1b-d5507b77ead6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d231399d-0b0c-45ed-b803-60cf297ef05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2129da9e-fa03-4ee1-8773-16c5257a9dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c648d339-3384-4e0b-a39b-acf1f491ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d4bde1-9920-4343-8caf-babb9502b4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5613e177-9608-4e5b-ba83-cbf70ea07e9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc411e0-6bc2-4865-af7c-a7d827b8b0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5181ffc6-09b8-43e4-8be2-86626f5295f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc2b44-06c9-49f1-89ca-543cfaa5c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fd4223-991b-41c2-853b-d73b6f80a373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9331dbbd-6df7-453a-a584-b9f9b0a87129",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717899ab-a3c7-4e62-be31-a95785b3ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be49540-ae77-4726-8ce2-2222d0c23c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd0bb49-718c-440e-9d61-0bd5ef3fe4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf93eb7-5524-4ddf-81ce-9d4e89e45f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a1957-f74e-4160-b4f8-f1271d2de66b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f017a6-c07b-49f4-8c61-3d03daf2fc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedc7ad2-efac-4a3d-9f87-e20a08d58fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29142a73-6426-4933-ab9d-bb21c3b988c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "388568f1-cf09-4d32-b7af-3d926333b6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199d7929-5cb3-4807-a927-072a483da4f9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98ae408-f155-443d-b281-892f54900cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf7ef2e-5879-41f6-87bf-9b159383f179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c2c566-95dd-4978-ae76-a67663a4ead6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac6e842-6b52-4853-93d3-c78760297e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b570ccb-00e1-4158-ae30-edc17963a559",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c56d0a-a024-4523-afc2-92f9c51000bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102f4f4f-3584-4c80-ad82-67dff54dc308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbcc8ad-01f8-4246-8483-6cbbaa04cd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4dfdfe-8344-4695-8e23-84e1453e4f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89857db6-e097-45f2-9c62-f8daa7b69847",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f42dd9-c8e6-43a5-8198-476b7da7be74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a794b6ea-6c3b-4c0d-af1e-59da4f3c8cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7432779-891a-40cf-83d3-c7f7709481b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f070a1-8b9a-4ff3-8281-21671ed4abce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9223cd-a5c4-4dc8-99e7-12e4c4d3afd9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6100939e-1313-4214-81b9-522b01f78032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28cf7bd-de40-4c95-beaf-33da0f4d63a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3312dd-3846-4867-842c-8063b2ba868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8fb473-e16f-41cf-be66-a0464dc657fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94b147e-28e7-4a90-8d3f-88f9a711a5df",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9fe6c8-547e-46cf-8c86-6b772d3557d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c7a9f1-3179-4e97-b5b3-a34a1354ef14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc81f45-327e-4460-b93c-0618b4251ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62bf697a-175d-445b-91e5-2a62d100fde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b5af70-857c-456f-b73c-7909bcdffe01",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28940ce0-9da5-4802-8852-904e0cbf1720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8fc033-55f0-4c0f-b987-794eca453149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1621e3fb-267d-48fb-a300-7ba58cebef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8881178-c910-41b1-a155-06b17dd8a9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63729ba-7afd-4351-98a1-65fe8dfdbd0c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fa77ac-bfd0-4ac8-9042-8ca64a3cebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab59da83-b2a2-4da3-86d2-fa465c7f1582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8dcc36-a8c2-4778-a3b0-38d9afd13b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "542f858e-dc86-4d37-96cc-ae551b265d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4137e84-9d39-4695-b8ad-847deb0ebef9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e92928d-0c6e-4a54-a012-5d2685b8f8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b70661-2b7f-4c81-a56c-9b99728ab628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff6ff50-528c-4d79-8e37-9250adaa686f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38033a03-239e-4025-807d-b0986860e2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c747a41-2f5e-4e03-90c6-d4856eef147d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936050b4-e373-4adc-ab9d-b0d123801d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa89604-47bd-456c-8460-f9d57f116210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d6b2f9-4641-4147-aad8-c261f4780fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6edb4ac1-23e4-485b-8153-4f648e26f0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a0cd1-c762-46b4-a6d0-bddd4bf23882",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dc7af3-7fda-436c-a639-ab2d91f7ed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4949f628-0882-4a25-ac95-cf9b0bb2d345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2e2886-4667-4be8-a35d-cc3dff4ebc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e2586f-0fd4-40c7-b0d9-0c1b8485ec9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c4d063-20c0-4ba4-b562-2f4ecede5ba3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f21605-cf7a-4acd-af42-4cf5ee79e37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984f53d0-7873-4791-9c63-8deaa16bf1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e73958-d989-4cf4-b072-0218aa960e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcb49b0-bff8-4c44-9d1a-cdf70bb60f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1b189f-06de-40ab-b5aa-338dc2b99228",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e27b58-6891-4240-980e-6bd943b27b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64911392-dc83-41fa-bdaa-6f3125e558f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb24726-7ede-4960-a6d7-d0ce06eb167f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ed9fc0-17d7-46f0-9a37-190baab03473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aae46f9-c24e-4f06-9c9b-1cfd6707319c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5853f125-2e41-4505-bdbc-062fbf3f9c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d6048d6-4add-4d6f-8144-3c0459489c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbf7597-f23f-435e-8172-9a28acbdf2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7edf4bad-3f30-402b-a582-1b5333dab116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c514aa1-df80-47d0-bac8-0527b15ba3f4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650a90b8-b550-4e4c-8dfd-e8c7dc360ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c69dee-547d-4425-9234-b5f3d6a8ffcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e06e0e-649c-4428-8a28-e73813058fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7a0ab9-27c6-47c2-8257-a497f052834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a38e99-f4bb-468e-bd22-1d1da4e7cec9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68bebed-1f47-4b00-99f8-c76f884cbca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78e878a-3d43-4e8d-978f-eea64b11e416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c054c60-d197-4a1b-af27-750313a794f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "652b6aca-3023-4303-8aa8-560b26e31b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094e263b-31bb-4265-b4e1-0ccfe6d5c6ae",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed50b11-ca5c-40c5-a1ae-899356710a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b431cf-f9bb-4b8e-b7cd-6f620838c0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a16a1ad-0c85-4c6d-819b-0d110cfaed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "121ecc98-0471-4bd1-82d3-018d645566fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e019161-c749-49aa-8647-5ad74df48a71",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f64062-3029-48d6-85c9-bb1b1df30ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2756051-a20f-49ad-a347-625fad0b33a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df912393-6c72-4c6d-ae55-0021fa73853b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9bf6df-5bc2-460c-b2de-e6abdd09d114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8645f87-776d-4e18-801e-5dc7fbd081b2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96622ea-f7b7-4f7f-aa6d-1d980dfe4c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f12324a-f646-40c2-96ab-b5711851b75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9041533f-0023-4bed-bb8d-6b68247f3e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "814bd653-3d52-4a16-bd7e-e2a277a08836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8799e2d7-4676-41c6-abd0-da147cbdf89c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9380fc4a-e3f0-4389-baea-2816f97f9b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afdf459-b257-4435-8034-3a094019e635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3788c097-8d65-4d54-a7e1-f7bc1b4107b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4ac743-efa3-4f30-b8aa-02d2852e99cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7e0852-3783-4d8c-9fe9-62b43ee7b108",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9830450-0381-4d94-a020-cbae6aab9041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec5e26f-9ad8-4be0-8f8c-a6b9c0063ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c90048-8e4a-4407-88c7-5660f3703bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e27c5ef3-52c2-4d32-850f-29acbde136b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90a7bec-463f-4511-a695-ad22ebd0ccb5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cedae5-9bef-4338-87dc-d476b3ec9426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608321e3-95f0-41d0-b32d-4a097b73fe75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499b3066-d6cf-4549-b418-234982d6cd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "da31dc4e-3c85-4129-820e-b155ddcdf7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7acc749-8f3d-4350-9d80-489c611dc0ad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae01cb81-2347-45b9-8611-87010e5bcd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e172a50-0eb1-4e06-8888-fb48278a4500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af60ea7-1a52-4f7a-b1bd-8ef5ce8123b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "387e15d3-888d-4eff-8db4-d03396c040e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64204762-c931-4554-a68a-10bb130bfd91",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a2e547-dc1e-483d-843e-b633fcb8b24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd785b6-b316-400e-b442-633a9482ac86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fedebfb-5632-414d-84ae-97dfd966bbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe769855-7bc1-4061-8828-233d1f099dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ec722b-4f01-458b-bbeb-8c214816b8cf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4121e77e-ef9b-405a-abce-e904881999db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cbee59-d2cd-444b-8b7c-ad7a96944923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8afa39-a853-49a7-a451-c99786ac3438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8064c857-579b-4cf9-bd35-3358d64d524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c9b4e-d1ab-473d-93af-c88cb6d6926c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348ebbb8-62f4-4222-a3fa-da8ce8967c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bed39fe-5732-44a0-ada2-74868f02ff16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b3e1ce-4088-4d34-b047-ebb22b320f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2dd16f-545a-4958-b023-e2a2b1b28234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31523450-fbe8-4b85-b6e6-9c94a9348035",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367e94d5-146c-43ec-90ff-6c79f0f51a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198cb1e8-dc95-42b6-a4a7-580683eebfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fb2d5e-9488-4915-a033-1a309bab27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b60aa0d6-25d1-47dd-a653-2f8ab5dea0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc40564-d6c2-4e95-bff7-66917b4f60e7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d14723e-50cd-4f35-8e50-fa0705dfc062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fefc973-e6b6-44b5-81d5-9c4de71d9866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f47d345-373b-4386-83db-94ee71499efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e84aaaf-a945-4b82-830c-fd140b44198b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cb2f56-be88-4d61-b9a8-3a557b8fa9fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e64d1-55a1-4653-901b-2d9d983bc93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928fc558-4b57-40c8-bf3f-2f8ee3271d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ec560-190a-4054-9e12-0985f3275c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1d8afb-007c-459a-861d-969408435f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8cf5bc-907b-4761-bcb2-3da1b8454b3c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea6151b-f15a-4325-924b-558a02f0d46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eba27c1-2694-4a1f-8b59-d43308138c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612f1146-af5b-4227-afed-2cea4b5a67fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "162400a1-c777-45e1-8d30-3b4a6b0398eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98188203-ae05-4339-9a71-7e7fc8d28392",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b265019-c121-4750-8a8c-a9105c2c3940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a35485-941f-4ddc-a30a-6978604103ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b53612-5c5f-49b1-a83c-18ac814f3572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b3c0a6-74aa-4c3d-9b0b-21763f2b2606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2920f3a2-8571-4b02-8630-f55271a57892",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc0c247-7dbf-4186-bfc7-f330b3c0c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa70f51-cd48-49a9-9835-fb43ff717c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61290c64-4d74-4e0c-95ed-f1be75e3cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a0ce29-456e-490d-b96c-cdafcfa55d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf47e6f-1071-4446-898e-25ac80deb96b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcea9dd8-d8e0-4425-86e8-3249f1a5fa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8fba0b-1981-46a7-b389-a6c832be8a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf30d5d-c846-45fb-91f1-c6009ebf7c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6418052-324c-4c1b-aba4-63acaf9957ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac5c70d-057b-4f24-8172-1e7820c50464",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91837292-bd7a-40c2-af2a-a42d0dd8bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cc74e2-0e81-461a-8de2-cfee1bec4f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183a84c4-d893-4099-b97e-4f94121ddb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a7415678-a3de-4a2c-ac20-04dc754ecae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a33c376-5bd3-4ca2-879e-358a0c452cdb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c701b96-fc12-44b7-b7b1-2da630d260dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf430f55-c5a0-4965-958a-d4cfa7eea152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c33caa-d33c-4b11-9bcf-b6154344b2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bed02300-8961-42f0-9a80-9796ef56082a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdf9d59-9030-4ad0-a19f-6887a0177d02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8e9d9a-ae2b-4b47-b3be-ea5198a98fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91acbe1-271b-469e-82f6-a2f21f09b1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83e5e1-25ee-4298-b707-4de70b6c3e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f28add2-291a-4663-89ee-25ee30c9ebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b73c2e-9a9f-4d3a-841f-a4086eb170a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd30026-ecc5-4aa1-a9b8-a7ac2ba5e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46026685-ae3a-49d7-9975-363817cce7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a13013e-32c8-4d99-b430-dab32b58efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0ecdd2-5c2f-4e22-b40a-7689a7740ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc01d9c-66c5-4d76-baf3-b5b54e60c2d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6343ac23-862c-4a0d-954f-c2d8683ec675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde1808d-f77a-4345-89f8-a28ad3c22a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d930d10-ab94-46cf-9c02-2aca8753d0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d31428ec-b8c9-4266-888f-af5208c9bec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226b60a2-e7c1-443a-8c17-620b62c213b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980c888f-f4c6-4b3b-b592-e8ad63edf549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f0e5e4-d620-4485-b0eb-f10fc2c5b299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfac7fff-d40b-4812-8fe1-fdbce66bbb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae65f0f-4151-4395-9b3b-22e98b6b9857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6695ed1-1796-4dfe-81c5-4f103de747bd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193bfa9a-7b1f-4127-b0c4-603ba9d6442c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e807e27b-bff9-41ac-ba91-0d30273975ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f83471-0e77-4b11-8f37-8a94e0eb5fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63e6be9-7477-40a6-97c7-f62639c92d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbc95c5-5d04-407c-a310-e80148a23e71",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434cc2ce-741a-4270-99bc-959529e1998e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19708514-bb00-4aba-bef7-aad3e684ecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b5917-da9c-425b-a902-6e2bdd6b69cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef21a73-57fe-469d-9dd9-52d308c2729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af230c0-f3c5-466a-93d3-87cd69dcc085",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd757fa2-3ac8-4d90-b004-15382858b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41290656-9196-4b99-a487-2901c7103e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b1ce8-4799-4b0e-99fa-9c07cfaaf8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e80f0e6-a188-4046-a24d-cba43c5864b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8860cf76-9ed1-419b-b671-1ddcef84005f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f894764d-fff5-49d1-9166-ef91815b398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a3b24d-c502-4846-98f9-3fa5409b5780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364db0a0-2f67-4900-b481-717648753580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d765bf-7a32-4efb-8d30-e2368e5eafdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8341aa-792c-490c-a932-562daa9cead4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf35544-1f1b-4218-a009-581bd6bf17b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5c268d-4a4e-4088-9093-26b77b80508d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269dae76-d09e-467c-aa0f-740a4f8cb677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0ed88d-4cde-4e05-af86-c6f4950e03d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affc316e-9598-407f-8fbf-2d6d8b7cd974",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8ab4df-ec4c-431b-bc1c-955109f36388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560b1608-37dd-4313-89c5-a7f0177ccc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3909d032-3986-4f13-ba0f-c3382ea4e112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1944425-833c-4697-b211-b1f362a9b8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d183a7-60e8-440b-85ff-57590b8b4ce0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e1e88-154f-4831-9eb3-0ef3d844d75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2a1450-1900-46ef-bbfe-ceda1faffa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d92afe-eb20-4493-9171-1fab54f16333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f450c9d-3569-406a-9a7a-5609f15baba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86870b1-546f-43be-9453-638ec6258e27",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baef6878-5fc1-42da-9587-4ebe46cecaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99803ae9-a80f-4250-a70c-822aa3eb8acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fba6e9c-1861-4487-80fb-0a7478447946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ac1142-28c6-4487-924c-3783810eb117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ca72ed-048a-453f-92be-3e3997305255",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f41854f-a690-402f-8971-a75edbf4cc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f27b5e-443d-4cfa-ac7d-11a6df0741c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1852ae-be27-40ef-b664-3afe261aef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8886fc0f-e585-45df-860c-494e10d613e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc2226d-9ea3-478e-99a6-13ae2049b292",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58ee3f-a589-4655-b7ba-6a4f772b8e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a6b451-960c-4f68-8cd8-574f9dd2688d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc23a38-f9a0-4a37-87f2-17c4916f7baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "742a1dee-fc19-41a7-9678-4210aa0719a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62cb761-c7e4-48ce-adf6-342ce34ae9d5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9361455-d577-42b3-b594-698dc92d631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c7b0f9-9a92-411a-876a-d98a5eac0203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c4ea5b-90d9-4d6e-88a4-91a8ffcf7f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd00789e-44ee-48c4-8b53-84cc82f92802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95919a33-7489-4362-88e3-de01c4024098",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c13594-cfbe-4a3e-8df7-b455cbadab34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d085a17-2508-40ef-9e7d-34735a0706a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed73b077-a9a5-4864-a971-c61079d4c37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1fc641-2690-4873-be19-433d67f2ff6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0a1992-d9e4-4023-a040-41e216721dcb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dfa658-02b5-4754-8028-a97bff25a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b0c243-85c5-494d-b88d-129a7a353e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9368d39-bedf-45c5-94cd-8874814a0f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc10ac7-160a-4ef4-b7d9-7c09e2a31ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54232c30-307b-4c5b-8d93-c109f1822396",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d0e9a0-b3cf-4faa-87ce-9489f9521335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f91ce8-a136-4a59-90c4-74421d55a322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a1ca8-58b0-4cc8-bf1e-faccde3fd710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1952df-e616-4b3b-af7d-3f7a27b0d549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1358f1-824f-4f41-9c06-28d2bd0a77ef",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36494a70-799a-4d74-a0ca-37f0d88f8bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd73eb11-0a17-4569-9592-883e81989413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c447318b-013c-4b41-9d24-c0f998253324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "876aa48a-f334-4a58-b673-c659975ed39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391b23d5-1a36-49b8-a6f2-23fc58e02003",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d34841d-a525-4fd1-8e1e-bde9c75504ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fed743-7208-4a2b-ade6-7fbb612e35ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce418539-2b6d-468b-954c-02ae5960775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7afbd05b-9e5c-464f-ba23-4fabb7e999fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9339fb2a-1c98-42fa-9a9e-ce450f86c927",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eb5777-4394-44d0-95d4-e43ee5df6352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8212e239-3351-4f7d-b43a-2d401287500b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810258fa-fcfe-4913-84dd-24f3488afbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d82f4c-86f7-4e30-8817-921c1d9a19a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608a3ff6-4a9b-4424-afe5-f0e0f072f858",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141fcb6c-0144-48d8-af6e-551edad2ae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1369f69e-e911-4a19-b91d-0ea8778f86f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b86f55f-ee0e-432f-817c-d01520af537a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f31571-ec5e-44cc-9e21-c8c4e84c5e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd7a2c-683c-4ffd-9f8b-86afce87808e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a295e73-6609-4ae2-ab1f-065370f76947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f526768d-b94a-4c6d-83d1-4fe443974e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3fa20b-13da-426a-9cf4-dd979daf9254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73b310a5-8511-4016-ac6f-739ac18804ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb814256-2b03-4916-b3e1-c537f873d796",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7c6419-c992-484f-ad8e-8c41f9515be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57eafb1a-a16c-43a9-b18a-fcf37ed654f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e160c2b-4ba6-4c00-bc08-091e735ac1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09fcc57-f4f1-41ee-b512-5002010857b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736822df-4e51-4c32-b0f1-cfa8279f3c20",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e94963e-600e-4ae2-976b-47cd698905ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b6339b-7060-4876-ad0c-71802d032f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48792feb-1143-4d12-85e2-2ee8602d53ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02945583-f813-41f5-981e-09e4d084bacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4897897-7461-4f15-a74e-a7990bb2341e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c1721d-97d7-403e-864f-645fc2b9ce68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75097d92-d10a-4cc8-862e-a836b6fd9cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e5388f-09d0-405a-bbd0-a3872b909627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6626dd31-4874-4dce-9526-b8fb340cd0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c561e10-bb2a-472c-8249-ce795c835cde",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f206d-a64f-4f47-8bb9-f88b4f3a0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0b43c3-5ab6-4192-b4d8-4e01c08fc470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189d5b81-24fb-4538-a13f-6952b70a75ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "121f06e8-b347-4cfc-82ab-0d69975582c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49eb834-a8fd-4ac7-b32b-0ccb2c9e51d6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3211266-e449-4571-b066-8382934c10c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc6e4dd-4595-4aea-a42d-d2dc8033a984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f256ac-cb67-4e67-94a4-51339aa00687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eec5a706-98c1-4303-a06d-135317413a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775e515b-2637-44f7-b4fa-7819ae3d5c73",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02df9d72-c76a-459f-8788-a4385a324c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5883c7b-216f-4ad3-9940-fd5f6446ee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0f44e3-7a1d-4ec2-bc52-3a07c8769e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0a02c7-1cb8-4545-8bd9-18b9f364a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6e71c0-f625-4d21-833b-8a727a9222b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe11d82-418a-4e29-8a9e-05fcc16fe217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe03e1d-c91b-4f09-9cd0-4c4c0d143822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a88c039-f175-4c77-abe1-902be3541b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f6fcc4-a1de-4888-8167-cedf8bdc895a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc804aa-5d8e-43c3-95b0-1658eabfd452",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605b08e8-5a57-4a51-a781-0e8e3b5493f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc33e88-22ec-405c-813f-0d13270d4b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd51ce2-ad37-4742-bbdf-2c7f511c7740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60ad27bd-91fe-496d-93a3-c1b56d4622b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a706f618-3d4e-4537-90e6-7324abfe3c0a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13be07a9-a240-4cf0-864c-10c470e933b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ba4fb9-cd1f-49ce-a320-9bcef65ac83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c4eff7-23de-454d-baa3-b375319d2ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b488949-5fe6-4612-9fc6-d73b54ea1964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d439ab07-a081-4c14-90fd-1f3585c667cb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e14f16-9e7c-4792-b7a7-78a7978acca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d648fa0e-7d3e-415c-810d-814e4c7aaa3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c799e-1775-4fc1-9c50-81a750b6cf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6b83c7-8b3f-4ded-a144-33b7dd37c1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac8d536-0b79-4659-b029-a9ac257755ef",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d2e7a5-bf87-4fde-8c98-9030e6d344ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aecbf5-a12b-46a5-8f42-5766ce0d6b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a5c758-94ce-47dc-bdac-6207eb01d55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84cdfc6f-e68c-4c12-bc80-ef99667bf9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd7c203-a57b-4d35-802d-4f499bd8b7a0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ad8fe6-e05a-45bc-8e27-ebfb9a2d4350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be79fd47-394a-4675-b80d-83e2c2ecbaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2625132a-5eb2-42f6-9d14-7e67828c7a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "392fbf79-88d9-4cbe-8105-81067332d477"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c71a1cf6-edac-4137-a2a0-407a5ad973de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2285238c-dce0-4f24-8e7f-fa8aa13af2ea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc0ddd7-63a9-4211-a2ed-8874fe769730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9484b05d-0764-4e1b-8851-ee2e9a4a6b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64d4e3d-57a9-4cc4-9569-c1930aa0e4aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74fd359a-5431-4e9f-8e3f-abe1ea569eaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27c159b6-4391-443c-9677-9e2bfc1dec26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a02a655-dd5e-48ed-8ef9-7051d5caa9b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01635def-9d62-4daf-9160-56b316400578",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be4f3483-397b-43b1-a2e5-53d227153389"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "522aca88-d2e9-4d3f-8c58-11969f6d05c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34203e0a-22d7-4a42-b7bc-accade655797"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c61bc12-8304-47c4-ad7c-40c9ff4ea607",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82e45b36-61bb-4996-b4b3-a5860bd82467"
                }
              }
            ]
          },
          {
            "id": "08948a34-a515-4005-859f-bc7b9ee0e065",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bef200fe-fe35-416f-8b77-8edeafdf42b0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "96c5bb88-e3a9-4064-9079-1c5df4bd6dc5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48875a74-8174-4943-91a8-8c4288038e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5604c7ce-f254-454f-9437-77061c18f3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7846a867-424f-4424-8074-1ca1c596c3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73030b0-ca53-4f37-b64c-7fdf2cfeab58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb1bff65-5a1d-4bd4-a5c8-a78aa31705f4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90c98638-ec55-45c5-b09a-ea90147e1d81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7dcca39-6344-4ef2-86ce-a9317e7f2cde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f141b622-3274-4216-aaf1-5f837efff43a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd94e057-a962-415d-98e7-617faba7852d"
                    }
                  }
                ]
              },
              {
                "id": "58b8cf69-d50c-471b-a141-b9807d482181",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "244e170e-090c-4196-ac3d-8179912638b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b7ef733-1cbf-4880-ad66-531b789efb2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c07927e-7ab8-466b-a99d-d85a0d8106fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3d12ae5-b7fc-4287-be12-ee23af855ee7"
                    }
                  }
                ]
              },
              {
                "id": "17c3c430-d5d6-4bea-8804-f8f5c3fc63fb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e0f8404-b856-4ea7-9cc7-5d0b54b0e752",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1c0d230-7fbf-43cf-a764-096f5d167da5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3af73e5-eb8e-454d-901d-a93b50c77630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a39cade8-f28f-4f5b-88e5-3a6587842b82"
                    }
                  }
                ]
              },
              {
                "id": "5730f11c-e85f-4167-b301-86cebf1ac074",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "796711f3-76a2-4911-8562-764b1ff342df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc6d9193-e24a-4e2f-8732-bf5aab465254"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e302cb4-347a-4258-b799-9bda37915050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "24d93514-21d1-442e-a9d2-aa6e8f1fec4d"
                    }
                  }
                ]
              },
              {
                "id": "031ff2fc-6226-4c48-be7a-a5864bc79dba",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7faa7563-6b53-4013-9c5c-029134882d6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5129b31-86a7-4f8f-b42f-237dbad5ad9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47ecb5dd-c489-4eeb-9243-3ab46533202b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3711154e-246f-4535-8e94-f51eaf2aed42"
                    }
                  }
                ]
              },
              {
                "id": "6eb15132-883b-4927-925e-fc1abdbd1407",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04c9c98c-9561-41b4-8a7f-10919e4422d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a8b84bb-6af9-4fde-b9fb-484c40fe0c69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfad9bff-5e70-4ddb-a076-b3d2d6a3a5da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa1e7f52-0748-45d9-ada3-fd811a9905ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0455a36a-1f16-47c6-b80b-ef31236b420b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d9538a8-1d0b-4d81-884c-15b9432167f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd73b37d-c2f3-43a8-b572-11747a517890",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0837e5d6-eab8-4ed6-903f-231a174b9ffa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b3c4203-bc15-40d8-8ce2-8d8fc1e560c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9dac8f91-5ecb-43f7-bca8-a13aff1783f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e737c4ae-5be3-497f-b940-eea7d798882d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "381c7d91-b88b-4fb6-9b46-0452f01709b5"
            }
          }
        ]
      },
      {
        "id": "edbd885d-976e-4efc-abdc-aa23611c3b47",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "289c4057-f4e5-4e23-9955-7a4c6e94d595",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a85ba3a-8c72-4bc2-8015-c886ce65c356",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11b61202-7514-4639-a86d-885778b784d8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e944194-6aa5-47c4-9a87-60c926f5826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9430807-bcaf-4f49-a388-459f52b36a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885d4d6e-e00e-468e-9a1d-6061525e4050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1194729e-c703-42a1-bf96-406ef0369810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08954fac-9301-4947-b10e-8e0d6a76eb57",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c519926b-1890-4fde-809a-efb1011a4386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e546b326-c6df-4a42-ae9d-38114ab09386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc1911d-c260-480e-acce-6623fce15ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "179d6645-2492-4b17-9224-3d329f9a6611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2848000b-d9dd-4cfd-b95d-66f0158e1a55",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec37e7d-b143-4c16-a3b5-34366c05e39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cc0c55-7c20-4fc7-9eb6-810f3483efa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b4707e-6a59-4e15-b554-3c56aa1d730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32eeb795-9f5d-4497-a66c-21f696a72ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34179910-0e99-4acc-b579-7dfd8ef060f0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b392cf40-a35e-4627-9bba-5a0bc1276322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf70746a-0d7d-40df-bf63-d1e91c193a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8057252f-8168-4967-8ed5-96f96813ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3916cc1-bbe8-4d15-9aca-8bd5db7bc1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6aa725-39ae-42ea-8a18-d1bc1ba9a2dd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390ea9ab-6802-4e36-8a0d-31bb5e38e87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ac7c9-5341-433b-8885-daf825a7f1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2029ec-38fe-4d6b-ab6c-77fea23d04dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f2779e-f602-46e1-87d1-d90bf9aa18ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bd4915-6fa6-4314-a405-9093235ea013",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf42cd8-fbd2-45e9-8297-8b9ea4c91163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ed9bb-a7dc-4baa-9637-fc5bedee108e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a6d12e-24da-4181-ab95-d85bc05b6157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d744c21f-5997-4109-9f18-0fceca30df69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fab1daf-f6f1-4375-80b3-eca93489a6a9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebd60b5-893f-4bac-b237-3afe20a1ac29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf110b6-a32d-491e-9c3b-64eadce5b37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83686f1-cc2f-4ef3-82ba-0f3f0a340d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f6849c-aa48-4640-af77-baf4497a4bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb87fd56-5194-4d85-b42e-fefbaee7d769",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79b49ae-d1e3-4d70-9a5e-7eb034743d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7eee7c-96c5-4a64-8ba6-98c3eb3b1bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6120ea-a4d7-438b-ac76-25e0fe44edd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f387c64-0399-4345-99ac-edd6bef987c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb9f90b-6b83-4871-b79b-44a327165a2f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87209273-4b41-40d6-b42b-11fc3c10b014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebf8729-a3ae-4fdd-9ad2-38faeece02da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80104eb2-9dd0-42de-b9f9-c9fdfa375113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff02b4b-2eff-40c0-8d41-be11c1089765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287cfd16-27b3-4e88-9e91-dc1145eee099",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a274369-912d-48c4-bbc0-ec0985dd6cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74274cd-f468-4686-ab82-42eb0bbb6cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faa316b-d0ec-48dc-a5f6-3d08ce0e30d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bd7aad-367c-4da4-938b-0a454ec54789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad0ca71-f207-4820-9be0-9b91c927292e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75522cc-78d4-4dd5-bf44-fa9e70a7ed1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b74fef-029a-4e12-9709-667fd8249d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ab9da-3ec5-402c-8ca8-9f0398988711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54c39d5f-d941-48de-a9bf-144743c7879f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba393470-6512-486a-b371-1189aba21c63",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33415f3d-73eb-44b0-9773-54ce33dce57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f935290d-ea22-416a-98d5-64071569f3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161626e4-190e-47d3-b2f0-1afc37fc6b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6062dd-d163-4674-8b9c-df76b75fbd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857bb33b-0efb-42da-a074-b547e3085364",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a355eae-71d2-47d8-bbe3-ec282c83d12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751e7d0e-ef79-4770-b13e-9b467f3c720c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075df3f4-aaa8-4987-9c25-e540d7632cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5011f2b1-9b6b-4d9e-aa07-69caecc88e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625d7a1d-3f0d-47a4-945f-e9dcd620943e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917f0667-d4d8-4bbf-a604-9aa579e79826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7818242-4408-4cbf-bfa8-9f2bfa9492e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4ccdf5-4cf5-4716-98de-95925c30e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3577a0-d2e5-4cd8-a564-9b66e419c9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db8b40f-e581-44af-ab74-35bc2bc4fbdf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ea41c5-2158-4914-bd8c-474fd0426616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00256eed-5892-4a1c-b5a7-a1a9a24446ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a069b16-9210-40e7-8caf-42bc90ec433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e1996b-8a14-4140-904e-df7b0fa546c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c8e4ac-623b-4447-9d2c-800d64aa8648",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7f65ed-bcd8-4863-9407-abdc91218b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6467e72d-8d39-4b6c-bc18-e8bfce69b5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15416017-b813-4d31-89b4-46d6a76c63c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f27b18-f219-4bf0-aea6-068bc4ec4191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6af750-9954-46a0-9574-96e0300cdf83",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b877f358-6f51-4bfe-8991-f0e9bc88bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3a0e8e-e90c-4f3e-9d6e-e31d427696b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1655e045-68fd-4126-91f0-4b389a14d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3728426c-e578-459e-a5f6-58f7e97a5a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac834883-046c-4165-a080-236f69f0682b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1bb913-4314-4c32-8846-4f57ebc5562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a63f163-adba-4a8b-b3d9-187dde02e58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a5c6c-57b9-403a-b4dd-f6a12edb4dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "106aa606-efa0-468c-9204-fdec0c0da1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b62002-2e64-42df-84ed-dd94dd0a90d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f28304c-6e64-41cc-83dc-244f23840f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00fcc78-7439-4226-94cd-ff94957ec622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f305adc1-99a0-4732-aa56-dc524f8ad9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c24b5e-c38d-48f1-adc4-d1e50a30398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f17383-dd19-470a-b803-7a2537eb7073",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4041323-6ec8-4914-8ede-9ac6bfd928a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612557a0-add2-46d7-808f-225f616a707a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3278ff7d-1127-4023-a735-f86bec5c38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c77547-252f-494b-a89a-0c43764c1b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7aef7c-ed1e-471c-8792-1256c6ea5e3d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fec8cd-d978-424c-9f44-e51badfe3bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce79695-56f2-4f6b-b187-7eeb0125a340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0c533d-a372-4c2e-8227-85543baa928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7586295-7422-415b-b37e-350aaf2a3dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f0e184-d5b9-47d8-8f5e-784cd0c6c32f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82823b5b-7667-4893-a735-801d3c919f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e9cc9c-bd6f-4f85-8a8d-2890a91009ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097d76d3-a26c-4aae-a2f5-0ede95f1c3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd006a9-4894-48e9-8c51-395cfe19531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de395c1a-fb10-4b99-bdbb-b744b7eb0481",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8ae39c-669d-4966-93e9-0d5545a69cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c506337-46f8-4ead-bc85-7c429919d01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d542a3c5-7f8f-4dda-bec6-3a80761acd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76476f2e-9431-48fd-859e-dc6d4436522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a162bf9-0249-4e0e-ab9d-12f4073f266f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e0d0c1-634b-4399-8cf6-067096fee30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb151a1-e2b2-49ab-9229-438df25d17a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bcda80-16c1-4fec-83dd-de6e6a676cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59386c4f-9d9c-48c1-82de-add7d47a7530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d577cd-2aae-4bab-973b-5fc43dedf362",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b524002-54f7-4bea-b6c2-7c3633808e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93241d2-dc30-44f9-a511-7b2240ce0fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d58229c-fe0c-444b-9dec-aaf74ba2741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1276d5-e73b-4b26-b622-0c4208085e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c69ea3-d55a-4082-89f5-f64e65257e55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae6c280-729c-4c2f-b348-ab12c3e92d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6c7aa6-9fe1-4a17-b9c8-f1c59ab29e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c29866b-aaa6-418b-883f-dcd8a0138e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eded078-0b67-4051-927d-7e47004ee237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a590a58-d7e0-44de-83ec-b801aaf0a684",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbd03dc-04f9-4985-8eae-99c168a780f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47278219-2084-46ae-a5a9-31eb274dccaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4829c9e-d9b7-42cb-ad63-41e707c06158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27958774-234e-47f5-8d52-448a883cc347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a673fdcf-ca8c-4567-a8d0-c63103bf239e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30477be2-2061-4f43-aa22-9ea49aa0d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc40f5b-9502-404e-b63b-3d77316448b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83054a1d-798f-4de2-aaac-38824992f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d69da9-61ea-48e2-86f1-4064904de338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d378ac0-3d06-4a5c-8f17-b3b5a72e70af",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9921535-40c4-4f03-8dda-28b1f7e0eadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acf1bb7-fd16-444d-88ff-5e09bec66de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae42328-4b3c-43b5-9aaf-00d2b611d1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac263469-6c9f-4829-b851-a7f95c3ccca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ca0fb9-fdda-4733-a557-8f03e5600498",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bec735-00c1-4f0b-90c9-86141dc4f285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d59541a-ff3f-4345-8fbc-3e577ad18b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d58357-014f-4309-ba0d-bfa0297f5d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1af2f62-80d1-44c5-9d90-26f0644801da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5efc8d8-e66e-41b0-a28a-4274995cec8f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb50f34b-53b1-4abb-bde6-9610d0fa1d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be92320-9800-4152-b88e-9a61e87c4284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec20442-3a80-4765-903f-73b4cfedd982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f4b904-e83c-4514-b25f-50a71a1b544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3827bf7-fe62-4fa6-8ce5-bf6e25b3c406",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36184d5c-2865-467e-90ac-65011c6c6977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08691697-944c-41dd-ae56-d78f53f7eb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83c727b-e827-40ec-9e1a-5d6b508287cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ac7fd2-60bf-45e5-a277-6c7c306ea9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f7e1a3-ebcd-4272-a980-68b5e7ee4140",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4462377a-44cf-4692-93d9-52779968401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adece30b-9d08-4cf8-81f8-4fc2b7368d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf25e5a-326a-4299-9903-aab41f8d56d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cf2866-9fa5-40c8-9029-d208eac2b22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d707954-588f-4beb-b444-8e50ec36fb3d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd66daa-f751-4d6d-8f95-0ea049530ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f45091b-76c2-4b34-83cf-36a14e2d5b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70251a4d-66bd-41bc-a467-0ce80f34d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb3e1ef-834c-4849-a46c-0100a63175b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e83123-f121-4d22-8744-07555d444886",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b9ad47-6c7d-49d8-aa71-40f0cb10f2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f427887b-1754-4d76-b495-ad96652a9ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7930cfa-2e55-4a78-8f8d-17cb14deee6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0be5a0f-08e4-445e-b600-af84978eaef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74f9658-2216-469e-ab7b-7a1a03277a4f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0990a02f-6821-477b-bb8f-8f9f31d030c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48ae44e-e788-4140-b660-b61bc2861096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30022a07-e9d0-41a6-a468-e6eb90bb76d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae10671-8be3-4dd8-99fb-80f4333faea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17118372-66a7-46aa-b0e7-a7d5390bafb8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0a6019-868f-470d-a607-05e1ed7c6f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c16e13-7d0d-481d-9a8b-c1cab625288d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200d3c3c-9450-40b2-a432-4844e2934645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea05b0c4-f2c2-4405-9c84-96d0329db9a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e932d840-4076-4115-9465-365354dee089",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c758d4e-01b6-475a-bf48-d6230157aa74",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18318aa2-e719-4498-b257-f703b2af8fbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9a83c813-07ff-44d2-bbc4-03d6aacba89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0579f210-a184-4a10-80b0-6b67b6b2829f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c4f1fe2-37fb-46a3-9450-ae26238c8723"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36928b96-56c0-410e-ae6b-45f1d9afaafa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "158d3285-58f8-4a88-9dc0-b5765eea4ea3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f14c804-1420-468a-b32e-d17781ebbea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d4cf02f-6383-4858-9b8c-40b2e6cf01ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a992fb1-bac4-41d6-8a31-051b86fab9c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12c62b32-5401-43e8-b084-968f9b864315"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "173f83bf-4abd-4dc4-9042-2d794e504baf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7eb19a3-b38d-4dc3-a71e-fb2e83e0e577"
            }
          }
        ]
      },
      {
        "id": "bbd41608-de51-4fe7-8e75-b874333a4ae6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "10200e9f-ee79-465c-93c4-e3cc1ef7aacc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f38d752-695f-4f56-9376-2979cf135774",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5640a8fe-2ff5-4655-b6c3-71985ec77a63",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb3ac38-8acc-47a5-ab30-a56a119952c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f370f7d2-c8e9-4e84-8b9b-8281cacfe886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133a4ae7-b292-4df8-9c79-2a1ba39f4607",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f393ec62-c0ab-4f90-a5f6-4e76eaf0455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ff6e67-6182-4f6e-ba4e-92112cd17cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c1884f-96a4-4d77-a4c5-fd130c9abc62",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e778a814-10ae-435a-b61a-6b9ee843d618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c732f78a-c439-4a95-bec3-219374243c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bdcef2-9f5a-4998-991f-0f404160dea9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b23d91b-430c-410e-a50d-88cab7cbe427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd569b6-2eaf-4c13-9cda-80c62eb0117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1418c2-0275-4e86-88c6-59a6d240122b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ad9719-117d-4004-8f3e-d5367f4c470c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fe6b5b-7fe3-43fb-86a1-e8fa4b9e1fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd0fe5-6165-4381-84cb-87b51975c7e2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d0c540-7f4b-4906-a052-1a082f37a22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258226e5-67bc-4a07-9d75-442ec55e1a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a001ea-1960-44db-a887-73ea8dd65181",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669f9881-1f54-4bef-bb80-ec0dbf96aac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d0cee-b281-4825-ab2d-2dac068f7fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65549954-c8a0-4ea6-9fdc-8d6af8d75eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26462adb-8e5b-49b1-8fec-0f82f0368575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984ac09b-c907-4093-b7ad-eb600aee3e55",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e534e3-8b9e-4eb2-862f-710fc68334cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ff0082-8de7-4db5-8205-c6fb83f17cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95dda6c-3a66-40bc-bc8a-5e84f34a642c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4206db40-7f80-4743-8c9f-4a2e5b9d176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d935f307-cb75-421d-9dda-cde6c99dfaa3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8738ec30-3138-475a-b7e2-f118502ec101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2803b65f-606a-4502-a938-cfb9cbe5012c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15809787-ae00-4e19-bbb8-d7b560d14205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498030ae-f86e-478f-a1d0-f437a4ed0dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e61ba3f-adc0-459c-82ac-5f37af9a1b86",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e4ae8-6820-4b12-8fa1-ccd379485bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec6df2a-bd18-4fb4-bebd-05f049d815c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d52848-8881-48d0-8345-0be326a9c8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc18cdb-7bdd-4294-86bd-f3a67614797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9511cb83-4ec1-406c-b8f6-e950bae0b503",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff25559f-b7d4-4f76-af13-5f2c6af0aace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a888ff8-1c08-467a-a312-8b2622995b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fbea8b-d26c-4cc6-ae11-66035f921962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace7c7ab-82d2-4b2b-b886-699d24df259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39974b0-8d84-462e-a67e-a1a0c59d6df4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf09097-5038-40e6-ab16-d33bcf27663b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a5b56d-009d-47a9-9ca7-812343914fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e71834-5f0f-49d1-91f0-587750481fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac55579-f00c-43c8-9896-2175bb6e162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b00f09-fb86-4ce6-98e4-7d327c057103",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c47ae85-47fb-41e7-bcf9-f6fe83439912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d532a2e5-d87c-4fe8-92c7-5ef52712f98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cafa63-f393-4112-91c1-4ce9608a76e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fe9d6b-1c63-4fdf-a5e5-457663e67fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fd7863-69aa-4fcc-92f0-7a77a7c35ba5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9c8c57-6cb2-457b-b015-32f11c52aa8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7b31fcd-43c0-46b9-8bcf-80728f7bf070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb807f0a-9d29-45fb-a137-a971e12e456e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acf7724-8e77-4221-90a4-d7d9b9583948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc5f39b-31c4-4ad3-ae90-15d6e45b0f8e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4ed8a8-cff9-461a-ad92-007fbe4f88bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a157ec-2310-47fb-b690-a379edbcad7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ccb5c8-44d2-4e5c-b12d-bcce40050d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36bca06-fb82-464a-8104-4a1333f5022e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d4597-0b0c-4f87-b3cc-cdca24fa3adc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ff0b87-27dd-42c1-bd87-a63372d20184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c02be0-0cdb-4dc7-9bba-25e8e8d74c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a52f898-ddb1-4a1f-aad6-ca6b1294afd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de3f21f-4f3c-45fc-b794-fb4844d0fa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aee76d-1370-4a29-b426-d78851436b77",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d15d3e9-0c2d-44b2-8764-69e64c69fb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee47b26c-f18d-49a3-8ada-7e670afe7402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cb2d0e-3573-42f6-ac7f-a4489d429ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478b55dd-6f3c-4718-8b08-f894d643d392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2976d4b-72e9-4ecd-b7c1-ea5477e29bc8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9c051d-d53b-4225-b32b-3133c317e7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7270294d-04b9-4585-a9a2-e1dde92bea9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dd84ad-4275-4b68-bf45-0f74cfce2ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd1f35e-4009-46c4-b6f4-c9485d0d7df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1049dd9e-d4c3-43a3-94b8-10b0b8960a11",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab8780e-e60d-445a-92fe-d0184ff3ea7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbe0d2e-62f3-4c87-883e-8703d9e24e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f22beb9-a389-484d-b574-00658218cd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837953bd-7b77-4a54-bc91-bc76808ad4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f746cf64-9f8d-42cc-808e-5f783bd2ef90",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46df11dd-12ba-4fab-8b30-d3954582e4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5daca1-f920-4744-b710-8fb31ef5ef42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f40d87-371b-4a89-8421-af8c6e96157b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1385744-20f5-4bb2-90fd-20954e6fe687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8621ade-336b-4cb0-9b16-6695a40d8954",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe3dd66-9bb6-4670-a8f8-685f0664d078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b40283-0c09-4d4b-9b0d-ef67d612667e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6876137a-ec5d-492e-917f-e92ba9145e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341d27b3-7ad4-4990-a529-0a02fa60d980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63744d3-c087-4a38-bb7e-c334d6acdbcc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d621f4-e8f1-4068-82c1-9d85550142b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd970d3-ac6a-447e-a48e-75bf0cfbac4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a54d2-1b7f-4330-87de-f8db27c32ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b30b8a-8bd9-46c2-a556-f42fc075245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e7799-c070-4738-b700-24eb80eae753",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b457915-4be7-4d5f-8951-843b644332cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cecf45d-68f6-4888-9bd5-fb4cfde505a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc4ea24-8c5c-4977-87b0-17f0966e43fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b004d9-30dd-4b77-a067-a258c0ba3bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a93888f-749a-4f4f-a5b5-1ba30b47ba08",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1429ed37-36b5-4e2d-990b-a44953fa4bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098de4ea-e6bd-414b-b311-ea4bbd03fb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d811a0c-9b55-4c26-bb5f-39e1d2141a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670ddf49-390f-444b-bed5-33595a87a8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbb759c-07f0-4cc8-a59e-9ee7bc3268bc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd14aeb-7382-401a-bb8e-5db0c28d9cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d5283e-942f-43c2-8b05-5134701c67db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13223a6-d111-4325-89d7-a08026831410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e997c2-32bc-4ab0-8c83-e3a522e1f849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0133a00-8819-487e-a8c9-0622c0f40ea8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccd9519-aef1-42fc-91cc-fac577d3ba42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aee665f8-efdc-4d3c-9563-96ef6404bb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c23d17f-8afc-4cd3-848e-2a2e7a12ae82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71134028-1166-4a57-bb71-9349768d0e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3363a0a-b3f8-46ab-a913-d72dd3b17074",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff311358-41cc-4644-91a2-3578ccbd2228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebce7dbf-da24-41d0-a650-dfb434dd0384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704f8337-d0c8-4bd2-b38e-2ab245d342ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6d8b69-fecf-4bea-8480-a0a88f3bb0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac087d3-8cae-4690-bc5a-ca3feb5b45fc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4ff009-9166-4edb-9eb2-fc487cd6a433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de31bc08-5181-408b-bc80-b1d808dc4aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7616563f-c3c1-4501-a113-279114469e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c26bae-ef05-4c13-aa87-81e74c045e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62177079-2b24-49b0-983c-842f4f22ce2a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81377e7b-5876-4817-9dd9-2738ecde7883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6872b8-26c5-4d7f-b0e6-123ae60ae081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56da4cf-65fd-4962-b445-d28c1477bdb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92b3673-6da7-4e75-b5df-8dc11c4d3842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d35cdc6-f5f0-4762-8aae-65c588e543c1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32b5179-1054-4d4e-9e71-8c303b094607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac737e4-d6e7-4837-b67f-1ddba563a03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15a4218-17b0-4c0c-9b5b-74c1734f8bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fd0b90-efc9-49f4-9e25-3b81ab05f54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000cd777-8ec8-498d-a892-a7a5f51aa728",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b5233-226e-4cc7-b989-7af3dcd23273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6706e084-4cd9-4745-b3c0-15cd3c35019a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a2a10-f624-415c-843d-1509a8d96e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c676313f-32dd-4b83-8819-faca23e97fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f9e499-8167-45a6-be38-7717c96ff442",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c07146a-d03d-4b52-9839-5e00c056799e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed7448cc-4c68-4547-bb0a-c3ec299cb932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23b149f-ebdd-496a-882c-86f8946cba0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b94db5-114c-447c-9500-f3b52269c120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad74f78-38fa-4de1-b9a8-d0b8d4ca6489",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8018ee19-072b-44e0-ba15-c3a8fec2f8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984cb291-a58a-4c98-9d9f-ee2f11facdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53c6cae-da66-4324-953a-822cdc749f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193f752c-eba2-4800-b18f-5627d12ba7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f06300-7376-47b6-a553-4959c8582414",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9fc40d-eb15-4b3c-a04d-32ecd99c5fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234ae4b0-61a6-41eb-8d28-5c15f75f750a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afcc301-0131-43a7-9074-558c5f116956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471f62ec-5d35-4f89-b895-025460247ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8c40ad-3f12-4b5d-aca8-f865df871391",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ee2c9c-bd58-4deb-81bb-be66da2b3794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d88f88-a17b-43cc-bb5f-4fef00aa95b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c6079c-f15f-429a-9e14-6847513a8f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33db4abd-6330-45d4-8b9b-9996489d47a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abff03c-0e98-478d-893d-0194e58caf09",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fe05d7-dddd-4b86-b048-a525909926fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc53454d-8c99-459d-8f37-a5fa622975f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879fe651-6bfa-48e1-ac9d-5f80bba452dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f1508f-a51f-41ea-bdfe-84892ab2cfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883ec0b1-9816-41bc-a4d1-d64d3617c234",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe81358b-6805-4162-8488-5bdb91612575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c09a9fe-580f-4dd6-9c55-155c26ed0069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa59194-6baf-4660-875a-59b0e47dad27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ac3096-ea15-4ddf-8cc0-db52c2dd87a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc7999a-58f6-47b9-83e4-451697eeec63",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0025bc-fd53-4b00-93d9-745ddf7f2901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9d2ab6-c7d6-41d5-9f87-8828c88ac7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc72491-8f8a-407e-bd7b-90b98649e4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f2c9ee-61df-4cd7-9f6e-ce97d8645a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fe72b0-8d27-4f7c-ba4a-ccc1bdf92d88",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15466e0c-5ef7-422b-b974-76e592399603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d80b677-6d04-40c2-a0dd-2f37a42a6445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51b89d0-58ac-4fb5-85aa-9cccb7b2acea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeef94a4-7059-40f7-92e0-83bab7c4bbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09442de5-9e6e-44de-a773-42ac2b0e9e59",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195a6fc3-0246-4597-8eef-5c57bcca57f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3643f8a5-68f1-44e3-911f-e48104f90075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f046ff-e5fe-4176-b776-190e8db19448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce85faa3-d356-4cc3-a619-fb28ca3f7621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148162c9-b311-4dd9-b3b1-037fbbc3cf18",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6faa4a-fc84-4d3c-8866-a5356db66be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135ef3d7-1d6e-419e-ba38-23af36be92d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827562ba-30e2-4ef0-a839-6ebe41de5998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bd48e4-f137-481e-944c-218973b64c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122113bb-057f-47ac-830f-78cc02846688",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8c6e1e-85b3-41cf-8e47-a4da0f88e185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e95169c-d024-4520-ab48-576d452a38ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df64217a-a2b6-486a-91e9-493aa9e9c4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a4f31b-0b22-4161-ad28-9d2dbc6eee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a723ed-7ef4-4055-95c2-2ae504f45f57",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008df916-da08-45f0-8163-d9353e693a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18294c6-6935-41ce-b6be-2aab1e06334c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b71001-ec21-4d12-9958-513283922a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d285ffbf-345d-433b-9205-1c6a8a1c5007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1824bd26-aebd-4ec0-98de-d3e667515b40",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cf605b-4677-4c49-92f6-761c50a6a5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c632b695-f90a-41ac-8f06-91c7c0cbd3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98f784d-5a7c-487d-86e0-5b65ba298902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba0fddc-1f36-49ea-8a08-15c0ed764a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10e9d8e-34bf-488a-a718-3e0787145234",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a8af30-5082-4dee-bba4-dec4efa27463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065572c5-fb86-4edc-b2b5-de36cb87018a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd27225f-9645-448f-bb28-06a7ffada954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247f8ba5-b34b-44b0-b15a-28c22511e6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad061b80-9e89-406c-9145-000fed3c96b5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7157781f-1979-4c4f-8ee3-9e6839b81715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78efaa2-252f-4690-8f18-c32798191710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241af019-e4c6-4ddb-bdb2-1a3ccef22a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18da72f6-1e04-4995-9850-b8ecfb5d414b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b6e1bc-c881-4592-bf7a-26b3af2c5c53",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c96925b-0e47-4ee6-97a5-2f0f0f94d648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7cea2a-b0ae-4b54-b7fc-2b0c9dbdabe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c2dc76-276e-4549-af0f-39d1383c3985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517f929d-8c78-4f90-8249-f02112656158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb182a7-9710-4385-9c09-c5c26070c7cd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf725395-1c94-4240-b84b-5da9ddfb9aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa7f005-1e24-4e7c-91c9-02c673256cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65d1ca4-3965-4841-9ac2-94a2a19d78fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea72991e-9262-483f-93f0-44d5589b0ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb031ac2-f60c-4499-9d0d-1f753ca1a4a8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2303b65-dabd-4337-93b7-1170b2f81c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0ed7ed-bbe8-4880-9c84-1f41cd408974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eba3b4-bb84-4da4-86db-257cc82e1c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7244cf20-5f38-4ad5-be1d-b0bd02fa2eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347eaf26-0dbd-43e5-ac13-16e96abbe183",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da638ea2-87a7-4df7-897c-d13c889b3a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba5ff10-34a1-4d7d-ac95-fd0f9fa4e095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042a51d1-fd34-497c-b0cb-d0cadda16759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7bad2a-f7ce-4222-8edc-f7e42bd5665f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fefb19b-f999-4440-b8e5-387962f33108",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485e253b-1f8d-4d14-8f8b-ff315d4553bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2736086-39e3-46c5-896e-de598788d973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4f8396-b653-46a5-bb3b-d9283371ef19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bc63f2-7ea4-447b-beb2-969a8fdb4856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dd76c8-f77c-4cb1-b7d4-e97b4ed90998",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40369a0-2832-44ba-8fb4-c70e91f59e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cacb49-edfb-4506-bf4a-abe0b0500c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7794b7-9f86-4f9e-81dd-e59c329c4c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3548985c-f4cd-4a1e-8959-c60ec66fa6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f29621d-3c0a-4ccc-8c82-813d5e44c173",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273c0c10-a8e4-439f-8da0-eef15f073c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a994cb-612e-4470-b952-bfd1e8d1d508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59adae01-c243-411f-a54d-de1f40757eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d8f778-cafa-4b31-bf43-0f3918593e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ff6b6f-e020-4351-accb-172184d6d206",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd5e8db-158d-4e96-8f18-54e3658634cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79500cb5-1882-429a-b29c-6e504e231cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e90cd1-1ec4-4bd3-a4de-9c4d2023b980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b84e575-083f-4e0f-b843-1c55f03e6bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370d8c3f-80a9-489f-b434-8b4669ca69f9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c439654-45a2-4f46-800f-ca040de10446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8caaa7-3cdb-4cc3-aaa3-710729c906fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df9b362-80f2-4a6f-9ca4-3a7d802b330c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf9032b-a1af-443f-a70d-e5dc5f10e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b993aa26-3fcb-43e2-a440-5d1d5803dc7c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8992b731-3310-4e1a-82fa-2c6457741ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84c1649-98ff-4cda-b773-a715543dfe71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff02ab7-ce34-47a1-882e-9d4ee97ddeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bddc509-0038-4da0-8fa2-3f22fa37b43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bbe260-d3f5-40a7-af12-f73a5ebc7ce0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df91d94-03e7-4176-a76d-5bc55faf8305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc88c0f-ba2c-4e62-a807-e446d8ba88ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff760d89-7ef5-46cd-9c96-08dc6944ff3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a278e6e-e946-4abe-8f21-4a1fea4d0571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044a6483-e85c-4ca0-8a7a-df6222217cc0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f881c57-318b-4092-b418-fc74d73b409a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bf88af-22c0-44cc-a944-c83062de95c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d85deda-6dad-4ef9-ba44-ad850d4e7231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cc7102-9f73-4a57-9f25-c228abde4f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85114ad-85cb-40f3-8061-7f6c4c0cfe59",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a1ab9a-f632-4fc6-8b6f-9eb3f28e7db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41820e67-2cd8-46a2-9a19-3195bc46d461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0508b051-1519-4075-8464-83dfa3060744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0bab77-7a68-49d9-8bcb-5c2b02d35250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db21740-273f-49c1-93ea-a77897757b7e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5240707-3cf1-4293-8b90-9e9e31b3af24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c816a98-aab3-41e9-9eeb-6de2fa8414ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85437a35-90b9-4199-ad1a-9cc177c037b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cbb494-d1f3-421a-ba70-f9ab152c4f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf55c3c-487f-445f-9fb4-5d0adb7e985b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbd745c-f64a-40dd-b293-ba5ef13d3faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bc73ec-ead2-47b6-90b8-5df84b15bcdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb9e5c1-53be-47e3-8a17-30d8b4a3db9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc03220-6750-41ca-8929-1afc8b846e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd54ee3f-9e8d-496f-80ee-f4c781a40347",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8933f3-24e1-4e4b-ac94-586bcb03e480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6962de9-e0cc-484a-81e7-fc4e998f7f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95f6025-30b4-4257-9d8e-a0d764afd159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381372af-83a1-462a-bdf1-925c139315f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833cf198-5f2c-459e-883f-34a652a6586c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c60987-6cff-49a7-85a6-82ded7b1ca0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93a6568-f93b-450c-8a64-861667ff3346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451413eb-bd94-46e4-86bc-47f6dbf20aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0ab1be-c068-4f50-bb5d-a7b97b4142c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5f7a43-d87f-4c2a-ac89-07c678c6b7fb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa953963-aa5c-433c-aee8-aeddbc0c2e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e49c9c-96ba-4133-b2d0-4e6fade1dca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f0145-d3a6-40b8-978b-8dfdde9de81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d71139-d595-4c97-9885-87d18d20e861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d826f4-0275-4235-952e-24053cfe6257",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f714ef-3343-46a1-adc0-6fb1685aad94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d233c6ef-f337-4859-b98f-4988ced47d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93493c3-f38d-404e-ab0a-6d90348c8749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a4d2ca-ad8a-4e37-9e88-0a45a555955a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf0dbe6-6798-488a-9a81-d11d6fce4d93",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae8b95-f97c-4288-a37e-986f828ba0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc05a4e-43ec-4c60-9af3-8dadca736536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef697da-e388-49e9-b183-2e5558fa7a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02548442-1ec8-4f0a-98bb-1ff04289c615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16120872-2f90-41af-8a85-2633c3b0a65f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85a10a8-f673-4a03-b019-bed914a10f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7ce26d-c13f-4cb5-bc5f-863b1bf01497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b5227d-f40c-4f44-8744-d9b32d2a01c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564f1ce5-e9fa-4fb9-aced-a5d38a8faf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb14fda-2a17-4fd1-8b16-fab8b04b91e9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e877b13c-01e6-4f33-b002-c093ad663675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f6eeef-d8f6-4fdf-92f6-60f96b78298e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a649e19-dbb5-48ae-bfe9-58621cd4ff58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115e2329-e82f-434f-ab0c-de4e0c50a753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f64690a-67ff-447e-aba1-f65d769a1b24",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f18ae-9f35-4720-b1eb-f232e069a798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e685192-f6ba-4663-93d6-8a6c5e961047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b9e82e-5d99-4d91-bc43-77ee5b300ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab1eefa-d9ec-4a36-a202-a5664f801564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a09bb5-ba98-4edc-ae53-acd00cb8c755",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309c94fd-0b43-4527-b791-74999a4ada79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c85f264-9423-436f-9498-78f8f7c40689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56feb553-fdf4-47bf-b220-5209bfb4fbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa3c018-b38a-4174-8f06-78a99db33c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c182cb-00c6-4233-a97e-d56dea6db66d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e7ba7-6995-4172-ad10-08a4febc757f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "537ff465-13fe-4002-a191-12d9ce79bc43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0cea67-0417-4ba3-92b4-eee607964349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3014ae-51db-45e1-b633-40d11b721186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae166951-6aec-47c3-a4c2-f06bd9698304",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffbb525-3e06-4fc0-ab59-2a3781f2723c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c859d17-4a6e-4744-9019-ceb75cadd91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e943bbec-23af-4a2f-a505-c503a2e3a1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa97182-6851-4f3f-9f6a-5aaa4a913102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d68a399-adc3-47d0-8ba6-5b3d6a303ad0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0636a713-d1ea-4c0c-8e1e-229b0a731990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff8e17d-f308-4531-9751-6ad4386e1452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3855e2f5-cff6-410a-9360-632d17d21c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16ed746-8b56-4113-8e60-9da64c58069d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f658f2-c8c5-42ae-ac3c-901bd4d9bb4b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582733a5-286a-4c8b-a30f-abd5614ae6e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc9441d-fac0-4d27-842a-5830922ff182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba843aa2-af7b-4755-9ecb-4abfd63ba4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f949d714-0067-456e-88fc-41842bfe5b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e2a334-6f1f-4d8b-8041-0c55b39cedec",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c6228c-a3e2-489c-bb41-30193828a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bafd23d-6b55-4a73-829d-7d890e2d6ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8df9d89-9115-419e-ace0-4ebda5030ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a583eb1e-ee06-493c-b4ae-66d0f4caf833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bcc972-e78f-47da-9e0c-eb3702027ee8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f1004c-479e-4214-81d8-5c2b7cd27774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c40a65f-fb30-4fb9-a62d-c763753cbe71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648f6c1a-5601-454c-81c1-a82e6000e5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b3bcbd-be81-440a-b534-36bc3cf5474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c39d70c-efb8-453d-aa33-49c06bf00c24",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bee85eb-917b-471f-9e30-e6f4d423802c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01eebd85-a281-430e-baa4-e19676a364d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2831367-121e-4458-bb05-4686d9dc8ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d11e8b5-6b2c-469f-98ec-a1aeefe409f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9214f805-3a3b-4baf-8bdf-17c69913e92b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0ffc05-9482-4778-b187-eec7f1ac1724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fafefce8-5b8a-4e12-b1e3-502b2d288185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69941ceb-a2e9-4996-a931-e2913ddf4dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9869d33a-a6d2-42b8-a06f-4d0cabf6bdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d525a3-3312-46b0-977b-ebccf51ee4b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da14f254-293e-45ea-90f1-e6e8db82ee18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e39b8d-820d-4ae2-9637-a8d19add1e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e6a2b4-fa8d-4a7a-b18b-6d7f293af1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d80e5f7-a968-40c9-a8c9-ab9de251d700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b87508a-16c2-43e4-97cd-49cb87a5f014",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0426b-c044-4ff2-996e-4947e3241917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33073fe7-b799-4329-a445-a8f6c2f7ff0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd2361-a9ce-4277-8403-7b494fc61bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9295b576-9238-468c-9337-c41fd42fa960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b1a113-214b-418f-9e3c-0b32915cd7a5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eef3440-10b7-4449-af2a-82596dbb49fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064d089c-9853-4fd4-b92e-70be46e013c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b9609d-bf58-481f-ab10-1a6b817677d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd18d3cb-d810-4069-b0d5-6fab45e139f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957b85ea-a829-46f2-8baf-c83fa492ea31",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4fd705-cf31-44db-9a05-29c3c9d55be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8cf4d29-25af-49be-9b07-f28c9df47659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52ac041-2ca2-4e8a-9c34-98207140f45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b6d5a9-5f12-486e-91ee-15d7ae3de8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ab1e7-3547-42fa-b054-0f94a5a0dc86",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7db7339-1739-4ee7-95a7-8bec7897b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79e8b5b-0c0c-4bca-a5a0-12be99476609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43252201-c403-4601-9b2a-6343f29170eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b1c097-8fb9-4b41-89f5-28bc68d9fb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309027f3-52b7-4736-9f85-967d35197881",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6442eb8-1fa5-4ce2-af57-161a390ba7a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ebbc08-7180-425b-a32c-685f2f4f2347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cce7330-1a17-4cd3-9803-f0c7dd4750d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5764fd4-d14b-436f-a5b9-889e951c0c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f98afa9-4fa3-4299-8332-4c6f2696be80",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bff673-6a32-4d36-89e2-7f7ccb942459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4fd7d2-1691-4ee3-bdbd-55534c60d8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164d91c3-ec52-4f27-8b66-1afb3aeb5bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ad0df7-2c02-45d9-9c83-fa4154ad734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dab919-ae36-435a-ab47-13603b8319fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38714758-0b91-4976-a581-4d236ea83b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb727f2-3cb5-4ebd-964a-c075d616d5e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb46050b-0683-457f-a235-f40a272f0479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff4d6e7-f238-4326-99a1-8a9e3cd9b51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a57414-429f-460b-9485-e9c1430f8a5b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8a71b4-b2ee-452a-942a-2126d0959961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154e5fa5-2805-4de2-a10b-ea46f5e02851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13a4632-df4b-4832-81b4-cb287d374eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8035eed0-ca2f-4236-b934-71151c1dbd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe49fa56-139c-4a71-a4c5-b9a9e3e4c15a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c1f6a6-7455-4362-848f-cf5d335053c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb6ce90-3fee-4adf-b8c1-8da5c38fe21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bee5691-df9c-4b35-9ffa-030c1c0c5f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f53466-437d-4ac0-b233-b8730fc1b7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77775ec-46fa-4b27-9493-628d100410ff",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd044a8c-c90e-44c9-bf64-b563419f8144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c9cc350-144e-4568-baee-1e5df651ed39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed91207-415a-4d5b-91d7-615df26e6f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b9d126-dd82-4097-aeb8-7eb41043dbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7027f4f9-efe2-4844-8f8b-c57a39bd4fbe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07accf59-2855-47dc-acc2-b5d95db7c741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a91020f-69c2-4150-b107-0b0899d5b1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ff0dcd-bbc9-41fb-90ca-d3d9da7eabc4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccb84e0-cb80-4eef-b541-9e45f329d0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f9d743-0db4-4854-b9d9-a253dd69c6cc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6d1724-63a1-4380-a48b-a82190604a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bea0ffe-ef29-4ed7-8419-b839b4ee4673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0475b0a-b26c-47fd-8461-065baef72389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaa35da-9d78-4e94-887a-18f899148692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66003409-464b-4057-873e-88363aab16ff",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d805c1-fe0e-46a6-a133-8dbf6356766f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a598a3f-3ee6-4899-adef-02526cc3003e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18f8619-f0df-4a41-adfd-3dfd2ad1b505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f46c270-d197-4990-963f-77a7abf9270a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a05b94-60f9-4d7f-89c1-fa1a20da1966",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d8dcfc-877e-426a-bbd7-771bf1a0ec5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f6a4f3-98ea-4bd5-9d1a-b759c07f2325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8f8385-1457-403b-a40d-d29a49b452f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89db747-8c8d-4dd7-b508-7664bcb45108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f6f9a5-0939-4efe-b4c5-0ccd11afe1d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c14379-12cc-4614-9dcf-df00ed01affb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b95aa2-57d1-41aa-b880-6f1e1910e5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee3ddc0-49dc-4c62-81fb-2def3d11f10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b99b9b2-fb69-4eb4-83b7-5d09c348dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358a11bc-d401-43b0-af57-74f15f039cb4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6389e7c6-420f-47b1-aa7d-5fd40812929c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff43464-b5ef-4092-b966-f91fefac7240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72148f88-96cd-4d5a-8428-b8a946690abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e8747b-19a8-462a-923e-bcad2162e9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeea4a7-5471-4f53-9a4f-f54ee1ced829",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc645f-223a-4e78-bba0-af2366cf97a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9ad2ef-588a-4fb8-bae1-fe9fb047c541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20871ce0-bb2d-47ea-9b0c-ae9335a5ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74166e0-8167-4579-ba4a-cf85ce484796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a4121b-4aa3-489f-a189-ef611e13804d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc51117-de76-41ff-b27d-a68d0009f319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99967e60-5a9f-47d8-bd3c-470ace5960ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36891a64-2144-44fb-8992-2065786abe9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac350150-c710-403d-83cd-80f0a6be6b2c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9441726d-fe84-4a38-bacc-4d1b65404bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d37d898c-0f52-41e8-8943-20078a003506"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "419e2f87-9787-4032-ae67-5701979f17d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb1e321-56bf-4bea-87f7-170de2a81a69"
                    }
                  }
                ]
              },
              {
                "id": "bac1be95-61e3-4989-b88e-3844a16baee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "805f992c-2581-44fa-b177-ac3bef96f188",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa44139-39be-4aa5-9380-8a02adebf214",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2222cd60-58eb-4919-822b-18d4b9c3daed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3a745d-57b3-4471-9a8e-7aa702074cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ed2140e-29d0-4f5f-b5e9-3992616c8c12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec71dfe-05e5-461c-8e8b-e9e37f174dd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "792266ab-9140-464c-8f54-90d5508006cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d34bd778-5365-4b95-ae02-e447e6b57b2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be8581a9-5872-45ac-a575-69068f0c984e"
                    }
                  }
                ]
              },
              {
                "id": "71163f67-1684-4184-a457-539075c2138d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6a6f98a6-5c49-45f0-8afc-01849e5ad80e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f234b1c-f693-476d-aa10-b8cc0166f8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f2e8adaf-8095-4f2c-9b1a-8dd370519fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc10ed5-5d4e-4bfa-9013-81750405b4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3ab03e-77cf-4f01-a4ef-19cc98c7e5db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6576729-3f2c-4f49-8d89-4b37810d902b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "621dd8ab-d178-4366-b206-9433e4910e8f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19c08113-426b-409d-acee-6c2c28f40d87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2e8d4b8-06ba-47a6-b85f-4bfb995ae4fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "507623aa-48f0-4769-b08e-eac3337f6102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a02c3b22-876e-4cd3-8b4f-74791f80b103"
                    }
                  }
                ]
              },
              {
                "id": "843da512-443c-400f-94b2-de9990650a1e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "612c5bdb-1319-4366-bd51-b36c331a9118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "939f4887-8255-4067-8676-7659f41d84a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62acd94b-5d54-41e1-bcee-4c49f5242dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8e32049-51ca-4e68-84bb-e821b865f6d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6f2e9b1-d877-4c04-8372-cc468775bd1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9a4ae4d5-d811-46dc-90c0-cb505954e7b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0857f132-4695-4009-a976-45ad12810c37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c295cc6e-9d94-4c0d-b38c-d1cb42cc0d12"
            }
          }
        ]
      },
      {
        "id": "38b42042-1c3e-4943-8468-df9a938e580c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8b15ae79-b308-4c2c-b8b7-c00499ac26b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec655a83-0645-4c01-a70d-a6b20321ae69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c09b8915-af1d-4bb0-ad92-2d7a33fbf54a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0010c8d0-0848-4cf0-aa17-e156646db925",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d76245c0-881d-4e18-8c11-7e9326e622aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70643ad-f21c-43d1-9c22-e739ce0fccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2226506c-9f04-4ad4-a007-7f24adddebcd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ce5ca7-30ef-4cf6-999a-dbd81fb138f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69a1502d-c27b-4f1d-8dcf-913f23bdc33e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a8e1b48-b121-43b9-9888-f4d64026e9ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a6841fb-b38e-4dea-866a-8e7cec0faafe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd4551e8-3ee3-427a-aea1-e710fa998a09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2097addc-ff8a-4c88-8aed-35678fdb6a9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30986d4d-c462-4017-88bb-b61555945803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8475a4c-afe0-43c8-a76a-3e67107c76aa"
            }
          }
        ]
      },
      {
        "id": "dccb59f1-60f6-4931-a024-f0be1498343d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9f033e0a-7f13-4900-8ef7-e85cfd9252b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac468cf6-8e9d-49fd-ad14-95f300b3790e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "498d0555-48a3-416d-94cb-f00780922072",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0c3019-0be5-4771-b104-b3aeabe4bb6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef5f8904-d882-49bd-9dd1-daba8b9c81a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3bfd92-ded0-4bce-885e-426a987d11c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0673ba1b-9010-483b-809a-56df948890ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8e0ece0-90bd-428f-9670-e4618bba09d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a437963-98f7-458f-900b-7a07b117e5fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a053310-08b9-4293-8757-b4852d2f7fd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab3457b-50eb-4d68-970d-cb650a3782cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb1c9b32-76d6-4626-9e2e-3729a7397e2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccfa660a-4f54-403d-bdea-3cb5362b2073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee8c3708-0c2d-4455-a30d-416e99141ca9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "196d8ca7-74a0-4b2d-b8bc-c159ef9c01da"
            }
          }
        ]
      },
      {
        "id": "2058cbf6-a313-4160-b7f5-31d5471f59bc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f71f4ee3-2b40-498e-a65f-0e2dad1ddf88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7086b078-a6fd-4242-b5c0-ca78fd90c0b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e94d86c0-f19d-44da-9ef4-759954a4ac65",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b056e6-2b67-4638-a91e-276ca02ce724",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e46216e-5fd5-4da9-8765-3fbc0992cfd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652c575e-16bc-4633-8cc2-559db99d6717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1975ce10-4d61-4b25-9f24-4173efd479c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b3f025-6011-4883-a265-234d47f5b0d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c01eddd2-a611-4f1d-a4d7-63dfe0b794ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5c811a4-351d-4930-a6af-b4296c7a6518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae961833-ab88-4a80-8542-e55704651e98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08c4c897-4033-4e69-bf2d-f6c8c2b00f97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2f83503-305c-4ce2-82ac-6fc6198d0e9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be7e59b1-47bc-4484-8e5a-089fd05fedca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f872200b-a306-4e52-89d4-1f10ae8398ff"
            }
          }
        ]
      },
      {
        "id": "afb71f04-cace-4db1-8480-078776df3bc1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d4e584f-9fd7-4a95-ba2f-24cb229154a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c0518ee-e109-47b0-a040-1f8abe95dee9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d5fd0511-ddc4-4f08-b169-11a43fdb9bc4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe8a5b2d-fa76-431a-8fcd-8a31b046c047",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62dbe5f6-a1f9-4cd0-b5cd-9b78072cc76c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 487.3412698412699,
      "responseMin": 12,
      "responseMax": 14533,
      "responseSd": 2163.3295552197505,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725756443385,
      "completed": 1725756574680
    },
    "executions": [
      {
        "id": "b97ce478-12df-4b0b-aac8-fd29d27cf8a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "147003e4-fd66-4075-9d4e-e7e46b048f1f",
          "httpRequestId": "417cf84f-b0ab-48fe-8489-2ddba38e424c"
        },
        "item": {
          "id": "b97ce478-12df-4b0b-aac8-fd29d27cf8a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "885b7520-9854-4b00-814a-bd2267174f0d",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "619241df-9150-4e97-9e0b-4b067baf2787",
        "cursor": {
          "ref": "028f9bc8-1526-4ff8-848a-5c8e44b9d012",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6a84f601-87a8-4c4d-bfe2-00439cedf329"
        },
        "item": {
          "id": "619241df-9150-4e97-9e0b-4b067baf2787",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5933e9a2-62c3-4e3a-bf8e-df2cd9c07cfd",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "fb8eef9b-b313-45df-82ed-8248e5dc4985",
        "cursor": {
          "ref": "f3011baf-cee5-4ea5-ab01-c624bc6b9959",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "44310bb8-541f-46b6-b6a6-c454cf2ec2fa"
        },
        "item": {
          "id": "fb8eef9b-b313-45df-82ed-8248e5dc4985",
          "name": "did_json"
        },
        "response": {
          "id": "86a41694-35de-4cd6-bac7-09b60fc89d78",
          "status": "OK",
          "code": 200,
          "responseTime": 476,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff28e085-7c17-421a-80bf-62a0526d6e38",
        "cursor": {
          "ref": "ebc4a754-39e5-4dd8-842e-714e4d3dda0f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47ba37ad-cb9d-4cf8-95cf-319fee34f4c6"
        },
        "item": {
          "id": "ff28e085-7c17-421a-80bf-62a0526d6e38",
          "name": "did:invalid"
        },
        "response": {
          "id": "efdf9ea7-bd67-4b8d-833a-f27ecb14c91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2004,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff28e085-7c17-421a-80bf-62a0526d6e38",
        "cursor": {
          "ref": "ebc4a754-39e5-4dd8-842e-714e4d3dda0f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47ba37ad-cb9d-4cf8-95cf-319fee34f4c6"
        },
        "item": {
          "id": "ff28e085-7c17-421a-80bf-62a0526d6e38",
          "name": "did:invalid"
        },
        "response": {
          "id": "efdf9ea7-bd67-4b8d-833a-f27ecb14c91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2004,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e0777f-5a5d-447a-a2b7-d3c2f38b513b",
        "cursor": {
          "ref": "9adb35b3-80db-4329-98cb-427b2ce32f8a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "db87a65b-2581-4e91-85fd-46566b3199bc"
        },
        "item": {
          "id": "17e0777f-5a5d-447a-a2b7-d3c2f38b513b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7cb06100-c70b-44e4-9e35-030cb449f3a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2743,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb9024-50b3-44eb-bef4-9f75988207ea",
        "cursor": {
          "ref": "12e735d1-05d0-4132-89bc-b96acf5cb6d5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e496fc42-ce5b-44fb-b5d4-a4e8211b3ec8"
        },
        "item": {
          "id": "c2bb9024-50b3-44eb-bef4-9f75988207ea",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a25c79cf-7087-4114-8ae1-710eb666afe3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2313,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a707367-be1d-4b7b-8508-99f938921a7e",
        "cursor": {
          "ref": "3e27255a-31e3-47f2-8944-326b5e46ff21",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "844251f4-8e9d-428d-b2b0-a9215130ea2e"
        },
        "item": {
          "id": "1a707367-be1d-4b7b-8508-99f938921a7e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c072da10-a205-4e30-89b3-d9c224304cad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b134b-187e-4c83-8aae-4da257edb33f",
        "cursor": {
          "ref": "a4972dfe-ae61-41db-bb7f-1a7f83815ca0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "12cb10f6-72c3-4c6c-b5a9-4f06762376ed"
        },
        "item": {
          "id": "aa3b134b-187e-4c83-8aae-4da257edb33f",
          "name": "identifiers"
        },
        "response": {
          "id": "a7e5e66e-e1ae-4664-8692-8742bdac77e0",
          "status": "OK",
          "code": 200,
          "responseTime": 2677,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0dc406-09df-43d7-a5e6-797a598a967f",
        "cursor": {
          "ref": "0ba30ff1-48c7-4122-9e24-cd9259f66c71",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e3c9352-9b46-42a8-a0fc-ee87e1faed7f"
        },
        "item": {
          "id": "5d0dc406-09df-43d7-a5e6-797a598a967f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0c0a09f6-9b97-4d83-a2e5-273406f6fdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5358629d-6b7b-43a3-9a1d-82380df6ca11",
        "cursor": {
          "ref": "35b17f10-6f06-4171-9ca7-c76a95570d67",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "540ddd77-5bc0-4617-b773-d6f70ebb6d88"
        },
        "item": {
          "id": "5358629d-6b7b-43a3-9a1d-82380df6ca11",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3f6cc2bc-778f-443b-8f11-a79648ecf910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d9252-cd9b-4a63-8e8f-43bd00ae99b2",
        "cursor": {
          "ref": "d12d2e9c-6d17-4282-8729-554587bd6271",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e69b1796-b29a-40f5-8039-d1ed426cdbcc"
        },
        "item": {
          "id": "8a1d9252-cd9b-4a63-8e8f-43bd00ae99b2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "da9a0009-f846-4da3-9e4e-1394a5f99fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d32ecef-c3de-4a40-81a9-0efa2b3ad59f",
        "cursor": {
          "ref": "566eec9f-eb23-4ee2-90c7-f61dfd4dd8e6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b686a9db-24fb-4e56-936f-d0a918c2f8c0"
        },
        "item": {
          "id": "6d32ecef-c3de-4a40-81a9-0efa2b3ad59f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6584a44d-1760-4b1e-a9ad-cda8f0c2b9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354d42da-f2c1-4d05-af1e-afc2f9d7fbe6",
        "cursor": {
          "ref": "6112bbec-9b33-4d1e-89f9-51b8cf25a2b7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ecda7b7f-45c4-4e42-a49f-8b45fe17b52f"
        },
        "item": {
          "id": "354d42da-f2c1-4d05-af1e-afc2f9d7fbe6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d26ffb09-97a1-4b0a-a407-92ab32b2020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89acd35-5d8e-4fce-ba34-55a21ee4a8f4",
        "cursor": {
          "ref": "ef08063f-18d4-454b-ae2c-9f378d6bede1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5cd3ffd5-98c7-4b83-8bc9-c0243392cbdd"
        },
        "item": {
          "id": "f89acd35-5d8e-4fce-ba34-55a21ee4a8f4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be4c3d00-b0f6-4036-9844-785b4f9e5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82760792-e794-43f7-861d-05bcdff67903",
        "cursor": {
          "ref": "b5f125e2-57b0-4d10-bc74-44f7660498a3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1e661b95-debd-403f-9df1-466b3d855bdb"
        },
        "item": {
          "id": "82760792-e794-43f7-861d-05bcdff67903",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "126ab3ca-049f-47d4-b50b-48c367aef542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562a6928-3950-4357-8003-bd95cc9eb84b",
        "cursor": {
          "ref": "081c5453-013b-4216-85a9-699ff2f8b870",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "da0d1a98-2061-4c21-add2-8dee2659660b"
        },
        "item": {
          "id": "562a6928-3950-4357-8003-bd95cc9eb84b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d350620e-13af-4caa-a1d3-9214eeba7e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc6010b-11d0-4c54-862d-5c82a033e12f",
        "cursor": {
          "ref": "145e7ea0-1de5-4472-87c0-fab9fc92d22e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ddfa0c53-717d-4ba4-81e3-337792e7806d"
        },
        "item": {
          "id": "4fc6010b-11d0-4c54-862d-5c82a033e12f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "91f905b5-873e-4550-9b99-513656e61bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69bf572-4eae-4b50-8a8b-1948c2db86b8",
        "cursor": {
          "ref": "d6e1ba3e-ac07-44bf-8aa8-0015cfa22931",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "65746453-8e8a-4fd8-aaa5-bc9017930fb5"
        },
        "item": {
          "id": "e69bf572-4eae-4b50-8a8b-1948c2db86b8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "34cd63f6-c2bf-4ba4-ac95-5e7ddbd60b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dd3232-e0d6-49db-aeda-e5e4dd6982cb",
        "cursor": {
          "ref": "8c966e06-93fd-4f01-a03a-9c933504512b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e2bf3421-1bc3-436c-a8ef-be1c23192173"
        },
        "item": {
          "id": "c3dd3232-e0d6-49db-aeda-e5e4dd6982cb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0824ec28-57b8-458a-80c2-e5fdd2db3a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecc29d4-668b-4466-a71d-8c480f5636a9",
        "cursor": {
          "ref": "2068e9ca-2b44-451b-8a03-8af06ea26539",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ccf9cb00-0001-4f1a-b26e-7f973d138069"
        },
        "item": {
          "id": "cecc29d4-668b-4466-a71d-8c480f5636a9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e598b0e8-65bc-4c39-af0c-0c7e6b197585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda37325-bacb-4a12-8066-658be6f93a82",
        "cursor": {
          "ref": "9ecd5825-426b-42d4-8cd7-a51d016451f3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "634640a1-dce9-4589-b5bd-213b9e379903"
        },
        "item": {
          "id": "cda37325-bacb-4a12-8066-658be6f93a82",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d2ad0e8b-e062-4cd0-b2c5-5de3781a75b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed02ba7-1116-4f6b-a746-379bc9a89da8",
        "cursor": {
          "ref": "44fd9369-d8a1-418a-8e4c-3440199afd7c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f0edd019-62f9-4701-abab-6cd78ea7d992"
        },
        "item": {
          "id": "fed02ba7-1116-4f6b-a746-379bc9a89da8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "24899186-54e6-4dee-97c2-3f046e268d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d8eb8-55e0-47a2-9cc3-b5b9acb96d9d",
        "cursor": {
          "ref": "02a66843-d9a8-4763-844f-c2a3a0099edb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d2a72a82-48ba-4f36-b1e9-0dfeaaea7c60"
        },
        "item": {
          "id": "1b5d8eb8-55e0-47a2-9cc3-b5b9acb96d9d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b7f341dc-b5a3-461d-98f4-51f11805ddf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5579f174-7337-4e20-af0f-566a097ac114",
        "cursor": {
          "ref": "419e9798-f657-47e8-adf9-cf10716c0a5b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d42f43d4-7c62-477d-95b2-0b83856aabd8"
        },
        "item": {
          "id": "5579f174-7337-4e20-af0f-566a097ac114",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "63972309-4e43-4c56-b638-01cf7479ff1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a56208-494b-455d-9b7a-4f3832cd41d9",
        "cursor": {
          "ref": "7074ea8f-41c7-46ea-9020-79cd993d675e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "330f1aef-1c7d-44fa-98f6-265e7d76c4a0"
        },
        "item": {
          "id": "a9a56208-494b-455d-9b7a-4f3832cd41d9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "220ce9b4-ba02-46ef-bd16-b37414af4493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07729a90-12a5-49c2-ab01-a7109e647212",
        "cursor": {
          "ref": "9c349021-a756-48ca-8ec6-612c3e5b347e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b435186b-de7f-4a7d-b3a9-944c7a3fbbcf"
        },
        "item": {
          "id": "07729a90-12a5-49c2-ab01-a7109e647212",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "baf3cee7-e067-4ddc-b8fd-cff02b164f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db25ca-0b5a-4915-a783-00a622e000d0",
        "cursor": {
          "ref": "e9600320-fff2-415d-8ae6-1a8252872452",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c68fd6a8-6a0b-43e7-b7ac-d6efb69d5536"
        },
        "item": {
          "id": "d0db25ca-0b5a-4915-a783-00a622e000d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "97c09ac0-80d3-4045-9788-0816698168c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e6ecb4-cf0b-4a40-9d1b-d5507b77ead6",
        "cursor": {
          "ref": "bd7b3a7a-04d5-43e1-a32c-c2710e479bbc",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "15182e40-8231-4fc5-96f7-e7a1fcaa09e1"
        },
        "item": {
          "id": "b2e6ecb4-cf0b-4a40-9d1b-d5507b77ead6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "613582bd-51cf-4d4c-8cad-f4947d2e3d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5613e177-9608-4e5b-ba83-cbf70ea07e9e",
        "cursor": {
          "ref": "4fe3ed7c-9d2c-405f-bbff-b18b4931c742",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bd444bdc-4df5-4527-a266-5ec7dd239e3b"
        },
        "item": {
          "id": "5613e177-9608-4e5b-ba83-cbf70ea07e9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a6bb21a8-1e3e-4ad4-974e-7ffc2cad506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9331dbbd-6df7-453a-a584-b9f9b0a87129",
        "cursor": {
          "ref": "e2bde02b-1348-4e34-8aaa-b308125f7d2a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a63653c0-7442-4605-b452-9830ee1ca37c"
        },
        "item": {
          "id": "9331dbbd-6df7-453a-a584-b9f9b0a87129",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c16926ff-6094-42e4-8714-4a76fcf5edde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a1957-f74e-4160-b4f8-f1271d2de66b",
        "cursor": {
          "ref": "1e374314-11f6-4101-878d-c9770ebfeb6d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bb91d5c0-a372-4c8c-85b5-aece2f1c751b"
        },
        "item": {
          "id": "7d7a1957-f74e-4160-b4f8-f1271d2de66b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a3a568f5-252c-4864-849a-22294b6915c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199d7929-5cb3-4807-a927-072a483da4f9",
        "cursor": {
          "ref": "3b74a459-7bad-4da2-aabf-581ee58400e4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "912e5722-770d-4a86-b51b-bfa1dbb3438e"
        },
        "item": {
          "id": "199d7929-5cb3-4807-a927-072a483da4f9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c525a119-5fe4-4993-8368-06785e0733b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b570ccb-00e1-4158-ae30-edc17963a559",
        "cursor": {
          "ref": "e7134d28-5723-4206-84a2-a7179d460a66",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7ecea5fa-0ed9-4a13-b967-bc94f250ab4f"
        },
        "item": {
          "id": "8b570ccb-00e1-4158-ae30-edc17963a559",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b3cf310c-1519-4d0e-acab-7a72afd531d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89857db6-e097-45f2-9c62-f8daa7b69847",
        "cursor": {
          "ref": "aaea8cd3-2dd5-489a-86cc-d916374e2a82",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0b658b44-721c-44ab-a7c9-58d0e6deec97"
        },
        "item": {
          "id": "89857db6-e097-45f2-9c62-f8daa7b69847",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "48f16699-531f-4e58-8327-cf30dc11d912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9223cd-a5c4-4dc8-99e7-12e4c4d3afd9",
        "cursor": {
          "ref": "9c886237-cc26-49b6-9c6f-924d5eaffe94",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e391409a-a97a-4aba-bb6f-c610b7dfa07b"
        },
        "item": {
          "id": "0b9223cd-a5c4-4dc8-99e7-12e4c4d3afd9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1a1a4428-79ba-4d73-80b9-64ed49f019cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b147e-28e7-4a90-8d3f-88f9a711a5df",
        "cursor": {
          "ref": "a22f9640-342a-4520-99fb-46f3e619d2c7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fde6e55a-3037-47cd-9ada-d316bd0d216d"
        },
        "item": {
          "id": "c94b147e-28e7-4a90-8d3f-88f9a711a5df",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b0fd2349-b0cf-4d10-9786-104d7fa1be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b5af70-857c-456f-b73c-7909bcdffe01",
        "cursor": {
          "ref": "f2b5a99d-4797-427f-b0c3-c73539e14679",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "88f34d64-9d70-4ed5-8ded-25fd2e99e311"
        },
        "item": {
          "id": "29b5af70-857c-456f-b73c-7909bcdffe01",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "00a72fc4-13f9-41e6-894f-18937b7441bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63729ba-7afd-4351-98a1-65fe8dfdbd0c",
        "cursor": {
          "ref": "e3d684bd-4e85-4563-b36c-db8cdc4ddd23",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ce11051c-8466-4157-a7c6-fe948c686191"
        },
        "item": {
          "id": "a63729ba-7afd-4351-98a1-65fe8dfdbd0c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2f9483cc-60dc-4121-9410-e5f11a23dee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4137e84-9d39-4695-b8ad-847deb0ebef9",
        "cursor": {
          "ref": "17b393b0-1c13-4742-aa08-03e0edb32f44",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20e8d4cd-9281-45bb-9b42-a45f3b03ea89"
        },
        "item": {
          "id": "f4137e84-9d39-4695-b8ad-847deb0ebef9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e28ba7e1-6d5e-42cd-bc95-c03bc8d7190e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c747a41-2f5e-4e03-90c6-d4856eef147d",
        "cursor": {
          "ref": "2da7fe67-05fc-4c49-9ec4-ac4401d6d669",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2750adfc-effa-4e23-bdf0-f597f0b84082"
        },
        "item": {
          "id": "8c747a41-2f5e-4e03-90c6-d4856eef147d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0ae5251d-58eb-47c8-be5b-4156b0d2bbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a0cd1-c762-46b4-a6d0-bddd4bf23882",
        "cursor": {
          "ref": "8a94c661-9015-4af3-8337-f9c8836e9a6c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "904f2835-c57b-4226-87df-9655c8922f54"
        },
        "item": {
          "id": "036a0cd1-c762-46b4-a6d0-bddd4bf23882",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6abbaef1-48fc-41a2-b231-f327e756328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c4d063-20c0-4ba4-b562-2f4ecede5ba3",
        "cursor": {
          "ref": "0eaf6025-fe83-483a-981d-3d7ca6272118",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fe848f37-0cfc-45bd-bb7f-dc98bf0406be"
        },
        "item": {
          "id": "04c4d063-20c0-4ba4-b562-2f4ecede5ba3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "594020dd-ecc4-4dfb-b361-2f86457cade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1b189f-06de-40ab-b5aa-338dc2b99228",
        "cursor": {
          "ref": "5a85a80b-2349-4cca-a204-aa5cce148ac2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0f0614e5-0e7e-4a8a-93f3-6657ebe8f6fa"
        },
        "item": {
          "id": "1e1b189f-06de-40ab-b5aa-338dc2b99228",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a7084f99-c966-46f3-887c-b5ed8ff1906c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aae46f9-c24e-4f06-9c9b-1cfd6707319c",
        "cursor": {
          "ref": "ffe38f91-7227-4b5d-8bd2-932a4591311f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "48c7493e-6650-4dab-a0e1-cfb8f48c2bbf"
        },
        "item": {
          "id": "2aae46f9-c24e-4f06-9c9b-1cfd6707319c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5c080dd0-f96a-4248-9b7a-705f9369f9f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c514aa1-df80-47d0-bac8-0527b15ba3f4",
        "cursor": {
          "ref": "91fc10cd-ace1-4522-9507-f8fe393275c9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b5bc5d37-0aa3-40d4-8b88-2c8b7a473267"
        },
        "item": {
          "id": "2c514aa1-df80-47d0-bac8-0527b15ba3f4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d746f03a-b791-4073-9027-d6b3f9d48ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a38e99-f4bb-468e-bd22-1d1da4e7cec9",
        "cursor": {
          "ref": "9fb79cdf-e1e1-4ffc-ae03-b1a0acb02aa1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "256af8d1-3d54-4aff-a687-6d108b4ced0e"
        },
        "item": {
          "id": "43a38e99-f4bb-468e-bd22-1d1da4e7cec9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "64a49fa6-8b7b-4647-9061-a84ca243472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094e263b-31bb-4265-b4e1-0ccfe6d5c6ae",
        "cursor": {
          "ref": "9724b1d4-950a-44d6-ab6d-d4e22c527f72",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8d609931-5244-4530-8b68-6eb7c6bfc6e5"
        },
        "item": {
          "id": "094e263b-31bb-4265-b4e1-0ccfe6d5c6ae",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "56512b73-50f4-410f-ba39-346d30929857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e019161-c749-49aa-8647-5ad74df48a71",
        "cursor": {
          "ref": "a587a020-bf40-4f12-9f6d-d7c33882b271",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "72816be3-45f2-4858-b4b1-0c141ec6f49e"
        },
        "item": {
          "id": "9e019161-c749-49aa-8647-5ad74df48a71",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4288e7d7-4ded-48d6-837a-9a8144bd9558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8645f87-776d-4e18-801e-5dc7fbd081b2",
        "cursor": {
          "ref": "8d430e29-41cc-4f2b-a851-80650613fcaf",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1c09b2fa-b36a-4c0c-aacd-f43c06c7ada6"
        },
        "item": {
          "id": "a8645f87-776d-4e18-801e-5dc7fbd081b2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "98092e77-e15a-4373-a2e7-eaf7e0c26fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8799e2d7-4676-41c6-abd0-da147cbdf89c",
        "cursor": {
          "ref": "2835abfe-fba5-4d63-b5be-4d63eb15f03c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "048377a0-697e-45a0-b7d4-de5c87dd9e50"
        },
        "item": {
          "id": "8799e2d7-4676-41c6-abd0-da147cbdf89c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4e7e5200-46a3-42a8-a7ee-07fb4520d55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7e0852-3783-4d8c-9fe9-62b43ee7b108",
        "cursor": {
          "ref": "715a1812-32b9-4de3-848c-9886d062ca60",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7dc28bdd-d801-4fc9-bad7-7fab07c4fb01"
        },
        "item": {
          "id": "4e7e0852-3783-4d8c-9fe9-62b43ee7b108",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6247b428-7d53-4644-bbc2-77ce337af21a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90a7bec-463f-4511-a695-ad22ebd0ccb5",
        "cursor": {
          "ref": "e34b6004-1f10-497e-a7c1-6e4d28cab699",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a11abd13-896c-4c23-960f-323945072284"
        },
        "item": {
          "id": "a90a7bec-463f-4511-a695-ad22ebd0ccb5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "49c918ef-7bf2-4b76-b70f-e3444a72d9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7acc749-8f3d-4350-9d80-489c611dc0ad",
        "cursor": {
          "ref": "f918a9a2-3df2-4fd8-8574-cceaf16edd1d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "67489323-64d8-4c9f-be06-75bbf5583eb7"
        },
        "item": {
          "id": "b7acc749-8f3d-4350-9d80-489c611dc0ad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "390c7659-4092-432d-a7c1-55384a4121fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64204762-c931-4554-a68a-10bb130bfd91",
        "cursor": {
          "ref": "b12cb05e-c0d5-4671-a0a8-c350f2ebb838",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6f4d2945-2f86-402b-a561-032009f112e2"
        },
        "item": {
          "id": "64204762-c931-4554-a68a-10bb130bfd91",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6072cd31-f428-4fd1-8689-8bd4f72d280b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ec722b-4f01-458b-bbeb-8c214816b8cf",
        "cursor": {
          "ref": "781b126f-d632-4b42-9de1-96f05d8768f3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "81ee61fa-e099-48f4-99a2-9450691eb6c3"
        },
        "item": {
          "id": "08ec722b-4f01-458b-bbeb-8c214816b8cf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d1fd53e3-e90c-49cc-bbe9-fe50eaeeacd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c9b4e-d1ab-473d-93af-c88cb6d6926c",
        "cursor": {
          "ref": "0e5c9924-5227-446b-b556-532a80017ce0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "da627f13-ffc0-4873-83ff-0d8dbe278cea"
        },
        "item": {
          "id": "d33c9b4e-d1ab-473d-93af-c88cb6d6926c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bfb9416e-f303-4fb1-8c06-2758f87e000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31523450-fbe8-4b85-b6e6-9c94a9348035",
        "cursor": {
          "ref": "fee01f27-ad78-45a5-ad82-de80eb6a9745",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e324ea32-4a12-4af0-9817-3da467b818d8"
        },
        "item": {
          "id": "31523450-fbe8-4b85-b6e6-9c94a9348035",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eaa7f65e-73e6-4d38-914c-7a7d1b5e9ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc40564-d6c2-4e95-bff7-66917b4f60e7",
        "cursor": {
          "ref": "fdbd7d6b-ad19-4227-b76f-d54d8ff8c327",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3a911ac0-3e56-490e-bf9f-ddfec13fcb96"
        },
        "item": {
          "id": "2cc40564-d6c2-4e95-bff7-66917b4f60e7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4cb6032a-4233-4859-ab1c-a209cc04e522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cb2f56-be88-4d61-b9a8-3a557b8fa9fe",
        "cursor": {
          "ref": "0785a2ce-c573-40f5-a018-ad5b3a8496ed",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "40da417b-1332-4e1b-83f0-b7ddda0d146e"
        },
        "item": {
          "id": "88cb2f56-be88-4d61-b9a8-3a557b8fa9fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "95ab5dfa-1454-467b-9e05-5db128451f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8cf5bc-907b-4761-bcb2-3da1b8454b3c",
        "cursor": {
          "ref": "bc612ee0-1f17-4481-bb88-f312336913b7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d2748477-2b85-4b4e-8d42-1fba39f26eaf"
        },
        "item": {
          "id": "bf8cf5bc-907b-4761-bcb2-3da1b8454b3c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b39a9a6a-593c-4879-b152-02e702d31db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98188203-ae05-4339-9a71-7e7fc8d28392",
        "cursor": {
          "ref": "0b0393ef-714d-4d21-ac64-a0d217d22643",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6d4dbbf8-4abc-4b0f-9233-c500120d3db4"
        },
        "item": {
          "id": "98188203-ae05-4339-9a71-7e7fc8d28392",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b275ab79-b93c-40b1-9cb1-3e9525488303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2920f3a2-8571-4b02-8630-f55271a57892",
        "cursor": {
          "ref": "95981978-3fe4-46c4-908c-cd7e513dc586",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "81e71328-5552-4343-8a35-efc32d4bca93"
        },
        "item": {
          "id": "2920f3a2-8571-4b02-8630-f55271a57892",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5db09582-d249-44f9-ad09-bf4808a707a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf47e6f-1071-4446-898e-25ac80deb96b",
        "cursor": {
          "ref": "36aa4d37-fe85-422e-b544-c952245b7f5b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "891d436a-d944-4942-ba4a-d3f546016806"
        },
        "item": {
          "id": "bbf47e6f-1071-4446-898e-25ac80deb96b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93e5a2c5-7a8a-4880-a184-cde24b64de40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac5c70d-057b-4f24-8172-1e7820c50464",
        "cursor": {
          "ref": "659a837b-b411-40c1-88a9-6c6fccb0479d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0a5e3a82-7499-4f01-b268-b1f5ce0495e5"
        },
        "item": {
          "id": "4ac5c70d-057b-4f24-8172-1e7820c50464",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b8b8ea9f-8cf3-4581-be99-63ea5d21cae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a33c376-5bd3-4ca2-879e-358a0c452cdb",
        "cursor": {
          "ref": "e236d05a-1784-459f-bcaf-efc4b0ba32fd",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3d9406b-e13d-4b92-9a5b-b03983caaf7c"
        },
        "item": {
          "id": "2a33c376-5bd3-4ca2-879e-358a0c452cdb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8d7d828e-5551-437a-af1b-36befdc91ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf9d59-9030-4ad0-a19f-6887a0177d02",
        "cursor": {
          "ref": "55701aa9-fe30-493c-ad8f-ec003fd42699",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "56910e3c-ee04-4049-a24d-5cab9a8dece7"
        },
        "item": {
          "id": "6fdf9d59-9030-4ad0-a19f-6887a0177d02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "648812b2-148d-4066-a689-67e35de68763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b73c2e-9a9f-4d3a-841f-a4086eb170a4",
        "cursor": {
          "ref": "37b3aee4-f3e2-4f17-9c6e-d3a314096466",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e5c42252-538b-4b43-b371-321bd84e617b"
        },
        "item": {
          "id": "07b73c2e-9a9f-4d3a-841f-a4086eb170a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ca62e9b4-2375-4467-9f1a-53ecc79efd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc01d9c-66c5-4d76-baf3-b5b54e60c2d8",
        "cursor": {
          "ref": "4f405302-0693-45f4-9a44-f0defe4f9a3e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3efa5773-e436-400d-a0b7-e7a7961d375a"
        },
        "item": {
          "id": "1bc01d9c-66c5-4d76-baf3-b5b54e60c2d8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "856b5dae-5467-4c8e-8280-923d7dde0abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226b60a2-e7c1-443a-8c17-620b62c213b5",
        "cursor": {
          "ref": "b0429306-47ac-4892-afff-6e4458586366",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cb670549-e070-4c7d-b62c-921e9449ffa3"
        },
        "item": {
          "id": "226b60a2-e7c1-443a-8c17-620b62c213b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "91e9f8a8-72b3-4523-a878-3680cd7f4f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6695ed1-1796-4dfe-81c5-4f103de747bd",
        "cursor": {
          "ref": "5bf16316-237c-4b61-a94b-6efc26f3ef5c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "493b8434-f795-46e0-8052-75aa24f85fe8"
        },
        "item": {
          "id": "c6695ed1-1796-4dfe-81c5-4f103de747bd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9e64fc52-3c5f-4262-887f-b625eb545804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbc95c5-5d04-407c-a310-e80148a23e71",
        "cursor": {
          "ref": "28dc822a-22de-4e59-85e4-eb3915246684",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26353607-ee2e-4052-9d1d-428eeb91a7df"
        },
        "item": {
          "id": "cfbc95c5-5d04-407c-a310-e80148a23e71",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "88fcd188-d92c-491d-9622-8145d7de12d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af230c0-f3c5-466a-93d3-87cd69dcc085",
        "cursor": {
          "ref": "adcce0a0-1bb2-43d6-afbc-e61735651b5a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "30fc5b04-83b1-428c-a8ce-e80de306dbaf"
        },
        "item": {
          "id": "8af230c0-f3c5-466a-93d3-87cd69dcc085",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d3a23c3e-37c4-456c-8096-71ea316d200f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8860cf76-9ed1-419b-b671-1ddcef84005f",
        "cursor": {
          "ref": "4bea1331-9609-4336-a0ea-93f0fa54f334",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "51a7701c-3e9c-4c1b-8ef2-994342af00a8"
        },
        "item": {
          "id": "8860cf76-9ed1-419b-b671-1ddcef84005f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f6c4560a-c4b7-4489-b47f-3c69384174a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8341aa-792c-490c-a932-562daa9cead4",
        "cursor": {
          "ref": "397cd102-4478-439a-81c1-f4e4642c0f48",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "849052c7-13f6-42bc-a984-1fbdbcf5927c"
        },
        "item": {
          "id": "6e8341aa-792c-490c-a932-562daa9cead4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "16afebfd-a61e-44af-995e-f696a0513e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affc316e-9598-407f-8fbf-2d6d8b7cd974",
        "cursor": {
          "ref": "9aedf294-88d4-4068-bf36-5e5bad42274b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8bc4b07b-b5d9-4a52-a784-215746399bca"
        },
        "item": {
          "id": "affc316e-9598-407f-8fbf-2d6d8b7cd974",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9b5b4fee-d22f-4f79-a031-f2942a1bd545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d183a7-60e8-440b-85ff-57590b8b4ce0",
        "cursor": {
          "ref": "a969ff7e-b904-49a7-9ea9-84b2a741c12b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ea450338-7299-415d-9c83-88db62d38bcb"
        },
        "item": {
          "id": "40d183a7-60e8-440b-85ff-57590b8b4ce0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "472db451-993e-4496-b032-a43e340f0ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86870b1-546f-43be-9453-638ec6258e27",
        "cursor": {
          "ref": "b77625ed-6afd-46ec-b824-fe30913b5378",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "78c87714-a0cb-4946-adb0-6f2622db0927"
        },
        "item": {
          "id": "a86870b1-546f-43be-9453-638ec6258e27",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "365eef7b-8b98-4fa3-bc6e-43dac2a4b0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ca72ed-048a-453f-92be-3e3997305255",
        "cursor": {
          "ref": "9f9d179c-8171-4da4-9c50-931258167d53",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0f31fe2e-f889-469a-9446-6c70599f8608"
        },
        "item": {
          "id": "68ca72ed-048a-453f-92be-3e3997305255",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d4230f1a-fca8-4fea-8ca0-88f97a05f0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc2226d-9ea3-478e-99a6-13ae2049b292",
        "cursor": {
          "ref": "b1b0fbcd-2706-4036-9c85-ed49b30df69f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e70cdca8-9c75-467a-bc30-26159de78892"
        },
        "item": {
          "id": "dcc2226d-9ea3-478e-99a6-13ae2049b292",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5342fe0d-92d7-48e4-9a69-d94494330173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62cb761-c7e4-48ce-adf6-342ce34ae9d5",
        "cursor": {
          "ref": "b9572daf-57be-411b-a849-f571f8a21d0c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2bec00a2-55ff-43c7-8819-1b45454fb24c"
        },
        "item": {
          "id": "a62cb761-c7e4-48ce-adf6-342ce34ae9d5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a770fdf2-9bf9-443f-b11e-07473978eb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95919a33-7489-4362-88e3-de01c4024098",
        "cursor": {
          "ref": "8ef57d55-9b89-437e-997b-86f10eed30d4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0cc94b42-1d81-43da-a4f3-7235ba4d1cf4"
        },
        "item": {
          "id": "95919a33-7489-4362-88e3-de01c4024098",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "40abf0d4-5640-4213-b066-d8b6aa90c150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0a1992-d9e4-4023-a040-41e216721dcb",
        "cursor": {
          "ref": "e2f9c8f1-fda5-4414-9364-c2511e9b6a5a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c567efe4-7b64-4a4f-a3fc-b4920cb9eb5a"
        },
        "item": {
          "id": "3a0a1992-d9e4-4023-a040-41e216721dcb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7aced420-7309-42f2-8064-436bb2c637fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54232c30-307b-4c5b-8d93-c109f1822396",
        "cursor": {
          "ref": "8c49adf0-0baf-45b4-a48d-c944b08602e7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7e61d82d-ffdf-4587-a8af-6b551a8f705c"
        },
        "item": {
          "id": "54232c30-307b-4c5b-8d93-c109f1822396",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a98f1f3c-ee37-4dcc-9966-a1518838d0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1358f1-824f-4f41-9c06-28d2bd0a77ef",
        "cursor": {
          "ref": "482e261b-f350-4106-9600-4215a5bf91bd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9b0c8e31-ecc8-4249-9ffd-a25143f1139e"
        },
        "item": {
          "id": "ce1358f1-824f-4f41-9c06-28d2bd0a77ef",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b47ac312-3c4d-4ff6-947a-cd66f06eca33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391b23d5-1a36-49b8-a6f2-23fc58e02003",
        "cursor": {
          "ref": "1ab2eea2-4a1d-4f55-b883-4d9bf0839a11",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56beb16f-8557-4472-94bd-9588a31ecc75"
        },
        "item": {
          "id": "391b23d5-1a36-49b8-a6f2-23fc58e02003",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b827ecad-061f-4ed8-a31a-726f22dd5df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9339fb2a-1c98-42fa-9a9e-ce450f86c927",
        "cursor": {
          "ref": "b2af5d23-8f8e-4f35-a74a-06cda2dc9386",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cff655d0-abc4-4590-a2c1-735b70f9b405"
        },
        "item": {
          "id": "9339fb2a-1c98-42fa-9a9e-ce450f86c927",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "683578bd-6708-4ff7-a1a9-ef98a9fb4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a3ff6-4a9b-4424-afe5-f0e0f072f858",
        "cursor": {
          "ref": "adc8f2fe-13b0-418d-9942-850d66a56b86",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "14408dda-7194-43af-bf35-9dd521b9c637"
        },
        "item": {
          "id": "608a3ff6-4a9b-4424-afe5-f0e0f072f858",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "92b8c01c-72fe-47a8-931a-00777a633698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd7a2c-683c-4ffd-9f8b-86afce87808e",
        "cursor": {
          "ref": "61f43598-f5e8-47b9-aec2-e1dec2583564",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "73c3e99d-a010-46c4-a40d-2ecf97b6dbbe"
        },
        "item": {
          "id": "d0bd7a2c-683c-4ffd-9f8b-86afce87808e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0898ac55-c4c8-41a5-b5a5-2d1131b70cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb814256-2b03-4916-b3e1-c537f873d796",
        "cursor": {
          "ref": "a3c41af5-f783-4cf3-a144-f8de5888b607",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0ce0eb0a-a83e-4e11-98d1-4d6461fa5133"
        },
        "item": {
          "id": "fb814256-2b03-4916-b3e1-c537f873d796",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "efe3a349-568d-4a0a-841c-35e2c6743d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736822df-4e51-4c32-b0f1-cfa8279f3c20",
        "cursor": {
          "ref": "22711d31-8d37-47fc-a8ab-679ccaaaa8e5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "950d83e4-ff28-4a37-b3d7-d7fb9b198a80"
        },
        "item": {
          "id": "736822df-4e51-4c32-b0f1-cfa8279f3c20",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2ac8eb25-5537-4d33-85fb-22ea5dfb4253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4897897-7461-4f15-a74e-a7990bb2341e",
        "cursor": {
          "ref": "b416501a-101d-45d8-bd60-1a7aff1f89a4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "08b852f0-9833-471e-9e1a-76e8ee918b29"
        },
        "item": {
          "id": "a4897897-7461-4f15-a74e-a7990bb2341e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b7bcee8a-d67c-421a-b24e-df89ca242849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c561e10-bb2a-472c-8249-ce795c835cde",
        "cursor": {
          "ref": "8081191c-2053-4e6d-b0e6-320c65628190",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4af7940d-e997-4855-b45e-32b6602c792b"
        },
        "item": {
          "id": "5c561e10-bb2a-472c-8249-ce795c835cde",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c302f1f-0ad8-4db8-b4cb-4360539e5272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49eb834-a8fd-4ac7-b32b-0ccb2c9e51d6",
        "cursor": {
          "ref": "029a7830-8282-444e-8ba2-903ba0b0334a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7224bcf8-3df2-4762-922c-957a13377d83"
        },
        "item": {
          "id": "a49eb834-a8fd-4ac7-b32b-0ccb2c9e51d6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a564024d-7704-4f0b-a5c1-ecfaeb7b7b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775e515b-2637-44f7-b4fa-7819ae3d5c73",
        "cursor": {
          "ref": "32ecfe30-9f91-426f-a83b-9b83c6c339e0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e839d47-adc0-4852-a556-084bb8f6d430"
        },
        "item": {
          "id": "775e515b-2637-44f7-b4fa-7819ae3d5c73",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "71c14676-8e0f-4dba-ac35-1269c73ede3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6e71c0-f625-4d21-833b-8a727a9222b0",
        "cursor": {
          "ref": "527e5739-32eb-4c3c-8d8d-c4a8849a9111",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0da75c1f-4bd4-4bbf-9575-a3435fa0be71"
        },
        "item": {
          "id": "7f6e71c0-f625-4d21-833b-8a727a9222b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fcbe825c-4cd1-4381-a113-a821de1691be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc804aa-5d8e-43c3-95b0-1658eabfd452",
        "cursor": {
          "ref": "b95058e4-3edd-4493-9d20-c534537938ca",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2cfdd24a-7624-4741-bb93-65e509e80aad"
        },
        "item": {
          "id": "ebc804aa-5d8e-43c3-95b0-1658eabfd452",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f249d18b-2cd9-4f66-8215-842be75c5f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a706f618-3d4e-4537-90e6-7324abfe3c0a",
        "cursor": {
          "ref": "a18c87f8-657b-4061-8675-22bb663f2c38",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "89f02bf3-4dee-42c8-aa0e-5be3f18742cf"
        },
        "item": {
          "id": "a706f618-3d4e-4537-90e6-7324abfe3c0a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7d6237a6-ea44-4a4f-9b76-04a6d4417c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d439ab07-a081-4c14-90fd-1f3585c667cb",
        "cursor": {
          "ref": "9c502bc5-3982-452b-9a8c-a1422dfb618f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "226e2365-8544-4539-a1e7-d5aa1b31700f"
        },
        "item": {
          "id": "d439ab07-a081-4c14-90fd-1f3585c667cb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9fdabb9f-0e9b-4748-aa19-9bf3b73bac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac8d536-0b79-4659-b029-a9ac257755ef",
        "cursor": {
          "ref": "fcf51a39-7115-4214-a0aa-a02068705405",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "018c9899-3ed7-40d5-a321-350a1c11a838"
        },
        "item": {
          "id": "cac8d536-0b79-4659-b029-a9ac257755ef",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d234de61-2089-485e-9355-b9f8927fe570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd7c203-a57b-4d35-802d-4f499bd8b7a0",
        "cursor": {
          "ref": "041d6830-eec0-43c6-9f1f-c0fdbca3d813",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4cf53765-6806-4e51-9d4f-ae795f878311"
        },
        "item": {
          "id": "2bd7c203-a57b-4d35-802d-4f499bd8b7a0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9a886ad9-29e4-4c32-a721-e9bf3c65d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2285238c-dce0-4f24-8e7f-fa8aa13af2ea",
        "cursor": {
          "ref": "c525d143-131a-4d82-acb8-989bd08f5509",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7d563511-6c3e-4e57-aafc-b493eb0660d5"
        },
        "item": {
          "id": "2285238c-dce0-4f24-8e7f-fa8aa13af2ea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "38338a73-e402-495b-8933-6cf3c172ec44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c5bb88-e3a9-4064-9079-1c5df4bd6dc5",
        "cursor": {
          "ref": "5d17e95b-4b3f-4033-bc1a-5ea118166c79",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1bb4305b-9a53-4088-b5d6-0b54ce79ae6e"
        },
        "item": {
          "id": "96c5bb88-e3a9-4064-9079-1c5df4bd6dc5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "03b55234-a10b-44b2-b326-2122d3ad8d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bb1bff65-5a1d-4bd4-a5c8-a78aa31705f4",
        "cursor": {
          "ref": "b86f4b16-090d-4fdc-bc5d-217486617635",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a7e64109-1e3e-4fca-b163-02abdba03f56"
        },
        "item": {
          "id": "bb1bff65-5a1d-4bd4-a5c8-a78aa31705f4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3e42bd15-36b7-4dc4-b844-0aeea0431c9e",
          "status": "Created",
          "code": 201,
          "responseTime": 14373,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8cf69-d50c-471b-a141-b9807d482181",
        "cursor": {
          "ref": "0f7d63a7-0ca1-499d-aeb0-b1216dba7780",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "03ed4a23-e9da-40a3-96d3-84cea813a356"
        },
        "item": {
          "id": "58b8cf69-d50c-471b-a141-b9807d482181",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c883da5d-f62a-4003-9d63-4e451da5edcc",
          "status": "Created",
          "code": 201,
          "responseTime": 13739,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c3c430-d5d6-4bea-8804-f8f5c3fc63fb",
        "cursor": {
          "ref": "bacb6e7c-985f-47d7-b50e-85a8d60b957b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fdeb1b4a-1410-4078-89a4-7b57386030c0"
        },
        "item": {
          "id": "17c3c430-d5d6-4bea-8804-f8f5c3fc63fb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "74226760-907d-4767-9b66-fa8e1b5971bb",
          "status": "Created",
          "code": 201,
          "responseTime": 14079,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730f11c-e85f-4167-b301-86cebf1ac074",
        "cursor": {
          "ref": "3b6f6f3c-d8b0-4a55-aa0e-131c75b93eea",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6413349b-3693-4393-a7ff-7c0f1ae85187"
        },
        "item": {
          "id": "5730f11c-e85f-4167-b301-86cebf1ac074",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5b2d3df5-9f6d-4882-9573-e1f0c9b742b0",
          "status": "Created",
          "code": 201,
          "responseTime": 13327,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "031ff2fc-6226-4c48-be7a-a5864bc79dba",
        "cursor": {
          "ref": "bf82d4d9-e411-4dc5-95c7-c44136c7b279",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b06eace9-6970-4a23-8832-2ac3c06491e9"
        },
        "item": {
          "id": "031ff2fc-6226-4c48-be7a-a5864bc79dba",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f949fd80-124b-4218-9e00-4c05a95618be",
          "status": "Created",
          "code": 201,
          "responseTime": 14267,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-08T00:48:54Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-08T00:48:54Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6eb15132-883b-4927-925e-fc1abdbd1407",
        "cursor": {
          "ref": "b71fb17c-3c33-4289-a9df-cf6d37484583",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d72bb3b6-7167-4d9a-a530-cadd2a9a1414"
        },
        "item": {
          "id": "6eb15132-883b-4927-925e-fc1abdbd1407",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "39dec68a-0a0d-4958-8945-83b266733df4",
          "status": "Created",
          "code": 201,
          "responseTime": 14533,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b61202-7514-4639-a86d-885778b784d8",
        "cursor": {
          "ref": "c05e1d8b-257a-4811-85cc-cb1bd65acfa3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64889c7a-e98d-4538-b63a-ee8cfbe20917"
        },
        "item": {
          "id": "11b61202-7514-4639-a86d-885778b784d8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "decdc7ae-245e-4b4f-baf3-cb2ca49d5ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08954fac-9301-4947-b10e-8e0d6a76eb57",
        "cursor": {
          "ref": "a2c6b5be-7d4c-456e-b60e-3da1868a8f99",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dbcd0e3b-c5ef-407b-a22d-0d9f7b2c5962"
        },
        "item": {
          "id": "08954fac-9301-4947-b10e-8e0d6a76eb57",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "12345b63-08ff-431b-bb0c-788511ffaac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2848000b-d9dd-4cfd-b95d-66f0158e1a55",
        "cursor": {
          "ref": "c0f8c78f-5d21-49ff-8c41-252164489dad",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9a1a4acc-1899-4b29-9169-04cce772eaf7"
        },
        "item": {
          "id": "2848000b-d9dd-4cfd-b95d-66f0158e1a55",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "386b6975-bde3-4d2d-9acc-91ab252286fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34179910-0e99-4acc-b579-7dfd8ef060f0",
        "cursor": {
          "ref": "dabb1050-7534-42d2-bfbb-aee503bcf7c0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "377b4a8a-a9b5-4f99-a6fd-1a97e90be46d"
        },
        "item": {
          "id": "34179910-0e99-4acc-b579-7dfd8ef060f0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "02012600-347a-4c93-b8cb-6d4d8bafba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6aa725-39ae-42ea-8a18-d1bc1ba9a2dd",
        "cursor": {
          "ref": "67e767ee-2b1b-4cec-ad06-91c430fdc02b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5a32427-9b95-41d1-95c1-0a8ceb5c9e6d"
        },
        "item": {
          "id": "de6aa725-39ae-42ea-8a18-d1bc1ba9a2dd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "84ba0592-ebc5-475a-8cfa-3d74be904a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bd4915-6fa6-4314-a405-9093235ea013",
        "cursor": {
          "ref": "92eab6cf-2cea-4699-871a-dc27a8402def",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d972283-d0dc-4bf3-bc2e-5559a4d9457c"
        },
        "item": {
          "id": "69bd4915-6fa6-4314-a405-9093235ea013",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ecb4eeba-d92b-48a6-b4e9-4996ed85dbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fab1daf-f6f1-4375-80b3-eca93489a6a9",
        "cursor": {
          "ref": "6e7f7f70-db49-4f63-91d2-8404c46b1a7b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ff40d7b1-d63c-46a6-8682-b2d2ee054112"
        },
        "item": {
          "id": "6fab1daf-f6f1-4375-80b3-eca93489a6a9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e252fb86-1fb1-4d55-b772-ac1e229c4c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb87fd56-5194-4d85-b42e-fefbaee7d769",
        "cursor": {
          "ref": "ab03f641-a5f9-4444-91d3-aefff85650bf",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9f513b6c-03af-4cdf-a562-f853cc5dea8b"
        },
        "item": {
          "id": "bb87fd56-5194-4d85-b42e-fefbaee7d769",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "652ed0b2-42db-49fe-bd41-0cac6142011b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb9f90b-6b83-4871-b79b-44a327165a2f",
        "cursor": {
          "ref": "dbba6b27-220e-4b32-aa6e-fff376c53609",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0b3b26b2-74cc-48cd-9af3-1959773d64b1"
        },
        "item": {
          "id": "3cb9f90b-6b83-4871-b79b-44a327165a2f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e275fb7b-43e8-4a34-afd1-127552ac58e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287cfd16-27b3-4e88-9e91-dc1145eee099",
        "cursor": {
          "ref": "5cabc67c-0b10-4eb4-bfc4-c185d4b89fc8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5a5b9acb-c98a-4bf5-a8ab-5584785dc852"
        },
        "item": {
          "id": "287cfd16-27b3-4e88-9e91-dc1145eee099",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7fdc764b-dca0-4c2f-a80a-9c8777d60982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad0ca71-f207-4820-9be0-9b91c927292e",
        "cursor": {
          "ref": "6696ed11-e11c-459c-9992-aa4ada7cfc27",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b084399e-dcd7-4414-9a74-82d3431bab46"
        },
        "item": {
          "id": "aad0ca71-f207-4820-9be0-9b91c927292e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f35f5256-19db-4891-a4a9-46a2113cd175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba393470-6512-486a-b371-1189aba21c63",
        "cursor": {
          "ref": "8e83dd5f-0b42-4857-90a4-522938290109",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "086d3652-bcd1-49a3-83f5-24654786eaab"
        },
        "item": {
          "id": "ba393470-6512-486a-b371-1189aba21c63",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0706b175-1e19-4a38-b1d1-26b9991b35aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857bb33b-0efb-42da-a074-b547e3085364",
        "cursor": {
          "ref": "c425bc48-1460-45e5-a0ad-f438ac1a65ea",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "92a543f4-ae3d-4a27-ac73-33dccaaa5cea"
        },
        "item": {
          "id": "857bb33b-0efb-42da-a074-b547e3085364",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "96c2db23-a52b-4428-8816-276652c689f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625d7a1d-3f0d-47a4-945f-e9dcd620943e",
        "cursor": {
          "ref": "d75d8263-31d8-4e0a-9420-effb57403d44",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1f47a8fc-6427-488c-9d33-bb24a112d27a"
        },
        "item": {
          "id": "625d7a1d-3f0d-47a4-945f-e9dcd620943e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d70ab5c7-350c-4900-8e45-cf5a57b58d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db8b40f-e581-44af-ab74-35bc2bc4fbdf",
        "cursor": {
          "ref": "e332b519-e2d3-4a18-bfa0-eced8cf67b9d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4b482ace-df74-4c8a-ab0c-fe085d44b3e0"
        },
        "item": {
          "id": "7db8b40f-e581-44af-ab74-35bc2bc4fbdf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1f00bff0-18ee-459d-bed1-279113f347f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c8e4ac-623b-4447-9d2c-800d64aa8648",
        "cursor": {
          "ref": "ea4367a0-55a0-4254-ba8b-42e3843141c4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "77b97dda-2352-41f7-9252-828b0e07bf2a"
        },
        "item": {
          "id": "c9c8e4ac-623b-4447-9d2c-800d64aa8648",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a435b933-2542-43dd-a8bf-e373ec806c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6af750-9954-46a0-9574-96e0300cdf83",
        "cursor": {
          "ref": "8cf080ee-c945-4bb2-9e21-dbe148eb9ab1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b8bf6706-1f67-4465-9689-d0a71c3723d9"
        },
        "item": {
          "id": "3c6af750-9954-46a0-9574-96e0300cdf83",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "91d386bb-f66a-417c-aa44-f658ca4bfd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac834883-046c-4165-a080-236f69f0682b",
        "cursor": {
          "ref": "b1d283f1-f550-4398-8a9c-bb27174483b7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3c5132c8-e2c4-49e0-b0b9-f4327406f28f"
        },
        "item": {
          "id": "ac834883-046c-4165-a080-236f69f0682b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51b6f9c1-d750-450c-a549-ded10cc940d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b62002-2e64-42df-84ed-dd94dd0a90d4",
        "cursor": {
          "ref": "53adead1-e070-4eb5-bf74-9ab68a37eeab",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c4a7ac32-4076-44fe-af94-8d46ac202ac2"
        },
        "item": {
          "id": "02b62002-2e64-42df-84ed-dd94dd0a90d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1070ba11-f22c-47df-b9ee-fb294298fe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f17383-dd19-470a-b803-7a2537eb7073",
        "cursor": {
          "ref": "3322b466-7963-479c-a98f-0a58d44f5cdf",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b00178e9-98aa-4824-89ad-1a68bd7c209a"
        },
        "item": {
          "id": "f1f17383-dd19-470a-b803-7a2537eb7073",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "94883865-fdad-4473-af23-55fc9c2ed2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7aef7c-ed1e-471c-8792-1256c6ea5e3d",
        "cursor": {
          "ref": "a02558f0-46d9-4fe7-95a9-b4817f9221a1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "04728df1-c992-4832-8816-102b6cdab5b3"
        },
        "item": {
          "id": "fc7aef7c-ed1e-471c-8792-1256c6ea5e3d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "65c2613a-0b9d-4e0b-8c33-2c3c45f4e16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f0e184-d5b9-47d8-8f5e-784cd0c6c32f",
        "cursor": {
          "ref": "b0840ab0-0e4c-440b-9f1a-a9262c800c8b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "14a2b02c-6e15-44fb-9638-33e0501b3c72"
        },
        "item": {
          "id": "d5f0e184-d5b9-47d8-8f5e-784cd0c6c32f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ad9120b-701a-4e29-af5b-a9345932e947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de395c1a-fb10-4b99-bdbb-b744b7eb0481",
        "cursor": {
          "ref": "fc19bfa6-7fc9-4e5c-81e9-d0e250c06c58",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81b7590c-c2ee-4f18-a793-fdcc04f81f87"
        },
        "item": {
          "id": "de395c1a-fb10-4b99-bdbb-b744b7eb0481",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86f307e6-3c5a-4f8e-b884-a67c56be6122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a162bf9-0249-4e0e-ab9d-12f4073f266f",
        "cursor": {
          "ref": "70a9fd5d-4180-4ba5-9910-4722b42ea96f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c624d5ef-f93e-47e8-8211-3ebfdbd26768"
        },
        "item": {
          "id": "7a162bf9-0249-4e0e-ab9d-12f4073f266f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0ed9d869-7e70-4862-8d38-27e0a74cc9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d577cd-2aae-4bab-973b-5fc43dedf362",
        "cursor": {
          "ref": "ed03bdd7-63c4-4750-a447-9c574c5536d0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "05a0dd08-8940-4048-8da7-fab92e1b900b"
        },
        "item": {
          "id": "18d577cd-2aae-4bab-973b-5fc43dedf362",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1f3804a5-d960-45a5-961e-2a31d624e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c69ea3-d55a-4082-89f5-f64e65257e55",
        "cursor": {
          "ref": "bb01158a-2279-4f41-8ab9-19c6685df882",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a3371fcb-3a06-4416-9578-80657c7e38b7"
        },
        "item": {
          "id": "96c69ea3-d55a-4082-89f5-f64e65257e55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e74db0a5-a641-4f96-9ac0-7acb244d19af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a590a58-d7e0-44de-83ec-b801aaf0a684",
        "cursor": {
          "ref": "534b2db8-9d5c-4106-8c87-8485d2848604",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "240d40f5-d9f7-4e10-8fba-baeaca546bf7"
        },
        "item": {
          "id": "1a590a58-d7e0-44de-83ec-b801aaf0a684",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d7b27ced-22e7-486f-a2a6-09e164f60fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a673fdcf-ca8c-4567-a8d0-c63103bf239e",
        "cursor": {
          "ref": "56104fcc-2e86-4639-85d8-cfe222c40776",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a981867e-9b29-4f51-8e58-61687e0e716a"
        },
        "item": {
          "id": "a673fdcf-ca8c-4567-a8d0-c63103bf239e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fcbf2280-f0a3-49df-bea2-a8cec532a117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d378ac0-3d06-4a5c-8f17-b3b5a72e70af",
        "cursor": {
          "ref": "f1660e6b-18a5-4c8e-82a8-6c22ac967bfd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f6c1c80c-1995-43ad-b94d-95f5e04c2830"
        },
        "item": {
          "id": "7d378ac0-3d06-4a5c-8f17-b3b5a72e70af",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7d459ab6-1521-48f1-9503-8093303cdb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ca0fb9-fdda-4733-a557-8f03e5600498",
        "cursor": {
          "ref": "93c40887-33c7-4264-873d-a712f77d4c7d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "72274d7b-8520-4817-959f-81bbddef281c"
        },
        "item": {
          "id": "10ca0fb9-fdda-4733-a557-8f03e5600498",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c30f78b5-94c5-47a0-98da-74b2ea4c85a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5efc8d8-e66e-41b0-a28a-4274995cec8f",
        "cursor": {
          "ref": "bdcdf6b7-a3d9-49e1-b0b4-32d41faa6581",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "68bfcce5-c713-42c8-ba5b-2b1c553e86a0"
        },
        "item": {
          "id": "e5efc8d8-e66e-41b0-a28a-4274995cec8f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7aed982-31a2-42a6-ad18-f5019dfffa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3827bf7-fe62-4fa6-8ce5-bf6e25b3c406",
        "cursor": {
          "ref": "8c5693bf-9118-456b-af1d-e4d43721125b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b6638c1a-fc5f-4d7a-9aa6-8419b72bd113"
        },
        "item": {
          "id": "c3827bf7-fe62-4fa6-8ce5-bf6e25b3c406",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a364a559-6efa-4e94-b7ff-ce7cb86552c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f7e1a3-ebcd-4272-a980-68b5e7ee4140",
        "cursor": {
          "ref": "d8f6de50-c553-421b-bdd0-18d68a9d1a74",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "43c81643-a4f4-49c5-bc5c-cf2e1ca0be81"
        },
        "item": {
          "id": "15f7e1a3-ebcd-4272-a980-68b5e7ee4140",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5e8dd3f6-a96c-446c-b7f6-e900e3128b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d707954-588f-4beb-b444-8e50ec36fb3d",
        "cursor": {
          "ref": "4d295511-ac35-4765-a7e0-5f3ed2bc54e4",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d19198eb-a3e7-4d38-b955-dfd4ceeaecd7"
        },
        "item": {
          "id": "6d707954-588f-4beb-b444-8e50ec36fb3d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c972b4f9-e782-436d-b8e8-167508af3294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e83123-f121-4d22-8744-07555d444886",
        "cursor": {
          "ref": "fa0fec3b-d651-4397-97c6-0b5fde4c007d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5be7ab9e-03c3-4b58-90c8-154bfe204797"
        },
        "item": {
          "id": "89e83123-f121-4d22-8744-07555d444886",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "347a01e0-ffb9-4738-91dc-8904a56b9bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74f9658-2216-469e-ab7b-7a1a03277a4f",
        "cursor": {
          "ref": "0fd66386-c435-4098-b2a2-d64c7715808c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b9ac5005-e375-4876-94fb-5b01adf56bde"
        },
        "item": {
          "id": "c74f9658-2216-469e-ab7b-7a1a03277a4f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "61404f12-f518-4483-b6eb-153a46ee658c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17118372-66a7-46aa-b0e7-a7d5390bafb8",
        "cursor": {
          "ref": "531697e8-8ea7-4796-9b8a-aac50d0294d6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a81456d7-b6db-4ba5-87c2-854aa2517597"
        },
        "item": {
          "id": "17118372-66a7-46aa-b0e7-a7d5390bafb8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "279b6d6d-38aa-47aa-8e11-7bd2df75ed46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c758d4e-01b6-475a-bf48-d6230157aa74",
        "cursor": {
          "ref": "47039773-3cf9-44e7-b3c0-fc273c9040c1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f903a6f1-6e6c-4da5-bf85-08d00908ca59"
        },
        "item": {
          "id": "1c758d4e-01b6-475a-bf48-d6230157aa74",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9dec68e1-2735-4a93-9f80-bc11aed172d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5640a8fe-2ff5-4655-b6c3-71985ec77a63",
        "cursor": {
          "ref": "6b3480d9-6998-4110-80b3-5040cf29f42a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "de761f63-2910-4a47-a7aa-b5ee8d72afa1"
        },
        "item": {
          "id": "5640a8fe-2ff5-4655-b6c3-71985ec77a63",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "035cb4ff-0a7a-4e38-8401-136fe5c026ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133a4ae7-b292-4df8-9c79-2a1ba39f4607",
        "cursor": {
          "ref": "402bf49b-2de9-41cb-84df-8809142b69d0",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5c5844a1-5884-41f6-991f-dc83dcc0f6fa"
        },
        "item": {
          "id": "133a4ae7-b292-4df8-9c79-2a1ba39f4607",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7f60a391-4634-4787-9ba6-5278bc5d2a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c1884f-96a4-4d77-a4c5-fd130c9abc62",
        "cursor": {
          "ref": "44a25fcc-7110-4ac2-8336-ee75b726e331",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "44c956c3-01c6-4941-a803-86274d4ca24c"
        },
        "item": {
          "id": "71c1884f-96a4-4d77-a4c5-fd130c9abc62",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "16678bd7-335f-492a-bf47-c24a938f1866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bdcef2-9f5a-4998-991f-0f404160dea9",
        "cursor": {
          "ref": "4bcee111-ffd1-4686-a912-4b4350b1fafd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "db8a681c-2e1f-498c-8bff-b8ef579eb39f"
        },
        "item": {
          "id": "34bdcef2-9f5a-4998-991f-0f404160dea9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1ed7533d-3499-40ca-8a5b-c40b96aa9abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1418c2-0275-4e86-88c6-59a6d240122b",
        "cursor": {
          "ref": "4af82cc3-f3c6-41d5-80c9-f955f074eb62",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "133014d1-efe5-45f2-978a-fd77d81b1eee"
        },
        "item": {
          "id": "ff1418c2-0275-4e86-88c6-59a6d240122b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "863968a5-f685-466e-a85c-0bf4b8ffbf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd0fe5-6165-4381-84cb-87b51975c7e2",
        "cursor": {
          "ref": "a6b63c25-162b-42df-80ec-da3ef30fd7dc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dd942121-cf1e-4306-b3ae-dc4dd8bbdd45"
        },
        "item": {
          "id": "75fd0fe5-6165-4381-84cb-87b51975c7e2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5ea5145-29ae-4e16-a54a-e8b780abd7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a001ea-1960-44db-a887-73ea8dd65181",
        "cursor": {
          "ref": "c154c7f0-f6b6-43ce-b964-5b1b51835756",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "45cfb2fa-4661-4bf6-bda9-1070da50f60f"
        },
        "item": {
          "id": "04a001ea-1960-44db-a887-73ea8dd65181",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "077a1e51-8310-4d0e-b4f4-3d73dbf2e876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984ac09b-c907-4093-b7ad-eb600aee3e55",
        "cursor": {
          "ref": "4c4f383b-d98b-49f0-9b76-18e7ee2ebd53",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1ec922b1-7922-4043-bb48-e1a11fb8aaed"
        },
        "item": {
          "id": "984ac09b-c907-4093-b7ad-eb600aee3e55",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "068a94d4-41e2-437b-9e97-aee66252eedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d935f307-cb75-421d-9dda-cde6c99dfaa3",
        "cursor": {
          "ref": "d0f13092-bff2-42bf-a43f-2561f49cbea7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "20ff4dce-ec21-4916-98b1-8dcc31db5c7e"
        },
        "item": {
          "id": "d935f307-cb75-421d-9dda-cde6c99dfaa3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5c6562e8-6e78-48ed-9548-d4ceecf79574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61ba3f-adc0-459c-82ac-5f37af9a1b86",
        "cursor": {
          "ref": "28de18b0-e564-4ee4-baf3-9927e8ccf381",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8a8c0800-5694-4fd4-a904-d7c8c44ed6e3"
        },
        "item": {
          "id": "0e61ba3f-adc0-459c-82ac-5f37af9a1b86",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5e511ec5-5c52-4394-9f58-2bd7a8a5386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9511cb83-4ec1-406c-b8f6-e950bae0b503",
        "cursor": {
          "ref": "26b95f31-5e7a-4be2-bc55-9bd8ae50483d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8cb6ea5e-197a-49a8-8dfa-9df22fa5c8e7"
        },
        "item": {
          "id": "9511cb83-4ec1-406c-b8f6-e950bae0b503",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1390c254-d9c8-4e40-9821-eab233007ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39974b0-8d84-462e-a67e-a1a0c59d6df4",
        "cursor": {
          "ref": "c29cf660-b5e9-46e6-a9c1-e408e6ee7a29",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c289117-7ff7-4051-a477-3e39d14135e1"
        },
        "item": {
          "id": "c39974b0-8d84-462e-a67e-a1a0c59d6df4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "42a549c2-f4d3-4ab4-8241-7d279dbfee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b00f09-fb86-4ce6-98e4-7d327c057103",
        "cursor": {
          "ref": "d5396536-018f-46f9-9342-1acabd3dc54b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "12675b8a-b7c7-4265-972b-21b75e1631aa"
        },
        "item": {
          "id": "83b00f09-fb86-4ce6-98e4-7d327c057103",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b77a94b7-47f5-476b-86cb-50c6ad8f97a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fd7863-69aa-4fcc-92f0-7a77a7c35ba5",
        "cursor": {
          "ref": "10806260-3882-4bd4-af6e-5d2a6089d733",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "134bbaee-f0dc-4039-91c4-ecf393d2a0b4"
        },
        "item": {
          "id": "e5fd7863-69aa-4fcc-92f0-7a77a7c35ba5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f34acca3-e3fe-4b6d-8932-4763bb087f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc5f39b-31c4-4ad3-ae90-15d6e45b0f8e",
        "cursor": {
          "ref": "3bd118fd-ae09-417a-b1c7-3bad48eee692",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "be324bfb-01ea-4048-ad29-17978e7fe76f"
        },
        "item": {
          "id": "ddc5f39b-31c4-4ad3-ae90-15d6e45b0f8e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7a5d2ed2-2ce3-4746-bb06-227edc5183f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d4597-0b0c-4f87-b3cc-cdca24fa3adc",
        "cursor": {
          "ref": "b206a623-c963-44d9-9e24-beac2720ba39",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5ded7340-43af-4f69-b647-b2b8d867e062"
        },
        "item": {
          "id": "407d4597-0b0c-4f87-b3cc-cdca24fa3adc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "36164054-23fa-4d43-bc7a-94f9d38ab926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aee76d-1370-4a29-b426-d78851436b77",
        "cursor": {
          "ref": "4f9b3114-bddf-4523-86cd-dfd400a84e1a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f14128b3-ce46-405e-b783-9737d42fd098"
        },
        "item": {
          "id": "54aee76d-1370-4a29-b426-d78851436b77",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "af48dd68-f952-4786-b354-54051e9f21c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2976d4b-72e9-4ecd-b7c1-ea5477e29bc8",
        "cursor": {
          "ref": "bcc755f7-61a7-454f-8e64-2987e063ae64",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b00433b2-b31a-4277-b50c-ad6c95cd8411"
        },
        "item": {
          "id": "f2976d4b-72e9-4ecd-b7c1-ea5477e29bc8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a52f4097-8aac-4573-a2e6-8306b1e8c487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1049dd9e-d4c3-43a3-94b8-10b0b8960a11",
        "cursor": {
          "ref": "e704f9bf-675f-4f7a-9937-e9a5136e7edf",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8f7abf26-3967-484f-adde-96e11f015501"
        },
        "item": {
          "id": "1049dd9e-d4c3-43a3-94b8-10b0b8960a11",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9da7fef4-ec40-4af5-a0f1-198ea1f0e6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f746cf64-9f8d-42cc-808e-5f783bd2ef90",
        "cursor": {
          "ref": "680845ff-e33c-4163-90d9-47826c504260",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d7d76a6b-8451-4bbb-92e9-634d6efcc233"
        },
        "item": {
          "id": "f746cf64-9f8d-42cc-808e-5f783bd2ef90",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1cbaea26-2c8b-4148-9cff-fb30e4c1411b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8621ade-336b-4cb0-9b16-6695a40d8954",
        "cursor": {
          "ref": "d3df910d-6e79-4bf1-98d7-760c423363e2",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bee11cbd-f416-46aa-827c-8ce091c556df"
        },
        "item": {
          "id": "d8621ade-336b-4cb0-9b16-6695a40d8954",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "52144287-37f1-4dc8-bab0-7aeb41b0f6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63744d3-c087-4a38-bb7e-c334d6acdbcc",
        "cursor": {
          "ref": "34cbb9a5-d243-4966-8903-045f414200f8",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb56e5c3-b099-4ea7-9663-f1d5abcded96"
        },
        "item": {
          "id": "f63744d3-c087-4a38-bb7e-c334d6acdbcc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a82dfebe-883e-4401-8ebc-0f962d76ee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e7799-c070-4738-b700-24eb80eae753",
        "cursor": {
          "ref": "c7d03cfe-19d9-44a0-b8fc-2127aad0fda6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f359cf8-1440-4d39-b724-190226f6eeea"
        },
        "item": {
          "id": "6f5e7799-c070-4738-b700-24eb80eae753",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2e33503b-9633-457a-866c-74d790283eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a93888f-749a-4f4f-a5b5-1ba30b47ba08",
        "cursor": {
          "ref": "a5c6725d-927f-44eb-a0ed-b8d56a809fe6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b08eb057-ed3a-416e-a7d4-0b4ace3d7167"
        },
        "item": {
          "id": "6a93888f-749a-4f4f-a5b5-1ba30b47ba08",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ca97ab0b-173a-4a99-9315-e3cabd9885b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbb759c-07f0-4cc8-a59e-9ee7bc3268bc",
        "cursor": {
          "ref": "eb614545-4558-4b04-a3e0-1e999efb1419",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d477d1eb-fc00-4681-8f9c-ebcfd61a00b9"
        },
        "item": {
          "id": "2fbb759c-07f0-4cc8-a59e-9ee7bc3268bc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8b594eda-c8e4-4aa7-8643-361ffce98725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0133a00-8819-487e-a8c9-0622c0f40ea8",
        "cursor": {
          "ref": "6005e390-58e0-4cc4-83a8-b47cb6023774",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7242665b-c32e-4f06-bf21-384d57f94dbc"
        },
        "item": {
          "id": "a0133a00-8819-487e-a8c9-0622c0f40ea8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c481d23f-c5a5-46a1-b872-fae81137096a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3363a0a-b3f8-46ab-a913-d72dd3b17074",
        "cursor": {
          "ref": "2d009438-c8a4-479d-ba50-0636e7e4abb4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1de3ab4a-7be6-4dac-856e-33a54c5f0d39"
        },
        "item": {
          "id": "d3363a0a-b3f8-46ab-a913-d72dd3b17074",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3fafe669-7e52-4c4c-b538-5d12ac1477a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac087d3-8cae-4690-bc5a-ca3feb5b45fc",
        "cursor": {
          "ref": "144aad03-5cc7-4515-9cd6-e15e52576c8e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "53383067-6bb3-4dec-938b-5e5c4412738c"
        },
        "item": {
          "id": "2ac087d3-8cae-4690-bc5a-ca3feb5b45fc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aa15747a-2be7-43db-a6e2-7ab98871a1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62177079-2b24-49b0-983c-842f4f22ce2a",
        "cursor": {
          "ref": "e120a8b2-3a52-43ac-8836-05f0169b92c4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "174d2cff-77a7-4589-bae1-01b0c7cadf82"
        },
        "item": {
          "id": "62177079-2b24-49b0-983c-842f4f22ce2a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8cd44d17-0758-43b9-b569-b671e5eae62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d35cdc6-f5f0-4762-8aae-65c588e543c1",
        "cursor": {
          "ref": "aa86f264-3084-4b21-964e-5f0d665795fb",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8ed9a360-1da9-4cc3-9414-89cfa65aa52c"
        },
        "item": {
          "id": "5d35cdc6-f5f0-4762-8aae-65c588e543c1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f3fbf79c-d4ed-41d8-b40c-1d767807b3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000cd777-8ec8-498d-a892-a7a5f51aa728",
        "cursor": {
          "ref": "c31222c1-d577-4ae4-a88e-7516d63a9431",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "338cbbb7-4cb9-4ebb-9318-5bc728bac52e"
        },
        "item": {
          "id": "000cd777-8ec8-498d-a892-a7a5f51aa728",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da57152f-481a-4c71-85c2-99db9dabeee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f9e499-8167-45a6-be38-7717c96ff442",
        "cursor": {
          "ref": "68dc6504-cfee-4aa3-a672-6b51abf250c8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5c93bcc6-a437-4641-958f-f5358a55bdcb"
        },
        "item": {
          "id": "d2f9e499-8167-45a6-be38-7717c96ff442",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c8e20e35-b0cb-4427-abad-e7a3b54086d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad74f78-38fa-4de1-b9a8-d0b8d4ca6489",
        "cursor": {
          "ref": "b2cc2283-5711-4622-a85d-263e46d462ab",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3ea4d7b1-6cd0-47ac-961d-7c99c8663fb7"
        },
        "item": {
          "id": "dad74f78-38fa-4de1-b9a8-d0b8d4ca6489",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6fbaf3c3-64a6-4447-b016-4c67735688f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f06300-7376-47b6-a553-4959c8582414",
        "cursor": {
          "ref": "258a9c8d-595a-4e5a-9559-1bd414c62671",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cb1b0732-7d76-4e22-b3fd-d365ad7c38d5"
        },
        "item": {
          "id": "a6f06300-7376-47b6-a553-4959c8582414",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "944c2191-a795-4feb-9724-fe93ec961bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8c40ad-3f12-4b5d-aca8-f865df871391",
        "cursor": {
          "ref": "b9ae9b26-5354-4c13-b7b8-521aa1df5ba2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ef7e3dbe-1ee9-438a-a352-44084954b6f0"
        },
        "item": {
          "id": "fb8c40ad-3f12-4b5d-aca8-f865df871391",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b1ccc84b-c91b-4e21-a710-5175cb489226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abff03c-0e98-478d-893d-0194e58caf09",
        "cursor": {
          "ref": "bf81e534-b330-4308-8312-542f024c4569",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f759ecab-cc4b-474e-a5cb-9c529838694e"
        },
        "item": {
          "id": "6abff03c-0e98-478d-893d-0194e58caf09",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9fc3523-d87b-4178-88e2-915596348bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883ec0b1-9816-41bc-a4d1-d64d3617c234",
        "cursor": {
          "ref": "165762da-47ea-4875-b907-b1defdb2678b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "252575d0-91e4-4a2a-924b-4ae88f204d7b"
        },
        "item": {
          "id": "883ec0b1-9816-41bc-a4d1-d64d3617c234",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f035e42e-ad0d-408f-85ab-915f8fa974f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc7999a-58f6-47b9-83e4-451697eeec63",
        "cursor": {
          "ref": "48648296-2d13-4fa0-b2b5-04f9f9767955",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "53a0a2c7-0998-420d-b8b9-4a68360d72e8"
        },
        "item": {
          "id": "adc7999a-58f6-47b9-83e4-451697eeec63",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9936b925-1727-4e61-9d50-341a78256c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fe72b0-8d27-4f7c-ba4a-ccc1bdf92d88",
        "cursor": {
          "ref": "462cd405-e9bf-40b2-bde6-d2cbba355775",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7540f89d-ad2f-4678-b8d9-06adc72365ab"
        },
        "item": {
          "id": "50fe72b0-8d27-4f7c-ba4a-ccc1bdf92d88",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f60fe758-a985-459f-accc-f0345e18ab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09442de5-9e6e-44de-a773-42ac2b0e9e59",
        "cursor": {
          "ref": "f3a6898c-7668-493a-b903-008c04cc6f11",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3dbca154-dcb2-4524-a298-37fd9aedbd79"
        },
        "item": {
          "id": "09442de5-9e6e-44de-a773-42ac2b0e9e59",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1e040310-f5f1-47e5-90fa-257cb9b6d85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148162c9-b311-4dd9-b3b1-037fbbc3cf18",
        "cursor": {
          "ref": "73346ed7-55ab-45f6-a7f9-9bb32c420f5a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b969cde4-5e3f-4837-88d2-bd9fdf89ef80"
        },
        "item": {
          "id": "148162c9-b311-4dd9-b3b1-037fbbc3cf18",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9eb143d3-4abb-4d7d-829d-01788737f772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122113bb-057f-47ac-830f-78cc02846688",
        "cursor": {
          "ref": "aea0fd88-116d-4f05-87ef-ebb6c06abb80",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "48c331e5-d5e1-43de-b3ef-364eb806e56b"
        },
        "item": {
          "id": "122113bb-057f-47ac-830f-78cc02846688",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "05998145-464b-4974-9ea5-119dc66e689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a723ed-7ef4-4055-95c2-2ae504f45f57",
        "cursor": {
          "ref": "1d1d4c56-629e-4604-8093-daa181d03323",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4614a75d-5517-48d1-a2b9-d62eafa37360"
        },
        "item": {
          "id": "78a723ed-7ef4-4055-95c2-2ae504f45f57",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2ec009cf-61fe-4f4a-b5c3-cf82f27d3a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1824bd26-aebd-4ec0-98de-d3e667515b40",
        "cursor": {
          "ref": "0c170b39-dfe7-41d3-b576-72360ee4844c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bda5394d-c182-4ebc-bfe4-d45c1c195273"
        },
        "item": {
          "id": "1824bd26-aebd-4ec0-98de-d3e667515b40",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "975ef805-6101-4b79-b05b-82f72eb0c92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10e9d8e-34bf-488a-a718-3e0787145234",
        "cursor": {
          "ref": "ea162146-b395-4d9a-9bd1-d3d96a98a7ab",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b2b8e413-775b-47dd-8518-89b6c605e3a7"
        },
        "item": {
          "id": "b10e9d8e-34bf-488a-a718-3e0787145234",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "42f178ac-dfcd-4a0c-a683-7efb08da1b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad061b80-9e89-406c-9145-000fed3c96b5",
        "cursor": {
          "ref": "87865513-bc73-4f0f-83fd-3373c7da3011",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0eb6524b-1a28-45d9-a43c-1fb6753d8206"
        },
        "item": {
          "id": "ad061b80-9e89-406c-9145-000fed3c96b5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "60025b6a-8e81-4e48-892e-08cd1988dc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b6e1bc-c881-4592-bf7a-26b3af2c5c53",
        "cursor": {
          "ref": "599d701d-2f42-4d51-b44e-ada58b4d72bf",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e71777bf-e20e-411a-b13e-fe0d28000a7c"
        },
        "item": {
          "id": "d6b6e1bc-c881-4592-bf7a-26b3af2c5c53",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4e79b727-6b39-46da-811b-ec1a3db0a06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb182a7-9710-4385-9c09-c5c26070c7cd",
        "cursor": {
          "ref": "cc0cfc85-611f-4bc2-8f42-680d9cf5d7d0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8cc17b8-4c24-4697-854e-f3500cb1a28e"
        },
        "item": {
          "id": "deb182a7-9710-4385-9c09-c5c26070c7cd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9eedc433-f86a-4daf-97b6-1b1cf206c870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb031ac2-f60c-4499-9d0d-1f753ca1a4a8",
        "cursor": {
          "ref": "f447260c-ecb4-4a9b-a5b1-283cf8bdee07",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d61438fc-347a-4a54-bc67-f71da5466535"
        },
        "item": {
          "id": "bb031ac2-f60c-4499-9d0d-1f753ca1a4a8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b540b651-937e-41bc-884f-8dee5975a27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347eaf26-0dbd-43e5-ac13-16e96abbe183",
        "cursor": {
          "ref": "2771b897-81ec-4246-88f7-bad1f6282c01",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2b5c52c6-3208-4296-82f0-545072c32236"
        },
        "item": {
          "id": "347eaf26-0dbd-43e5-ac13-16e96abbe183",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "78c4baa1-cd5a-483b-8d19-4688430a3d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fefb19b-f999-4440-b8e5-387962f33108",
        "cursor": {
          "ref": "4fd64aae-ab64-457e-84f9-6b520280d150",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "617c5dbd-7b35-48b4-8b03-4668aa7c25bf"
        },
        "item": {
          "id": "8fefb19b-f999-4440-b8e5-387962f33108",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6baf3c0b-3a41-4da8-9f04-72423d5b6b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dd76c8-f77c-4cb1-b7d4-e97b4ed90998",
        "cursor": {
          "ref": "a8afe53b-01ec-4ce3-b555-cb62cdd792a2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fed3578e-19eb-4cda-b8cd-224f2b385f70"
        },
        "item": {
          "id": "41dd76c8-f77c-4cb1-b7d4-e97b4ed90998",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2c0d12d0-635e-41ae-8532-00162654d07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f29621d-3c0a-4ccc-8c82-813d5e44c173",
        "cursor": {
          "ref": "3a5058b4-f39e-4497-8479-3f1e3cb3e35f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9da5d19a-1b13-4a6c-9117-0ebdea779ebf"
        },
        "item": {
          "id": "9f29621d-3c0a-4ccc-8c82-813d5e44c173",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5a2638cd-f083-471a-99b0-37345a69a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ff6b6f-e020-4351-accb-172184d6d206",
        "cursor": {
          "ref": "eb115353-c821-4ab7-b809-7f176eab531f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1edaa927-3cc4-4fe9-889b-92e1cca09505"
        },
        "item": {
          "id": "18ff6b6f-e020-4351-accb-172184d6d206",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa4db8e4-2b17-4ff8-98d7-e42e538ead8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370d8c3f-80a9-489f-b434-8b4669ca69f9",
        "cursor": {
          "ref": "af34ea9c-85cb-4788-941d-d4292a5ce5bd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a09a7d19-657c-47f6-9bfb-d28778900d6e"
        },
        "item": {
          "id": "370d8c3f-80a9-489f-b434-8b4669ca69f9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c3791da5-c6a2-401c-b383-5b1f7d691eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b993aa26-3fcb-43e2-a440-5d1d5803dc7c",
        "cursor": {
          "ref": "d44f3096-911d-4b4e-86e2-d65931aa1f05",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e6667aac-425a-4c7b-8463-75336e08b7e8"
        },
        "item": {
          "id": "b993aa26-3fcb-43e2-a440-5d1d5803dc7c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5e6f3d69-2cd7-4d18-a1fb-8af92391d244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bbe260-d3f5-40a7-af12-f73a5ebc7ce0",
        "cursor": {
          "ref": "8a0cc9e9-8f5b-4482-8f12-e9bde88cf289",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a6be8c25-b962-4742-88e0-8804f672713a"
        },
        "item": {
          "id": "44bbe260-d3f5-40a7-af12-f73a5ebc7ce0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0db3f381-4a85-4ed4-8d06-d6538367c7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044a6483-e85c-4ca0-8a7a-df6222217cc0",
        "cursor": {
          "ref": "4346d9e3-97ca-4621-8372-90e8ef86ec05",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c7525f9e-4fe1-4fbc-bf18-db232fc52d69"
        },
        "item": {
          "id": "044a6483-e85c-4ca0-8a7a-df6222217cc0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b3a31dee-58c0-4526-b22c-b97d2a92227b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85114ad-85cb-40f3-8061-7f6c4c0cfe59",
        "cursor": {
          "ref": "f978c8f0-66b3-4b65-a050-e7eb65992539",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "69d74114-37e4-4975-89ab-76559d5d16eb"
        },
        "item": {
          "id": "c85114ad-85cb-40f3-8061-7f6c4c0cfe59",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6152f36f-9a09-4c32-8eb6-8ecf6c98284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db21740-273f-49c1-93ea-a77897757b7e",
        "cursor": {
          "ref": "9f3783ac-c142-4986-aa1f-c5b65a2254ca",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5ece4f60-325e-4ece-a72c-82c49f19a811"
        },
        "item": {
          "id": "8db21740-273f-49c1-93ea-a77897757b7e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "93a2a136-9bcc-4466-a8b9-d7a1c85b2dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf55c3c-487f-445f-9fb4-5d0adb7e985b",
        "cursor": {
          "ref": "44bd77b1-a4f7-4c07-bfd4-aba0f38221a8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "71df4794-62ff-4678-b944-8ef36b35345a"
        },
        "item": {
          "id": "ecf55c3c-487f-445f-9fb4-5d0adb7e985b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0a4995e2-8758-4893-a6cb-02016226c0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd54ee3f-9e8d-496f-80ee-f4c781a40347",
        "cursor": {
          "ref": "99cbdd89-ed00-40e1-82b2-864d01964ce8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "42eb47fe-2a2a-46ea-80df-2db4fce2b425"
        },
        "item": {
          "id": "cd54ee3f-9e8d-496f-80ee-f4c781a40347",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ea4ec7b-f8a5-40f3-b755-e80ecf01d55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833cf198-5f2c-459e-883f-34a652a6586c",
        "cursor": {
          "ref": "da029f78-3636-420d-b409-297e62accffb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ec3334d6-ae43-4a51-b867-3e1b97017ad5"
        },
        "item": {
          "id": "833cf198-5f2c-459e-883f-34a652a6586c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a512dd5e-2ab2-4f76-8c21-8aaf5521e092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5f7a43-d87f-4c2a-ac89-07c678c6b7fb",
        "cursor": {
          "ref": "8723f607-9b1e-4fe5-abf1-5d52f6966b85",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "31455779-fa56-44af-ad6b-2bbeebf1aa73"
        },
        "item": {
          "id": "da5f7a43-d87f-4c2a-ac89-07c678c6b7fb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1879427d-1cd9-4724-9cd4-bfcf934d6952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d826f4-0275-4235-952e-24053cfe6257",
        "cursor": {
          "ref": "9d2c2e38-be73-4a95-a95c-f165029158f0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dc12d163-9b1e-4d11-b445-1486aad712bd"
        },
        "item": {
          "id": "22d826f4-0275-4235-952e-24053cfe6257",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4b0deb8c-d6ad-4df5-afc3-fa05632f6e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf0dbe6-6798-488a-9a81-d11d6fce4d93",
        "cursor": {
          "ref": "e54151f1-bce0-48f5-a678-26592af889c8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "28ccedc0-7038-431a-8110-5ea8e5a3d16e"
        },
        "item": {
          "id": "8cf0dbe6-6798-488a-9a81-d11d6fce4d93",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "983ac114-575f-4acb-8b29-1238615e83cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16120872-2f90-41af-8a85-2633c3b0a65f",
        "cursor": {
          "ref": "ac916698-9a76-4cdb-91be-db36c3c2cd5b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2594486-35a3-42c4-9500-b7a744675808"
        },
        "item": {
          "id": "16120872-2f90-41af-8a85-2633c3b0a65f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fe07035d-2a90-4b1c-a02c-a0fd4b4b658c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb14fda-2a17-4fd1-8b16-fab8b04b91e9",
        "cursor": {
          "ref": "445ba07c-61c6-4034-b047-bd6d58a9b6d9",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a7326814-350b-4d9b-b5e3-89e0a814a1df"
        },
        "item": {
          "id": "efb14fda-2a17-4fd1-8b16-fab8b04b91e9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "32bacb3a-8137-4cf4-b1bf-5e16eba11da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f64690a-67ff-447e-aba1-f65d769a1b24",
        "cursor": {
          "ref": "45f9c4d7-cd66-40da-a1a6-1f2602dcb8d4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f44b3a2-e93e-422a-a79a-77bfeb441180"
        },
        "item": {
          "id": "3f64690a-67ff-447e-aba1-f65d769a1b24",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34f1eb91-c1eb-4569-a1bd-4f80d7a3e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a09bb5-ba98-4edc-ae53-acd00cb8c755",
        "cursor": {
          "ref": "9a4e962b-3e0e-43b4-bff2-0132be730e57",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8d6717ad-908a-4632-abab-a579137f3140"
        },
        "item": {
          "id": "85a09bb5-ba98-4edc-ae53-acd00cb8c755",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ff9ec150-b486-4c35-a66f-eba8e270b528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c182cb-00c6-4233-a97e-d56dea6db66d",
        "cursor": {
          "ref": "f52f2390-7c9f-4011-93b8-1a4d809b21c2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7649ab25-d0db-4c84-a8b1-13cf8220cb7d"
        },
        "item": {
          "id": "97c182cb-00c6-4233-a97e-d56dea6db66d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c4c68c23-9a17-4e84-888e-c361b7905310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae166951-6aec-47c3-a4c2-f06bd9698304",
        "cursor": {
          "ref": "47aa238e-0d2a-48c4-ba8b-787e8d66d29f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "12521db0-a15d-4569-a257-8693e1a625b7"
        },
        "item": {
          "id": "ae166951-6aec-47c3-a4c2-f06bd9698304",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5bdea0b4-f1b0-4598-a269-40389bea3590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d68a399-adc3-47d0-8ba6-5b3d6a303ad0",
        "cursor": {
          "ref": "e6f5a978-9f94-42be-9f9d-6a0ee8b911f1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a479d9cf-7d33-4eaf-a1a2-21e0d6c384c5"
        },
        "item": {
          "id": "1d68a399-adc3-47d0-8ba6-5b3d6a303ad0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1daf5ea1-349a-441f-8bc4-faf8912de1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f658f2-c8c5-42ae-ac3c-901bd4d9bb4b",
        "cursor": {
          "ref": "8f48c0b5-fad5-4775-bd64-8c69e3a40357",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ff5f9e8e-e47b-46ea-bf5d-a9a80660d038"
        },
        "item": {
          "id": "f6f658f2-c8c5-42ae-ac3c-901bd4d9bb4b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f5fe1fed-7461-4621-a297-4b33de3c57d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e2a334-6f1f-4d8b-8041-0c55b39cedec",
        "cursor": {
          "ref": "9b87ac0e-dd59-4a56-a389-7f0015efdeaf",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8479aa57-7965-45d8-8c0b-4d2639d86682"
        },
        "item": {
          "id": "39e2a334-6f1f-4d8b-8041-0c55b39cedec",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e6e2f8e2-3d24-441a-925c-16a7646baae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bcc972-e78f-47da-9e0c-eb3702027ee8",
        "cursor": {
          "ref": "baa1a436-fdd0-4199-8a81-75f2b47bf870",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5099f5c0-9e24-4a3e-9f41-8e31b9bfe8d1"
        },
        "item": {
          "id": "f5bcc972-e78f-47da-9e0c-eb3702027ee8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "042147e5-5865-439d-8b0b-8a52a6482d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c39d70c-efb8-453d-aa33-49c06bf00c24",
        "cursor": {
          "ref": "90a0e4fd-466e-4d30-ab20-278a75ac57fe",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fe9290b1-778b-4a23-ab8e-dae8bdec8e74"
        },
        "item": {
          "id": "5c39d70c-efb8-453d-aa33-49c06bf00c24",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d65335d-10e9-4bfb-9f96-f56019999cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9214f805-3a3b-4baf-8bdf-17c69913e92b",
        "cursor": {
          "ref": "17885219-4ed7-439b-bbf4-abc51957f400",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8ebf9c94-f208-4457-8b8f-e4186e20924e"
        },
        "item": {
          "id": "9214f805-3a3b-4baf-8bdf-17c69913e92b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "50e33f7e-239e-4126-a515-03f632d3c6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d525a3-3312-46b0-977b-ebccf51ee4b3",
        "cursor": {
          "ref": "387f4f25-7c3f-47a7-a8e8-146bf489f5e7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d27abecf-2c1c-4f62-b5be-efe31013c48e"
        },
        "item": {
          "id": "62d525a3-3312-46b0-977b-ebccf51ee4b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a82c17c2-2820-47c2-b732-0c79b7a8816b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b87508a-16c2-43e4-97cd-49cb87a5f014",
        "cursor": {
          "ref": "e7e0befd-7e16-48a8-ac08-ed88323b698c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9016757-7907-48be-b35c-f1da826cfa76"
        },
        "item": {
          "id": "6b87508a-16c2-43e4-97cd-49cb87a5f014",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "aeac1f73-d506-4822-b73b-b012748d6fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b1a113-214b-418f-9e3c-0b32915cd7a5",
        "cursor": {
          "ref": "c2bcf77f-c776-4ccd-ad0a-11769bc32dab",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bcfd1771-783a-43bd-832f-e8be379c33aa"
        },
        "item": {
          "id": "98b1a113-214b-418f-9e3c-0b32915cd7a5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "90ba7a2d-f532-4705-bb8a-6c41901994f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957b85ea-a829-46f2-8baf-c83fa492ea31",
        "cursor": {
          "ref": "2549327a-cdfb-4364-af2d-678dc7a7264c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dfa794c7-637b-47f8-9955-6ba416ad0878"
        },
        "item": {
          "id": "957b85ea-a829-46f2-8baf-c83fa492ea31",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2a6a0804-0b75-4b75-8473-5761afcc9400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ab1e7-3547-42fa-b054-0f94a5a0dc86",
        "cursor": {
          "ref": "77abbe22-371e-45a0-8066-911b907cbfbe",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d4dd34a0-1643-4657-8715-e2a1b985bd60"
        },
        "item": {
          "id": "4e0ab1e7-3547-42fa-b054-0f94a5a0dc86",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "64dfa38b-e51e-419c-b1cd-b1a02fd154b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309027f3-52b7-4736-9f85-967d35197881",
        "cursor": {
          "ref": "6e21da7c-1889-4b88-a0de-3d7c06702b32",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "963fafae-2a00-4d4b-a3bb-4b01cc23c481"
        },
        "item": {
          "id": "309027f3-52b7-4736-9f85-967d35197881",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1562729e-9c9a-4cde-b8b0-6f448f00c889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f98afa9-4fa3-4299-8332-4c6f2696be80",
        "cursor": {
          "ref": "6deefb50-0661-4c98-8485-04d2a3403e7b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "199c3230-7f92-4705-8342-2cb480b0634e"
        },
        "item": {
          "id": "9f98afa9-4fa3-4299-8332-4c6f2696be80",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5cca72fe-b131-44df-8b51-6575d3097a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dab919-ae36-435a-ab47-13603b8319fe",
        "cursor": {
          "ref": "191aca24-9cd1-476d-bddb-f74604dec588",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9fac1fb4-8128-47ce-a7ab-486174a8c0a2"
        },
        "item": {
          "id": "e3dab919-ae36-435a-ab47-13603b8319fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f1dc8023-6497-4a46-a998-e416e5d3d291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a57414-429f-460b-9485-e9c1430f8a5b",
        "cursor": {
          "ref": "31e3cc8d-65b1-4b3c-9c87-db4dd3e1c7c9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "68c3ce9e-2e8a-455c-94b9-f2ac9b810d0c"
        },
        "item": {
          "id": "82a57414-429f-460b-9485-e9c1430f8a5b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "39f9b379-74df-4e76-9a20-ea8ec1f5d8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe49fa56-139c-4a71-a4c5-b9a9e3e4c15a",
        "cursor": {
          "ref": "9f3a7b61-0ffc-4740-be7e-36c79d511460",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "67ecc450-11e0-445c-bf7e-885422ec3cdf"
        },
        "item": {
          "id": "fe49fa56-139c-4a71-a4c5-b9a9e3e4c15a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "542b7a0a-145c-4f72-952e-69faecb7c991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77775ec-46fa-4b27-9493-628d100410ff",
        "cursor": {
          "ref": "7214701a-5372-4c4d-8204-1669f08014ce",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fa39e432-6cc1-42df-b03a-f56fd8a25cfe"
        },
        "item": {
          "id": "d77775ec-46fa-4b27-9493-628d100410ff",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "129cc430-eddd-446c-8744-74e20120b6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7027f4f9-efe2-4844-8f8b-c57a39bd4fbe",
        "cursor": {
          "ref": "a36d4af6-5724-457b-9b61-c06d440fcebe",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5ccdf5f3-4d92-4f9a-8096-1dc13e359370"
        },
        "item": {
          "id": "7027f4f9-efe2-4844-8f8b-c57a39bd4fbe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c77a9628-bde5-4552-872b-0ac0964bee2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f9d743-0db4-4854-b9d9-a253dd69c6cc",
        "cursor": {
          "ref": "47d3cf50-d086-4b69-82e3-476987406e99",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "14b98a80-9dc0-48bf-a078-e6940c203f1a"
        },
        "item": {
          "id": "92f9d743-0db4-4854-b9d9-a253dd69c6cc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23496965-bbdd-4350-a3b2-4a467961f01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66003409-464b-4057-873e-88363aab16ff",
        "cursor": {
          "ref": "de3af000-e053-4166-ab75-805b980f8bf7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3327b43b-3688-4c47-a6cb-2968d6259a89"
        },
        "item": {
          "id": "66003409-464b-4057-873e-88363aab16ff",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c06b5932-ec33-4402-ac68-5794683573ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a05b94-60f9-4d7f-89c1-fa1a20da1966",
        "cursor": {
          "ref": "d49d8ef3-87e2-41c9-9fc1-c7d594f00d70",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be3bf9f9-8053-4628-941c-87ee80843027"
        },
        "item": {
          "id": "a2a05b94-60f9-4d7f-89c1-fa1a20da1966",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "22be9886-0876-4f5b-9dfd-6a5f62a494d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f6f9a5-0939-4efe-b4c5-0ccd11afe1d6",
        "cursor": {
          "ref": "06749aab-189f-4982-be41-d5ba1a313ad7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d59adeb-d008-4abf-afa5-dd810138def9"
        },
        "item": {
          "id": "c7f6f9a5-0939-4efe-b4c5-0ccd11afe1d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "94014917-99e5-41af-ba88-a7fb26ac3a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358a11bc-d401-43b0-af57-74f15f039cb4",
        "cursor": {
          "ref": "881bb7a9-34e2-46f9-9a63-cb63f916aad7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8b2c8550-e42f-4b17-b2b6-03ed255ae0e1"
        },
        "item": {
          "id": "358a11bc-d401-43b0-af57-74f15f039cb4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2e0cc6c4-90d9-479d-8c78-06fb8e917dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeea4a7-5471-4f53-9a4f-f54ee1ced829",
        "cursor": {
          "ref": "4033e37b-aac6-4114-b3dc-6405966a257a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c7d2adf9-ab38-4ba3-8f20-22d2bb0bbb04"
        },
        "item": {
          "id": "bfeea4a7-5471-4f53-9a4f-f54ee1ced829",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ecb31c70-95b4-4535-b8e9-0a4969cdacda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a4121b-4aa3-489f-a189-ef611e13804d",
        "cursor": {
          "ref": "39167076-cee0-46ca-96fb-7ad7f2ccb20a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "42f12601-2968-420f-8ef4-63cea217ec2f"
        },
        "item": {
          "id": "e0a4121b-4aa3-489f-a189-ef611e13804d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5b6ee200-a313-4e2f-ae32-a50a029f17c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805f992c-2581-44fa-b177-ac3bef96f188",
        "cursor": {
          "ref": "f8237017-a18c-4d84-90a6-4583b18374e7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb6102b8-42a4-4e2a-a49e-08fe74852887"
        },
        "item": {
          "id": "805f992c-2581-44fa-b177-ac3bef96f188",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ce37f949-7a8b-4c90-8679-4e980e70cc81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6f98a6-5c49-45f0-8afc-01849e5ad80e",
        "cursor": {
          "ref": "99d95fe2-2f15-4b52-aed1-e5e318a25bb9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3b8768fb-445f-4102-ab9a-341b9f83d536"
        },
        "item": {
          "id": "6a6f98a6-5c49-45f0-8afc-01849e5ad80e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55a843d1-e6b1-4ea4-8df4-d83b8c36936b",
          "status": "OK",
          "code": 200,
          "responseTime": 2009,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "621dd8ab-d178-4366-b206-9433e4910e8f",
        "cursor": {
          "ref": "4a30841a-bc65-4416-a063-46ab6a0ae8cf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "19d710ec-5d6c-4e8b-9bab-98a02474408b"
        },
        "item": {
          "id": "621dd8ab-d178-4366-b206-9433e4910e8f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "025f79a1-443b-4c43-ac32-5679a5edcfc0",
          "status": "OK",
          "code": 200,
          "responseTime": 3759,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "843da512-443c-400f-94b2-de9990650a1e",
        "cursor": {
          "ref": "4d003ebb-6905-4905-9f1c-cbf97c4e668e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9d093323-9fb4-4b75-b566-5af43129833a"
        },
        "item": {
          "id": "843da512-443c-400f-94b2-de9990650a1e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "219e1e14-1fc3-401c-9ef5-2a6bd46cba21",
          "status": "OK",
          "code": 200,
          "responseTime": 2986,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09b8915-af1d-4bb0-ad92-2d7a33fbf54a",
        "cursor": {
          "ref": "a56cab10-42e1-4b10-a2eb-73b66f89e256",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7deb484-83f3-4699-b26a-e464571ab8b7"
        },
        "item": {
          "id": "c09b8915-af1d-4bb0-ad92-2d7a33fbf54a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "37d7c64f-41ca-4cf1-a276-037bbb51d4e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09b8915-af1d-4bb0-ad92-2d7a33fbf54a",
        "cursor": {
          "ref": "a56cab10-42e1-4b10-a2eb-73b66f89e256",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7deb484-83f3-4699-b26a-e464571ab8b7"
        },
        "item": {
          "id": "c09b8915-af1d-4bb0-ad92-2d7a33fbf54a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "37d7c64f-41ca-4cf1-a276-037bbb51d4e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498d0555-48a3-416d-94cb-f00780922072",
        "cursor": {
          "ref": "3fb20c5b-1955-4bed-b610-f9b0ee59e2e7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bb90c34e-0908-4157-9560-3b0842f6b3eb"
        },
        "item": {
          "id": "498d0555-48a3-416d-94cb-f00780922072",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "471c11c5-7471-48e8-bf0f-03b7cef517a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94d86c0-f19d-44da-9ef4-759954a4ac65",
        "cursor": {
          "ref": "cc494f10-1520-464f-8b82-687d4ff51304",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b974240f-3b90-4c9a-9a26-dd0c3e57161f"
        },
        "item": {
          "id": "e94d86c0-f19d-44da-9ef4-759954a4ac65",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4d709f38-9b4e-41ad-918e-05ce634a100d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}