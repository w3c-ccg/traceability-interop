{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a4040e05-cc52-4d6c-a1f2-7e2ef45aa8a2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bc5f4462-f4a3-4cdc-bb68-3d274a3b0d0f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb5272d7-30f6-4056-a0b0-30c2ff01e2be",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "df76a105-96b6-4173-92bc-bfa7040716b4"
                }
              }
            ]
          },
          {
            "id": "a9718dae-a515-4c95-8f57-cc81ace72940",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b54b4e69-4d98-4920-9ff5-2fb53b91dbb8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8f409d13-86dd-4270-a743-8a2a089e2871"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "334a8350-9d54-400f-8379-63fbf96c9975",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "95b57657-e0ae-4f6c-9b43-51a58e36172a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fc60cc2-06e2-4e09-8f92-91b57d4e69f4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0e949c1-7855-4703-937b-296a0668b719",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "beb92bd5-78d6-436d-ae24-fd0002e98e62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b303cfe1-570a-4b8d-8b3a-fdac71101175",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71d4f129-2a80-4032-8865-d6c0811cf796"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "980f65d3-2308-4b83-b2de-e2479d495429",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a68337d6-024e-4c20-b8ba-6821c265ff55"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aa4be89-840a-4cf2-afa5-d4c8c43dfcbd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eccd906b-cf03-43f0-99f7-85db27cef4bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc1772c1-0bc2-4c30-b1a2-a281bfcdf55d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23723338-5e19-4ab4-b319-158ffae61812"
            }
          }
        ]
      },
      {
        "id": "4a4f0410-ead1-47c8-8ac3-eb75a4e556bf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ad7b427-db09-4700-b666-a9e8534dbfff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3fb90be-3d12-4188-b2e2-16ed1f45ab3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53ad0009-5537-4340-ba32-c90d1c18f227",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f9cfc2-7330-457b-9a25-2e173ff887bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a1cf5c4-f8fe-48c5-8f10-c442a4bbd6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca38ece-575d-4cf2-b261-fbd1990815fa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0fa1dc-1075-41ca-848f-0ed8e6ffeed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e17e295b-67ba-48bb-9204-66ec07000c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b27318-6788-4464-ba42-ab455e7bc8bc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c006dc-7a63-46dc-8e15-55f74e5ea969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d64d5f01-1b29-4c91-8c88-d11fa6614782"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47cc121c-b0bc-48f1-be2e-a103937e22f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81f80f06-756a-475b-ae88-4252dc10349a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d912c-1c8f-4b30-8040-4fd6f21253d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14d829a9-63b9-4eda-a862-4254ccdadb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81aef20b-9d2e-4916-9bf4-1352e08f1ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b48ac6-971f-4169-b461-0bc9123b05b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b1c804-ff60-4303-b798-ebe367823722",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ee98be-5816-48e9-87f9-fd6dc867618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46bcc11c-4a39-4493-8702-2da31725afdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afcc45a-de91-46e2-a283-150386fc1575",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "aff7fa3b-b0b6-4a23-ad69-573a0e93bec7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f9561e22-4e0a-49cb-8303-b2e1d43be5db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94501d98-6f48-49f9-98cc-8af5e704bf1e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bcc2d79-8d96-4ecd-b5b2-cba22796d15d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8dcda7f8-801d-46f2-8394-2f11a9731317"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8df8edb9-2a15-439b-ad29-27fb3a029bc8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2fe7e78b-dde5-4958-b8d8-fc26cd714955"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08f20156-1c50-4abb-9c2c-45621f8186db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee453297-56fc-4267-aa98-85b3e41b4931"
            }
          }
        ]
      },
      {
        "id": "b2160312-d2a3-4137-bf89-29446507f97d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8eb6f03b-a3dd-4cd6-aea6-73435e77a1cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b35bd2e3-711c-4ee6-bada-37b4aecbcac3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "acd61904-91db-462e-80c4-bb5fcf010b15",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c76ce38-552a-424b-8349-15bbc769cace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3228231e-5fad-44ce-8a40-71294d0e5d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d517724-c1ca-434d-8132-d66fa60252ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ff6a022-3dba-4674-a4af-1b95e516465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d00a591-74e0-482e-8660-f92e0a88d8e1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b0b74f-babd-4da9-ab83-cb5520b801ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb19a16-ac9e-449c-9138-032706ff79a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412e8958-26f0-4680-8efc-e097a99d9410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "209a6a46-180d-46b6-9181-598444481065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2f424d-ae38-4b2c-9581-967d7af7919b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c266cc4-5df9-4cf2-9f66-4d8e32f1d7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53ba63c-d8b6-4f29-a5fd-bb77a595582a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12821140-e883-4925-9f3b-795441a3c41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef55eee7-196f-4a05-9294-5f435055bb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9855292-e5f4-42fa-b504-21fba7678f1c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d4d1d5-ad16-4a56-9201-c74a3d19d9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d14706e-b31a-483b-92e7-1658c1bf0ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcad2ce-6541-4cfb-81f1-c8c7c5b0ba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2a46d19-9a6a-45f2-8dd8-ff0f4685a576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a54e38-1986-457b-ba0d-6fa0ae904574",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f40f10a-5b61-48e1-b580-c8f21a26e92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7a81a2-5a12-4ba2-bc7f-4d067a13f986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a10ee9-c388-4993-bae0-910fc4dcaa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7b0d08d-2b9b-4ac8-9ba5-f5c197fcdf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ad957f-8e84-4b89-8272-8cc5a6a851bf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81488b20-f1d8-4c2b-be80-66b3bef361bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4f6f77-e65c-499d-9e9e-52fab9f12d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09042e31-7219-4af0-9898-fdab3cfde6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1343d733-ef8c-4391-9831-84b3353b47f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e579847-f740-4565-b12d-72e361dfaf8b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0fd2a-a19f-43af-9dbc-01cd0fe44d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a5c6d1-2a2d-4b0c-a3bf-915752809344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440ef9f4-8a57-4404-bede-64454a71a69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8423e6ab-aa72-4ef5-b8d8-ed1b2fd34216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5adead-808f-4458-8db6-b52d0be4c2fc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b0b4e-eb2c-4068-bd7c-d7f1f64e03d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edd040c-d255-417e-b6ca-c89a7b3da679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fda954-8d04-4596-abfd-612669e65ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ac16fa-7226-4190-9de4-30308ae41ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65129460-c407-48a3-90ac-a38a9c764500",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7535370d-2d07-4b20-b1d2-e805a96e7fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f628be4-bbaa-44fe-b341-72cfe0d5801f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0a05c1-bcfb-49c3-9244-05814b686ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f8d0333-572d-44e6-bb47-3bc9a266672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5dd746-e680-40ae-9b13-44e60fa57738",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9803438e-27e8-42d1-a374-b00f12101b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ef21a8-9a9b-4ae0-a843-e5ff0e30d182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2326b589-e1db-44c5-8c30-dff47736fb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7c0e5f8-348b-453e-9c78-39f93de523bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b58d18d-624a-4c47-a8b4-0613caefca61",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dafc95-b73a-417b-b3c9-5006ea3d19b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6481ad3-cc14-4702-a96c-4e2b3f6b11bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9fd916-a83d-4a83-83d7-ea230c98014f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbe9b0e8-068c-4576-b98a-0f9f537dcd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bb18e0-34e8-4b27-94f2-d816442b216d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee74be91-b195-403e-814b-60e6c804d2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a19736f-a11a-498d-9f5d-6e418f06d438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dafbb31-8a76-49e1-8d8f-df98dcdefc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdcfaed1-56b1-4a05-8ca8-c3450123169d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04efcbd2-bfd3-4e51-a2e0-3defea96234a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c393c069-b6ec-45f0-be28-40f0fd695ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0082f432-f07c-4d10-b3b8-0b5755e9844d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f71a4b0-dc2f-4878-99a6-2dedca32204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0c4b935-0a3b-49d1-930a-f78467ae83c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59a387f-aa82-489c-a473-1dfe75e90f9d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0655c872-b096-4af6-a311-574207fab3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11c2c68-0ae4-4253-91bf-3d3b12c31e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26af5142-98fb-4924-a0ed-bd0597f548b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bcbb55b-ca49-4ec0-94d9-70803d588e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a67e8d6-aa95-4047-a7bb-f2a62a2c886a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c17f35d-c062-4479-9536-51f6dcbe46c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a472058-208a-4ea0-8114-d46f01651a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50631996-cc07-4f10-974c-db92a6591fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "326d4809-75fe-4557-bc9b-0d45926f232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327eef3-2265-441a-8af6-ce051ca6a2bc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5cb7d8-4951-434c-9267-29dcbd1472e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd54615-ae6b-4baa-917e-b0d890b86f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e777b-7232-4bdc-828f-3bf425a84cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0823099-69b9-4d86-bf5b-17cf269c1a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ae4d48-3933-42dc-b606-0a3be94963b3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4738ca5-dc07-40f6-a4e4-fc2897cf7d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cd91d5-902e-461b-9e6a-c8c4fa5f8281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f056652-644e-4c9c-a73b-15a98710bfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a77cbc0a-03f2-4dc1-8066-007bc983e890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a95a32-ec93-4ea6-a524-5e17c53e70a8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e30bd2-8d47-423a-8387-1d545fd7369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5adc6c-e2db-430e-8098-58f55b282d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac599a61-0c5c-4501-97a3-b42d8fd39ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcbb468-2174-48c2-b5ab-a12f441b5206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8631c6ec-36d9-4419-83e1-38aa253b2f40",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90100750-605a-4224-a81a-c818dae4dde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd61b61-bff1-4a6c-92a5-2b9d00ef99e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d5d949-5033-412b-9078-8ba3b1e8c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7677a48f-a77c-4078-b637-7246ce7a10ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bde306d-f1ea-4063-83f7-b1ea0d289ab1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7ad4e9-64e2-407f-92fb-3d1b10d72664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c621091-34b6-4cca-a1dd-732e83619b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06607f19-d72f-477a-b02f-a55061473c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28079a01-e805-4354-9fbe-33a5e5aaea96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5db443-603b-4ca8-a6c7-20b1a490549c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cad750d-7d8b-403f-9305-c3dd1cc6cac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea6fe26-437c-4750-814f-b45cc1cac7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2018d7d-ee97-49ff-aa1c-b141f45b58b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e72acbc-7eef-4fe2-93b1-3da9d356bc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc99654-96e2-4a4d-8dc2-26fc58f56009",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5370aae8-0f4f-49ed-bc55-cd6748b206f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aedf43e-7fcc-4bf0-96a2-e80b74659e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2622cb-7008-42c5-a9f3-13d15ab6251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd32f95-5ffd-40d9-964c-a0eea58b2088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7529b6c-452e-4c5c-bceb-80bee5719db1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e4a3b6-2919-4d03-8bf2-5e803d9c5227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0064e846-2e19-4fa3-a7b0-33ec47fa1913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152c5c72-65e1-43ad-b5dc-a5b4799e686e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8a1068-7083-448f-8ed9-189fe3dd41ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d211ab6-3cd5-4b5b-958f-7dabcc2b94e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfdc81b-d852-4b1d-b713-3164bb9938af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5940e2a1-d6c0-48ce-ad30-46247edb20ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3730770-3bcb-4df4-afd6-7df5150a5e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc0a37f-9c8c-41c8-97e8-d97038ed5f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45261ac1-b6cd-4d15-a56b-ecf68a3e1a0f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee21620a-b912-405b-9976-1675c6c48e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83eb025-6b55-402c-915a-05bd6c081e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796915f8-3801-4b96-8b7e-db490dd88a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f04fada-e840-4ff7-a802-988d65b256ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9539b5-97d7-4972-8a64-1ba99374f40e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9349dc-7e76-4f37-adf2-6921d90b85d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056f579d-37e9-4df1-b205-3ca8a791da7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975a2fe4-c114-492a-9012-c996568d5bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa9ac46-872b-4479-b0b9-008cabf20ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bdd474-d1ee-421b-bb8a-a86f5d134966",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5573e8a7-c475-4d13-adf6-96d3bc1c15bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae2f864-8a05-4912-b9aa-bc9f5d406d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eac805-f4ee-4f64-ae79-30533aa097e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e84021-e080-4008-8dfc-ae10476388d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e47b615-a48c-4b02-92bd-1b358ba566fc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964c2c20-5375-4bb1-b3fc-8eed023acb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d5a291-6347-4e7a-a2d7-591bc7290fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1215c9d5-3251-49b7-8db1-ed9fcba74c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21aa2c5c-d33a-4053-b5f7-30c384705d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479df223-3224-4d17-b42a-91781862eb7e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eeb098-1a82-4824-b49b-dc2b70730b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709181fb-eaeb-49f8-8062-f5e20ff86dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962533f9-0681-4af9-9a0d-77b959489184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c9f59e-fabc-45f4-9d6b-7a5815ab1e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b55848-77ea-4003-b80b-6557dd87dd93",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0817996f-b805-4ea7-b708-7ebc8cefd562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a52347a-ea26-4488-92cb-eee055b5a7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b668c6-a490-4d4b-926b-8d4d5c2b1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1a2818-63d0-4820-9f89-0160fe408b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b447b590-833b-48eb-b9e7-31495d8471f7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba2e3c-9f4d-4499-8158-0eff8876d197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a3c49e-3fd3-4b3a-a932-615c1ab20fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15720c40-f777-4935-8a29-69b501cb8b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d674268-ba42-4491-85d8-2750c1bd0f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faca5ca9-29b3-471a-8a7b-3b6d51e1f91e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c563d-5c1d-44ef-b018-2b4bdeece07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb95e08-4b66-46f1-a292-43fe9677042a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565bf728-5208-4b6f-a6ff-e1b84d27a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67bfb289-42f0-44f4-b694-d657d786efb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200c3dd7-096b-4085-84aa-f8afc97181e9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306f1b85-cf1b-49c8-bdbe-380d539f7446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bc9d7c-5e64-4134-93d6-8a4c393c78ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab0aee6-1d2b-4433-a1d5-dcee8303a24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff970d7-e97f-4d34-b7d0-876360c93639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925b789b-07d0-490a-8fe5-2b75b9d74335",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f45cb6d-fa86-4903-92ce-f319915364e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301a93e8-72eb-4c5c-814c-fdf79f5a4ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b413e5cb-eb61-4e07-8fed-94c86c335738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "960de5f8-1720-42d2-8829-ec3941972e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738fb037-ed25-4c5e-9bc3-78f03f2f9b9c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea95569-4397-461e-b8db-8b646981e114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31da0333-c267-43b8-9e03-00ca06d4aef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f438bf-6540-4502-b023-8fc105349180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e08ec2ad-9799-4750-aa55-a0b81ab9a51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1316763a-81f4-4dc8-9289-1c068e21372e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511dad8b-184b-4ac6-b9a1-24f2585a6ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "112d2aea-684e-45f1-9f04-56c12091afff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800b983f-4ec5-423d-804e-73da0c3777ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c28cbbd-9bf7-4176-bb30-e913b46b052c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20f7190-81e5-4d8a-817b-28f9f297d0a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b64cb98-c86d-40bc-9032-f49e0579ffc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ffc543-245b-4bf1-97d0-d99032a30eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97108b9-fae0-41d8-a237-dcd4f6902336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acf43e7b-c145-47ea-9efd-e538b46b00b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9223e0ed-f1c1-4576-b23c-3c25aab01d03",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34344466-4aa0-473a-950f-37336e6fbc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba4c8da-93f1-49df-b05f-87d5d07dfa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ca587d-a25c-49c5-8952-7afe34e0f066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33dca71a-a81c-4912-b78b-17cba397ef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e05d6d9-2d4e-4f31-ab96-efe49f42ca5f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de0ace0-91d2-46e5-bdb3-5861dcb3d7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8894761-1b94-4872-a5ce-50b8286ceff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04feea8e-00fe-49f2-941c-2daa2aed5034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "544e5464-6fae-4255-a632-66fcf8dac472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282c8d00-0ec9-4458-91d7-4b4d3beb32c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1105ea8-dfa3-420e-94c6-781f8d735f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44710fe-a9d3-46a7-8a4e-040c7dec9ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5df8b90-afc3-47ac-9496-3c8f683072bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0db01fbd-41ed-4330-beb3-6f51acc8fc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa5ad98-61c2-4b5e-9e96-534ccb7a9a71",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66f2c52-8770-4e06-a02d-31042ad5211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548ae539-0e03-482f-b51d-999ad4c0c0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640285d3-c71d-4fd8-810e-dd7fffdf1279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a856c1dd-da7a-476a-a353-91cb78bf2ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f94f7-b867-44d3-883e-1b4e8f01bc9c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b839b2-9424-46f1-8c2d-436f1e881dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a9d60e-5ecc-415b-a678-26cb2fd72b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b078cf3c-4d56-4230-a7b4-6154d9759cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6b38b913-8f01-44ec-bb76-dc21f0f0b61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8562ed27-fd54-4fea-9484-de0bd136556e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a82e7c7-3425-4207-b662-ad6dab8a9cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b4ef8d-bb77-4d3b-bef0-f2562ff802a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81257625-9e2f-49b8-82ba-b7f8060bb56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9eaddf-1275-4bca-ad35-93b4e81c20cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d7c205-0d15-4e90-8b75-824098c6e4f7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb35c36-0a80-4f13-b12e-d13e9ddbdb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b562a3-caca-4a2d-8304-b57c5382b55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cea1ea8-7ccb-411b-8463-c3d6144da472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "844b065f-a04d-4bed-8d36-8105d3e3b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a485f4-fe94-4460-871c-e28fb788b18d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f41f31-5935-41c3-9cd5-af4b7358ee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c811b42-efdd-4d8f-861b-1ae2ba5bf3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbcb2a1-1ec3-4f2e-b957-633b8a7f058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24794fcd-4a5c-42e6-a21a-fd755c4ee49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee172986-bf6d-4a21-98a7-e2a1051af78f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5246c8f-b3df-4e8d-ab0f-81948645202d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9264a878-8335-468a-9b90-2fbbaab571e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c02e2d5-dfbd-4eb8-95b5-27a01078a524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce25ae60-2900-4f99-809b-72b11e97eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4d69b5-454c-49f5-9429-7436040c33f2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5960405-c706-4c53-bd79-46031ed4e0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57c8d28-338b-4ded-8241-50ff3bab48d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d7a4be-038e-4274-85e3-8323b4639a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c81348-e075-4e42-8eed-dbd1f8b50820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784cd8ba-156d-400e-b4dd-826a2740edaa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2305af-dba5-4024-9050-9e93a3b7a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017eec24-69c5-4d85-b1a9-bef0e69eb66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837daa82-4608-4e6b-b2e8-8e78fa5c32bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "589e1c8e-e3aa-4e2a-82ec-f1a400bafe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f5c6f4-6b1a-44dd-91ca-fcefe3c25c73",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e852d7-50ff-4a7a-abc5-52a3bd95b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5d2f4a-32c7-459e-96d5-a46a21a73042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56aa5aa0-8ee9-4ea9-9b70-401aa3f68f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "357303ae-4d2d-4649-a3ab-1022f1a7d913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e41df-32a4-499a-ace3-5aaa3b3bf9c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd65b20-c4d4-4880-a8ce-5b37ebd4a530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c167ad0-54dd-453b-a010-28dc468322e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0e4917-d8a2-4b4f-bbf5-338832255963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60c5dbd6-fd36-4275-a230-52cf83584ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd4873f-d4b7-4425-bd96-d3b91163ea91",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5a9980-503b-48b9-8b92-5a83c9870e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8166995d-7dea-4066-9392-63812ce46f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2594ff6-25b1-4659-a032-abbd800fd32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3843da-fb1a-4d4a-b621-91836c6ff42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f643bb74-5df3-4ab4-b814-0a87733ac7c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0254e7-ba2c-4cbf-9023-e441224234c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07988946-90c9-46b6-ac81-eed65962de06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8fb57e-c940-4b91-9d9d-a90d1a493b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6558a4ec-6d7c-4d59-bd4a-b071dee1aec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610f7913-2d1f-4493-9b42-dd2dc24ffa2e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4461124-dd44-414f-bd24-10fa5feef5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01f5b91-a3cd-4c34-a157-1522670137b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eb39ae-84da-4995-926b-b855d31d6433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8973e0-9d7f-4a45-83c8-b478a7b8ebc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c169c1-bd41-443b-a452-b864f5079bc6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cb1510-7ad2-4c1f-877c-bc7d597fcb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e5906e-04ac-469b-89d5-bdc43c5e2d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550889a9-6757-49b3-b233-5f50ec220245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7246e00a-12fb-4da3-837a-14747f53f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef3d828-5530-4a1e-82f1-a47a326fb0b7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0e318a-ef95-4126-9d81-66f4a3e363f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e35354-6b34-4bec-9f19-bc77047d82e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e664f4db-34fc-4fba-a98a-852f6ddcb60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4977335a-07a4-4981-b6f6-11e4caa3c4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc933a1-f897-44cf-b4c8-90da7d145f00",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd46fec-2062-4bf2-a290-9c965ab3c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ec7024-aaaf-495d-bd60-b28881663314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc04593d-c107-45ae-84c8-c8f55ea6e973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd5a932-e29d-4ff3-91af-03aa1b711923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cf60ab-78c0-4ca4-9e1c-5028f432805f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3982b60b-a584-429c-aa9d-8ad612b5b98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e69a30a-cc39-4e0e-83ff-b84fbd151bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5a0db7-961c-4859-80c5-ee1ca6206c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d01f9e-ff14-4094-927a-3e75b2c8db24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0872ba32-25e8-4db7-bef6-f4ef9dbcad14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f742bebe-982c-45d1-a098-5d68e6bdd94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c2285f-dafe-4e02-9a2c-4f3509ef9f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414b9850-cea8-4445-bfb7-6988d55aceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c325805b-dd17-4c7e-9196-6427e2e817d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d10a2a-705e-433f-a66b-f928569856b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdc2486-8790-4f7f-b33e-8f2a610b83b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc5b7ef-80bd-419f-b7de-7f4fa545433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d1e176-8e51-4c04-86ad-a6f6ff3865a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d39287-3182-48f7-93d5-5a239f8866d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40def119-3fa9-484a-8e98-b5a5632091f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e017bbd-9a63-48c8-969e-379df25b8fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef52ce00-068a-443d-9412-53bc0934af4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3a89ab-2de7-4574-aca5-62b0a4a05245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e971a165-a42b-4669-b062-cb2c24b95640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b225b63-c329-4794-96aa-a6feb7ea0c0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff8c3e3-b89b-42e3-a9e7-4e57c4760728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a45168-8fe7-4826-b6cd-18671aaa6fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da927641-90f5-4705-9207-167eac7287bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a79163-579d-48e1-baad-0c476e8d6e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc049e9-787f-4e21-aa28-a88d0612731d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a387b68f-c0df-4f0f-b7da-49986011dab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe72bc2-0ce4-4f1f-9168-7df00c46a6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57145ad2-bdf1-44f5-a5fe-cc786e8bfacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4460fc2a-d6cb-45f5-bc75-d17177f5c448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbbf96a-c810-42b3-a498-145a8aa4cc61",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568586d3-e9c5-4113-8c3d-1288dcd37233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fd8c67-b96d-400d-ac58-d6462c371efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce4bc63-2cff-4e4f-8a0a-ac1d5e49a57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "575c03ad-6197-4c61-ad30-a15f363a1152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a337851-bbbe-40e2-b101-09f7480a741b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e58087c-6309-4987-9cab-30b4ee907bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ac30e7-90a0-43f8-bb6a-f160a2f9db10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cca2a8-7885-40d7-86a8-79648ed03d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c75d6ab-2ffe-4a5a-8c40-05b337d01cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a1a086-68ec-4f28-b4be-9e4544ae2655",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c070cf1-a1c8-42bc-8a7e-36cac8015c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936eef22-8bc5-43e5-b1d5-6f8d10aa5320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697bf048-a707-4ac3-b7ca-b956913bfa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea887fe-1228-4d01-a018-e00ad451e8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c97eb-05f5-4f78-b04e-095c81a82fcd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c08d73-8ad3-4a64-8ced-09fff69d18ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59437b47-690f-47fa-8565-98fc003f9102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ee513c-a97a-4afa-94f0-8c23badeb732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91081a73-8297-4a63-9fd8-358faa76d48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8a7381-8791-4ba4-95ef-4422981d238c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611372c3-e9c3-4a17-a20c-dbf2bbaec05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8c2c48-792d-485c-b2c8-2d37c592513d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a2f1b7-dc3d-4180-b745-db4e10c55b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f412277-bc41-4f00-9b95-dc50a97f0aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39a1da5-d69e-44a8-a473-b82b51dea848",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ef8f5-b729-42ed-b9d2-18f2705cfb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a3c621-cc8f-4b87-9d8e-8097434db133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31a4dd7-0ea7-4c75-b99f-335d2cee1a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3d3dee-945c-484b-b98f-783f00e3660b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77767b08-c090-4e3d-a4b2-ebe030804e05",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f559398-98de-4209-b0eb-d1731d50b5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c56c7cb-d182-4618-8c18-39b68290053f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a7d47e-da6f-4775-8abe-0ba7a51352b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0b7167-b263-4b3a-a053-423cfd7f5bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b1b3cd-617a-4e7c-a96d-d80d14f0a814",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0313e91-486f-469a-b7b4-6fa5b5ef56a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24aeadd6-11fd-49f5-8a5e-54313a5e7e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee9f858-5062-466f-a7fb-95039567eb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1417221-45e0-403c-8151-12a1c29fee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0918c125-f9cb-47c0-a301-231f078319cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c119ca-3dba-4a7f-9d34-6e821a1adb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9079efd-9227-4e32-aa84-8a400237905b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090f4caa-a76e-4974-9402-ed83c8ffb3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0edb201-1a93-48b9-a8ae-1fbce49f3589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdfdce7-f4fe-4dc9-864c-0ae880b428b0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933dbe4a-cee0-47f0-970f-9b578cc70cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a37788-9de0-41f8-a811-d15de1819f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e3a7c6-165f-436f-a0cf-8be241b53cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26398679-14d6-4b25-96cc-0332f9dedeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae49ad69-22a9-4b16-8898-747c667e2744",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1502234-95fa-48bd-8a82-21d0a083b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68bd58f-47e8-4bf3-b55b-c0652473c59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a48e511-4d80-4f6f-a19d-6fa44d011209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "689bdf53-459b-42bd-a23b-489d275568b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f05ede-d492-4b2d-b5c7-a643e81ad183",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b529f4d-1cf8-4551-90dc-5ceaa47011fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acea2b56-f4cb-4d61-b115-68e693c9ef21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2624aadf-1a26-4064-8c1c-d0bd7e9eebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da5e634b-1e2a-4d1c-8214-20aa4ae21849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dff4ae6-b350-4a23-bf22-598438b76e9b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fa085a-d126-48e6-9ba9-dc341091bfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391f6a9e-4265-42e2-bad2-83d8bab9e00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58d10a9-e11c-4d93-8016-f1bf95c17c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c186c8-445c-44ee-a342-6d0839fa404a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb2ab64-2cd1-41b7-a8d2-00e6efa076e1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c1af2f-d6c3-41e1-87d1-d4fb574233db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d5221c-ab35-4a93-b84b-d3a4113a4191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de2a5fd-19ef-4fec-9590-24cbe62dd89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e273431c-d4e1-4197-a4d6-d4626beabed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc966f-5909-4bb7-81fb-9d1c8eb03289",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6012de1-1385-483d-a875-1cd110bea1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de68da9-7fb5-4f88-9d23-56b49ad9c83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400a1568-4e3e-4554-947b-91ddd07ddfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f54dd5a-35e6-49a7-aa7b-a03863c449d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee801f7-1ee1-4078-a131-3ac9a6b46a9c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f0ef8f-0c17-4fe6-bc82-30f8f7bf9508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d68579-64b5-46f2-8263-e39154627704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0636c0-76db-4945-b75b-dfa83aad3d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c697279a-3ff1-4e0d-9238-657bfc3b6b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b58b01-e1b4-4877-9669-b3a3d11d7eed",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96a7545-ca4b-4a15-9021-c052b665fe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5566c269-11e5-41e2-a1b4-3a67188cbf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916787e7-8be2-4001-bc74-0786c221a23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87ac967b-a441-4985-bf4f-765f9d8e2d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5910ec8e-f7d6-409c-b008-5cae1286e438",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef150d0-9e8c-46b1-829b-3f467cce712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00d5e6a-98c1-480e-9429-93ae15fc9122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4c5d06-8f00-4a59-b4a9-837143516a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71816e02-cab6-46d8-bd38-b22f7f987d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ab6362-795f-41bd-9db4-5437dddbeee2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347f3418-ce9e-4908-9a91-2e2a0b4590f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda21bbb-c67d-4e3c-9ecd-44f5054fc184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0899b9e4-3df5-49bc-a4e2-f5ebd2b24ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d927e089-abc2-4999-85b2-f2e72183b345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7cfaf2-e375-4571-9b1e-c23db37fea7c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40382fa-b386-4d5d-b860-ccfb08fcfe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58e8cf9-9769-4e68-9ce1-c8f43c0f6e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef4d64-ec22-4ccb-9bc9-54d0d75dccf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a57abe-adf0-445a-9414-9694c61f7cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d46f5e5-98dd-4990-934d-4f957705d4c1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7824c5e-d934-4f4f-a63a-6d503136c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba3b535-f20a-4ccf-8ac1-07bf2b17d65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c8d0de-4e8a-445b-a9e7-e428f1fd32cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5923eb54-44ba-46a9-8038-382b08e87220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17aa86c-3c9c-4448-8788-da8c4cd98ad8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96957014-40d4-4437-9d5e-48b4793c862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51b6500-24c0-4ccd-acc8-bf8bbfa31a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b95aec2-f660-45b8-b1c3-2dd1cbb0d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6621b11d-012c-45ae-b3f1-2389acd6355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db39b70-5710-4fe8-98f7-cf59e1551d5d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fcc765-2413-4b6d-bcd5-6f83546d8b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae03f89-8874-427a-91be-072d35fcfdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45b6ace-074f-47ab-ae3c-5b1bac07b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "baaa40ea-c689-45ae-a829-c7168324add5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dcfe58-7b56-49b5-9daf-055f72566522",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a65bad8-8d08-44fb-b62d-9022c9e93609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059b9351-a61a-4af7-8856-88331979995d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca51937a-e715-4f23-9193-028395e00928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd48894c-fa25-4cfe-84fe-798c811d3877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a162fe7-f7df-4f87-b248-a20502e0ad24",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1259276-73a0-4602-8d05-bdbe68bf3f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccf94cd-524d-4765-9017-d8999427c647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695ed923-d06e-4375-b4d7-a6c52d2080e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ac0bd8-0cb0-45ab-9220-1fdab54ac602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b593425b-144e-4967-bae4-85c0e9451903",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd23526b-4974-416a-bd11-f586ef5127f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1666196c-c2ca-49e7-b984-9ca6d30685db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0c9056-6815-461c-b8a5-bd54ff3b8310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27606453-cdf6-4ae2-87df-3b3115ecf52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c955945a-b710-4291-8c8b-4708eecc124c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3f3955-885a-4124-a2e8-c7f4ead5a90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2124cee-bed7-47c4-bfde-33ae770c4f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45652610-25e0-4815-8cae-886a2a5d68d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1112aa-4894-46dc-822e-fa09dcd1d0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6609d8c-91d2-40c5-8ea7-54a05318825e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3786a51f-48e6-4ba5-b2e4-d2166dd025e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728cb442-62c9-4650-9c40-9a6b9f83fcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa6a49d-d654-4504-b107-45ae6bd022be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb820e5c-cff1-490b-9073-4a556b939e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a6cfaf-62a3-4710-9fb8-4e4b62b4d88b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739da224-1aef-42e0-b085-e75e8efa8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7f4493-ed1e-4e52-ae52-88b1bf0a5f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2cbae7-63e1-47e9-aacf-71eaf47fbcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7705f2e-c567-49f6-8ab5-b0975063acfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a6092f-4fd5-4a75-b280-d86b0ceedb73",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acec42bb-fca9-4d83-acc2-d71dd209a7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c39b39d-bd19-4db3-8a0c-d4e9bd6bea85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eb8312-5938-4825-bb53-ac42b2e00f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19179aa4-3075-4061-842f-10f19b6944ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a77892a1-c740-4b06-ae1e-4f3d61802fbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "096ba3f5-9eb2-4209-b1a4-53a15778e430",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398af16-1baa-4712-ad82-5b435776f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2a3f095-59ea-4a09-97a7-d680c3f964cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4c20f6-92fa-48b5-baa8-c7839b2e6eee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cdb4f77-6b22-4c81-a7f0-496461b27f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fde9b4-d1af-42f3-8586-eac3d35a5f5e",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a5ec6c-f9ba-46fe-8b47-51c83d504f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0354f08-3aea-47b7-abbd-aa7e3a356e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b51359e-a024-43fe-8331-10d9132e6b9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b574d1b3-345b-46c5-8103-0af180e2918e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fae1edf-dd48-4591-b041-5a16f82bd7be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c393564-f5c5-420e-b310-318ddd6052e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd389848-31f9-4b72-bdd7-762e7f427686",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49cefcfb-9c95-443c-b303-350ab23c5ed6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "741b03f5-27b2-4c2a-9379-753b19845f62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34e2ffa9-7705-4b4f-85ec-716106b65abd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9baa5c41-bd4e-4896-9597-f6dd2d512f3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "660a7b0b-fe2c-407f-91a0-768a4a3a7c3e"
                }
              }
            ]
          },
          {
            "id": "db78848f-ae30-419e-88fa-a37746e2a690",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc89826f-efe7-4865-b22d-601bca8d5205",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed2dfd6e-569e-483d-ae38-a9c03a469e55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "323aa5f6-67b7-4b82-ba21-6b3085b83131"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a69f16ed-055e-4a58-a0b0-0b4686af0e90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c1ba1ff-4fa6-4751-90fa-d91431c7d94a"
                    }
                  }
                ]
              },
              {
                "id": "c6eb4889-9d3c-4c52-af02-77df020af625",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd83e0ed-cada-4c65-8e95-d1fbe455b191",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d53c7c5-2e14-46c7-97d5-eb8d5a9834ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecf2e6ee-5039-4093-9182-fd3c0bd93a16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4ecd0db-f057-450b-889b-11988a7af815"
                    }
                  }
                ]
              },
              {
                "id": "f6f285b6-0eed-4db4-8149-a0797bf40a61",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7f9e3b-a749-4604-a287-3d646e7c1561",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf8e7538-2df3-4193-827b-46f832ca16c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e306968-64e1-4bc6-813e-66e6c0706fc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "261fcf2d-559d-4042-9c75-0c956552151a"
                    }
                  }
                ]
              },
              {
                "id": "50a90c27-dd44-4296-a55a-2350d39db264",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01839bdb-9b32-4d2a-9e53-3137ec05e4f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "172a3cd8-c66f-4a9e-8b52-67afdb886bcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87553a35-ecf9-47d3-8954-0d064035f953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2729859b-c3bb-47bb-ab94-e8e9c21f6b0a"
                    }
                  }
                ]
              },
              {
                "id": "880dee31-f5e2-49a4-8531-57298007ee26",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1398d20d-9202-47f2-a71c-f17769ce65c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "714d0b68-f14f-48c1-8ef4-493b664a5faf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63eaf330-c010-4dbc-afed-63cc312e17ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6c7d6a40-733b-4e9c-b304-56c2b43a3f70"
                    }
                  }
                ]
              },
              {
                "id": "da6e12ca-7298-45bf-b233-fb314e781c0c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f221feb-3c0d-49e2-8e28-9a52f4a1ee86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c7cd492-d1b6-4dd5-9864-4819b07a4e25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bef1b16-47ee-4c96-ae57-355e518b3656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f06e1ce-48c4-463d-bb46-5a4147843c24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7de5f33a-4b07-4386-b091-fa1de1de5227",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a077cfc6-44e7-4b53-a88e-3a3262001565"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbcf643c-9411-4073-a43a-265528647f6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11a9efe9-6fa6-47a2-b855-20cca8262006"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43ceb4a9-74f9-4f2b-9096-0b5fca2c0345",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "078e3a75-5151-4c44-9d64-b76406ac3c2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63f89198-7bf9-4255-b6ae-9a9c79dc8ec3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "908aeb1e-d36f-4cc2-8ec2-8f28ee43d4f5"
            }
          }
        ]
      },
      {
        "id": "2c5f1f53-48ca-4ef8-ad88-75826e5d978f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "024a39f2-c4e9-4dd6-81a3-8ce1c3e25f4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5a1856a-b1c4-469c-8ce0-36a56f858083",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18a2a543-2627-425c-8a15-312a512675c2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f9226e-842f-4e58-b055-238237e00bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c15cd8b-c590-47bc-a931-a9b5b1d74ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155ad3f5-b945-45dd-80e7-05ac8f5dc80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea076c3-b52c-466a-9802-b33c722b168a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a294d8d-dee2-42b3-926c-8f77f41fcd9d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b10e3f-76eb-4654-a666-5117a1155815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8d13b8-745c-4b76-ac62-9332d070589a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02999ed1-c3d0-4ff4-bb94-24bc2700c11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b878cf-bd9a-49da-bb52-b4a6d0675c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdf3263-38bb-4132-9b4a-aac836eea742",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3e9be9-dcda-4447-8bda-70b3d0dccfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc5280c-2658-4713-92c5-eaf9093f051b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b53026d-5e68-4236-beaf-f60956265d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3379e9-035d-4188-8849-34dee88753b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacf9c14-96cf-4756-990a-bec2f98a438b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a925ae4-dbac-4378-a209-dbdf34a5de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdd24b1-1f78-45f0-bbea-1c1feae022fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674eaac7-bed3-42d6-92e1-86141fc40af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c1424c-1fca-4a83-a022-21ede8e38477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b098ba74-1d08-49b0-987d-a228c662fc0b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1019184-fb3f-4976-bd02-d1db704a9cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8a7097-e83e-4dd5-ae05-5b9a78382347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69e39f5-f25f-46fc-b5b1-cdce84000341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e1ea8-8f03-4423-8f72-dacda4f9f5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd0ec7f-ac2e-471e-9e3f-52686e560fa5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1492056-3e8f-4b16-9b22-1a1d0f0935a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed50cde-7f68-42c2-93ac-80755db90434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e599f36-b2bc-4b67-be3a-ed0d572f0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9f1901-10be-4e1f-8617-3baf548fedcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a85b8-4bf7-4366-bb9d-d52677f1d4eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bf07a4-7d3b-4812-8a84-209b8527e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1f6548-7cce-4ab7-9095-6ca2dfaa5111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0eddea2-1c09-450b-a56a-252e922d1cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f08030-f605-4ce5-9e37-e481dedb2c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa5a802-0639-493e-a4c7-7befb6fb6206",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc64055-7f08-4c03-9bac-335fec61b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b28eaf-6df7-421c-8252-0e2e76923a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a67bbc-b959-48eb-baef-81a5a1a6e8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45946851-b1e2-4bb7-a808-4be402418138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f91ca5-d395-4ff7-8d13-25dbcb901d20",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293d5fa2-4c03-474e-bc97-d6a6cb482279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa23f3f-c437-4cea-bf52-69f890cc7682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47843195-06d5-4a74-b991-ec0aacb6a908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28cd00f4-061a-480e-8e5d-dcfc91aca3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e2dadd-678a-4127-8744-a08685d4c2f8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375b2e95-7b6a-42c0-a94e-e67790aed836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d619ecef-1128-4ba6-9950-9b2c17275c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27154fbe-8963-475e-b16e-04a3e29bad08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e6ac56-9ba1-4cd9-af0f-71c3444a6c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64b118a-c8b5-4a55-a707-7fc7d2a40c56",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2811a446-bc55-4bd6-8f84-8429ac9f5d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262a77c4-7764-4fdf-ae4c-221cbe0380a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a89cb2b-a792-4e12-9778-182dacbfa17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a95971e3-6945-43b0-9905-523d6eb901c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0870ec3b-5835-4119-a528-0126ce42ecb6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c2b761-2dd6-46c9-acdd-d84ed8e286ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6d168f-ea0f-471b-91ef-cf45a6857743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5b7188-1ad8-4351-ae38-1e75954fc4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8813c42-54e4-4e7e-8b3c-7399812726c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54c778e-8f62-421d-8474-79fddee913a6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f63a5db-0825-4455-b573-4256e7da0abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f46fce2-47f5-4fd0-9705-a47ec1b94f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c009602-2614-411d-88ba-45304f981bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8a1b28-b7c0-47fb-83e8-a1b6f180da0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b340a0a3-3026-4cb5-85e2-6b66eb957aab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2977348-dda1-4f97-b870-c6d69c405f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e89817-c6e4-4898-8dfc-5874f8e72e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b62dac-5037-4203-a786-8453bd16f9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a482b8db-d732-488d-9e85-1cc8b8931e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5dabde-6158-4fe0-a1c3-8dc90aca4091",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2129c16-a1fd-45d4-8b30-2b2fb978dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51009fa1-a00d-48d7-bc8b-b089b727441c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33277a0-4169-4379-b1d8-64af09f63bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f914e485-c84c-4658-84d9-2785f9bd296d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f410bef-b598-484c-aab3-f14b9d6b1021",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb53e67d-6713-4ab6-8c61-273eb44b2df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb2b4ab-f171-4c67-a335-5c58a22713a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3602f842-18f9-4957-97a3-bbc6f657c0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d720974-dc18-49e4-8281-0050eb1f0c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2ab01-a0a5-42b0-882f-d0acb3baa4dc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9612ced4-204b-400b-8771-114b0adb0183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759ac2ff-4e8f-48c2-90cb-23360762de30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea4cbf2-5268-46de-b856-2c6a29548833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7832e3-acc6-43ec-895a-ee006f5205d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d41748-98e5-471e-9ce2-fa8178ba4e05",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe205685-c5ba-46ca-b935-a580174fcc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f381ed6-3c7f-4a81-9693-b860e4a9f83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a622f169-8d7d-4d65-96c6-adbc80fe078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1972a15a-a672-4122-b59d-d5417f999de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905abe4d-a57e-4d53-a8a2-1031a8155bee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7021d14-ef55-46f3-8eca-df9f4ad2b585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6294d704-7dca-4d5b-9638-3416e0ae9013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca089608-34a4-4142-bf1c-c73be21e6acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff890a4-3010-4f6e-a5dc-fad2adb581a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4f77ec-c529-4d56-8171-8d78916ec26a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de904b5-a81f-4565-bae0-bc6212980aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ad6f6e-8256-4f42-94df-24ca50db33ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2908dcb2-0b57-491c-8c44-b7b5db70829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9601bae1-ce8d-464d-aa9c-4bffa9f80d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7fa8f1-9920-4524-a055-f81d127f9cb6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a3d765-5dd3-4e1c-b1ed-eb638df30e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48824fb9-0d73-420a-b9e5-ed948850fef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5198bedc-0d3c-4c8b-961e-0713ae5bb5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0b7525-27fd-43ba-b470-95f0271302d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819d55ec-27df-4666-af3f-b1b1e0c56184",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3f077-c108-4a2f-aca4-2757bbdda506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf0607f-4eb1-462c-9f72-1dee277d57ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831b9fa4-ae20-4afd-b228-55115538e135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5876da-7384-4735-8baf-2db02f80af32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d3f1c2-96a2-47e2-8fc2-e1561825ea7c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d364f67-66a5-48be-92f1-82aa82fb34dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea68d623-d246-4742-9f42-01fa3ab106c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ae044b-ea1a-40b9-b2f5-fded3a4f635e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3189019c-85cb-4be8-a913-abd4440faad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97075a8-9a24-4640-9979-de7cf16a4b2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d749586-ae01-4d89-bb16-ac127a22a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0a42cc-206e-4bd0-81e8-a1a1e69b5107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b408dc-c366-4797-bc1e-592a5afcdda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5992bec4-0855-42e9-b161-10b83dbd6d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d129b3e6-5a2b-4ae1-9146-e3cd304f725a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f215eef-67e9-4a1f-9418-0704735c0503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd496329-c2f0-4209-80f4-86521e5b87c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032ea5c5-2b2b-454f-a58f-fb96346da2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8e100e-940b-43b1-853f-e4b18a5ee6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484af8f9-6fb5-4b4b-b08d-5e11cc277eb6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b285db-2124-4518-aefd-b3c558992f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4592a6d-16ab-407a-98a1-161255729f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4515aa2-78f7-4b44-bc59-7a008bf252fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f4e1de-2058-42ff-a3c5-d59efde7008b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928b95e8-375d-4c44-8b01-33c7c98d3716",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2746b4cd-efc0-4fc5-869c-c25daa564275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce10893-c02e-4052-a418-35d0bfeb43d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d8a5c9-5df0-44eb-b59c-cfa7e51448f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8e3ebf-d994-4b7f-8850-4cb16431b5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b7908d-c351-473f-9102-3a4f82e8db13",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45695087-ebb5-4635-9201-c370236f5688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546053b3-5570-4a7b-9bfd-fb518ec7a1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4185c4-fe12-4f66-99bb-9fac7059621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cef090-f093-4ee4-ba8e-2c94bfe6a246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7efa874-e790-42fe-a66f-70aeec12b781",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c699a-b6f8-488d-aaca-31efea0b3d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c886e6-7057-4e0d-b332-a766a2d6f780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761a5be5-e376-44aa-9be5-23bdd623ed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dccf0aa-0e85-4d13-8c20-6717f980edcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a400c-2fb2-48c8-a753-c897c8b517f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652bc131-a666-4532-90c6-c7c01c033e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c356ac7f-a175-4feb-bfed-b2688c084fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbdd9c6-128b-4ff7-ac92-88a9a0fe2ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1827ba6c-8a53-42e8-b246-08bf4f90d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9bbd4-e606-4342-aee4-c9d34dde1135",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fda08e8-40b8-4f75-b52c-abe939faebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dce6bd-31aa-4a43-b95d-2b823d3e0784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca03bc52-bd1f-4046-b4f6-0a2533935600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac17da75-aa05-4521-8a81-6cd855eefc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a98ab5a-03d4-49d2-a8b7-dc6588c1b14b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78f4582-fbdb-45e2-84ab-da6d4ca15daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b2026e-154d-4d1c-8525-21648285049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccde275-18b0-4bcd-8f14-7e1bd11f7c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7dc3205-484d-4af7-b6ad-67d713b22143"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e54ba91-8e51-4210-884b-82258fb79806",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6cccc16-2876-4cfb-8296-d71b5c0817f5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4447da-5850-4e58-8944-d3a080257cd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32899fed-4969-450a-b099-cbc5ca5cba95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a878757-61b0-4e7d-b3b5-7488b4084403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3575133-84cc-4701-8194-989b0bf34cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bec11c7-7657-471a-9ce1-33d0f2f044fe",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cf5269-b22d-4bc9-b398-f12d1ca876ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d423aa6-994e-4126-b43d-620b3f04e56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15026917-6311-45c6-be64-b44266662eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8aeac0f-43b7-4b0a-b264-162eaecfb379"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e54bac0-0a52-4043-aab8-12d05d2ea010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e3c70cb-567b-4c13-9367-9569ef2ec342"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff95b162-03e8-46e0-a9a7-6a774fe807b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1385560f-72f4-40d1-9292-eeb7f190301c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a18ddf76-5ca6-4614-995d-533d8e635fc8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93f03165-897f-4081-841f-d497a8bdcf87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faef2ee6-b262-4fba-bb48-a84cd6c71ffb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35768f78-7acd-47d1-b194-07338c2a52c3"
            }
          }
        ]
      },
      {
        "id": "6d0f16ae-dc21-40c8-86a0-2671ac13d17f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "016878f2-fb64-4955-a8e7-21542a10295a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06883e1f-c56b-4bc9-9144-cc579026e99a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d93563e-8a42-4736-abc7-6953a55cc0c8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d708c81-322e-4317-a3bb-69376117e6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296e8b99-577e-4877-8cdc-6a5074ef2d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6cf1cf-ed26-4ef2-a9dd-2ca5d836ab03",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe01bd65-f404-47d8-adf7-5ad03b75196e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02686680-52ea-4c79-b772-1cdc5bbdf01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fde881b-3daa-48b8-b4fe-ec1c85de7988",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf23fa9-47f8-4402-925b-e73bcd8d7d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd49441a-b9f1-4970-b7c2-37e0b891ffbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084fe11f-46c4-40ca-9c1d-001f63bc52af",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe0060a-d30a-486b-b0a2-6ac8c8e5e368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50da22e-7b7c-49e8-89c5-acce4bb9b5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb38474b-c74b-4681-9948-88ab3d1a92db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a49b6-a13a-42e4-8222-5d64316ae960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d942962-ad86-4d2e-9361-aa197f293cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fc8306-5ab6-414f-9531-2a8ff7d233ee",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85270148-7d1d-490b-b121-506aac53f2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fb0734-cdc6-4dcb-867f-b6a53421c3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83baf904-244f-4e11-89ae-b8aa4e290dbb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0809412f-9e36-49f1-a3bc-1c3e3a0fe593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86927e12-da90-4739-bdfa-79c831041f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b63c2f-a353-408b-bcdd-e301cd6dedee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c788668d-3b8e-4b6a-87cd-587ed49b0dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3331be93-e968-40d6-bd39-97a1b64fbba4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0846aade-e4c6-4d5a-bedf-8450fba237f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ed3ad9-2b35-4640-a849-efe96f3bc59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986452bb-d799-4d73-ac60-788297db0b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380f13cd-8759-4833-a224-cbe54c9a21a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0d4e92-49e7-4cae-bb00-773bebb18c12",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e46e751-2d37-46b6-9283-983530fb0eb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad29349-6eb5-4543-8b79-e43d027f4f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc406dc-5550-43af-b088-9b5bcee6e31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86344604-656f-47c8-936b-3d2d65487980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2b9bbe-01e4-45fe-84ec-95c1cec76110",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e310de05-93d1-4b44-8ef1-77615f1a7318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0101fc3c-d574-4a03-89d5-50a48a9a0b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c91cf4a-c54c-412b-b0c6-0e769008db6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024d2c0b-dfaa-4d42-b0ef-596cd979fd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eeb03d-faed-452a-950b-4dbdd45141e1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581c3315-5288-4961-83f9-e0e58bedb24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f9b434-6fff-4905-ae1d-c6e4d638dffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc18a4a-6ab3-482f-85c2-b3e8bad4a596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c90de9d-281f-4036-a781-01413ce75a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a67dff-9059-4aeb-9a7a-095d785f06ea",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda625a4-6739-4902-a530-ab47543ff0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee616803-489c-4b03-88c6-c9badd46b8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfca308-0edb-420e-afa8-5b0e97ec6860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d6cb82-f308-420e-a1e3-a4582687306d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639f9697-3d08-4546-83e2-fe8ddb24c430",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc804c29-64a5-46cb-93ec-a2acc9f5aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f944063f-bd1b-4db1-98ef-a698c40fa179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf9532f-5513-4311-ae79-3135e1f3acfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e68e7c-6196-4e39-baea-80eef655299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a864fc67-f193-4605-91e5-f637973b6fea",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2cbfe4-bdc1-4637-9cc1-9fb1d7bf80f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f79655c-371a-497e-8be1-eaeb51d7883b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a1fa9c-9c34-41fb-8d36-436cc87413bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebcfa5e-3076-4442-b69e-2274be5518a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744ef2e8-fc23-4749-baa1-78790254200a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d25f8fb-e40c-44c3-b2f2-fa39324f93c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701cb9c5-8b97-4350-b809-688ff7ac3fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dd37bd-67d8-4d5d-84e7-dfe30c15670e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d177af4-7c11-4bdd-8b4c-dc5f8f74a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3968d46b-91aa-4b23-a68a-07692460b0d3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f844d2d2-23be-491d-b749-91c9c270a0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e320f5-133d-4857-99eb-384dae3955cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90471000-ef27-408d-ad8c-1f1b1b077d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2db351b-5240-4101-92dd-edec7a9ab767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ed46e3-e9a0-4dbe-a1fb-6b2da9239e2f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5182e812-d7dc-4d17-b622-c3cf52a1ec37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80f223d-56f1-4803-9c70-6517d70d75b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5913c01-c7f0-442c-aea4-a774044bc285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5169372-5062-44b1-9395-add1ff349892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040c8cfc-df6e-4f92-841f-9c014719d1e9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a165120e-ec2b-4f03-bdda-7147066d730f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d258722c-592d-422e-9622-2aa3ac03f93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8c3d07-c390-462f-a7c7-e4c72973a408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425b7267-1c4b-4457-a880-dd60d70f7970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f43fb5-60a1-4c35-b73e-a41de825f5c2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47219666-9a10-4ee5-a4ba-19a2c48999cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7b34d5-2c24-4669-8fb7-e7cacb42b11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4ba8b6-9513-496a-bfc2-91448a2cffb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd181fa1-ed6b-4c28-9549-126086c03dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976a9689-1857-4744-b66a-939b22efcf4f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1940175-c8dc-4e1d-ae0f-e2030b31ab2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c33284-d8e8-4509-a295-83c7de11c768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2321ae58-94cd-49bc-bc13-beaca19420f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ee27bc-ad11-47e2-ba3a-ba48f80b254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a03bf1-0cd1-4675-bdf4-db764c9b19de",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8f581b-4176-4768-bcac-3d73b5e108c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede99a92-972d-4ede-8f87-0cdc49bad5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecd7608-dc44-455a-8b49-47e2428bc273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8509a844-c113-4066-8fc9-7beefa63f964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06445315-bee0-4272-bece-53fab9640991",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b7a170-3c1f-494a-a6dc-c40cac8c29eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72520fa7-8a36-4673-ba37-df0e1960b80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1decf7ce-d66b-4583-b264-9daf0f4d8c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2356511b-2cc1-488b-a14b-25a115adc872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2f9063-9c68-4561-b202-178b01075060",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c58e59a-1c62-491c-9f9d-805f6867d852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2728d577-94a7-47b5-8db5-1f795d0704be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d4f340-0c59-441b-882e-76dd84329732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03bdd40-f46c-4f76-8712-58e9a4fd4d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ad3045-3871-4728-ad25-c123d7a71f88",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81fb35-82be-4a0e-8af8-3ca13f5bd950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138878db-9cf8-40f3-80c3-536c0bef0ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62657060-38cc-4887-af47-7b31a3965189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4309e66c-36e8-4ba0-b1fb-b4dc089a1ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2239bcd6-76cc-4c97-9f27-8f5965801329",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a9372a-9ba3-4b2d-a5c4-fd758be1c52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce67ed52-7e1a-46f7-8d1e-c808f38b6a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13060f2f-220b-40ba-b8a9-c7bd792936c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26db5f10-9f51-4aa8-80ad-f01985d33d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba513f-6dab-4fe4-a6cc-5715c91573d8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9329b524-cba6-47ac-a6a0-f08ffb8b1dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088816c7-e7ae-407a-89e7-3daf480384a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd16d58-7c01-46dc-a99e-63d61bc86658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c12c1b5-8f12-46e9-aa85-1f71e4dbaee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0a1a6e-4298-4bc0-8663-21be63f54218",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf0e31a-e8f4-40e2-bf2b-349069b13487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5afe7056-ebf2-4387-817d-e3eb4fe3a9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8e8a64-65be-4b9d-9435-779c21e214c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f7202c-62c8-459a-a81f-25daf8add8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546ad10e-aac9-4657-ab0d-0d89673d0bf0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3ad5a5-02fa-4c6c-9efd-d503df371298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c3aa20-ff89-4f3e-be5f-0b290e66a6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f1a728-b355-43b7-8ef3-fc60097b3bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630c92d4-72c8-4499-943a-e00b82f2fe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bec8381-0f40-41c8-b920-5b36a793b215",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251b94e-65cd-437a-9703-59f610eb4933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6d0cd9-6cf0-4272-91da-4a5f932c253d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627f3e28-c6bc-4198-847d-9621500b4b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f80032-6719-4d69-a6b3-5c98fc851196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a941d4e0-8afe-4250-9899-1f91dbfa1b85",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbd4887-0fed-44a7-9f1e-846b7260c7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbff1ecb-f4d7-4c94-9564-045801ed537a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2479625c-c135-4c2d-af5a-96ad6ea3622d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc65c8b5-d07f-4b18-939a-0a7bf2032feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9743482-b820-4972-a37f-cc6abf9231b1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2bdbaa-48ed-454b-934d-76110010b256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce74610f-4cef-446c-b977-5a9c6664e999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86685f04-78b3-4308-a448-5fd458893a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c766607-8a11-4182-b1a1-3f918a804649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f6eca8-8631-4287-b7ef-79e5449b61de",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17552e4-746e-4ddf-b0a6-b10988598265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e979d38a-9c24-4d6e-9e87-79dd8c67f066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae184698-70e2-4cd0-9b5b-f67795b15bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aac2a64-951b-4aa1-8b6b-0cdc2a2d5ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879f4a6a-993a-46ff-ac53-7ac45cc1453b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f3ee0e-57b1-4fcc-afed-fdfbd40cfeab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b79c18c1-5cb0-4cde-8f9e-2ff463251c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20e15e2-43bb-408f-8df9-6f1d7f612940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989d718c-16e1-441a-948d-7c5636fb775a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0f9ece-d2e3-4150-85f6-f47147901860",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20fccbf-57b1-4538-95f3-9d168b187afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fff4a9-c4cb-497c-99fa-5a4370cc2683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802bbe0a-6f42-4f37-bd54-e5106870b086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9f1c17-c83b-403d-8afa-42872a246354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579cea4b-02c0-475c-a3ef-21d50b1088ad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c4c980-ef9c-45be-8d22-4fa68d2d9eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd88df80-ec6d-46c8-af00-3bb23300ad84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da75b56-d3be-4b57-b995-af1b5c0ae050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed78ec6-26d7-4c58-a245-53f6a778e8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e445c2-68e8-48b9-9dd0-35f2bfa65f19",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0813df6-b8a7-4332-ae50-ae2c44f534c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c20830-67e0-47fd-927b-7583e330e4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c0ca5e-9e93-4225-b9ea-64935b7d7ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c3ef1-d516-46ba-a2ad-64a6f2a12f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89293595-9571-4f9e-b1d5-d88dc8c95b6c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6e4dce-7129-4ac6-8b27-564e2536887a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528248fb-f9e1-4233-ac06-321350e89dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fd2eb5-c854-47f5-af17-71de3c1d43d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ee2766-2bd6-45ab-adb1-658fcb4aa8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e137e882-f178-4ea4-b651-5f8613344a6e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8806b5-ec0f-40a2-9680-3c1968fdb81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4b0405-0522-4a56-9ffe-9bf67c0f5fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8929be9f-e875-4b77-a2e7-f280c86a628b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05e65b7-3c4e-442d-ab18-b5b37fc2fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f246bd-5b78-4eb5-83f0-ca1b92a75bf1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df656315-9c14-43cc-96c0-6044cce0d8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a759d5-a217-42cc-b2c4-c6d12622cacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df5e4bc-e7f7-4422-a8fa-786da8e12b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c46d032-e2fc-4622-b060-38d0280e4e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba7892c-de2f-4818-aadc-bf34e7fe3430",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72af0a97-1ddc-4f17-914b-cea7a4f29516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b52118-ba80-44e9-9651-5582e6dd51ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51017527-1486-42bd-b442-16bace613fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f43fbd-0b06-4d45-91a9-b40a879ef339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec47522-c968-4349-86c7-94544da3f12b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f817cd04-03c1-40ba-84d0-9dcfc76e26b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e895550-f8b5-4b91-8c66-a0991521500f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c45dda-e5e2-4416-b9bf-b63bf1f5d255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf3a52b-517a-4366-a73a-28c46043be16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d93dce-9c34-4f05-8632-4e73d19510bc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c58adca-f7b1-4baf-9704-b1d29b887818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8bfee7-ae79-4f47-8303-1d4178081670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6042144b-46a2-44b6-87dc-4a8f2adb585f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0435053-9866-465e-99e3-77cff7fe890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6c6bec-97a9-4a78-b507-9d36a51ce665",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a6294c-b4a2-4c9d-913e-0885f0e8043e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88d2245-e649-4ebc-bfbd-f7d3de5bfe99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad0462a-bd22-4ad6-abed-2cac336c4551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9aead3-9d59-4589-8cd8-4d98afcc4cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e6eeb9-c4cc-4b1c-913e-5d89f1a16551",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040ac66d-2a0e-4974-adbd-55a80d2087d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1a3b0e-11ac-4404-a0f4-2d3286e3cbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5216c4e-53b6-4743-9466-2fe227c7ca6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9d6d70-747b-4a83-8eb4-d40bc72699ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235206d7-6509-47cd-8f8b-a41b51ae08e4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a085cac2-997c-4fa5-8a14-decb70d01961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9f39b0-33cc-4ed8-aaba-518b7ac9971b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9de7f6-0b2f-4a3e-b50e-336b3722cb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc57da3e-b6cb-45b7-9d17-b463bbceb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ed9714-b449-4643-ad15-8ab7a875d3e8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f024c0-6293-4b6a-ac91-7ec7d3070924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b772e1c6-67c9-4920-ad8b-fd2a18e548e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e94c185-19c0-4116-bd9c-db09808407d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5cd620-6147-4d6d-a490-d080c4b6260c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731caf4d-bedc-4457-9af6-0faf46ca10ce",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97af0ddc-ad4c-42d2-bf33-4395166bb840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cdfb5b-c8cb-4fd1-b866-d4767b3407e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171a818a-84a0-47b0-83d7-b85aec55f031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01d2395-9fb1-418b-9a9c-da7c20e69ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526c6710-6d89-4133-9b4b-4bdc35088202",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4bbd8b-527a-4694-9f9c-c07ecb3929be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30b413c-168d-4095-b6ab-ddb866fe8eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc0a5ee-b63d-4223-92c3-9ffee9bd3033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09743096-7944-4ef4-b0d1-030f0f349b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e97d016-682d-4614-8422-109b95d35681",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed5f6b-f921-4eec-9313-d2136037fca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d0b8c8-736b-49b9-9a28-38fd4c4607a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25c634a-8721-48ac-8616-b52d0fa83248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e5f035-694f-4b73-9041-13288263f5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250e0730-ba3b-4b1f-ae6e-69d515f27ee0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408d9760-3ca2-4971-8930-a21fe2bca47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a17edbc-2187-4cdc-83ec-5422d23ad32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e823a56-98aa-40f9-99df-4bc8f9990859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09931fba-8d74-4608-9454-6c97d87210f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a72ddb-ab73-47ba-a3ea-cfa3531f0418",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81d6c6d-b236-4a3f-8b28-a4d91a39483e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e92520-e46d-48e4-bc86-318590b88cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a7c25-3774-4983-975e-1b762022975a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc8814d-2b8a-4d02-98d8-e15f192b33f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c2e1b6-f7f8-4107-801a-a7ba2c5ac59f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02725906-46fe-4959-8aef-9819846c4b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99954772-6e65-40e1-bc3d-2c521eb28f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62537c4f-aeab-472a-a03e-983489bee829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f810cc-7558-43ac-908d-cf6eba000dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5550cf21-54df-4fd3-96d4-068e6aef2f41",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e9f07-ad07-45cd-b69a-7caae2507ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3d5fd7-e7fd-47c2-a272-31ae806197e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684426e3-e752-4c2f-8036-30893e4cd702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3565311a-beca-497b-a791-d79eaec4edd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7adfb8-e99c-46c7-9acd-3ed4110de12e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fc3a99-3bee-4ae1-82a8-c07881cc278d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8e73b8-c713-4cbf-b027-e261b987828a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9aebcd-e56b-4388-85ec-149828d681b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4432a297-90c8-44d4-82a1-2ccebcb30d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622b1c33-020d-4fb9-8609-0203e4c2b4a7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801206ff-e3d6-4382-bd58-b11e82df8611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34eca0f-571a-495e-8605-dcb0c58af46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19394ece-ec31-45ef-b611-af9d37916223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd48c589-c81f-405b-a31d-74e99a56730c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f20f88-448c-4945-af2e-243399bdbf0f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4393f3-f382-4832-95f9-5f1790891b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a5b931-56d8-4668-81b3-abedd3d87eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34969dc-21e1-4b58-96d5-8285882ce33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f0b420-d5c7-483b-89b3-2b2a0dc2d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3b0e21-e0f7-4f03-ad45-9387e6d744cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f5e625-c102-4029-9af8-438e0e29cd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c3d0f0-cb5c-4785-aad6-38253c8ddec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247be35b-a68b-46cd-8f0e-039e6c739567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c21fa46-0087-4205-a45b-707652747dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82226c7a-4300-42b9-9228-80f034a27a8e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ceb21-c8c5-4696-adb2-7ef1ec8636eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7195c8-4e15-4ff9-8af5-63d2bbf38840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0eddd-1268-49c2-93d6-341adfabdef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c045a2e-3493-4e20-bcaf-c975bb8a11d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69468d2d-5f1a-4a6c-9e27-5f1a4171bffc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a269840-3189-4b06-b964-510146f5d9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6c688f-a41e-42bd-a49f-3ca527579f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113fa369-d70b-40c2-95c1-8d5616f41419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a68c66e-4a25-4b5a-91e8-9117517bf179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf726940-80e2-4647-bb96-2f0236234a5e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aa507d-f953-4564-84fa-97f70c4a379f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf45811-8151-43d5-874b-26df8c009012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3dbb7a-186e-41e8-b1d7-60d5886328c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649b70b8-b358-4154-a782-12f36edbe040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2231d384-764f-47a3-9ab5-8824bb72ac96",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1241d1-b5c7-44b2-972b-174f36693e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90b9c0f-ebc9-4e0a-bd28-2db92d984d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640bc454-e2fd-40b8-9b17-4f4843932fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab22483-ed0b-492d-8f4e-a3eee0623b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47576369-7a25-49ea-b826-bdf4f90fd45d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bcd74f-6cb0-4357-bb0b-56013a582675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01211de0-8572-4506-ad4a-98575fe98138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef961d17-5fab-480f-a05c-530d517be0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bd64cd-c7e8-40b9-be9c-53f82d1e295a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01de3a5-d8ba-4037-9c64-00f7b975f9a8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeef653-8746-4d9b-9bbc-f4835b1da559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0116f06a-d723-4f89-95b4-bee0e59edc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24185b2-e727-4397-b8c7-6e6ba891add1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537361e5-5e6e-4f08-9696-39342080cec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b90564-f6f0-4e5f-af7e-d97fedddaf14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b439c9c2-8d0d-48bc-a7cf-31b71ed62194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9470010b-1e91-4e50-b7c1-15ae7f14d801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c566a-56a7-4ce4-bcb7-24aa7a3c3aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb8e806-7fe1-446e-8366-4c483027c592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f80d6-c9d5-4512-a5ce-085bdc3f34e8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d155f86-4c35-45b7-ba99-9b3b9c8c8012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad3532b-9242-4370-bba1-a05cd627fe08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a6dfe8-f499-4e1f-91bb-586de0b8fafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe559cc-199e-46f0-b15b-60dc6d145ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c370d35d-ac57-4d3a-9ebf-31cec4b48b4f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e3a0f2-f246-46c1-95e8-698cd449b32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d095f1e7-9ef0-44df-9359-37f0190cc8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84077f0-308a-4863-8044-2899fa178692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a87c2c-bf81-4a11-8ea5-ba223960b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3869560b-417d-4fb0-bbf5-a3c0f07faa5c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3b4c29-b14f-4ee0-8cbd-5ee42ec07237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e64552b-c3b9-40b9-aa5b-50ff317471b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67982f51-4d4b-4778-a560-5c3c9b6e1e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a79004-3914-47ef-9969-94cfa357d772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26be7bf0-d2c7-4067-9584-81f3c0cb848b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36300a3a-f7dd-422e-b9b1-7bf501b0f405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9adb71-9a6a-4fd2-902b-2bd32d0f5bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1a1f9-6cb3-418a-a16d-ea5a6e0e62f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861c6287-a000-47b5-994b-3d0b7633e19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec0b38-9ae2-493b-a5c4-c640259ac7b5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3450bf9-9bf8-48d7-b198-5357467cac03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56499983-8b2c-4317-aa21-2c0b6fa0cde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dbebd2-9ad0-4540-b5ef-2eff0fe1e0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3384c7-93ea-443d-9c01-f1ce0291ab8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1766c46-b0a2-4a35-ae33-be281520f485",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66afefc-ad47-435b-8834-a0268d582afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461ecfde-897b-4535-8d15-3f07fb8eed55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc84736-0167-4bde-9a7b-2fdefdc70a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f729efdc-b89a-4864-88ec-a5d42cd40d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791ac055-7c03-40c9-8b3d-3c8f1cd82af5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d01464-c930-4544-9ff3-0ca294b3808b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c1fab3-3990-4c7c-8ec7-fb93ebfcf7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d34ff42-fc8e-4404-8594-2d1dc97a3651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1a1e30-2cd2-4cbe-9e9a-74cb113b04c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ddc4dd-b3d3-4416-b286-55ec86c33fb3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c70e8b8-659b-49cb-ad62-d171978208a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464a36bb-c111-4ced-827d-b1ec7e2a302f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54193ace-7007-45a5-bd12-ab26b2165987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3230a715-0b47-409c-b4ae-6e5fa7142b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dbd98b-af47-4164-805a-a7bc53b078be",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2875b1-ec6b-48ef-8c4d-9c7947864c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07aa5c41-d93a-4eeb-99f9-18fa53226a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c9efa-d472-4885-b3c6-94146cd993fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8202fd9-5da3-4000-8d33-4956a447c595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048425b-6546-42af-a773-d677e46648cb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278e4f83-ecaa-4ad7-9749-48f17d7373b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496ce773-d7ca-43e6-a183-de94d6af0725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1397f7-6809-4c4e-85d6-70b69e57388a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c2cae6-346a-4cef-9c4c-c808293a506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d6ebf-ea22-4eb4-890e-86fd1a849c62",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e661d9f-063d-4ebe-9589-866511ccba23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8e9992-2d85-4a5f-9441-0eafcd154515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69defcc-977e-4316-b8cf-e4b9ae5e7a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f17502-d659-43da-92ef-aa3b4f555192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28c03a-11aa-45e6-a9f3-4c36de7dff93",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee993da-f7a0-492d-88c3-7c1ef10e96bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf2cb98-581a-4fe3-a11a-05d87b4a4676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0d2d0e-ba11-478b-9981-165860941147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641a66c9-8ca2-4c27-9439-e2855c54ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910c94bd-70d3-46c6-af95-ecdf770a708b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87a57ee-4424-4705-bf29-7e9032b00aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa637062-2290-4b6e-a5cc-14642462fc34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ffeb6f-ab43-4f03-b246-bbcba8489cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f01513f-7f41-4aae-b4e1-d6b1e8c74fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fd28d3-0e2d-4c93-8f12-c8c29fc3e44e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db022f36-7690-4896-8003-fa65f0e22bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9268d632-86d4-401c-b2ab-c95017f137c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1095ded2-62c5-44cd-8b57-23abfdd049ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e88541-8800-42fd-86ba-e33bd8802de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a001d5-d0f8-4c01-950b-a4354d52bc03",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa087091-49f1-4394-adb6-896782124798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0981794d-fb52-4ecb-92cb-a2cbab15969f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f02cd6-b5bf-4bc7-8b11-a12532948da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9ca7aa-dda4-448d-b240-eda48d551127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58fdcfd-b96a-47e8-8bd5-de6fc65de2fa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d9a686-2717-4b2f-b610-aa1bf7888398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "025cd083-6739-49c7-874d-3a1bd109d47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d027d22-14f3-48ac-8194-d4cbae0b8113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72c6d42-6493-4d6d-aa99-0457c17d67de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc8603c-82af-426f-9e9d-346e434ca75c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef0ae0c-8b22-4d60-965c-be4c50e31e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77c55d7-7b6a-4b9f-bdb3-1a506189da68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7031c3-b4d2-45f9-bf51-2b7bb7f4d68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4dcb0e-df09-4ca1-8739-472e33bcd927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d27bbe-7f3c-4230-b4e4-28092b0ad4bd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba14cd9c-d0a6-4512-8f20-309c882266f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f0fc95-f7f9-43fd-9e13-0ecc80dde2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f55634-9ab2-4779-8b25-c519dbf97143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1b6f53-50ae-496c-93a5-3278152b4be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a697ce-d0e8-403f-b554-d87a2d3c1301",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb4854f-6654-4b58-a393-291b76b71ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1adfe26-7c9a-4715-af4a-e1ff9289cda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e745b-df66-4c32-9b8a-10b742c29eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff3e642-a8ec-4997-87c3-ca0fdbed1b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a137bdc-f8f2-46fb-bcef-932a9cc45eb2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f68bc8a-a9cd-4066-b1da-a0c8cf9bc805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac64764f-cf41-4258-bb51-e65f1d911ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e248f5c-83cd-427b-bc5c-04ad0e9bc9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fd31a4-44e1-4b8a-9bf9-3288dfb3b79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e396e48-8c75-4ebe-9c1a-7fdfb617734b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7084b4be-d7b9-462a-9226-a75e62476360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598c74b7-ac03-4ce9-8f23-8c9828b41ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9db8f1-a66a-4162-9b5c-068c9273e001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423b7de2-ea83-48eb-a1b1-c452aa3dae6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f53bf3-621b-4016-8ebd-1027a70d58e0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab8601-22f5-4a89-bcda-446687aa6b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6623e768-f9c3-4937-9537-60e5b0964d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da616cf9-e327-4596-8927-ad3dda82e4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931b9132-1f68-4788-a46a-17b521e00281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e4e646-22d7-4cfc-bc23-c9c77d113d0b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e9ba96-66a3-441e-8458-902033263dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a64c8b-f2a5-4edd-8fae-ca3532cada87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704f7785-f727-4248-be63-882f1e4f71f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04209fbe-5c6b-4340-927d-80448dc4f59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f9efe3-6f7f-4d57-a6a9-18dd5679bcd2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed27d92-36dd-4d4a-a945-653c420b683a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c0e9a2-13ce-42c8-8710-46f62ca369f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fb3bc7-009f-4706-9bde-f22f245edb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806e9a3a-f052-4c60-9928-4bec40fbcbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7733d809-7482-422a-a638-b9f1b0759f51",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09868323-d96e-4a9f-a03d-7478cf0f7fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b040c452-cc1a-4ef5-b503-0f572fb2f42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410c3ec2-cfb3-4737-a92f-2754a4da1bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc7e68e-1046-48c3-8509-6cb6ee2b611c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a32681-965a-43c1-a01a-8b0d44b40a02",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca59ee95-59c0-4f27-8461-4cc8a7da467b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a1d7ab-d775-446e-86eb-078a5e76c508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2b6c7a-829a-4e3b-972a-7cf16664d15d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778c8fb9-cba6-4d52-8a69-2bd5257c58b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6809f729-b032-4bc7-910c-dacf81803b63",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c4f972-ee99-43a2-b880-f22209046356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f11e3c19-1b12-476e-b484-c3ed24a5f3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8a77a-565d-4435-94e8-4c2855b60312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa05139-2f3f-4bf3-b7b0-1a7be0f2f214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a9ca4-f6e3-4438-bd78-ac83269313e8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82506bf-9bed-43a4-82be-52007289ba1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13443c9-9e18-4b22-9083-2105c74b151b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413aabc9-5829-4ba4-a909-44e3e7a18885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437fceb4-654f-4c37-bb6c-706d9151e430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718c4b01-b0e0-40e3-9e37-827a40933c72",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a903c84-a147-47f4-ba14-bf76cdb592f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eebbb0c-c72a-4ae7-8183-c3a5b7b82c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fce15a3-c7bd-4df0-891a-ff9dcdb0f6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2586f573-3e85-4d95-9086-0be26c6b7154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14671c69-565b-4c4f-8f45-f8b1a837ab6e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8264d3-a99e-433f-b275-0d2c62b1de71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16eb0008-c10a-407e-98c6-e3ecf03bb7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3989280-e264-4d32-9fe4-4640b3cb996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b464da-d02e-4273-91c2-6d70d383bdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2ebf31-b705-4ad7-b535-ce091ea957bf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88483f56-7885-46c0-b86e-a1bd2537221b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00733ff7-6d94-4190-bae6-db22c09e8c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4156b613-9424-4db5-8aa1-698578c4c647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccb77cb-1d20-4928-965a-3775ae0a3269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6648cc88-f50f-47a1-a7c4-1ad3bbcf43d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c7edde-11a1-432f-a9e7-7bf322473537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610b1c44-ef54-4567-85b1-6e0e7fed5489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41649a2b-a089-4c0a-8478-54ffbad8501e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2d9d9b-cad1-4fb8-a3a3-85299d427c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7495d14-2b47-40d6-bde3-227aa7b93a3f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95529c52-aee4-4b45-94c5-80b48b7ff98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05f5f91-e096-4cfc-ade0-346dad0a6895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220dd5cc-9b4b-416f-a3a3-4bc5657a7c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd787008-bda7-4eaf-8395-f2b498566ff5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a5109de-efa6-4550-a30f-2e17c0a65f5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad627816-e88e-4d3d-b2a0-90ab09c335f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "756278ba-8ebf-481e-86ea-cf545e5befbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18901555-a6e8-4126-b553-7833f1a7e57a"
                    }
                  }
                ]
              },
              {
                "id": "03e2e7e7-8986-4b19-8831-26f005ffb36c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2b5f9e1-aad4-4b7f-a5bc-8428d2c5d982",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbda24a-f326-473d-b279-e660d81a52d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a75be7ee-ff97-4a32-a8f8-a342c59ff7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ca4235-f724-4cb2-9d5b-e2a44778a7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd48dc28-4149-4492-85b5-d2c418b49ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3f0d37-ac69-4b78-a6a0-e7ce1c7eabc5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9981ac1a-e558-41f9-8375-ab6268b75002",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "555261db-cec7-46ee-951e-7c868e1e9c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e950fec-32db-493a-a324-77430947e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "427aee31-642b-45fb-a5ef-103f02c62af9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61a717c7-2b1c-4904-b364-a484087d0e23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ad5cf8d-16ac-4b2f-93d3-7ab36a959ba1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ff25b26-9fa3-4b85-8e85-e30ce038424a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db13c5f-0188-4e61-894a-eb3c35b17ec1"
                    }
                  }
                ]
              },
              {
                "id": "def068fd-ed88-4573-9c31-b2fef7d96d69",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "282abec9-70f2-4541-bbef-df87ece2e315",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8037a4e1-8685-4a21-8ed5-8ee4b5f5d599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2ca0bf8d-6bef-4fb2-98ad-f8adea2d779d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4bba0c-e62b-452f-8b5c-74f0e9bb03e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36126c26-7913-4fca-8892-14d0f0224f33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "635ee339-2706-4030-b472-3493dcb5b6d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b5fbc30-ced8-42a6-968c-c6bf85761f92",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb2570cc-2a16-472b-8040-79d81adf4c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16e91dd4-5ff6-4187-b77e-ad70a28752c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b94ad30-64ab-4b87-b9d5-c181f263e668",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4d6459e-6706-46e3-a389-34265b3981cb"
                    }
                  }
                ]
              },
              {
                "id": "af4d9d5a-f9b0-4b97-b4e2-468475330ca9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d2bf1c8-d5f3-48d4-982b-34ada21c6d2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fba79b6b-8dbe-4fa6-9a92-386ebe8ecfc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2494c612-08ac-466b-a32d-255d635d4ce7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "881e6b8d-0715-4995-8bb8-9955946fbacc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba4cf550-d037-4b9f-b78e-5bd65524eeb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "96397b12-a244-41c0-ada0-6b2cd0844b29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8df6a51f-093f-4d08-853a-78d1ccec7faf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "597c4935-a8d7-4461-a03d-415d84d5acd8"
            }
          }
        ]
      },
      {
        "id": "9d2698a5-7ebc-44d8-b861-c9267cc7eb88",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ef747c2f-4c0b-4618-81dc-e78479f68711",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a79a8c76-0093-45c2-be1d-a0bad76c03c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb8fc5-22c2-4cba-8a52-433bb272a87a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3e56d967-dac0-4462-b938-c28de2d86cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a0fbd8-f88a-4bf6-9380-dd255c4cea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b552653d-ba7c-4afe-8f8e-722910675df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b2b850-4bd5-484b-b95c-54d54e07e87f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee074802-ae56-436c-a206-4c69379a2c92",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5cc4bd4-7103-4ea8-99ef-d891cdeea56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2046312d-b0c3-491e-9816-1932e4275976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0564eb-12a9-4e9d-9ecd-0caa98cea973"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9a0a487-01fc-4462-b85c-f1fed6807f00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c504665-40eb-4709-82f1-1771838b86fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ab2ef80-24a2-4dc7-a7a1-051f62669cd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00ea498e-e2da-4689-8416-76143627987d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a26d833-2726-4cbe-9d3d-f986b68ff037",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "389cf124-9d0c-45f6-be7c-bf3fa6ebc0c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b94730f8-8b6d-44c5-9777-89ff94683ab1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc730a5f-d150-4bc4-bfe7-288f948cbb03"
            }
          }
        ]
      },
      {
        "id": "546c3ef7-425c-4347-9f65-acfe5375ad5d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7ad355ca-a1ce-45bb-8769-9f2c7cdbe778",
            "name": "Negative Testing",
            "item": [
              {
                "id": "866cb53a-5c02-4503-9d7a-eeec712ce364",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c602a5ea-3b24-4355-9ceb-94a137e92f1e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0e90ad-8a44-4551-a91d-ccd1356f9c9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a78e2814-fb4e-4e94-b389-46fe8b86c8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff976a9-8a1f-4448-b9c6-076e2d0407e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ad64994-9f1c-42d8-ae18-c067a3811782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2be55d3-ef49-4396-ba42-81e298d29bda",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82c319-e8b8-47f1-ae99-159edf8b6cfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "341411f8-fd7b-4d72-889d-3cc85bb2c3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79abc190-9700-434e-ac6e-980545d827c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54ca0d3c-c762-4ce3-a77c-cdc4f2751f7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b57fe0a9-0ba0-4aa2-8c57-b9835e7cf417",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a287a0fe-896d-43da-88ef-27581add6eaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15cc6893-a858-45e1-b468-c0dc5e88fe85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95f84a37-6a26-42de-938b-40fb7f402960"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5809e592-b4f0-4936-9857-aadb1775ec83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a339a638-57bb-4e3f-a00b-afd763ca0b49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63c4d418-bffb-4018-a7b6-0aa452c10578",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6b60921-5bf6-446d-9334-5808916bd063"
            }
          }
        ]
      },
      {
        "id": "6a4c7d0b-003c-4805-80e4-f1686e3376fb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6fab3217-13dc-4e2c-8df2-b7ede4f7a1c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ec4796f-3138-4385-9463-3f6743492a72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76a30fa5-87c5-4041-9cb6-236e286706c4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81906c45-7993-4e78-ac21-c59c8a049d1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20bd4f01-1e49-40b4-bfc8-276d769e77cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e2969b-fbb0-4161-863b-d214a39e5683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ec36621-78bc-40af-b670-a36b593f315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abe68f5-230d-40fc-b271-cae13e17e2e3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90827a2a-e016-4d24-a7f1-38cdef2f9bab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d78b6a0e-255b-4b8a-8fd0-424e689b5f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd97528-7a22-4da0-aa9b-645bd2899188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84983886-3a52-4da6-ab93-3facf7162267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "681a3627-9ee9-4101-86df-193c639b21ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6b2d8a8-125c-434e-bcca-fec60267f9f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d7298be-fd25-48f9-801a-15b206919d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bd1ec14-59e1-47d1-9c64-fc7201fb49e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22e2e5ce-2000-426e-852f-1b600a2ebd4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93e4eeee-f6e9-406d-8049-3f09082fad8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74c3637a-ab2e-42ab-b3df-548c4869996e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5453168a-a33b-4427-9ff8-56e22460be15"
            }
          }
        ]
      },
      {
        "id": "89a758df-4572-45db-af6a-bae3be5f5c1d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "882f4a1e-6cd4-4609-9ec0-aa7fe0c5a0ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13529ca7-537e-4831-b14c-5c4ab52bfbd8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e1c550ef-415b-453e-af85-9a1ed682fc89",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c9da80a-afc3-44c4-8bb4-51d9aaf44232",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc60d84d-941b-4cf7-8e79-59b7a9d50b8e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 894.0192307692301,
      "responseMin": 12,
      "responseMax": 13391,
      "responseSd": 1456.1592829503522,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684111076318,
      "completed": 1684111320266
    },
    "executions": [
      {
        "id": "bc5f4462-f4a3-4cdc-bb68-3d274a3b0d0f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "423a64f6-e527-48fb-9957-a2f0fe7106a4",
          "httpRequestId": "aaa4888d-621b-426a-8008-510b913b3ce6"
        },
        "item": {
          "id": "bc5f4462-f4a3-4cdc-bb68-3d274a3b0d0f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "db17fa1a-53e9-4446-8ed0-70672a4a6662",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "a9718dae-a515-4c95-8f57-cc81ace72940",
        "cursor": {
          "ref": "5286caef-ba92-4d2d-b42a-21d37e4ef0d6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ad0a4ff7-0cf5-4176-b630-236a24a89074"
        },
        "item": {
          "id": "a9718dae-a515-4c95-8f57-cc81ace72940",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c05de1ce-58a3-419a-99a6-23d25ab161bf",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "9fc60cc2-06e2-4e09-8f92-91b57d4e69f4",
        "cursor": {
          "ref": "17fff75a-8270-450f-aceb-a93dd57af1d6",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4e4df0f4-7724-403b-8680-4ed8f11dc80b"
        },
        "item": {
          "id": "9fc60cc2-06e2-4e09-8f92-91b57d4e69f4",
          "name": "did_json"
        },
        "response": {
          "id": "dd99d522-a180-4f52-b28b-8e85095b65e1",
          "status": "OK",
          "code": 200,
          "responseTime": 712,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ad0009-5537-4340-ba32-c90d1c18f227",
        "cursor": {
          "ref": "e6a98730-783c-4e31-b66b-62d25fdde7a7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75f8082c-ad98-4a87-a1cf-c0844752a7d7"
        },
        "item": {
          "id": "53ad0009-5537-4340-ba32-c90d1c18f227",
          "name": "did:invalid"
        },
        "response": {
          "id": "e830e301-62ea-4799-bec6-170acf603c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ad0009-5537-4340-ba32-c90d1c18f227",
        "cursor": {
          "ref": "e6a98730-783c-4e31-b66b-62d25fdde7a7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75f8082c-ad98-4a87-a1cf-c0844752a7d7"
        },
        "item": {
          "id": "53ad0009-5537-4340-ba32-c90d1c18f227",
          "name": "did:invalid"
        },
        "response": {
          "id": "e830e301-62ea-4799-bec6-170acf603c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca38ece-575d-4cf2-b261-fbd1990815fa",
        "cursor": {
          "ref": "da11b048-e9d4-498d-802c-18e1c83c935e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "688f213a-4f51-4b62-9578-b070a6594f11"
        },
        "item": {
          "id": "8ca38ece-575d-4cf2-b261-fbd1990815fa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7c859b78-4a46-4277-9b10-c98f8bc3a7d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 786,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b27318-6788-4464-ba42-ab455e7bc8bc",
        "cursor": {
          "ref": "ee1d50a1-2b03-400b-b369-43ad7eb1044d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c7aa33c9-d57d-449b-8be9-8f576aef5be4"
        },
        "item": {
          "id": "c5b27318-6788-4464-ba42-ab455e7bc8bc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "255ea63c-42e6-43de-be64-f5913d8d6011",
          "status": "Not Found",
          "code": 404,
          "responseTime": 750,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f80f06-756a-475b-ae88-4252dc10349a",
        "cursor": {
          "ref": "ee35b6cc-79ae-46c1-8aa1-c7a1ecc415e8",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "93cf13f0-4d8a-4174-94fb-67cc47434976"
        },
        "item": {
          "id": "81f80f06-756a-475b-ae88-4252dc10349a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "20d4919e-3c78-4c1a-ae3a-20ee2309fd99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b1c804-ff60-4303-b798-ebe367823722",
        "cursor": {
          "ref": "9ce22434-f35c-42ea-800a-d28d0b168765",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "40a57320-3cef-4c7e-a8d9-928e2ac9bddc"
        },
        "item": {
          "id": "c5b1c804-ff60-4303-b798-ebe367823722",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4531a0b2-3d84-435d-9e1f-e960d967865f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1266,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b1c804-ff60-4303-b798-ebe367823722",
        "cursor": {
          "ref": "9ce22434-f35c-42ea-800a-d28d0b168765",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "40a57320-3cef-4c7e-a8d9-928e2ac9bddc"
        },
        "item": {
          "id": "c5b1c804-ff60-4303-b798-ebe367823722",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4531a0b2-3d84-435d-9e1f-e960d967865f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1266,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94501d98-6f48-49f9-98cc-8af5e704bf1e",
        "cursor": {
          "ref": "b526c12e-86f4-47a0-b671-9cb701a00f80",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ef787cdd-18b0-402e-8ffc-881f3ec6c4cb"
        },
        "item": {
          "id": "94501d98-6f48-49f9-98cc-8af5e704bf1e",
          "name": "identifiers"
        },
        "response": {
          "id": "2f02ca39-537f-41f4-ad4f-fa2c3ba60fa2",
          "status": "OK",
          "code": 200,
          "responseTime": 2425,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd61904-91db-462e-80c4-bb5fcf010b15",
        "cursor": {
          "ref": "c8598180-49ba-451f-8945-9fdc84f8920e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5a327b8-4ec8-4670-8eff-21da1cc961c5"
        },
        "item": {
          "id": "acd61904-91db-462e-80c4-bb5fcf010b15",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e26115b7-90f1-4710-b5e4-c425500f974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd61904-91db-462e-80c4-bb5fcf010b15",
        "cursor": {
          "ref": "c8598180-49ba-451f-8945-9fdc84f8920e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5a327b8-4ec8-4670-8eff-21da1cc961c5"
        },
        "item": {
          "id": "acd61904-91db-462e-80c4-bb5fcf010b15",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e26115b7-90f1-4710-b5e4-c425500f974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d00a591-74e0-482e-8660-f92e0a88d8e1",
        "cursor": {
          "ref": "cb32cfc4-cf3e-45d7-881b-d00ad667025c",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bfe587d8-ea49-40cc-a7a9-0afde89d996d"
        },
        "item": {
          "id": "4d00a591-74e0-482e-8660-f92e0a88d8e1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "967ec206-d8a9-4072-b760-67afc567dfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1395,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2f424d-ae38-4b2c-9581-967d7af7919b",
        "cursor": {
          "ref": "8f26fcac-2c97-435b-aa4b-628a39a4c4e6",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "21f27599-3ca0-4389-8eba-120c53e34360"
        },
        "item": {
          "id": "ce2f424d-ae38-4b2c-9581-967d7af7919b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52add9ca-8e13-44e3-8081-d95c30c99e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1432,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9855292-e5f4-42fa-b504-21fba7678f1c",
        "cursor": {
          "ref": "327956e2-9551-44fc-ae30-0aff045b65ce",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "198828c0-ec2e-4696-9e67-147cb12283e2"
        },
        "item": {
          "id": "b9855292-e5f4-42fa-b504-21fba7678f1c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "39038a7b-4da1-43b2-b850-df7d47343443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2095,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a54e38-1986-457b-ba0d-6fa0ae904574",
        "cursor": {
          "ref": "2692b8fc-4ecd-4817-8560-5b668442f3d2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "583d2747-e50c-441e-a601-7fbd812281ec"
        },
        "item": {
          "id": "a1a54e38-1986-457b-ba0d-6fa0ae904574",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "75116f11-678d-4509-9b2b-0d7be1f3fecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1349,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad957f-8e84-4b89-8272-8cc5a6a851bf",
        "cursor": {
          "ref": "8003260e-166c-4cf5-b43d-bd4fe5bae2ee",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2bdb365b-86d2-475b-98e9-210b4be4d908"
        },
        "item": {
          "id": "c3ad957f-8e84-4b89-8272-8cc5a6a851bf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bbc657c2-8609-4e0f-8dfb-8abeefd40753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2038,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e579847-f740-4565-b12d-72e361dfaf8b",
        "cursor": {
          "ref": "4a22137b-5aab-4aa6-8fde-afa781a973e2",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "82d998a3-e9b6-4d0c-b100-efded98822a4"
        },
        "item": {
          "id": "8e579847-f740-4565-b12d-72e361dfaf8b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b62e3622-603f-4c10-a331-fcb2a6f9a6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1652,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5adead-808f-4458-8db6-b52d0be4c2fc",
        "cursor": {
          "ref": "47370d1c-2adc-4078-85bd-e0258594a122",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fba0e5e8-9e0f-48d4-a948-e5d8f0841980"
        },
        "item": {
          "id": "ca5adead-808f-4458-8db6-b52d0be4c2fc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3fcf176b-6cd0-4150-8bfc-6bfe45f0e2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1254,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65129460-c407-48a3-90ac-a38a9c764500",
        "cursor": {
          "ref": "ea168457-9577-4dd8-a637-ba0eb6a2d89c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a5712e6a-1d41-4b70-80f8-2083463fca1c"
        },
        "item": {
          "id": "65129460-c407-48a3-90ac-a38a9c764500",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3d62e3bb-5ff5-4b93-badc-57870bce0f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5dd746-e680-40ae-9b13-44e60fa57738",
        "cursor": {
          "ref": "77274b0c-70a9-4798-bedc-b38720a1c069",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4e09a973-af43-4430-a1e3-369ffa59b23e"
        },
        "item": {
          "id": "3a5dd746-e680-40ae-9b13-44e60fa57738",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c33caaf4-52d4-480e-8e11-2b9b630aca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b58d18d-624a-4c47-a8b4-0613caefca61",
        "cursor": {
          "ref": "a9b60578-9d39-4936-9871-b02cac590abf",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "12d0895f-eda8-4942-b57d-a4e3250fb901"
        },
        "item": {
          "id": "5b58d18d-624a-4c47-a8b4-0613caefca61",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "025cb5d3-783e-4415-b484-cb36eedd88de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb18e0-34e8-4b27-94f2-d816442b216d",
        "cursor": {
          "ref": "3d3a6696-0ef2-4867-8f51-cf5450573e66",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c3ef3fa7-ffab-4e07-9cc6-0eab2230ca6c"
        },
        "item": {
          "id": "14bb18e0-34e8-4b27-94f2-d816442b216d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f68c9faa-85a2-4118-a0ce-2b7442556af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04efcbd2-bfd3-4e51-a2e0-3defea96234a",
        "cursor": {
          "ref": "c3693aa4-4033-40c6-af80-f4c691d98b3a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "83d92613-2481-40c6-82f5-7bd5e0d80d96"
        },
        "item": {
          "id": "04efcbd2-bfd3-4e51-a2e0-3defea96234a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce03d533-ecc8-4d6f-9666-3326fc75ea11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59a387f-aa82-489c-a473-1dfe75e90f9d",
        "cursor": {
          "ref": "2935156f-1e5e-414c-b998-dd3a93f0b2d8",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c3e6862b-34e6-471e-a395-68490531a0e3"
        },
        "item": {
          "id": "f59a387f-aa82-489c-a473-1dfe75e90f9d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "18145270-9b9c-41d0-9005-564c993b5a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a67e8d6-aa95-4047-a7bb-f2a62a2c886a",
        "cursor": {
          "ref": "9739bb14-1e7e-4cd6-a87d-bf9f035f5d88",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "19baeebc-bef5-461b-b8e2-917e115c461e"
        },
        "item": {
          "id": "0a67e8d6-aa95-4047-a7bb-f2a62a2c886a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ff643655-420d-4a9b-9948-f5b035bfd925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327eef3-2265-441a-8af6-ce051ca6a2bc",
        "cursor": {
          "ref": "5773b148-b69a-467c-808b-9726cabe4049",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "41e2f143-1045-4011-a89b-e8b902e9c5ea"
        },
        "item": {
          "id": "5327eef3-2265-441a-8af6-ce051ca6a2bc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0ad27adb-7317-42ff-9e56-bd1f49b71d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ae4d48-3933-42dc-b606-0a3be94963b3",
        "cursor": {
          "ref": "dcdfa28d-814a-4c56-b20d-e0501156b134",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4e940702-2852-4e35-a9a4-e3b144bb5fc3"
        },
        "item": {
          "id": "52ae4d48-3933-42dc-b606-0a3be94963b3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f6dd9c6e-e850-4461-8a6b-6cb837bcbf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a95a32-ec93-4ea6-a524-5e17c53e70a8",
        "cursor": {
          "ref": "5c58c9e8-7b04-444a-846b-c9efc6eba310",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "61b96fdb-fdd6-4a7f-becb-187ebad7f946"
        },
        "item": {
          "id": "19a95a32-ec93-4ea6-a524-5e17c53e70a8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4e973b09-738b-446b-875a-eeac726d1fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8631c6ec-36d9-4419-83e1-38aa253b2f40",
        "cursor": {
          "ref": "1fd8c195-9082-4c18-9287-44818f00f394",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "874d01f2-1e95-4eb7-b366-8c851fa00975"
        },
        "item": {
          "id": "8631c6ec-36d9-4419-83e1-38aa253b2f40",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "18a97a51-73d8-4e65-9ca2-3155823d022e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bde306d-f1ea-4063-83f7-b1ea0d289ab1",
        "cursor": {
          "ref": "a0856283-7670-452d-87ae-0cd8b164b9f9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f685d226-c33b-4f52-a2cd-fa2e9b46e7a7"
        },
        "item": {
          "id": "0bde306d-f1ea-4063-83f7-b1ea0d289ab1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c4cce0da-3ef9-4df8-adf4-169a1580c84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5db443-603b-4ca8-a6c7-20b1a490549c",
        "cursor": {
          "ref": "988c1202-cec1-4d10-9566-06133f34a5ee",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "433ff1e2-bd3a-4864-9143-6d8af7f9d39b"
        },
        "item": {
          "id": "9c5db443-603b-4ca8-a6c7-20b1a490549c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "73e0e9e9-1706-45d0-8f7d-c95f882109df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc99654-96e2-4a4d-8dc2-26fc58f56009",
        "cursor": {
          "ref": "b13a842a-6ac1-4bbf-939d-1eedb5e4c1ff",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3e8ec8cb-5a3f-43ab-862a-af1aa8f9a853"
        },
        "item": {
          "id": "7cc99654-96e2-4a4d-8dc2-26fc58f56009",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2f043b26-eedf-4f2f-ade7-46a64812c91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7529b6c-452e-4c5c-bceb-80bee5719db1",
        "cursor": {
          "ref": "b3a95971-23d7-4e7a-934c-f5cb164b1982",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2efd7a96-6b18-4a6f-9d6b-d33d923e3a1a"
        },
        "item": {
          "id": "c7529b6c-452e-4c5c-bceb-80bee5719db1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1aa0dceb-e6da-4aaa-8f29-4e26d911fabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d211ab6-3cd5-4b5b-958f-7dabcc2b94e2",
        "cursor": {
          "ref": "296b59ea-b006-4a66-b2e5-32970dca803c",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2e3ff7fa-c049-4f87-94e3-a7d5a77a43c7"
        },
        "item": {
          "id": "8d211ab6-3cd5-4b5b-958f-7dabcc2b94e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f3c928f3-3b0e-418d-b244-8aa7e1fb4041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45261ac1-b6cd-4d15-a56b-ecf68a3e1a0f",
        "cursor": {
          "ref": "c1690d9f-bc21-41fd-8ef1-474d602f08ea",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5e90e63f-54b5-428e-bdec-fad3cac075e9"
        },
        "item": {
          "id": "45261ac1-b6cd-4d15-a56b-ecf68a3e1a0f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3a6e5a61-d99f-413a-8fb7-af3f4058e5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9539b5-97d7-4972-8a64-1ba99374f40e",
        "cursor": {
          "ref": "03ff00cc-675d-45ce-9cad-595e842c35b2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "85aaa953-d912-436f-a728-b6b3b6c8f6eb"
        },
        "item": {
          "id": "bf9539b5-97d7-4972-8a64-1ba99374f40e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "434912a5-e7dd-4aeb-b7ac-7016bfa572e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bdd474-d1ee-421b-bb8a-a86f5d134966",
        "cursor": {
          "ref": "4098efaf-88ab-4d9c-a8c6-9e79c9cedf4f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "670b2c74-f85d-4f40-939f-d6e97e22c66b"
        },
        "item": {
          "id": "84bdd474-d1ee-421b-bb8a-a86f5d134966",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e042d5a7-d47f-4f44-9d61-af52f8a3ed48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e47b615-a48c-4b02-92bd-1b358ba566fc",
        "cursor": {
          "ref": "e492c0a0-fbd4-42cb-a485-f0a1182ac7ee",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5595ac54-1668-41e7-9c0f-2b3db32c748d"
        },
        "item": {
          "id": "5e47b615-a48c-4b02-92bd-1b358ba566fc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "68aced89-3804-472f-8794-bbd6dea109b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479df223-3224-4d17-b42a-91781862eb7e",
        "cursor": {
          "ref": "668d5bba-e268-4e44-85fd-3102d5be08b5",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0477b6fc-54ba-4bd9-a521-7ed28228c19c"
        },
        "item": {
          "id": "479df223-3224-4d17-b42a-91781862eb7e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35670456-1bdb-47b0-8506-28e65bcaca7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b55848-77ea-4003-b80b-6557dd87dd93",
        "cursor": {
          "ref": "73d0d23b-53c3-4177-b67d-4fff1239f9f0",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8ea2ca5b-dd8c-4847-aa98-55716794b8d3"
        },
        "item": {
          "id": "a6b55848-77ea-4003-b80b-6557dd87dd93",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f36fe5ff-189c-43f9-aece-51aae2e3548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b447b590-833b-48eb-b9e7-31495d8471f7",
        "cursor": {
          "ref": "24e40fe2-70fd-4320-adbb-1d27f81de8c1",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f6798986-5d64-4855-9d93-92838d855258"
        },
        "item": {
          "id": "b447b590-833b-48eb-b9e7-31495d8471f7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bb675e0f-3e90-4f1c-9980-c338776ed316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faca5ca9-29b3-471a-8a7b-3b6d51e1f91e",
        "cursor": {
          "ref": "26bdd4eb-435e-48e0-a661-ca5c974ac6c9",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "23b86cc7-eaaf-4cf7-b3ae-b2d3926c7dfc"
        },
        "item": {
          "id": "faca5ca9-29b3-471a-8a7b-3b6d51e1f91e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ace188d9-8b69-4bfb-a3ce-00702450b34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200c3dd7-096b-4085-84aa-f8afc97181e9",
        "cursor": {
          "ref": "0311b48e-bd76-4b2e-b164-d8f207f5ab55",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e5eeb94c-d151-4cdb-8751-b55055091fa9"
        },
        "item": {
          "id": "200c3dd7-096b-4085-84aa-f8afc97181e9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "76e43098-cb58-4b25-b71c-693d33b7fb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925b789b-07d0-490a-8fe5-2b75b9d74335",
        "cursor": {
          "ref": "f34691bb-b918-4af6-b5b5-6e56fd09d78f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fa4b4408-e727-402c-a2fa-55b7796cd7ab"
        },
        "item": {
          "id": "925b789b-07d0-490a-8fe5-2b75b9d74335",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c49ec787-c9f5-450e-a9a3-ba7454378004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1040,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738fb037-ed25-4c5e-9bc3-78f03f2f9b9c",
        "cursor": {
          "ref": "5cb6112f-9f0b-4fe3-8c6c-607e7b5dacd7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f699345f-ac79-40ab-99ed-2d11de7dc6b7"
        },
        "item": {
          "id": "738fb037-ed25-4c5e-9bc3-78f03f2f9b9c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6bd5d470-052e-48f7-ac85-c1bb5b0a83cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1211,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1316763a-81f4-4dc8-9289-1c068e21372e",
        "cursor": {
          "ref": "e18e6f2b-800c-4a68-b977-ad04281b0246",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fcfe9055-9905-43bc-8aeb-fde5f297eff0"
        },
        "item": {
          "id": "1316763a-81f4-4dc8-9289-1c068e21372e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8555ea7c-1687-4aa3-943f-84cad972df8e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1409,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20f7190-81e5-4d8a-817b-28f9f297d0a2",
        "cursor": {
          "ref": "058abce3-dfb0-485e-86e9-1a3f1aad4cad",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "013250db-abc1-4bf1-a5f1-dc6cf7aba12e"
        },
        "item": {
          "id": "e20f7190-81e5-4d8a-817b-28f9f297d0a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3bf2738c-daec-4a10-bacc-7a193bf450bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9223e0ed-f1c1-4576-b23c-3c25aab01d03",
        "cursor": {
          "ref": "eeeefd0d-457f-497a-8899-1438b17032af",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e59ec951-3c9e-4710-96d3-580e2764d8da"
        },
        "item": {
          "id": "9223e0ed-f1c1-4576-b23c-3c25aab01d03",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ce806280-1bf6-4914-884e-6c07e45e4180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e05d6d9-2d4e-4f31-ab96-efe49f42ca5f",
        "cursor": {
          "ref": "171f479e-9b30-49d3-a8f9-9d4d24f76b7f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7168f8b0-6381-4b98-9510-d8bc89d451d7"
        },
        "item": {
          "id": "1e05d6d9-2d4e-4f31-ab96-efe49f42ca5f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1f55bd26-aaa8-417c-9d64-ae5a0209992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282c8d00-0ec9-4458-91d7-4b4d3beb32c0",
        "cursor": {
          "ref": "b744c2a6-b509-45c4-9d2f-48f3ced06285",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e0046fc1-15b4-4b14-846a-aee128d9e8de"
        },
        "item": {
          "id": "282c8d00-0ec9-4458-91d7-4b4d3beb32c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "30de45d2-8c0c-4561-b57b-49c418b4865c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa5ad98-61c2-4b5e-9e96-534ccb7a9a71",
        "cursor": {
          "ref": "dbd51aba-cfce-4a41-980f-dfce1c72a025",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a0aa2ae6-8b2a-4803-9dbf-e43353c32870"
        },
        "item": {
          "id": "eaa5ad98-61c2-4b5e-9e96-534ccb7a9a71",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "41bb7faa-f85e-44c3-89e0-916ad6e21e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f94f7-b867-44d3-883e-1b4e8f01bc9c",
        "cursor": {
          "ref": "795a326c-bc74-41ac-a963-71473a0327e0",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f3e1003-fe87-4ac6-9c6d-af2f9c67fe8e"
        },
        "item": {
          "id": "c28f94f7-b867-44d3-883e-1b4e8f01bc9c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2889bd3a-939b-4b2c-a573-a77d8e206eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8562ed27-fd54-4fea-9484-de0bd136556e",
        "cursor": {
          "ref": "34924800-bc85-408f-87bb-ebcae05b1591",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "999f0305-4870-44e5-8feb-db3794e1161c"
        },
        "item": {
          "id": "8562ed27-fd54-4fea-9484-de0bd136556e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e1452815-3651-4685-ab36-ab3e382ff5e8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 782,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d7c205-0d15-4e90-8b75-824098c6e4f7",
        "cursor": {
          "ref": "a34dd504-8457-47af-94a8-82b08049d60f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "88f0ec2a-e0dd-4379-b6c3-5af5a22a9b14"
        },
        "item": {
          "id": "25d7c205-0d15-4e90-8b75-824098c6e4f7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "626a20ec-2c2e-4688-beda-c844f05b0a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a485f4-fe94-4460-871c-e28fb788b18d",
        "cursor": {
          "ref": "e4fe0b4b-f130-4f22-a5c0-934d830ce078",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "81424d17-aabe-47dd-9065-91b81e599444"
        },
        "item": {
          "id": "08a485f4-fe94-4460-871c-e28fb788b18d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a30c5736-9092-440e-8d57-7f61cac8a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee172986-bf6d-4a21-98a7-e2a1051af78f",
        "cursor": {
          "ref": "afd4c08a-6613-45c0-b50c-5b14f8438330",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ca528fa3-d5d7-40cf-abf5-181c03bceac9"
        },
        "item": {
          "id": "ee172986-bf6d-4a21-98a7-e2a1051af78f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4ae94673-e4b5-4d46-b4a3-8521b41eadeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4d69b5-454c-49f5-9429-7436040c33f2",
        "cursor": {
          "ref": "a9fa7d9e-bd3d-40dc-8d33-7bc7420d21c6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0a516c50-4e7f-4d1b-93d8-50d7c606b3a9"
        },
        "item": {
          "id": "5a4d69b5-454c-49f5-9429-7436040c33f2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7c928a0-a4a4-4dd6-9677-0f9d17a876a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784cd8ba-156d-400e-b4dd-826a2740edaa",
        "cursor": {
          "ref": "61293284-cdde-49e3-8d88-82b9f20c8316",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3e77ec19-624d-47e8-aa33-959611009bc9"
        },
        "item": {
          "id": "784cd8ba-156d-400e-b4dd-826a2740edaa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ddd3f622-64de-4189-a46c-0c9a352dc715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f5c6f4-6b1a-44dd-91ca-fcefe3c25c73",
        "cursor": {
          "ref": "d8381914-fcf2-40db-add4-bc2a5cbc13b6",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8d546bf3-889f-4b62-8bfc-6f69d5420dc6"
        },
        "item": {
          "id": "b8f5c6f4-6b1a-44dd-91ca-fcefe3c25c73",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cf904258-3a0f-45d0-9d6d-aa1091feebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e41df-32a4-499a-ace3-5aaa3b3bf9c9",
        "cursor": {
          "ref": "b5a4924f-bb36-4be7-b97a-e129379e19d6",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "afd1821b-4cad-415c-a6b3-d9ef9c564e9e"
        },
        "item": {
          "id": "986e41df-32a4-499a-ace3-5aaa3b3bf9c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cb4f5cce-2c9b-4055-8936-e163c06abd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd4873f-d4b7-4425-bd96-d3b91163ea91",
        "cursor": {
          "ref": "220a6a25-3d29-4696-b9b6-dcc2786376ac",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "88e5d431-e37c-45bf-9a43-215dc659762c"
        },
        "item": {
          "id": "fdd4873f-d4b7-4425-bd96-d3b91163ea91",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7af4253a-cade-4318-8807-00642ddbbfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f643bb74-5df3-4ab4-b814-0a87733ac7c2",
        "cursor": {
          "ref": "a8ca4446-9623-4ce9-b312-5909a6e2d313",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eada28b2-d8c6-4ef6-9761-7f4dad885934"
        },
        "item": {
          "id": "f643bb74-5df3-4ab4-b814-0a87733ac7c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d7cb6511-c0ba-44c9-9096-3a67d82e1ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610f7913-2d1f-4493-9b42-dd2dc24ffa2e",
        "cursor": {
          "ref": "068e782a-fc6d-4583-a72a-18cc3337dd23",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f531e7b8-e57a-48c8-84d5-b3b8dc8b7a31"
        },
        "item": {
          "id": "610f7913-2d1f-4493-9b42-dd2dc24ffa2e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "789150af-9796-473f-ae8c-1711b06a06f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c169c1-bd41-443b-a452-b864f5079bc6",
        "cursor": {
          "ref": "1a96e609-f580-470c-8783-efe3c0355009",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1ee95334-e588-4b87-831a-48829a8ec244"
        },
        "item": {
          "id": "60c169c1-bd41-443b-a452-b864f5079bc6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "51c50e31-526e-45e5-b5a6-994b8c0c19ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef3d828-5530-4a1e-82f1-a47a326fb0b7",
        "cursor": {
          "ref": "e4b8ccc6-ecff-4be3-91a0-c612c7afa2e6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f608a653-d6b9-4280-bcd9-35a7d1dcd5a1"
        },
        "item": {
          "id": "cef3d828-5530-4a1e-82f1-a47a326fb0b7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a0da9b3a-3162-446e-ad10-35ce186eff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc933a1-f897-44cf-b4c8-90da7d145f00",
        "cursor": {
          "ref": "5dee8b09-9c9e-4d1d-aad8-f45c01c6441b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "adc1aaa2-7f4e-48d7-ba44-1586e227718c"
        },
        "item": {
          "id": "2dc933a1-f897-44cf-b4c8-90da7d145f00",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ed92ec12-c231-42f0-a47d-8aa7957ebf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cf60ab-78c0-4ca4-9e1c-5028f432805f",
        "cursor": {
          "ref": "fc254dda-8acd-4243-8ae9-b464fa883de6",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dad0b46d-b85d-4c96-9a6e-8dbb4cc94419"
        },
        "item": {
          "id": "16cf60ab-78c0-4ca4-9e1c-5028f432805f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2fe94cef-39fe-41dc-b2ab-057305aacfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0872ba32-25e8-4db7-bef6-f4ef9dbcad14",
        "cursor": {
          "ref": "cb2aed3f-b62d-4d02-bcdb-6d938c48e9fa",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4498ff8a-3ce7-421c-bbd8-00367eecbb4a"
        },
        "item": {
          "id": "0872ba32-25e8-4db7-bef6-f4ef9dbcad14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d50b5070-15af-4127-920a-7a12ee488e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d10a2a-705e-433f-a66b-f928569856b3",
        "cursor": {
          "ref": "d92cfb80-328a-4bbb-ad4d-fbc0254a1a5a",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "30efa292-e210-45be-84ab-a8881e37773f"
        },
        "item": {
          "id": "79d10a2a-705e-433f-a66b-f928569856b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "84a3218c-8e40-4d78-bc69-24b5d2078345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40def119-3fa9-484a-8e98-b5a5632091f2",
        "cursor": {
          "ref": "4a02fa17-b7c8-4a83-b29e-b8417e835b13",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b037ed79-d652-457b-8eaf-e9a709ff0586"
        },
        "item": {
          "id": "40def119-3fa9-484a-8e98-b5a5632091f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8a665f3e-7cd6-43a5-b020-11b40148cbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b225b63-c329-4794-96aa-a6feb7ea0c0a",
        "cursor": {
          "ref": "eb911719-6409-451d-a135-d0cd494030f4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "de0d21ac-c82b-41dd-b234-b0d45328fafb"
        },
        "item": {
          "id": "2b225b63-c329-4794-96aa-a6feb7ea0c0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e2adbae8-9be9-4417-9fbb-cf6264196a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc049e9-787f-4e21-aa28-a88d0612731d",
        "cursor": {
          "ref": "c1c5c374-16ea-4971-a4e0-f47fef563fd0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "77e8b894-6ed4-4465-a786-9150ae7d046b"
        },
        "item": {
          "id": "afc049e9-787f-4e21-aa28-a88d0612731d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "db04991a-e491-4d39-9252-c878e2d8ebe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbbf96a-c810-42b3-a498-145a8aa4cc61",
        "cursor": {
          "ref": "b6081d09-04c7-4eca-9436-cb0ff1b1eebf",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bbc92792-31fb-448f-9327-96153f8b5c04"
        },
        "item": {
          "id": "dcbbf96a-c810-42b3-a498-145a8aa4cc61",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c8611696-24ae-4a89-aa1f-27e5c88158dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a337851-bbbe-40e2-b101-09f7480a741b",
        "cursor": {
          "ref": "0b84f958-2469-452c-affb-30d854e0313b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bb307b2e-c0e2-401f-8cb7-49931bef8a25"
        },
        "item": {
          "id": "9a337851-bbbe-40e2-b101-09f7480a741b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7a8ee589-89d3-4e1d-b55d-7ca3815911ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a1a086-68ec-4f28-b4be-9e4544ae2655",
        "cursor": {
          "ref": "a986117a-131b-45e2-842f-d278bca611bf",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9acf8624-3a99-47cb-84e2-8b4319ccf5dc"
        },
        "item": {
          "id": "13a1a086-68ec-4f28-b4be-9e4544ae2655",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8ef743c4-e36d-4795-a8ac-864bb8ea8381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c97eb-05f5-4f78-b04e-095c81a82fcd",
        "cursor": {
          "ref": "b563920a-33ae-4812-aefb-851cb8a16cba",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1867b964-2124-46e2-9064-1e172dd78227"
        },
        "item": {
          "id": "ba9c97eb-05f5-4f78-b04e-095c81a82fcd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ccd72c6c-0ee5-4801-95f9-b1ef419ef0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8a7381-8791-4ba4-95ef-4422981d238c",
        "cursor": {
          "ref": "fad13316-9b40-4ee3-8400-1fc2ab735989",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4e442b84-3771-4928-82b8-f00f542d7a30"
        },
        "item": {
          "id": "db8a7381-8791-4ba4-95ef-4422981d238c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b5e935a5-d633-4a17-93f6-8987155f44a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39a1da5-d69e-44a8-a473-b82b51dea848",
        "cursor": {
          "ref": "02bb33ab-c005-453d-9394-ab045013d192",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5839a61c-d579-46a9-bb6f-9fc38dbe0152"
        },
        "item": {
          "id": "e39a1da5-d69e-44a8-a473-b82b51dea848",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c6bf74dd-4c03-4959-82be-c02b486477d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77767b08-c090-4e3d-a4b2-ebe030804e05",
        "cursor": {
          "ref": "fb7eecf3-a8a3-47e1-90b2-7b2fed8ccd0c",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "13d1cd08-5c0a-4da9-baa1-68df388a0298"
        },
        "item": {
          "id": "77767b08-c090-4e3d-a4b2-ebe030804e05",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "90eaac70-bc53-48a4-a09f-056be1ac4554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b1b3cd-617a-4e7c-a96d-d80d14f0a814",
        "cursor": {
          "ref": "b0d8240a-1faa-4995-a7ef-62a90f5538d7",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "11041025-d6eb-4d12-9e1e-4a39970ec5a9"
        },
        "item": {
          "id": "f2b1b3cd-617a-4e7c-a96d-d80d14f0a814",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "798e5752-c3b4-457f-9612-5f09c84b9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0918c125-f9cb-47c0-a301-231f078319cd",
        "cursor": {
          "ref": "785080e1-7049-454d-901b-6009952ae282",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ab7371f7-12ee-4cc6-951a-a6263a937bda"
        },
        "item": {
          "id": "0918c125-f9cb-47c0-a301-231f078319cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f721a412-8eb5-4ffb-a3ce-e32ee948a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdfdce7-f4fe-4dc9-864c-0ae880b428b0",
        "cursor": {
          "ref": "d81a737c-d138-4d89-a83c-4fa2cb35496e",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "487a73fe-457c-4964-bdf5-a2f082449692"
        },
        "item": {
          "id": "9fdfdce7-f4fe-4dc9-864c-0ae880b428b0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7b274d59-9c65-4f27-b5a6-db1f2addaa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1267,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae49ad69-22a9-4b16-8898-747c667e2744",
        "cursor": {
          "ref": "d2a01533-cba4-4766-ac3d-4c0fd45764cd",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ec041d7a-cf54-4e95-ad29-da69d29245ff"
        },
        "item": {
          "id": "ae49ad69-22a9-4b16-8898-747c667e2744",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8821c415-da8f-4f9c-ab5e-f667f36e249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f05ede-d492-4b2d-b5c7-a643e81ad183",
        "cursor": {
          "ref": "ebebbffc-06c9-499b-b471-6fff07d6c5e2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bd793ccc-8faa-446d-a7c4-680f10ae308b"
        },
        "item": {
          "id": "a5f05ede-d492-4b2d-b5c7-a643e81ad183",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d13113b9-1fc6-4283-b83b-4f6c40efc724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dff4ae6-b350-4a23-bf22-598438b76e9b",
        "cursor": {
          "ref": "17fe9274-0e8c-40f6-a3c8-4183ce440c29",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0ba9b03f-25dd-4fbe-8b61-93aa146a8d84"
        },
        "item": {
          "id": "2dff4ae6-b350-4a23-bf22-598438b76e9b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a10fcece-cbd0-4a01-b906-8b003f275422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb2ab64-2cd1-41b7-a8d2-00e6efa076e1",
        "cursor": {
          "ref": "dd4fda15-6350-4e5c-a850-896f68c65e1e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1dafd8e4-a9d7-46e0-90a1-f0def9e09617"
        },
        "item": {
          "id": "ffb2ab64-2cd1-41b7-a8d2-00e6efa076e1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7b5cda5e-b84a-4674-9284-a80309fa9599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc966f-5909-4bb7-81fb-9d1c8eb03289",
        "cursor": {
          "ref": "a8813c15-e13a-4143-adad-dd968dd7d4c7",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c6747319-1026-47dc-8528-2822238e1614"
        },
        "item": {
          "id": "63cc966f-5909-4bb7-81fb-9d1c8eb03289",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "78ea4c97-5b98-4c91-8b28-1080458830df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1006,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee801f7-1ee1-4078-a131-3ac9a6b46a9c",
        "cursor": {
          "ref": "d64143ef-da1e-40b8-ad8c-9a67ed9c0b90",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c776f5f8-ee42-43f1-ad2a-40385008b087"
        },
        "item": {
          "id": "eee801f7-1ee1-4078-a131-3ac9a6b46a9c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1acc10b6-ba6d-4278-bb99-347d18312589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b58b01-e1b4-4877-9669-b3a3d11d7eed",
        "cursor": {
          "ref": "9750ed28-40ea-4b19-8752-0e305539bead",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "284a57dc-42ec-47b7-ab69-d1795d2fe318"
        },
        "item": {
          "id": "62b58b01-e1b4-4877-9669-b3a3d11d7eed",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "46d72408-5715-4444-83fb-a261a8e4470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5910ec8e-f7d6-409c-b008-5cae1286e438",
        "cursor": {
          "ref": "a8ed3c1d-e2e8-4e9a-ad1d-9d8963f411f3",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "85fd9bff-20bd-4e25-90cb-8ff03c4e959c"
        },
        "item": {
          "id": "5910ec8e-f7d6-409c-b008-5cae1286e438",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e71a3733-ce4b-41a4-a9c7-f40f318471bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ab6362-795f-41bd-9db4-5437dddbeee2",
        "cursor": {
          "ref": "d56ca589-b47e-4837-88f5-2fd364f0a968",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b6cbd5f4-065d-4fea-9b17-7c1a96b20271"
        },
        "item": {
          "id": "88ab6362-795f-41bd-9db4-5437dddbeee2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c86bdcdb-1ec2-4d9a-ad4b-cbf2f6043e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7cfaf2-e375-4571-9b1e-c23db37fea7c",
        "cursor": {
          "ref": "36f1875f-848b-487e-bd86-8ffd101c22e9",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e586c3f5-560c-4497-ad7d-48ab90849690"
        },
        "item": {
          "id": "9d7cfaf2-e375-4571-9b1e-c23db37fea7c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3ac7bcf1-8fdd-472e-8ae9-07098e61fff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d46f5e5-98dd-4990-934d-4f957705d4c1",
        "cursor": {
          "ref": "c37f1fff-cdd6-41b7-bfbd-f0fda840752d",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b980d1f4-3610-40f4-b39c-b21b239d4fbd"
        },
        "item": {
          "id": "6d46f5e5-98dd-4990-934d-4f957705d4c1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e49dc00c-8539-46af-95e4-4f06c4d648f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17aa86c-3c9c-4448-8788-da8c4cd98ad8",
        "cursor": {
          "ref": "b74b8e1e-f8e5-450b-9364-ca48df931dd0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3cb634f8-4148-4935-9d48-e00029f59a23"
        },
        "item": {
          "id": "d17aa86c-3c9c-4448-8788-da8c4cd98ad8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fc75332e-8715-4b8f-bce7-71ed03a63254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db39b70-5710-4fe8-98f7-cf59e1551d5d",
        "cursor": {
          "ref": "35f0b656-fe83-40ce-8b3a-2a9765bf6d6f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "38285b75-d68b-40d4-af8e-ed8a4bf87be8"
        },
        "item": {
          "id": "7db39b70-5710-4fe8-98f7-cf59e1551d5d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96988475-615f-4df1-b96a-c49bf0e129e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dcfe58-7b56-49b5-9daf-055f72566522",
        "cursor": {
          "ref": "adbcd185-cd80-4558-ac5f-87a9363e2ea9",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aabb3313-e3dc-4047-ad0c-8a0b11d40138"
        },
        "item": {
          "id": "d3dcfe58-7b56-49b5-9daf-055f72566522",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "74fb5342-7a01-4dcc-afff-c0fcc1ce9a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a162fe7-f7df-4f87-b248-a20502e0ad24",
        "cursor": {
          "ref": "aaa303eb-4728-4271-be38-003ad2bc35c4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6937e310-1265-4474-8fe4-ad76244c60cc"
        },
        "item": {
          "id": "1a162fe7-f7df-4f87-b248-a20502e0ad24",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "364c52a0-ea67-4a50-a1b7-4b089be23877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b593425b-144e-4967-bae4-85c0e9451903",
        "cursor": {
          "ref": "c9ba818b-76fe-4c3d-aaff-447c69249062",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6d8d116e-ef0a-4ad3-963a-06e6b5bd8d4c"
        },
        "item": {
          "id": "b593425b-144e-4967-bae4-85c0e9451903",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "41ec728d-25e5-4b38-b8cd-7c2f90c089ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c955945a-b710-4291-8c8b-4708eecc124c",
        "cursor": {
          "ref": "1b71ea83-bc19-46a1-ac88-8b41628512ec",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1874f810-cc26-413d-82d9-fedc12645d80"
        },
        "item": {
          "id": "c955945a-b710-4291-8c8b-4708eecc124c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "524ed086-9b6c-4fa2-aa6f-6de4895bdfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6609d8c-91d2-40c5-8ea7-54a05318825e",
        "cursor": {
          "ref": "21051f77-fd31-4d35-8fc9-b055cb4ce5b5",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b4f7ee5c-e129-4660-84d8-0c83a0a65ad0"
        },
        "item": {
          "id": "d6609d8c-91d2-40c5-8ea7-54a05318825e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "322eee5f-2c6c-4caa-8ffe-379013f26488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a6cfaf-62a3-4710-9fb8-4e4b62b4d88b",
        "cursor": {
          "ref": "4d8247f9-68b8-4d83-9f68-a550d7c53c4c",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b96fb740-e5a3-4b1a-b0b5-6ed8cac8b7c6"
        },
        "item": {
          "id": "b5a6cfaf-62a3-4710-9fb8-4e4b62b4d88b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "32c41407-4b82-4a88-8ca4-2d29b2ffd4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1335,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a6092f-4fd5-4a75-b280-d86b0ceedb73",
        "cursor": {
          "ref": "db7e0684-fdcf-44c6-bcf8-e6089fe2c5bb",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6e040295-52e6-468f-80ec-cf651d6abcaa"
        },
        "item": {
          "id": "49a6092f-4fd5-4a75-b280-d86b0ceedb73",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "15e4bdab-224a-4a3b-875e-d66da803cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096ba3f5-9eb2-4209-b1a4-53a15778e430",
        "cursor": {
          "ref": "0fd82ff6-3610-4e5e-8f1d-c3d577a9a8f5",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d533fbcf-51a9-470b-803e-fdb0e6712bc3"
        },
        "item": {
          "id": "096ba3f5-9eb2-4209-b1a4-53a15778e430",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bd543604-7275-482b-acce-15232d87406f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fde9b4-d1af-42f3-8586-eac3d35a5f5e",
        "cursor": {
          "ref": "ec449c67-e49c-4b87-80ac-7c9d577feb64",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c043ead4-5270-420e-a9b0-1de7b1db8448"
        },
        "item": {
          "id": "a6fde9b4-d1af-42f3-8586-eac3d35a5f5e",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c2b1aae7-9655-404e-bd08-5c12099a15da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1046,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc89826f-efe7-4865-b22d-601bca8d5205",
        "cursor": {
          "ref": "e9450ac1-4394-428e-85ed-3328de42bd9b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0fe76e3a-b0d2-4e1d-b93b-73f7b9badac5"
        },
        "item": {
          "id": "dc89826f-efe7-4865-b22d-601bca8d5205",
          "name": "credentials_issue"
        },
        "response": {
          "id": "138d633e-6d69-4e81-b8c6-d19ae00e83d4",
          "status": "Created",
          "code": 201,
          "responseTime": 9436,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eb4889-9d3c-4c52-af02-77df020af625",
        "cursor": {
          "ref": "b8795bc4-1103-43ff-b76c-0d891ef5e461",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a86e6c3-2a30-473b-8138-c38e0998c0aa"
        },
        "item": {
          "id": "c6eb4889-9d3c-4c52-af02-77df020af625",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c7cc1cc8-5dc6-49d5-a331-5d5709a287a9",
          "status": "Created",
          "code": 201,
          "responseTime": 7708,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f285b6-0eed-4db4-8149-a0797bf40a61",
        "cursor": {
          "ref": "d7eac5ec-276c-42d2-b3a1-2982ac72c125",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d4223d3f-31f1-4c61-8140-92fc4037599a"
        },
        "item": {
          "id": "f6f285b6-0eed-4db4-8149-a0797bf40a61",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ed36b240-f8af-47ac-abcf-b05671fc91d3",
          "status": "Created",
          "code": 201,
          "responseTime": 13391,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a90c27-dd44-4296-a55a-2350d39db264",
        "cursor": {
          "ref": "5f20989a-f727-4e3e-af14-9006a41c719a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5fdfe574-b82d-4c53-b307-4d105acabdb2"
        },
        "item": {
          "id": "50a90c27-dd44-4296-a55a-2350d39db264",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "973e2638-b347-436a-969a-d18d5b362c83",
          "status": "Created",
          "code": 201,
          "responseTime": 8234,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "880dee31-f5e2-49a4-8531-57298007ee26",
        "cursor": {
          "ref": "ca9da9f4-db06-44d0-a26f-e800c9f3b9cb",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7511d112-6dcd-4d9c-8f21-22e410e4583f"
        },
        "item": {
          "id": "880dee31-f5e2-49a4-8531-57298007ee26",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b4aac7a2-fa33-4aff-87f1-9e3c06f8f146",
          "status": "Created",
          "code": 201,
          "responseTime": 12472,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6e12ca-7298-45bf-b233-fb314e781c0c",
        "cursor": {
          "ref": "e6daea41-8c7c-42e9-a620-fc08ba4908c5",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b354eb17-42b7-4446-81cd-5243e5f35d89"
        },
        "item": {
          "id": "da6e12ca-7298-45bf-b233-fb314e781c0c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d828207d-0249-4d45-bf59-87d872be9530",
          "status": "Created",
          "code": 201,
          "responseTime": 7966,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a2a543-2627-425c-8a15-312a512675c2",
        "cursor": {
          "ref": "6a685b5a-0409-406c-823a-aab6e9eab0e7",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bbeaf1f3-8172-4a2b-91bc-5ef048c897e9"
        },
        "item": {
          "id": "18a2a543-2627-425c-8a15-312a512675c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ef09af7d-495a-4fda-84a2-9b61a6d96db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a2a543-2627-425c-8a15-312a512675c2",
        "cursor": {
          "ref": "6a685b5a-0409-406c-823a-aab6e9eab0e7",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bbeaf1f3-8172-4a2b-91bc-5ef048c897e9"
        },
        "item": {
          "id": "18a2a543-2627-425c-8a15-312a512675c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ef09af7d-495a-4fda-84a2-9b61a6d96db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a294d8d-dee2-42b3-926c-8f77f41fcd9d",
        "cursor": {
          "ref": "696b6f4b-2aa1-4eee-9c5c-beee6712d049",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e34b9c30-cf2a-4306-abe1-873bd0519fa8"
        },
        "item": {
          "id": "3a294d8d-dee2-42b3-926c-8f77f41fcd9d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03943e70-762e-4dbc-8725-c430c572c403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdf3263-38bb-4132-9b4a-aac836eea742",
        "cursor": {
          "ref": "d01c421b-7ba7-4d06-bf75-2b34e352082a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f5a3d400-ac86-4639-a044-1f92ccca24ab"
        },
        "item": {
          "id": "ebdf3263-38bb-4132-9b4a-aac836eea742",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c209c593-4786-4033-9ebf-c55e12ee5aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacf9c14-96cf-4756-990a-bec2f98a438b",
        "cursor": {
          "ref": "e0075071-8efa-464f-ba22-6e497e80c2fc",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "da9f3ca5-7824-4987-a407-6ac66a0834e4"
        },
        "item": {
          "id": "bacf9c14-96cf-4756-990a-bec2f98a438b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e42ebfa0-5c1b-442f-a166-6b68af459885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b098ba74-1d08-49b0-987d-a228c662fc0b",
        "cursor": {
          "ref": "27a9ff55-afd8-4290-b500-4136078c1e78",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ba20565-7a4e-400a-999d-3173b2674622"
        },
        "item": {
          "id": "b098ba74-1d08-49b0-987d-a228c662fc0b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "03ddce8b-5672-4410-83d7-224cb19e772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd0ec7f-ac2e-471e-9e3f-52686e560fa5",
        "cursor": {
          "ref": "30c2dae2-faba-4dba-ad98-1af89984554b",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aeb5d81c-5446-4e26-ba87-83fad9f4c859"
        },
        "item": {
          "id": "7dd0ec7f-ac2e-471e-9e3f-52686e560fa5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5dff1564-a0fb-45f2-a30d-aa24c96af162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a85b8-4bf7-4366-bb9d-d52677f1d4eb",
        "cursor": {
          "ref": "fd355b3c-6fc5-4296-9b00-2846957057cc",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "198d8da4-0bf1-4cc0-91c3-9d6a9a6c3309"
        },
        "item": {
          "id": "bd4a85b8-4bf7-4366-bb9d-d52677f1d4eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d6aa8c8-9185-49a9-8848-3094e17d7b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa5a802-0639-493e-a4c7-7befb6fb6206",
        "cursor": {
          "ref": "ef7464b2-7553-45bf-ac90-d25c679086ef",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7b0ec78-62f7-451f-9a2b-fa26c2440279"
        },
        "item": {
          "id": "6aa5a802-0639-493e-a4c7-7befb6fb6206",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6fc5ddfa-1a66-4348-9694-b0b7f3ffcaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f91ca5-d395-4ff7-8d13-25dbcb901d20",
        "cursor": {
          "ref": "fb445342-b4df-43c7-8647-c7b99655ddcc",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "22b0122e-8e6a-4baa-a7d0-dba056111789"
        },
        "item": {
          "id": "84f91ca5-d395-4ff7-8d13-25dbcb901d20",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9e21ba30-725b-4219-83c5-9edfe1a9e156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e2dadd-678a-4127-8744-a08685d4c2f8",
        "cursor": {
          "ref": "045173fd-5da2-4eb2-a560-39dbf47befce",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4ba3a41-835d-4ab6-8ad4-fe9d083658a0"
        },
        "item": {
          "id": "59e2dadd-678a-4127-8744-a08685d4c2f8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f25e4f2-8494-4a71-8b78-14fb687423c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64b118a-c8b5-4a55-a707-7fc7d2a40c56",
        "cursor": {
          "ref": "f1a4b573-e5f7-4bd0-9593-514d1aa4a082",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7399896f-a3c5-4fa3-a241-027cbb517d7b"
        },
        "item": {
          "id": "a64b118a-c8b5-4a55-a707-7fc7d2a40c56",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1856a1df-e7ae-4ef1-82b5-cea5b6da2be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1237,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0870ec3b-5835-4119-a528-0126ce42ecb6",
        "cursor": {
          "ref": "aa79db34-edfb-4d74-a690-f6770a3c45b5",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "847b0b7c-21df-4a26-8460-ec09304a1dbd"
        },
        "item": {
          "id": "0870ec3b-5835-4119-a528-0126ce42ecb6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "da759ad5-8b9e-43ef-bab1-33969be00ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54c778e-8f62-421d-8474-79fddee913a6",
        "cursor": {
          "ref": "5219fdc8-b6ca-4820-8741-67d293890acf",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a948ae8d-d7a9-4dec-b6d2-9660d8252033"
        },
        "item": {
          "id": "e54c778e-8f62-421d-8474-79fddee913a6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9241eb71-f004-427f-9800-44a8db1661b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1240,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b340a0a3-3026-4cb5-85e2-6b66eb957aab",
        "cursor": {
          "ref": "b12b1609-b4dd-4e12-a067-60749154fb3e",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "114a8137-4117-41e1-a82d-11566250313e"
        },
        "item": {
          "id": "b340a0a3-3026-4cb5-85e2-6b66eb957aab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "01e9d519-d316-4f19-a4ef-7443cd0f0fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5dabde-6158-4fe0-a1c3-8dc90aca4091",
        "cursor": {
          "ref": "2b996e5a-4671-4bba-b98a-6d90ffc95db6",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1de5beaf-671c-40e1-8c18-c3f60d714245"
        },
        "item": {
          "id": "df5dabde-6158-4fe0-a1c3-8dc90aca4091",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d8f483c-d198-47e4-b8a5-843804617ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f410bef-b598-484c-aab3-f14b9d6b1021",
        "cursor": {
          "ref": "d72d33da-c401-495e-ad5b-73b648d1ca4b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5e9c59e3-9ebe-40e3-97de-b3cbb92b2b8c"
        },
        "item": {
          "id": "5f410bef-b598-484c-aab3-f14b9d6b1021",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1406ec3e-99a8-4718-9354-835d588f6f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2ab01-a0a5-42b0-882f-d0acb3baa4dc",
        "cursor": {
          "ref": "2b4a9c20-d81d-46a1-8794-d65860e70550",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6b462bd6-9824-40ec-8abe-157a08834ecc"
        },
        "item": {
          "id": "bfb2ab01-a0a5-42b0-882f-d0acb3baa4dc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8fa003c-1bfd-4966-ac4d-4634c48eed90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d41748-98e5-471e-9ce2-fa8178ba4e05",
        "cursor": {
          "ref": "745777b4-edc6-4c92-a7d7-655bdce24b1a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "781cd193-5849-4462-b180-49cf9c4275b4"
        },
        "item": {
          "id": "32d41748-98e5-471e-9ce2-fa8178ba4e05",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "adb75c3c-2a5b-4e0a-b301-3af81aec188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905abe4d-a57e-4d53-a8a2-1031a8155bee",
        "cursor": {
          "ref": "feb9b076-7e2f-4fbc-8393-7435309bc02d",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "940b1fec-0461-43d6-b48a-770501ef4be4"
        },
        "item": {
          "id": "905abe4d-a57e-4d53-a8a2-1031a8155bee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fa6dcfa-00ca-446c-9092-4ec880ad0b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4f77ec-c529-4d56-8171-8d78916ec26a",
        "cursor": {
          "ref": "b75203b7-f357-40c5-b0d3-e7c608f0d582",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6e7a72c0-5020-414c-9142-573c00dfec14"
        },
        "item": {
          "id": "db4f77ec-c529-4d56-8171-8d78916ec26a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "340f8dd8-abc7-4971-823d-1c35cb53a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7fa8f1-9920-4524-a055-f81d127f9cb6",
        "cursor": {
          "ref": "afb96b03-dd76-40d3-8220-de9bafa7f443",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "55be7cf9-a33b-4efc-a71f-034c1e05613b"
        },
        "item": {
          "id": "eb7fa8f1-9920-4524-a055-f81d127f9cb6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "450bc0fc-2c75-4c1e-ace4-ad3bb9533fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819d55ec-27df-4666-af3f-b1b1e0c56184",
        "cursor": {
          "ref": "b0c93569-c064-4c61-b7b8-87f3da4938d2",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "01c09b79-0bf0-4b8f-959b-4e0054e8dad7"
        },
        "item": {
          "id": "819d55ec-27df-4666-af3f-b1b1e0c56184",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "60efb5db-6f3f-406f-99a8-7f26827654b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d3f1c2-96a2-47e2-8fc2-e1561825ea7c",
        "cursor": {
          "ref": "13e26101-afeb-401a-b739-1500b75f3835",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "843f2224-6e5b-409b-a0d9-fb0c58a73bf3"
        },
        "item": {
          "id": "73d3f1c2-96a2-47e2-8fc2-e1561825ea7c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c0d1c689-fa0e-410e-a23c-fc9150ed2002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97075a8-9a24-4640-9979-de7cf16a4b2d",
        "cursor": {
          "ref": "8656355d-73be-413c-b1c4-400a30dad2b1",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "666356ba-8bcd-4fb7-9a41-20cadbf311b0"
        },
        "item": {
          "id": "d97075a8-9a24-4640-9979-de7cf16a4b2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c43f89cb-33f6-4eb0-bf1c-035e5c07867d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d129b3e6-5a2b-4ae1-9146-e3cd304f725a",
        "cursor": {
          "ref": "33752e67-cabc-4cf2-a943-89797619250a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "75b143fa-92af-4ca0-a0d8-7496b2e00903"
        },
        "item": {
          "id": "d129b3e6-5a2b-4ae1-9146-e3cd304f725a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2598e41e-3827-4ee4-8187-29013692127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484af8f9-6fb5-4b4b-b08d-5e11cc277eb6",
        "cursor": {
          "ref": "a04d25e0-5758-4ea7-b4b7-f05dcf794e9b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4b384ec2-852e-453e-a8b3-88fa5ad8ff5b"
        },
        "item": {
          "id": "484af8f9-6fb5-4b4b-b08d-5e11cc277eb6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8f87bc07-3633-45de-a6fa-01ba17285e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928b95e8-375d-4c44-8b01-33c7c98d3716",
        "cursor": {
          "ref": "a132d319-d00a-491a-8e1b-e7692856308a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f2976a38-eaf7-4caf-aaa5-7fff9fdf5cf7"
        },
        "item": {
          "id": "928b95e8-375d-4c44-8b01-33c7c98d3716",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e985802d-d37c-4ce1-85de-dd31fbc1fa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b7908d-c351-473f-9102-3a4f82e8db13",
        "cursor": {
          "ref": "014ad191-b185-44e9-a79c-67e1bf72c014",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7dd94add-6c51-4535-80e5-96dd13855c27"
        },
        "item": {
          "id": "96b7908d-c351-473f-9102-3a4f82e8db13",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6f7dcbc0-6a16-45f5-801f-a3df913c7229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7efa874-e790-42fe-a66f-70aeec12b781",
        "cursor": {
          "ref": "acce9988-5aec-4d22-84e4-04d6510aa84f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "afd440ea-23fe-4963-aaa8-65c4b0941227"
        },
        "item": {
          "id": "a7efa874-e790-42fe-a66f-70aeec12b781",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e6c0420d-bc5b-45ba-85be-87e4cf4bc6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a400c-2fb2-48c8-a753-c897c8b517f0",
        "cursor": {
          "ref": "cf31ef57-4e05-47d6-ba1f-37fa1ca0eb75",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b9c21601-da54-4c74-a6b8-35403f252773"
        },
        "item": {
          "id": "8c8a400c-2fb2-48c8-a753-c897c8b517f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d2403992-e658-44c6-838c-b8c008f8f1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9bbd4-e606-4342-aee4-c9d34dde1135",
        "cursor": {
          "ref": "a1861ada-e051-4916-b0ee-a977bee68763",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "16f5788d-010d-434f-892a-e4f4bf3723e8"
        },
        "item": {
          "id": "82c9bbd4-e606-4342-aee4-c9d34dde1135",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a7cd0552-4a74-4e43-aab8-b2bafcce924c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a98ab5a-03d4-49d2-a8b7-dc6588c1b14b",
        "cursor": {
          "ref": "1b1bfccd-d4e4-4f64-8fe6-19d6820c6d52",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c36e6964-eeca-4671-b93c-ec0af42f5d0e"
        },
        "item": {
          "id": "4a98ab5a-03d4-49d2-a8b7-dc6588c1b14b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3eac9f95-3910-440b-88d7-01131920e566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cccc16-2876-4cfb-8296-d71b5c0817f5",
        "cursor": {
          "ref": "93af3b3b-6f10-44be-900c-3e3d66381b1c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a5350bd1-5c0a-47f5-b4f6-ae7624419666"
        },
        "item": {
          "id": "e6cccc16-2876-4cfb-8296-d71b5c0817f5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "338fbfbc-b4a5-4d87-8188-a056c046e01a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bec11c7-7657-471a-9ce1-33d0f2f044fe",
        "cursor": {
          "ref": "6f07d39d-aa35-4459-82f4-f85b12304579",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae00639f-a024-4327-8dfe-a6ba51ac3818"
        },
        "item": {
          "id": "7bec11c7-7657-471a-9ce1-33d0f2f044fe",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b64d61e8-9bee-410f-909e-12130deef078",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 727,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93563e-8a42-4736-abc7-6953a55cc0c8",
        "cursor": {
          "ref": "7be5b7e5-fbfe-446f-ba7b-e6dd931cabda",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6762dd7d-dd63-4752-b88f-935bf964e8e7"
        },
        "item": {
          "id": "8d93563e-8a42-4736-abc7-6953a55cc0c8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "25966f74-8d1d-4b30-b4e6-89177ce06f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93563e-8a42-4736-abc7-6953a55cc0c8",
        "cursor": {
          "ref": "7be5b7e5-fbfe-446f-ba7b-e6dd931cabda",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6762dd7d-dd63-4752-b88f-935bf964e8e7"
        },
        "item": {
          "id": "8d93563e-8a42-4736-abc7-6953a55cc0c8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "25966f74-8d1d-4b30-b4e6-89177ce06f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6cf1cf-ed26-4ef2-a9dd-2ca5d836ab03",
        "cursor": {
          "ref": "22c7458b-e4f3-4ffe-a19d-9b7e4ae97801",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0bf09b7-bd66-4d47-8dd4-f52b43a8390a"
        },
        "item": {
          "id": "1d6cf1cf-ed26-4ef2-a9dd-2ca5d836ab03",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ec60c039-82c4-46aa-bfd3-c73dab6abb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fde881b-3daa-48b8-b4fe-ec1c85de7988",
        "cursor": {
          "ref": "c0fdbfa6-a27d-4fc0-b2ba-da0f8b0840c1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "76251c69-cef6-4ce0-84e8-c2bad3f887f6"
        },
        "item": {
          "id": "7fde881b-3daa-48b8-b4fe-ec1c85de7988",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4fc7e22a-799d-40b0-b3db-fe2e0632c3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084fe11f-46c4-40ca-9c1d-001f63bc52af",
        "cursor": {
          "ref": "5aa0d4ad-321a-44ae-8a38-0f6b5e1c260a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cb86d4f7-34ae-444a-98d7-deb4da6d4a15"
        },
        "item": {
          "id": "084fe11f-46c4-40ca-9c1d-001f63bc52af",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1f8c4e2a-a2b8-4859-98eb-3776681502d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb38474b-c74b-4681-9948-88ab3d1a92db",
        "cursor": {
          "ref": "16b7d02d-3611-4712-ab14-303973f654ef",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "164a1ca3-40f1-47bc-8253-97766f7eb128"
        },
        "item": {
          "id": "fb38474b-c74b-4681-9948-88ab3d1a92db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c44e7a92-5335-4a49-a3f5-241cc8bc476e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc8306-5ab6-414f-9531-2a8ff7d233ee",
        "cursor": {
          "ref": "4a8b16c0-6d31-4b68-ac2c-4a3746cd04e9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "91247e8f-28a6-4006-b2dc-f35ea3af1ac1"
        },
        "item": {
          "id": "67fc8306-5ab6-414f-9531-2a8ff7d233ee",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "66dc9f55-feec-4f80-988d-8fb380e3d213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83baf904-244f-4e11-89ae-b8aa4e290dbb",
        "cursor": {
          "ref": "5a2235c9-8034-4a54-92d5-41b6b73ca1b0",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef391e84-45b2-4851-84ea-491d22c8923c"
        },
        "item": {
          "id": "83baf904-244f-4e11-89ae-b8aa4e290dbb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a1203bdd-3dbe-41e1-8be3-4db3c49c4322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3331be93-e968-40d6-bd39-97a1b64fbba4",
        "cursor": {
          "ref": "0a6478e4-f1d9-48b1-93e2-47462ce79d17",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1aaf32c0-6609-47e7-bb01-ae99e09f0e0d"
        },
        "item": {
          "id": "3331be93-e968-40d6-bd39-97a1b64fbba4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b1285d29-968a-44e8-9bbd-0421d262326e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0d4e92-49e7-4cae-bb00-773bebb18c12",
        "cursor": {
          "ref": "3bca4b2d-ef46-41de-ac9d-e45389e786b0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e4abff4b-d4ab-4047-9ce1-fde170f2d576"
        },
        "item": {
          "id": "fd0d4e92-49e7-4cae-bb00-773bebb18c12",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "415c8319-735f-4a91-aa8e-8b9e9dd6efdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2b9bbe-01e4-45fe-84ec-95c1cec76110",
        "cursor": {
          "ref": "7a1318d2-3cf8-457b-955d-52d2592db7cf",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dde9eab6-78b6-4181-8953-dfb17e1f11ca"
        },
        "item": {
          "id": "cd2b9bbe-01e4-45fe-84ec-95c1cec76110",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "22134d9a-406a-414d-a32b-cf8a64e0cf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eeb03d-faed-452a-950b-4dbdd45141e1",
        "cursor": {
          "ref": "24f86fb2-0eac-4b82-acb6-9bd0e9b768b1",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d49ff7a-eefd-46b0-aac6-19637e3f6e7c"
        },
        "item": {
          "id": "28eeb03d-faed-452a-950b-4dbdd45141e1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a568a2e4-a525-4ecb-b554-125f323334d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a67dff-9059-4aeb-9a7a-095d785f06ea",
        "cursor": {
          "ref": "0ebb6b46-337e-4a06-9774-ff91fba3c2b8",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d614b68a-6efe-4072-aed5-179089d79473"
        },
        "item": {
          "id": "17a67dff-9059-4aeb-9a7a-095d785f06ea",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9141dfe4-d41d-48bc-875a-94b06e8b200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639f9697-3d08-4546-83e2-fe8ddb24c430",
        "cursor": {
          "ref": "f8ea6953-9df1-47db-b5b2-12c5403cdb55",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7709410c-ff99-46ee-9519-d1654e7ac27e"
        },
        "item": {
          "id": "639f9697-3d08-4546-83e2-fe8ddb24c430",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f43333c6-54a1-43d6-90d4-39ac217f1d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a864fc67-f193-4605-91e5-f637973b6fea",
        "cursor": {
          "ref": "dd432bd9-ba4e-4f3b-a835-c2fa676c579a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1f744cfe-c1da-467b-9c4e-32a5a22a7ab0"
        },
        "item": {
          "id": "a864fc67-f193-4605-91e5-f637973b6fea",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d1cc56c5-c146-4bd5-942a-f4b985936a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744ef2e8-fc23-4749-baa1-78790254200a",
        "cursor": {
          "ref": "b01071e7-e927-44ec-b065-a7ed03e9541f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f6b2f6bb-8bb1-4746-91be-ab87f7e4ea93"
        },
        "item": {
          "id": "744ef2e8-fc23-4749-baa1-78790254200a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a457209d-470d-465b-9eab-82190b348b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3968d46b-91aa-4b23-a68a-07692460b0d3",
        "cursor": {
          "ref": "0e4b0512-71bf-4c92-a6f8-63732829dbe2",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "26a6ef99-5b14-402a-bf31-dd8d8f03d9e0"
        },
        "item": {
          "id": "3968d46b-91aa-4b23-a68a-07692460b0d3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c5b77ce-be29-4f9b-b018-9f5792a7257b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed46e3-e9a0-4dbe-a1fb-6b2da9239e2f",
        "cursor": {
          "ref": "b65123a0-df36-4c74-83a1-f3450324e524",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c83e4d6c-bcd6-4a26-8655-09fe4588bf26"
        },
        "item": {
          "id": "31ed46e3-e9a0-4dbe-a1fb-6b2da9239e2f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fe926f30-1e41-44f5-8d43-d4ad6aca96c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040c8cfc-df6e-4f92-841f-9c014719d1e9",
        "cursor": {
          "ref": "4225603c-3643-4de6-89eb-f64b073fba83",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6607600a-49c9-4524-a808-7d6e7e5b6af4"
        },
        "item": {
          "id": "040c8cfc-df6e-4f92-841f-9c014719d1e9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "984e0899-319b-4298-a499-072406c5b891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f43fb5-60a1-4c35-b73e-a41de825f5c2",
        "cursor": {
          "ref": "b5b94fd0-318e-4005-8fd9-35fadde9cfcc",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "292d7677-6d36-45fd-9891-1ad464f3d10b"
        },
        "item": {
          "id": "76f43fb5-60a1-4c35-b73e-a41de825f5c2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4489b718-8c17-4a42-9cc1-26bb615a308f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976a9689-1857-4744-b66a-939b22efcf4f",
        "cursor": {
          "ref": "4504c5ba-972c-445c-9bb8-dd6ed7a7c2a3",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c49cad6-9d8d-45f9-9c4b-8aa6e855f7f3"
        },
        "item": {
          "id": "976a9689-1857-4744-b66a-939b22efcf4f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e021d5d1-a66e-4a8a-8d1e-187a82385ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a03bf1-0cd1-4675-bdf4-db764c9b19de",
        "cursor": {
          "ref": "0d2f28b9-a920-46ca-aa27-21c8e2944e2a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cca28b68-f649-48f0-80a6-d103e52bb661"
        },
        "item": {
          "id": "27a03bf1-0cd1-4675-bdf4-db764c9b19de",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "693588bf-eb85-40cd-82bc-c526ceafaab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1202,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06445315-bee0-4272-bece-53fab9640991",
        "cursor": {
          "ref": "fdcef740-d0ec-4a50-841a-294090a3aec3",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c9a06e29-5b7a-4f36-a615-e3cd7b92147e"
        },
        "item": {
          "id": "06445315-bee0-4272-bece-53fab9640991",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "79b39620-433a-4710-abfc-740b8893cc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1374,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2f9063-9c68-4561-b202-178b01075060",
        "cursor": {
          "ref": "046baee5-25a2-4c1f-8f0c-5734dff3a09e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9df89451-ed53-4b6a-993e-1628195cd782"
        },
        "item": {
          "id": "6d2f9063-9c68-4561-b202-178b01075060",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bbb38f23-8478-4e39-8c92-b3d27cbbfbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1476,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ad3045-3871-4728-ad25-c123d7a71f88",
        "cursor": {
          "ref": "cb538ab4-ca9f-4d6b-9a52-002a62e9c4ec",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7157ba34-b922-4f8a-b385-0c3bd2e420de"
        },
        "item": {
          "id": "55ad3045-3871-4728-ad25-c123d7a71f88",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ab03912d-12db-4bfd-b842-2404bae63a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1556,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2239bcd6-76cc-4c97-9f27-8f5965801329",
        "cursor": {
          "ref": "98459a4b-5109-454e-9aa1-725437a660f8",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "00a754e7-00e7-49e0-a986-418c9011d5e0"
        },
        "item": {
          "id": "2239bcd6-76cc-4c97-9f27-8f5965801329",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a862b6e-e09c-4e85-b2df-97da98060723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba513f-6dab-4fe4-a6cc-5715c91573d8",
        "cursor": {
          "ref": "b2076fac-dd2a-4ffe-a3a7-bd9b23f5335d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7beb9507-ea0d-496f-9715-ea915a775b26"
        },
        "item": {
          "id": "cbba513f-6dab-4fe4-a6cc-5715c91573d8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bfb9c221-34e5-4ac8-97df-e15272062b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0a1a6e-4298-4bc0-8663-21be63f54218",
        "cursor": {
          "ref": "a8cc71c0-fc33-4ac2-9415-cc0296376c0c",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4f06f9a3-47e0-428d-a925-1cedd89d4c4a"
        },
        "item": {
          "id": "5e0a1a6e-4298-4bc0-8663-21be63f54218",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce386f70-7cbf-41fc-b2dc-325dd3e1d0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546ad10e-aac9-4657-ab0d-0d89673d0bf0",
        "cursor": {
          "ref": "50101489-5211-4b8a-a844-47e65173fbc4",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a099dc82-e617-49e4-b823-84e82e852279"
        },
        "item": {
          "id": "546ad10e-aac9-4657-ab0d-0d89673d0bf0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e4d1c8cd-c504-47bf-a994-2b4d941f5794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bec8381-0f40-41c8-b920-5b36a793b215",
        "cursor": {
          "ref": "d9f1b02e-9806-448f-ab3b-c1a3d98f9209",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d144f673-b4f2-428f-a616-f0fd5a89469c"
        },
        "item": {
          "id": "7bec8381-0f40-41c8-b920-5b36a793b215",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3783cd48-1796-493c-a1d8-e17c8df125cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a941d4e0-8afe-4250-9899-1f91dbfa1b85",
        "cursor": {
          "ref": "2c02ba78-7ab2-4d96-9fcb-e0a324b7972d",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5c09cccf-8192-4640-b9e3-eb1715958ca3"
        },
        "item": {
          "id": "a941d4e0-8afe-4250-9899-1f91dbfa1b85",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cb574cfd-1b3f-4f77-a30f-ea4308400080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9743482-b820-4972-a37f-cc6abf9231b1",
        "cursor": {
          "ref": "ba482dd0-f752-4b41-9d56-8ee6be771349",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d9931a6b-15fa-4678-bfb8-6a5321f15232"
        },
        "item": {
          "id": "b9743482-b820-4972-a37f-cc6abf9231b1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "080bafb2-1cc6-4edc-8f86-e5b97b4f11b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f6eca8-8631-4287-b7ef-79e5449b61de",
        "cursor": {
          "ref": "2b8262bc-04ec-4058-9111-300f62631ccb",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "548ca9ce-31e5-49b5-91ce-7fda08807b69"
        },
        "item": {
          "id": "32f6eca8-8631-4287-b7ef-79e5449b61de",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "85a896af-88aa-4f9e-97cb-682cae635dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879f4a6a-993a-46ff-ac53-7ac45cc1453b",
        "cursor": {
          "ref": "b6189b20-ae52-4c1f-a0d0-24b60bf56a45",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "895204ff-fd57-4f56-94de-8a661ba2c129"
        },
        "item": {
          "id": "879f4a6a-993a-46ff-ac53-7ac45cc1453b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "24491b1d-d13f-4d4a-ac09-0cc28cd16f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0f9ece-d2e3-4150-85f6-f47147901860",
        "cursor": {
          "ref": "1ce3d039-4c33-4331-b24f-fb35f70c70ea",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f147e344-84b0-4a9b-bf87-6e17740de6d7"
        },
        "item": {
          "id": "ad0f9ece-d2e3-4150-85f6-f47147901860",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1c71a518-b3ac-46e9-b5c6-f8d11076b14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579cea4b-02c0-475c-a3ef-21d50b1088ad",
        "cursor": {
          "ref": "70079079-ff1d-47cf-a068-41d97b1782c4",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e0c7954e-818a-4552-9d06-132aedc8576a"
        },
        "item": {
          "id": "579cea4b-02c0-475c-a3ef-21d50b1088ad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "142e889a-0b8c-47d7-a938-c568e2753f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e445c2-68e8-48b9-9dd0-35f2bfa65f19",
        "cursor": {
          "ref": "336c96fa-f4c9-4605-abe3-e0e1d4ae5e38",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5330d38e-e191-4b20-9e65-17d87f8c0b2f"
        },
        "item": {
          "id": "62e445c2-68e8-48b9-9dd0-35f2bfa65f19",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a6eb6baf-1ce1-4b85-a3d3-debd50d02634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89293595-9571-4f9e-b1d5-d88dc8c95b6c",
        "cursor": {
          "ref": "8f4f9f70-cee0-41ca-a7d4-e5a93aa39d61",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9d56418c-597c-43b0-b9bd-3861d980af38"
        },
        "item": {
          "id": "89293595-9571-4f9e-b1d5-d88dc8c95b6c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6d413396-02a3-44b7-baff-e3f7f3d9edb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e137e882-f178-4ea4-b651-5f8613344a6e",
        "cursor": {
          "ref": "d802f860-4e42-411f-b81b-0df5cd743d9e",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f7484eb8-e32d-40ab-866a-8c0add192363"
        },
        "item": {
          "id": "e137e882-f178-4ea4-b651-5f8613344a6e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4dca1840-a5bc-461f-8cd9-7f3c0be3f996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f246bd-5b78-4eb5-83f0-ca1b92a75bf1",
        "cursor": {
          "ref": "c5766dfb-f5d2-48b2-894c-092f9faa16bf",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "68cc0478-0de9-4610-b6b0-f70577970f46"
        },
        "item": {
          "id": "c3f246bd-5b78-4eb5-83f0-ca1b92a75bf1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aec7930e-5357-40cb-99e7-3d8ae74617dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba7892c-de2f-4818-aadc-bf34e7fe3430",
        "cursor": {
          "ref": "d3c6b497-6d66-44b2-9951-e94daea4208d",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a9329042-f0ce-456b-a3ab-234e82cd0b52"
        },
        "item": {
          "id": "8ba7892c-de2f-4818-aadc-bf34e7fe3430",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cbf8ad97-0b43-4cc5-abc3-c43b075f6aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec47522-c968-4349-86c7-94544da3f12b",
        "cursor": {
          "ref": "23d585c9-0aaf-4d49-8754-39087f90c389",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "27256017-2383-4a9a-8af7-79ff087349fa"
        },
        "item": {
          "id": "7ec47522-c968-4349-86c7-94544da3f12b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "79dff97e-a2ad-4760-bdaa-06c4a1a22be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d93dce-9c34-4f05-8632-4e73d19510bc",
        "cursor": {
          "ref": "008147e9-3c0a-4536-be9a-cc552e26346a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ea29e615-b478-4ccf-8df6-fbe841c7d86a"
        },
        "item": {
          "id": "05d93dce-9c34-4f05-8632-4e73d19510bc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4719ea7e-7ab3-4e95-9a7c-1db86fbaf26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6c6bec-97a9-4a78-b507-9d36a51ce665",
        "cursor": {
          "ref": "5355bcec-fb62-4950-85fd-1ea6e2f47713",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "88929445-c80e-43a1-8b9f-c17acbac5357"
        },
        "item": {
          "id": "6a6c6bec-97a9-4a78-b507-9d36a51ce665",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fa39f5e6-f212-4146-8543-ff09328c2c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e6eeb9-c4cc-4b1c-913e-5d89f1a16551",
        "cursor": {
          "ref": "aa515b07-88ad-45b9-875b-fc816a47ae20",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f8deec02-8a3c-4b66-ac2a-6276f93005d3"
        },
        "item": {
          "id": "87e6eeb9-c4cc-4b1c-913e-5d89f1a16551",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dfe62c16-fb2e-46d6-99a2-5a022a244c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235206d7-6509-47cd-8f8b-a41b51ae08e4",
        "cursor": {
          "ref": "05990e0c-3f9b-4b69-ab47-82e8ffebe328",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2b290c0c-45de-4e69-be0a-c11a4ed2eab0"
        },
        "item": {
          "id": "235206d7-6509-47cd-8f8b-a41b51ae08e4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "77e8812d-4f3a-4523-a271-102f8151e88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ed9714-b449-4643-ad15-8ab7a875d3e8",
        "cursor": {
          "ref": "a3c7291c-62e8-4c7a-bfe0-c8dfe54c1ba5",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "043bd199-37f7-40f8-ba8b-aedb6f367b3b"
        },
        "item": {
          "id": "27ed9714-b449-4643-ad15-8ab7a875d3e8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "adf73a2a-d3d3-4c4b-8de7-13bbb5441941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731caf4d-bedc-4457-9af6-0faf46ca10ce",
        "cursor": {
          "ref": "b2134b19-de4f-430b-aa77-ef8c19e1b16c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a99d0d67-b9b8-4c72-abbb-5fcf9d21787f"
        },
        "item": {
          "id": "731caf4d-bedc-4457-9af6-0faf46ca10ce",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0d35ea50-930c-4937-99d7-4e5be4fc2fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526c6710-6d89-4133-9b4b-4bdc35088202",
        "cursor": {
          "ref": "e129d4ff-2734-4a3d-bc28-e3d942b05a2c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4b1196e1-a316-41b2-9f3e-a45bb2df9ecc"
        },
        "item": {
          "id": "526c6710-6d89-4133-9b4b-4bdc35088202",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e90debc-ac03-4a11-9840-14430b527c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e97d016-682d-4614-8422-109b95d35681",
        "cursor": {
          "ref": "f286e437-e670-496d-90a3-954c895123b3",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c8890827-04a6-4536-93c3-946c600c4269"
        },
        "item": {
          "id": "1e97d016-682d-4614-8422-109b95d35681",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "337548af-a040-43ce-aca0-7a4847d4e135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250e0730-ba3b-4b1f-ae6e-69d515f27ee0",
        "cursor": {
          "ref": "c664cb1b-323c-4d7d-9c43-d487cfa7e09c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "05d11c1b-d4c2-4cc1-a80b-c51796b31d10"
        },
        "item": {
          "id": "250e0730-ba3b-4b1f-ae6e-69d515f27ee0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c75da35b-137d-4b68-8f77-8c3d3fe54b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a72ddb-ab73-47ba-a3ea-cfa3531f0418",
        "cursor": {
          "ref": "4a617c7b-f55f-40a8-a3dd-b80840244380",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c17011d2-abff-4bb9-9a98-406b788784cf"
        },
        "item": {
          "id": "30a72ddb-ab73-47ba-a3ea-cfa3531f0418",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b04673ca-ac0d-4752-aa81-c262665289d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c2e1b6-f7f8-4107-801a-a7ba2c5ac59f",
        "cursor": {
          "ref": "bf39a16c-5126-4e3d-9294-fb4d5031cbfa",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eed28108-6ebf-4938-935c-bb75f2a72995"
        },
        "item": {
          "id": "93c2e1b6-f7f8-4107-801a-a7ba2c5ac59f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6de21cbb-0193-453f-97fe-8d601faf5dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5550cf21-54df-4fd3-96d4-068e6aef2f41",
        "cursor": {
          "ref": "af84e51f-b793-47b5-88f1-264e3035b48d",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "65328860-4f6d-4ed1-9e84-22388462fc00"
        },
        "item": {
          "id": "5550cf21-54df-4fd3-96d4-068e6aef2f41",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3dc046e5-8069-4049-aca7-a45cc390d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7adfb8-e99c-46c7-9acd-3ed4110de12e",
        "cursor": {
          "ref": "97d1596c-793f-4375-bb06-73118702c25c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "32b02839-9d8e-4437-aa38-98873dcdaebf"
        },
        "item": {
          "id": "9b7adfb8-e99c-46c7-9acd-3ed4110de12e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a09c1905-d20b-4e4f-b9bc-8f0b670efb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622b1c33-020d-4fb9-8609-0203e4c2b4a7",
        "cursor": {
          "ref": "d13b0837-d25e-4ddb-bb83-62a393c1ff03",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "767d231d-a89e-4748-9945-5c8a3fdd70fc"
        },
        "item": {
          "id": "622b1c33-020d-4fb9-8609-0203e4c2b4a7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "73377f0f-3afc-4d5a-ab4b-7667b8d6b1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f20f88-448c-4945-af2e-243399bdbf0f",
        "cursor": {
          "ref": "bce5944d-932a-48e5-a6e5-b477f99a0216",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "87f8f7ba-4c5c-4016-8165-140f703b5cff"
        },
        "item": {
          "id": "e5f20f88-448c-4945-af2e-243399bdbf0f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b89441d3-22e9-4543-8ff9-796cff5e46b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3b0e21-e0f7-4f03-ad45-9387e6d744cd",
        "cursor": {
          "ref": "bcb03bcc-9188-4d63-94dd-be00e780625a",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b1ded09c-6b3f-41ac-92ca-d9411231400d"
        },
        "item": {
          "id": "1a3b0e21-e0f7-4f03-ad45-9387e6d744cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "415a6cb9-1bed-4b43-a424-639c4beb8781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82226c7a-4300-42b9-9228-80f034a27a8e",
        "cursor": {
          "ref": "500d951e-8488-45eb-9074-41fbc54dbbd1",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "02beef49-f067-4773-88a9-b58c3ae13d86"
        },
        "item": {
          "id": "82226c7a-4300-42b9-9228-80f034a27a8e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d1e1fb3e-38db-4a4f-9da3-1ff4293fd41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69468d2d-5f1a-4a6c-9e27-5f1a4171bffc",
        "cursor": {
          "ref": "4f6cf10d-45cd-4515-8c21-31d1d285d43c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fa48c570-302b-4086-8e0d-6c515f4132fa"
        },
        "item": {
          "id": "69468d2d-5f1a-4a6c-9e27-5f1a4171bffc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e63e0fdc-d344-4c14-926d-27fb1cd0b4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf726940-80e2-4647-bb96-2f0236234a5e",
        "cursor": {
          "ref": "a5866116-110e-47eb-bf02-9870cbc51ccf",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d4f96a3e-3eac-4531-a1c3-0f25acfb5e74"
        },
        "item": {
          "id": "bf726940-80e2-4647-bb96-2f0236234a5e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f5bcc6b8-d9e5-439a-a925-96b5755c95ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2231d384-764f-47a3-9ab5-8824bb72ac96",
        "cursor": {
          "ref": "ccae6ee9-2c0c-4ec3-9579-ec9d8a065f71",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0f6456d1-7d9e-46a3-82f6-71f3fb87d7d3"
        },
        "item": {
          "id": "2231d384-764f-47a3-9ab5-8824bb72ac96",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "825763e5-5cbd-4f7a-930f-fe102b994b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47576369-7a25-49ea-b826-bdf4f90fd45d",
        "cursor": {
          "ref": "0cc4cfd0-b56f-4104-acd6-3b7187e2ccdf",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2be1942a-bcc3-4cf1-a755-951965ebbf61"
        },
        "item": {
          "id": "47576369-7a25-49ea-b826-bdf4f90fd45d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f713d29a-bb5d-4ff6-857f-2d499db22448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01de3a5-d8ba-4037-9c64-00f7b975f9a8",
        "cursor": {
          "ref": "1cd77823-1a51-4071-867f-37bddc5a0f42",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "35842012-6e06-4fdf-9cd3-88f617aa0eea"
        },
        "item": {
          "id": "a01de3a5-d8ba-4037-9c64-00f7b975f9a8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ce5a7b34-e100-4cf3-af7e-2b4ce99f7298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b90564-f6f0-4e5f-af7e-d97fedddaf14",
        "cursor": {
          "ref": "99c5c003-d425-49e0-a32d-916c5d1e2a62",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f5a2882d-19b0-43da-9c98-5a463c525b41"
        },
        "item": {
          "id": "03b90564-f6f0-4e5f-af7e-d97fedddaf14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bf0eaa76-2b28-4409-9508-e6553ae7b6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f80d6-c9d5-4512-a5ce-085bdc3f34e8",
        "cursor": {
          "ref": "54073e35-d513-4139-beb4-2675b4888d01",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3b12de2a-99d0-4ecf-9123-683ff5149868"
        },
        "item": {
          "id": "423f80d6-c9d5-4512-a5ce-085bdc3f34e8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e67cbcfc-f8df-4407-b9b5-706470952c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c370d35d-ac57-4d3a-9ebf-31cec4b48b4f",
        "cursor": {
          "ref": "0fe8fdff-21d3-4655-8fef-bcc19ff9da3a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5d61004-9a22-4565-bf6f-1d6a5c79d250"
        },
        "item": {
          "id": "c370d35d-ac57-4d3a-9ebf-31cec4b48b4f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b69eaa49-41f2-4919-8d49-9be0de513cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3869560b-417d-4fb0-bbf5-a3c0f07faa5c",
        "cursor": {
          "ref": "4dff8aa4-6bf3-4938-aca7-eeb95a245560",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "638c8cbe-a8e7-409e-a928-f3790f1042a0"
        },
        "item": {
          "id": "3869560b-417d-4fb0-bbf5-a3c0f07faa5c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bbb8b4d8-8c21-4260-bc4f-77a7d237ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26be7bf0-d2c7-4067-9584-81f3c0cb848b",
        "cursor": {
          "ref": "81da325b-879b-455e-8741-9e19305f7a3f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0d79c635-86b7-4786-a16b-a1184699d127"
        },
        "item": {
          "id": "26be7bf0-d2c7-4067-9584-81f3c0cb848b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "29e92b0d-c00c-4077-8663-6d81dbb1115c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec0b38-9ae2-493b-a5c4-c640259ac7b5",
        "cursor": {
          "ref": "9ce638ec-507c-480a-9a58-cbcd90a0eab7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ab595269-a7cf-4d96-9079-71c4370d4ff0"
        },
        "item": {
          "id": "baec0b38-9ae2-493b-a5c4-c640259ac7b5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c1246cf0-4e05-4f31-9ed6-376edb773d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1766c46-b0a2-4a35-ae33-be281520f485",
        "cursor": {
          "ref": "617b2339-2a91-4e44-ac93-3a3999a464b4",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "04517d62-f115-4630-aab4-193d6cf5ec48"
        },
        "item": {
          "id": "a1766c46-b0a2-4a35-ae33-be281520f485",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "974b88c4-f8da-4f6a-b468-419dc2d3a3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791ac055-7c03-40c9-8b3d-3c8f1cd82af5",
        "cursor": {
          "ref": "39c69203-1931-470e-8ad5-e36e3378b1b1",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9f86e229-3fb2-44b8-8a87-8a1feed44842"
        },
        "item": {
          "id": "791ac055-7c03-40c9-8b3d-3c8f1cd82af5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "acc5a65f-9782-4c12-85b3-154426566370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ddc4dd-b3d3-4416-b286-55ec86c33fb3",
        "cursor": {
          "ref": "1d9cfd54-79f0-417c-9e80-33d85ac427bb",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "89bcfe3f-d6fd-4ad6-99bc-c645bedfe457"
        },
        "item": {
          "id": "13ddc4dd-b3d3-4416-b286-55ec86c33fb3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fdcc4656-dbc7-4299-8e49-cd8579a34e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dbd98b-af47-4164-805a-a7bc53b078be",
        "cursor": {
          "ref": "bf1fd7b7-03a9-4099-bd30-7f6176ebf9dc",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ae59c610-7d54-474e-abb8-d32040a81998"
        },
        "item": {
          "id": "b1dbd98b-af47-4164-805a-a7bc53b078be",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ec909de2-4ccc-4502-b3cf-cca9a2a60c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048425b-6546-42af-a773-d677e46648cb",
        "cursor": {
          "ref": "8cd8ca80-e46c-42e1-85a2-8ccc1fbc9759",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4e1a11b-6fd1-4dbb-b560-57dd58d17ebb"
        },
        "item": {
          "id": "1048425b-6546-42af-a773-d677e46648cb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c6f52d8-8bbd-4dfe-b812-1ef096086bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d6ebf-ea22-4eb4-890e-86fd1a849c62",
        "cursor": {
          "ref": "35f20945-ee60-43bd-bd42-1b01ce4a1de8",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8d30e7c2-dc53-4e61-bd54-dd22aa99dc5e"
        },
        "item": {
          "id": "eb3d6ebf-ea22-4eb4-890e-86fd1a849c62",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "361a35f3-9588-4e14-b3a5-8abdf9398593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28c03a-11aa-45e6-a9f3-4c36de7dff93",
        "cursor": {
          "ref": "20fc361b-8c17-4d51-84e2-748a210436e4",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cf3c05a8-62cb-419f-b160-15a0840e4880"
        },
        "item": {
          "id": "ef28c03a-11aa-45e6-a9f3-4c36de7dff93",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f95e2d65-33b4-43ae-ab98-5f558a279768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910c94bd-70d3-46c6-af95-ecdf770a708b",
        "cursor": {
          "ref": "99f60e56-9ed6-461f-b698-3dbf31fd8012",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a55f780c-57e2-4357-a230-e3c95e6a876c"
        },
        "item": {
          "id": "910c94bd-70d3-46c6-af95-ecdf770a708b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "64b5d956-0c5c-4a5c-8621-f2f8768c21b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd28d3-0e2d-4c93-8f12-c8c29fc3e44e",
        "cursor": {
          "ref": "3f3f4a6d-14cf-4c0c-8e68-3e924868a0a2",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "865ab379-a4d1-4918-b036-965ff00bbb72"
        },
        "item": {
          "id": "40fd28d3-0e2d-4c93-8f12-c8c29fc3e44e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5d0e70ae-112c-45ed-91c4-f4513bb9dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a001d5-d0f8-4c01-950b-a4354d52bc03",
        "cursor": {
          "ref": "5726ab48-8dfa-4ac9-ad5e-5c227a8aca4d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a5aa2f60-0910-42b0-b5bf-226b9647edc0"
        },
        "item": {
          "id": "42a001d5-d0f8-4c01-950b-a4354d52bc03",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e4d14ede-d0aa-4730-9344-38a75b0aa383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58fdcfd-b96a-47e8-8bd5-de6fc65de2fa",
        "cursor": {
          "ref": "b8b16232-db26-41ac-b0ef-017874f7a83a",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e0fed3b7-e809-4833-8c65-b8066335d024"
        },
        "item": {
          "id": "f58fdcfd-b96a-47e8-8bd5-de6fc65de2fa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "56d7a520-4e12-479d-8a74-699668abcfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc8603c-82af-426f-9e9d-346e434ca75c",
        "cursor": {
          "ref": "05c47491-a067-419e-9237-fa3869726fd6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3c8c2b3d-472e-4d26-aa76-472e75f39dfd"
        },
        "item": {
          "id": "5fc8603c-82af-426f-9e9d-346e434ca75c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d5ec1aa2-da1e-43c8-a8b3-33915dfc56fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d27bbe-7f3c-4230-b4e4-28092b0ad4bd",
        "cursor": {
          "ref": "44536d8d-6b22-4984-bc44-1cae5aa6011d",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f669a591-19d5-48aa-91cd-fc2cff6072d9"
        },
        "item": {
          "id": "d6d27bbe-7f3c-4230-b4e4-28092b0ad4bd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0b4d7717-0c18-43f5-b01e-692b0b5e6a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a697ce-d0e8-403f-b554-d87a2d3c1301",
        "cursor": {
          "ref": "96f8fe90-d473-4178-b4d9-2545972a4f12",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ebd5ed70-6fda-4199-927c-e22643271c19"
        },
        "item": {
          "id": "f7a697ce-d0e8-403f-b554-d87a2d3c1301",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0acb315a-7243-42fa-bb35-9de534b91cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a137bdc-f8f2-46fb-bcef-932a9cc45eb2",
        "cursor": {
          "ref": "6d40b007-8964-4e2e-90b4-1d2ff54bc34a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fd94a8d9-e12a-4cd4-8aa1-a132f8d3dc1c"
        },
        "item": {
          "id": "9a137bdc-f8f2-46fb-bcef-932a9cc45eb2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ca4680ae-bb7c-4966-af6c-b7ad4839b5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e396e48-8c75-4ebe-9c1a-7fdfb617734b",
        "cursor": {
          "ref": "913a5f38-8d9e-415c-8d04-46182a421012",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "627d5b43-1588-4fcb-a8d3-45cefd52021b"
        },
        "item": {
          "id": "1e396e48-8c75-4ebe-9c1a-7fdfb617734b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b710ddf-564f-42c7-a463-bad3a58c9e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f53bf3-621b-4016-8ebd-1027a70d58e0",
        "cursor": {
          "ref": "fea7ee10-d339-4f81-aba1-ca4d43fb64de",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6b59d08f-b502-49dd-b879-0c75d3cd6e03"
        },
        "item": {
          "id": "10f53bf3-621b-4016-8ebd-1027a70d58e0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "838e6604-b562-4ada-8c99-9111dd2c67f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e4e646-22d7-4cfc-bc23-c9c77d113d0b",
        "cursor": {
          "ref": "94c53675-7c31-4214-9565-be7252ba9445",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d6a5f18c-13a3-466a-bf38-c8a335716785"
        },
        "item": {
          "id": "02e4e646-22d7-4cfc-bc23-c9c77d113d0b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "603ca05c-438d-4183-b844-182ba8658d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f9efe3-6f7f-4d57-a6a9-18dd5679bcd2",
        "cursor": {
          "ref": "1c20cefe-43ae-45f0-86dc-ac2dc6a06e67",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "44859b7c-b9c1-4bf9-b7a0-d6d2e458bcb6"
        },
        "item": {
          "id": "f2f9efe3-6f7f-4d57-a6a9-18dd5679bcd2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8f5a3147-c600-42b4-ba4a-784adb19e3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733d809-7482-422a-a638-b9f1b0759f51",
        "cursor": {
          "ref": "58e92a51-49bc-48d2-9773-44df4a3d93bc",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d6960716-7578-4773-b9d3-079e8b6baa21"
        },
        "item": {
          "id": "7733d809-7482-422a-a638-b9f1b0759f51",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "489dfc8f-cb58-4cc1-89ce-f9114b5697c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a32681-965a-43c1-a01a-8b0d44b40a02",
        "cursor": {
          "ref": "51141283-0baf-495c-88db-523422446276",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c52aaecf-621e-49f5-a259-5cde0ee81ae0"
        },
        "item": {
          "id": "d2a32681-965a-43c1-a01a-8b0d44b40a02",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "06b73647-db58-42e4-83dc-c53f0118a7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6809f729-b032-4bc7-910c-dacf81803b63",
        "cursor": {
          "ref": "3f2c0f9b-1777-4578-a93e-7beb8ca7788e",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e187fcad-3a38-46da-b397-f3fac288116a"
        },
        "item": {
          "id": "6809f729-b032-4bc7-910c-dacf81803b63",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0bc2c99c-20ed-4e78-8072-a8e4dd0d6aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a9ca4-f6e3-4438-bd78-ac83269313e8",
        "cursor": {
          "ref": "2c83d36f-512f-47b1-90fe-3497ea02ce5e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "62bfacc2-e5cb-418f-9176-0d628c326725"
        },
        "item": {
          "id": "e96a9ca4-f6e3-4438-bd78-ac83269313e8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "90797766-97b5-40ff-ba66-84e29896727e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718c4b01-b0e0-40e3-9e37-827a40933c72",
        "cursor": {
          "ref": "2e28b071-4b23-456e-8a97-3df96399fc63",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c883022-4b0d-44e4-a83f-e2392df1d521"
        },
        "item": {
          "id": "718c4b01-b0e0-40e3-9e37-827a40933c72",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "225eba05-c4cb-4bbd-8a30-d798af87bafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14671c69-565b-4c4f-8f45-f8b1a837ab6e",
        "cursor": {
          "ref": "d775337a-fc56-4c58-8700-b3ac5b7875b6",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "05ed1488-f55d-4ce5-bef8-ea860ea96a44"
        },
        "item": {
          "id": "14671c69-565b-4c4f-8f45-f8b1a837ab6e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4d2a5099-6d09-4729-ae58-40b4c8f833cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2ebf31-b705-4ad7-b535-ce091ea957bf",
        "cursor": {
          "ref": "6db9ceff-3e76-4a1a-ac40-76d157a007f2",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3bcc2f5d-8fc9-4454-b188-25aca260f230"
        },
        "item": {
          "id": "fc2ebf31-b705-4ad7-b535-ce091ea957bf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "43cd25b4-0377-4aae-94c3-4bd418723ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6648cc88-f50f-47a1-a7c4-1ad3bbcf43d7",
        "cursor": {
          "ref": "97b9bca6-9ee6-482a-b48b-7f8ca39dbc6c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "448b588c-f298-46fd-8737-c5e29772c729"
        },
        "item": {
          "id": "6648cc88-f50f-47a1-a7c4-1ad3bbcf43d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7276cc5c-aa29-405c-832b-33e6b0469341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7495d14-2b47-40d6-bde3-227aa7b93a3f",
        "cursor": {
          "ref": "d84abd2d-944c-458e-b2e3-a162af5f250a",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4c631425-439b-4d70-85b2-476704789622"
        },
        "item": {
          "id": "c7495d14-2b47-40d6-bde3-227aa7b93a3f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c306fb2-8a44-4370-be47-d62cc941ca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b5f9e1-aad4-4b7f-a5bc-8428d2c5d982",
        "cursor": {
          "ref": "19763a37-9f29-4cc7-97d8-ab985e41641e",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d7860137-884b-44d5-8940-37fda03034e6"
        },
        "item": {
          "id": "d2b5f9e1-aad4-4b7f-a5bc-8428d2c5d982",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7316220c-292d-4fc2-bf43-0574929551e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3f0d37-ac69-4b78-a6a0-e7ce1c7eabc5",
        "cursor": {
          "ref": "0104edd4-c9b9-44bd-90e7-5b3b0e54ad97",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0d5bade3-e08f-42fb-acb3-de56a0a587a1"
        },
        "item": {
          "id": "8b3f0d37-ac69-4b78-a6a0-e7ce1c7eabc5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0b1d2d11-d940-4752-a63c-2096f3af35be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282abec9-70f2-4541-bbef-df87ece2e315",
        "cursor": {
          "ref": "c6999c93-5b5e-4c83-bbd0-99f1f3e2cfa0",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a9971ca3-28cf-43e3-8e8c-5ab4fa8aeb51"
        },
        "item": {
          "id": "282abec9-70f2-4541-bbef-df87ece2e315",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b9da8239-65bb-4713-bee5-032bafe465de",
          "status": "OK",
          "code": 200,
          "responseTime": 539,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5fbc30-ced8-42a6-968c-c6bf85761f92",
        "cursor": {
          "ref": "7cc2de97-aca4-495a-8c7f-4f202e88326a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "839b4691-1e58-486c-80a7-deeb802686ee"
        },
        "item": {
          "id": "5b5fbc30-ced8-42a6-968c-c6bf85761f92",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4d5802de-8d0c-4063-ae50-0eeb5bd1542b",
          "status": "OK",
          "code": 200,
          "responseTime": 1708,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4d9d5a-f9b0-4b97-b4e2-468475330ca9",
        "cursor": {
          "ref": "44d2e935-90ad-4e91-97be-72b321af3007",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "da1ce224-d63b-460e-ba30-a40b168fc7d8"
        },
        "item": {
          "id": "af4d9d5a-f9b0-4b97-b4e2-468475330ca9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "153b564b-893c-4067-88c2-76f44971e5f2",
          "status": "OK",
          "code": 200,
          "responseTime": 1462,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
        "cursor": {
          "ref": "6571e11d-af93-48c6-af88-84d379662dea",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a0122e62-d432-404e-af1f-335afb09d599"
        },
        "item": {
          "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a67b3ba-af88-4ecd-8fc3-02fe6a149531",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
        "cursor": {
          "ref": "6571e11d-af93-48c6-af88-84d379662dea",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a0122e62-d432-404e-af1f-335afb09d599"
        },
        "item": {
          "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a67b3ba-af88-4ecd-8fc3-02fe6a149531",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
        "cursor": {
          "ref": "6571e11d-af93-48c6-af88-84d379662dea",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a0122e62-d432-404e-af1f-335afb09d599"
        },
        "item": {
          "id": "b9b9a711-8b37-4ef0-aad3-4d5235eaee32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a67b3ba-af88-4ecd-8fc3-02fe6a149531",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b2b850-4bd5-484b-b95c-54d54e07e87f",
        "cursor": {
          "ref": "b4e749b8-4203-4ad9-9db3-2e8b10a1ff9f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9d612f16-0301-4d12-baa7-73d02a165b99"
        },
        "item": {
          "id": "b0b2b850-4bd5-484b-b95c-54d54e07e87f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "bce458e1-ec99-4be7-8389-7fecda8b8cda",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 473,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c602a5ea-3b24-4355-9ceb-94a137e92f1e",
        "cursor": {
          "ref": "8409705b-6aec-4e63-9917-48c6994719af",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5a297844-d6a2-478b-b222-ab2b66680bd8"
        },
        "item": {
          "id": "c602a5ea-3b24-4355-9ceb-94a137e92f1e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "22784cee-5a71-4623-aa0a-caeca050b2dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c602a5ea-3b24-4355-9ceb-94a137e92f1e",
        "cursor": {
          "ref": "8409705b-6aec-4e63-9917-48c6994719af",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5a297844-d6a2-478b-b222-ab2b66680bd8"
        },
        "item": {
          "id": "c602a5ea-3b24-4355-9ceb-94a137e92f1e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "22784cee-5a71-4623-aa0a-caeca050b2dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2be55d3-ef49-4396-ba42-81e298d29bda",
        "cursor": {
          "ref": "ac412edd-75af-43d7-94b3-0cfdfc306489",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "20fe9d86-fafc-4f89-aeab-0ff51a3418f7"
        },
        "item": {
          "id": "e2be55d3-ef49-4396-ba42-81e298d29bda",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a4b2f482-094c-43b5-8f1f-5f1ee1d57575",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 698,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a30fa5-87c5-4041-9cb6-236e286706c4",
        "cursor": {
          "ref": "53b78e87-9311-4a3b-a2fa-2d60fd61c6e0",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0d5af44e-f2a1-4c5d-b6a5-6a3a3d9c5ad4"
        },
        "item": {
          "id": "76a30fa5-87c5-4041-9cb6-236e286706c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1a9940e-6c02-4d54-b99d-b9428ead3a60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a30fa5-87c5-4041-9cb6-236e286706c4",
        "cursor": {
          "ref": "53b78e87-9311-4a3b-a2fa-2d60fd61c6e0",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0d5af44e-f2a1-4c5d-b6a5-6a3a3d9c5ad4"
        },
        "item": {
          "id": "76a30fa5-87c5-4041-9cb6-236e286706c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1a9940e-6c02-4d54-b99d-b9428ead3a60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abe68f5-230d-40fc-b271-cae13e17e2e3",
        "cursor": {
          "ref": "61c28bd0-6d07-4823-bb20-90a62f2614e8",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c928a8ee-6fc6-4f05-9750-c6f74013cb4b"
        },
        "item": {
          "id": "0abe68f5-230d-40fc-b271-cae13e17e2e3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c889bae8-c927-43e6-b98c-f6cab3404f81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 697,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}