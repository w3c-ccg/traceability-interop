{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "284c4576-7f5e-4fbd-abce-8834c969067b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "449b1c58-32ca-49fa-afbe-3235ea490f6f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71852fb5-85e5-40fd-a829-30217392eb16",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25e81ed9-b905-4e65-a154-72a0818239bc"
                }
              }
            ]
          },
          {
            "id": "5d84b59b-788e-47d2-ae4b-c0d56bbd2183",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "776bec01-e9a6-4c8e-bdaf-7f816d668fca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23761d87-cd05-4f70-bd7d-f67d4d22594c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fec79bb2-414a-4037-9801-813e866e9f66",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70e2eb68-f2db-4ceb-ba0b-c2e571fe82d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1fb8305f-ea7a-41b4-9815-1a41f504edb6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c201005-04b7-4571-a11b-a30de6e3b756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4098564-da98-4605-ae01-9d1f4962bb62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bad8d900-c143-4774-8fac-75580ac2f241",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52c2137c-d58b-4a0a-84ab-d35240ad3e71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26e08486-8fd8-4761-956d-312aea255cac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53eabbc7-b967-4361-b448-a9c3d8324938"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51b5a0ef-2020-4ff5-b35d-f7ea247f59b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1215b2f9-76d2-4d23-91de-dc0985d5148a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62d6fea7-12db-40d5-b473-007969dc4468",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ddf496f-a620-46d4-83dd-51d157e647b0"
            }
          }
        ]
      },
      {
        "id": "bf9a9e27-0241-4cfd-96df-0686c9c13525",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c95843a1-6674-49ee-9b36-ec212a1f9813",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b19469d-64dc-4311-866b-7cbaa3191a69",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "37ef3a5d-1b63-4ff4-a222-e328f3db5f15",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6d69e3-ba78-4a29-ba18-c7c5f2fb78cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4472d8e0-bf4a-48fd-a44a-a710fe25a112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f275bf1-8646-497a-8e7b-4af2b0718e44",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc71715e-1678-4b77-91ba-831c6b66f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47d0d2bb-4563-4d4b-b6cb-c23bd88bd908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbaff6d-f328-41a3-9d46-330bce7fedb4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe318ef5-6622-4521-86e5-0bad91e7b7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6b23030-cd05-4219-a97b-f89d7dc5e645"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3ec7359-3ccf-4ff0-a5d9-0e7d3c9bf1c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd4eccf8-46c9-4657-a878-3561c833221d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2467c22f-0192-4bd5-a079-350c1f4c4b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "631cbeea-7768-4df6-ad89-9545479cb527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b028ef46-e9d4-40a4-9ae7-63bf64c164c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd2c32c-0816-43df-b767-83b03f528936"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5576b9d8-ef8f-4dda-834d-5044fccbb7b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83fb8805-0c38-4b59-9745-dfc54d01ea13",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "608a81c2-3126-4f68-a373-711cbd539ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9f269c62-984c-4f52-bfa0-e6a3a8b3c478"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec00bf44-facf-4874-886a-507deb59e24c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "84e34ba2-1ef6-41a0-8eb8-6ca524f79051"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a9d9bf4-1ab5-4458-b797-25947e97d152",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47513912-7b3c-47c4-a792-cc27ccf7bc86"
            }
          }
        ]
      },
      {
        "id": "95573c5c-1bfe-4100-b0e2-ca99cd8ea0df",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2681118b-a472-4f49-833f-571e84bf3fe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9d381b4-9dae-4e16-8026-824a305ed6e2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "58ca3644-b23e-4720-9215-bef735fdcf45",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed0ea70-3ba5-467d-93da-bb49e2cb52f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7857857f-579b-495a-a8e0-5716441dbe42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dda659-89f9-4ee4-b51d-9c0e8f94ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62fe7b85-86db-4a9d-84f2-07cac04c6f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3272a7f8-8c18-45c6-9e4d-fea64283e557",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68598853-992a-4454-aba9-0c86afc0f1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6abea9-77a3-46dc-8f91-f02740235833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0d1a6f-448a-4d95-ae79-db06aed9af96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd141e3c-3db2-4e8d-b1d4-8b464699a420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3877634b-f3e9-43aa-97bc-b025e6ad793d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a645ff63-6f0d-4d9e-b3c4-3ebed1258ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa42e78-3ab7-49bb-b215-f2ea002dbf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd7ffdb-6999-438d-b1ba-3dc4a1ef71cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4babf9af-b4a4-49c1-a257-9aa3096a497c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb1c966-be38-4b93-a840-33f02db35073",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cebf0c-8354-4d28-833c-bea7a83628cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7626ca4-b188-4987-9bea-eb8417c6a291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c403565-7f19-4e3d-a7a1-5758bc75c0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "988c94ab-fa8b-48e5-ae14-ac7d7c97bf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb842d7d-2a12-4936-a017-e21f134bac91",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034c9f8-203c-4077-b16c-c3f64a325373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4b33c8-0f24-46ef-afab-f47b75b10068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb00fae-80dd-4d7e-bf56-b0b313a31077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "529ed917-705f-4d23-a393-935f54bf28f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2af843c-644d-4759-8258-8e9240c779c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c768840-9c3a-486e-be96-b57b7c69da8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38964c67-cdea-4ca2-97e9-039c0bef75ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e72a2e-cdec-4f33-8e80-b96c9354a5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07c44114-d26d-4737-b8c2-7c0ec3be5f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5c2a57-c120-42ac-88c1-849dde9c8ae9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b378a98-1dff-4eb2-9bac-afba5bed7abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b34202-d384-4973-a75c-aae62fe9eb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c940f19-34d4-41d9-881f-697ee4683974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70a99832-5adf-453e-be5e-3d4520f3e2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23873e5-8277-4e5d-9887-9d574109bb05",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ba4792-158b-4321-9323-fa7f2e877a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39c5fa9-7634-4787-a034-c1381ff8ea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122ce349-e29e-434a-8dc1-2f17fd9c9807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "335d68c1-413f-4cc9-a486-b83056584f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0824a87-357e-4f04-bed8-bdf877b7dc59",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5385c4c1-3880-4eb1-9c7d-2a80ad8f9114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d733495-3ad4-4d1f-a2d5-1e17576fadd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce47e2fa-e3ed-4d4c-97bd-f4605c081614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68793f4e-f54f-4b01-941c-ac85d4bead42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf3d30a-baa4-429d-802d-beed29e29ca0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189257e4-dd8b-4476-b228-5a306eef1343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c426101-c9c7-4e77-832a-3ffa850d5886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630924a6-e9a4-4484-9565-052695016dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "840f265f-d24c-4b95-948d-e54a8257fcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a65718-42b6-42d1-90f8-21985d4e0f41",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54733e4-5ad9-43e7-93dc-c1b1163c82a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dd27f9-4843-4519-9224-5c72ab646647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0048c78-8650-4f42-8179-62b59cb31580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dc273de-9b01-4cb7-a089-2620a4f1fdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ed5fb-9a97-41d3-b87c-33ce882000ef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adb0e3d-5db2-429f-93dd-8419c72c90c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3614c8-9648-4062-8f94-42ba9f99b1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b943d8f3-6b04-4a84-94b1-3da5fbe8fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ebb8924-e019-4041-b872-2256b22d66ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e3a235-e6db-4340-912f-f0af39d64492",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee0e879-fc1e-4a1e-afb0-b23d902ef2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39471fa2-5de0-4356-b8fa-5491ed7e0ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a52828-551b-4891-accd-3c09ae2d9ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02331d9e-3283-4e93-a875-95dc44274c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3a9b07-ca29-4da9-92f3-c08aa4d0337f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44df5557-3216-46c6-99ee-79ab980f852c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f37b6d-f943-4578-8b5e-d41e65080933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0654bdf-66be-467e-921b-39405a806dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe4f338-8a67-4882-8765-c96392af6c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4833bc-913b-4fd7-894a-b4d5d5c6642b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31b9afe-6ce8-45dd-b1a4-226ca03eef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4970bf4-08b4-4556-afa4-3bb02a8787ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b1ef62-af81-4cef-ac64-17cc91f99d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5925d6e3-e856-46c5-b0f0-be6f0e6f5b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4add10a-5a79-4a36-9c49-c05d5da15572",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb63328-58eb-483a-a2bd-66db7ca2e519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343939b8-e59c-4cd9-b4b1-a673f053e858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe19fc42-148d-40fb-b881-f84c4d76a724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc56b86b-1995-4a17-963f-204a0517754d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f632faa1-aec7-435c-a8bd-559153b8bd33",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdfbd25-6eb8-4d2b-997d-b295ae0be11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d2708d-eb14-4fe7-a6d5-7c9002ae76f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8173fc-f975-4b87-bc19-3bfea2896275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "683d2180-db8c-43e0-86af-1f5f63e175bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86378643-d9aa-4f12-bc62-9435ff1c49c2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0c109c-23af-421a-ad0e-b21e352e37e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aadf169-7a8f-4159-8b40-d8d4f5ebf27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15f227c-f10d-4195-a8de-c14000dad1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a894bb5-6dfe-46c9-bb39-ecee4514b45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd46fdb-4f63-41da-846f-6dfa638567f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e978ec79-3205-4e74-9eb8-f1800df9d8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4412eeff-6c44-4970-93ab-693b30133bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2536a3-51ae-4cf9-a43f-516f371d5eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea37845f-3232-4c18-ab75-40879628a939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c89d45-7aa4-4a8e-bdfb-c8cd0f72e704",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438aa5dc-594d-4861-a25d-05f852b27ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28981de9-bfed-41b5-a067-8ecc58a01e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eae2835-3f23-4ff5-883a-09e28658ee75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "126adbc2-2642-4cf0-98ab-af3b82634a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f72279-0766-4f98-b9c6-5c435891974e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b315f96-8cd4-442f-99dd-bfe5b213e81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56503a6-9448-4a7b-b1db-c12a945bd71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e27b653-1a0a-4fe2-ae5a-777088b20beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eac14652-a5bf-4d4d-aefb-e3f0f9d30003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9f7135-abed-47e0-8550-c70c9b1a0287",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a94814f-e570-4cce-94bf-036e60eac539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0d73ac-9ef3-4136-b220-bd753cc9f124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e6d3e-05cb-4749-8f0c-5a2c5a738a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "232bfe40-57fd-4618-8427-83507abf8778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18712dca-139d-46cb-853e-bb61dc13eecb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96996013-5392-4297-928a-5262596f2f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd481bcb-01d4-4703-936e-0f0e29f99b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38ed7c4-5c45-4111-b439-4ec9680ca310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad406a08-81cb-439f-9113-a6b9a99d2980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8157cb13-05f9-45de-aba6-e8b893e45851",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa052ed6-d213-4e3d-960c-f601cfe2230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e606abcb-29cf-4e4b-9bee-fee564d83b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271b0761-f4fd-429d-a14f-8a2c493427bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c177ea0-fd66-4404-a544-c9b60edcddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8fa7b5-5b16-4112-96cd-713ff79cfcaf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f4782a-15af-4328-a3c7-6ce952cb0155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde073a7-9e29-43d9-abab-d64971585729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710d17e-2ec1-4e79-90bc-a15237b9486f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9581188-f591-4c8d-84e8-831de201ad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a610a7-8943-434d-a41e-42e6b7e90cb9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41384aaa-5c0f-49f4-a34a-ee1dd09a1fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcabdbb3-5127-45df-bace-675c0e7a3c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adb3084-2ff6-477f-992a-b32e14395da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccce0e0-424d-4584-87df-12781025a822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dbfcab-f347-462f-9f23-e286b0db050d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a993c9-818b-4b78-b2ed-4deee36df598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df977cba-9bcb-44cd-8d49-cba801d36369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b41b890-fe72-4e01-ba91-b5047d0d9878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1dcfe4-6f20-4007-b349-6efc05af4878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b7823-2863-4ab8-be10-f9e9a199cda2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374dddc1-0df0-4ec0-bd10-0d9b78a3de0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8969a233-f53a-4cd6-a251-6562a810fdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3ec6af-a874-4417-a16a-a8689b2d1492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d054f801-155b-4bbf-a934-f0a7be139953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf18a87-f616-47cd-8034-72a5200aee67",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c22445-598a-4a4e-b2b5-afc987cbd932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f88593-ecc5-474a-ac21-d5adec949a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6d3e53-37a0-4eef-8597-2928c03c53c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5b2143-6edf-48d5-8e93-18f3035c20cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9409fa76-e633-4844-9fa4-023cfe17cc4e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253fb3f8-0808-4cf5-91c0-6a583b3e5300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10be5d6-c42d-4418-99c1-68bf30c32bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79600b53-0f7e-496d-8b6b-14143a571cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b47681-f789-46e9-a3e2-9936e66873fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d5db19-bb11-448f-9d5f-43622d637140",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d9de9e-6d14-4b35-ba55-dfd24e2f211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d00463-5c19-49f8-a4c5-df89a1940233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc16feb-da34-47f8-9e84-459afb00346e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6588929-b1c8-471c-b923-f09470415c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e941a289-d57e-496c-93e0-913a6a22eb3a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141fe224-2dc4-4e09-8f72-65849e5cde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75451c1-d4ae-4d21-afbe-675fb86c2116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d96936-eaf1-40a1-a96d-05deaf937860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "993d1f97-447a-48ef-941c-6129e4fd6c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc94e49-9aba-4c68-b71a-2800ea1d9fa0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29964ac-b7dc-4445-a280-df318b1f164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73896615-0e73-4288-920d-f74ab61a834a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fb16bd-6690-41ad-adfc-a10580044c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "672aba48-849e-43d1-beb0-7dc7f204fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df96a70-3b37-4d85-8c2a-f490078829e6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0e9809-5a90-49c9-8da2-4ab59664f74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b043ac31-d4ff-4d62-8b99-00673f87d8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f355a7a5-c06d-49c4-8a78-228109beccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e5c36f-f41a-45f0-befe-28df9092906b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fd70e9-df89-4978-ad18-9a5806093e41",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bccb56-49a8-4ad2-b567-6db76d5730e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7acc19-5d36-421d-a4cb-443155ddad42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68789fb-e101-4b68-9455-ddb4b435cf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7b729ce3-61d8-481d-ad33-a02274007baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404d11d7-5cb9-43e2-bd2e-be347b40ced7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eaaeb2-9c17-40db-bd38-20609276f35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ae4ddad-47ba-44a4-98ee-a4b44892b2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bcd26c-7526-4fbe-b137-ce3568f7b331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ace3596-2278-4be8-a9b6-99d2b37604cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a283b-bb04-40db-8507-b87c77250df5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f33aa6-050e-446f-a296-b51d925e4f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66ea064-d92b-459e-b535-722743e8da87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769629f9-87a7-4e25-9a06-92b507bfce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6417dee3-7525-4d56-8e81-966198a33a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7331ee-cf99-45ed-a310-62b5083ed22d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65dc402-b76e-4bc8-8377-7475c14d37ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c57d87-7696-4fcc-9aec-43eeddb28b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b2d4fb-b0ab-414d-a527-17b98efcccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a12dd8cd-b853-4471-800d-1ed17f5caac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f29d22-f4f6-43f4-a4a1-b409d4980658",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe46bc6-54a0-4878-84a4-79569b32246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1353c6e3-00df-412b-8436-f4fd7ca5122e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b52ee4-13f7-4769-afbe-7250c6c0d8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e36ab83-64d5-4514-8b89-0fe689ffcc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1e6269-e588-48bd-9083-747cbbed85dc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973cb8e8-3b3e-494d-802b-5f9fd6769332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782f4dc8-3022-43d8-8431-e5002ee437e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a356cb-0208-4340-87cb-0c260f0a0556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ac25f4-e164-4a21-b472-6d5f3be6d0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12358fca-8b07-41f2-8789-bb6ff3ada3f6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc25965-b884-472b-b620-18946ebc3cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a36a8fe-4716-4fb3-a5d1-93a3f0f6b700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6204be6-68d3-4229-8642-0da61cb4cb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84812b63-ee14-4eda-943a-0286e8c14fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf43208a-4991-488a-8262-9453887c613b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1691138-8ab1-4b64-af57-0d7b1b57244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42259e06-f388-4e15-b0fc-c38a2a9d237e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a1d927-b8b6-40b3-81db-7b84dead1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e5ba18-ffb0-4379-a477-356c24777a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65ae06b-f6ba-47a2-a937-7e6677284fad",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d317f8-2b0e-45a2-9b08-18d0395065d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e410b95f-cef8-4238-88b3-21f048bc7d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837dfc5a-5655-4dc2-94ea-2c0b98f80aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fcc873-798a-40da-9be8-51ffcdddde2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9e3ba1-543b-4d30-ae7c-b87df1cda423",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3c87e0-c8c0-42cc-b22a-bb9c4467b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bd4cc3-bf58-4d12-afcc-b5e55df90c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde24f7f-80da-4a0c-8ba1-314cec17ca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aa6435-8262-4e5e-a01f-993da058183b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e20d55d-f328-4d23-a952-ae102dfca62a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313ed7b4-a66f-4c37-a511-a984bf457dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4406a31a-3d65-415e-a7dd-40eed046f712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb2cc0-f353-4d2a-b3de-86cd8252eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0000e9b9-dbbf-4c63-844c-0eb57408942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c798cce4-fdc2-4c1e-b618-604d8a6cddb4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd87bae1-fedd-4f6e-9709-443159d23790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfa58bf-08c0-440b-8c0f-30ee03d13489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30f9639-0126-4db3-9df9-b527a0e14f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d741e7-1dc2-4a72-9242-b0e65c3ca87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be40fd5e-efbf-4878-9bc8-c705e223228e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e1914-74ca-4542-8995-e741cb4d222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3a051b-0b0d-459f-a3f9-667fca10a2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96891b13-215b-4e0c-bf99-a723e0aee377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eff201e-ce3c-4997-944b-6de849176ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d813ab-34a1-4174-9a2d-195b291a4acc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cf797f-77fe-4d46-9b19-6aee8e1e0027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d8591e-6820-4d22-912c-7eb6f81acb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b12daa-3627-43be-891a-724e48d805ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f20701ec-7847-40d3-977b-d8cac7363c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5502ec-b2b1-4769-8477-25d037a683aa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b725e27-3c39-4f56-b9d4-e34ab93482bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3ac34c-f6d2-4feb-8786-0545927f5ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15af93e-8309-411e-b5d7-4c7e59e86d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8573c34-20a8-4c41-8458-bac3f4a35290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf45469-13d0-4c34-9b41-af5d1f7dcc52",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43fa9b9-c2f9-4ae1-9360-3a812879aaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b332613e-8f5b-4878-b0a0-ca666d49c4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f074426c-53e8-4ee5-abbb-ebe779e7f89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41048959-0185-428a-94f9-dabf9c006b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b056eb-3513-4b65-be7e-25fdf8e28b09",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31271c34-166f-429c-99ad-4178033d5d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d98c06d-93dc-4ee2-b271-0b999ec5e89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f687a-d5ec-4b8b-9fce-1546dfbb4ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bad811c-497e-490e-98c5-566d763ac75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa07abf0-4ebc-4df5-a1ce-19759fef09ff",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a6ed5-db47-49bc-9dba-693e35b3c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412fd9a7-e3f7-4cbe-8f14-7966cec994ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4115df8-70b5-4f3e-8a8b-71bdbfbc2c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19700bbf-f362-4923-b0e0-6e8d2188f31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e9ab30-83c4-4c7e-a317-3fbdfa83e063",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed2c308-e7d9-457d-b7ae-ff5dcc568460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72f38e3-70dd-49c5-aef3-8dea521a7b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32aa8986-1f88-4670-a6a3-37001c4cc687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a931cf08-a777-4d29-826f-d1b6963322c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20fcd4-1ef3-48c5-8e27-c226b05e4220",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3693bf-4550-4cad-9af9-c9e121de0296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3beff3f-fee4-4ae6-b88a-213e1fae572f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498fa6be-fd9c-448f-8830-550fc7c98e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f3da83-5fb9-46c8-a686-1e357564663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7581c14-ecc7-44b8-bf35-c4e642b633d6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af87e272-a79d-47fb-b537-2b22a0b13ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57eae660-2b0e-4add-9c9c-19be1ed0ca57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0b1f5d-fe37-47f3-af99-33ede2892214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "700621f1-8600-45ad-a2b0-b39f2987a771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb008c5b-1c7f-4044-87a4-ac84ee93739c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbc326e-25d1-4144-b465-f9e0cf0cbf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948cfc77-6760-4101-bc5e-41c05f6e3302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddfa6e0-a3a1-4923-b33c-8a515076d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "57b26761-e554-44aa-8e3e-a1452a39296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7690b15-786a-4f1d-943c-87546de07ee7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97d45ca-a3df-4d42-93a7-6bf861dba3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a08d36-882f-4f89-8a89-1eb21635221e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42535ebb-a71a-4d05-b6cd-f59ba44f55b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c9e603-c494-4f75-b4a8-bc67e56b356f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a581ab3-a38e-418c-b69e-6dc22a07ed48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3e8404-8799-4f54-80d5-3210c160c282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8556749f-f5ca-45ca-9243-0a0ca0837a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84c4b61-fbbd-4aeb-9751-c92d51d4f400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0be880ee-5f00-4083-937a-f91373a8dac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943645f7-b497-420c-87c5-177f68ccf77d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaf0fc4-93ea-44c9-b87b-7556accaf8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aebfc1-682c-4b52-91d6-e891772d5a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f6f867-abdc-4b4c-ba65-5151f41b9a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc0a17f-b78f-4f58-95fb-a7c414a091d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e79ca50-5df0-4dd2-8300-2d630931444e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8714fb-43a9-4b18-87d6-ed6f73e685dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71db5c3-870c-40bb-9c4b-9d3cca0411e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816f51ee-e636-4d16-a381-861a8a745145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb6d0d3-4a0f-43b0-942a-2a0aa3e8e70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca907cb-cfe5-46f3-a47f-1d90ae023f37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37fcd0f-6991-409c-9bc5-995782556ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00022141-6bca-4a33-8444-2ae3634f1f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9738da-c9fc-4978-beae-9d8ffb7488c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a539b4-116e-46ab-8f67-909f0c379958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860927c7-3dc1-4467-bf2b-fa0c22e32d74",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3207d72-f898-4c93-82e7-cd59e5ba0134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d792547b-56d5-49b1-840c-fc4485191936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e9acc8-99fa-4ed0-90c4-390ba72f7130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "85958362-0cc5-40a9-80db-a1c69637d700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732ece97-26a3-4039-bce2-488ed6a2cade",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73658e4-0f83-4149-8410-32357b18b6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffe64b5-7d0a-4ded-b4d4-49c13b1cb083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8748ada9-fd13-4ca1-ae7c-eebbb0bf0b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f8feec-42bf-4061-9426-f88d0bdbdc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bf6e6e-eeeb-4379-9c19-38ebf7b865f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57e727a-f90d-4592-8942-cde228eb2268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a2963d-5b88-48dc-8cd3-5cd9d3633d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed243e8b-f3fe-47fa-bc1a-d9daf41926e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1555792d-38c5-42eb-a241-f363854121d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c9720c-278a-4ee4-bcfe-7820d3852eb2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dbfbb0-8766-4f92-8d02-44783db2f604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf0f3aa-d366-4956-8df3-2d468718564a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6084e741-ebe3-45b6-a168-7d431cb2f7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf90654-99cc-464f-b062-4679460eab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20057869-940b-4c5e-897b-eb352f754e8f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88c4706-04db-4dc9-b5a7-841b005313eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bdc308-ee06-4574-bcf6-bc038447488c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff2df9e-e1ce-42ff-b511-d189198a098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb088b3-2cac-4173-ba6a-3e0de3480583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4694d90-0da7-4907-a085-453da8d845a3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e4ec04-cb37-4c9a-9a53-358dad45e01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9b197f-f5a5-42c9-8cb4-02f46c6bfdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10226cec-6eaf-43ef-8e66-7ced0ece7a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f569c5b-0a14-4813-a015-a7f6ce8f9830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1e65a8-3542-4d03-9cc3-0d50df5db78d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1786b7-81a2-4252-807b-8f5f78ce996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83022d4-29f8-4107-948d-4f6d35d470ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646a0f99-f41d-4c29-b013-f3dafc2704f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "594793b1-faba-4f53-8f47-2f14c0c79e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7616cd4-4fec-457f-8065-1d02c15aaebc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8bf1f2-8b29-4ccc-a42b-8a9ac6854714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40a4dd1-f40b-442b-ac3a-586ca1e9f64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5000a4-7c35-4c17-959f-57cbf386ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed9de38-3909-4bce-af41-861c49a79eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6282a8a6-70fa-4539-9164-5086a2c45829",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf4a84e-21f7-48e3-bcc6-35fa49923499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a55b87-fa6b-4367-91c5-3acef1376019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7959258-2f65-4605-bad8-522cb0da8196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9047ed6-1149-46bf-a57a-9aae6a0d11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc519856-44d5-4e65-92c3-44952133ab6d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f381a7f5-8826-430e-8184-6388684be1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c42e21-6e32-45f9-a0a3-94e85577ca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55851a7e-6c96-446f-a263-a426215f2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "975896fc-fa2f-4efd-9301-b79e12737516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ec09b0-2520-4277-a8af-bb12a6f2b29a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6369271e-15be-415a-968a-562333bb9684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432b37d7-3e6a-40c0-b17c-78021d2b1966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2431e17f-6dc6-4501-ac80-a3f8d951ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ee3a9e-e381-4659-9694-b38805d9bcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c35fc1-c32e-4b39-8b0e-7620877841c4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90acef19-2cb6-4d0f-81c4-6ab2a9daaab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f91ece-7a8f-4ba0-8d2d-039c0298b425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19830d47-f73d-49fa-ae95-65dbe520b56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "973ca6f5-004c-409e-acd8-67615c41749f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4904c6a-01c6-4ac9-b3e7-1d9213aedf35",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a253a1-b0d8-45db-8782-5fb7944c609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae172fa-ce8e-4f9e-8aea-4df9846bd30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66e29a4-1c28-44b6-82eb-364e9b0321d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ada4a39b-37a8-4c37-ac62-617e87113b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0be47c9-001f-43c9-a485-d869fbe4b4e3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39415ee-53f5-474a-9c6d-b8d6a1b522b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7be0065-f906-4cfd-932a-76206f86fa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca61ceb-b02d-48f8-94c5-d543d1e19fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "072eedd3-3770-4eb8-947c-cda07bf39079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ddcbec-5563-4d9e-87b6-baec64d94f53",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f23027-c43f-4dac-b075-69ced7249d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1035cd50-533d-49b7-9411-cd283d5c8b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f90037-e94c-4f60-a75d-2a01ad6b48c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee8faad-afe9-4715-aa93-62150d45259f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98374dd-f3bd-44d4-ab25-1b065622ba62",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d51ea5-ee94-41f2-8939-185f8c83452c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42feb1af-d3bc-4983-a59c-2d9849fe05c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e78c64-ad97-4877-b35a-8e4892107ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbeea51-ecee-4b11-8ffe-df4b233a1de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e95ee2-5eeb-4aa7-9fb7-0e05c1bd5d21",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bdb389-b68b-451c-b906-f7ebd727af7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b5a6a2-e26d-4f96-837b-cf3b72de11e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2407161f-4f22-44b4-8531-9661983022a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abfd328-5ebe-4ccf-89cd-3b324b9f9b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f5848c-d3db-498d-8c96-a6f87c35e137",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b28da56-0fae-4502-8e49-23625f89e304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbb3f8f-3f8f-498c-afea-ee505e5f0c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cef7b7c-8e09-4d5e-9120-309654c93d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f96c434a-2f4c-4249-a465-1c5ae130669d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067da715-abbd-4d81-b2ff-3d1dea71db49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c84df67-44f0-4efd-8656-25dc6e3fba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905cb59a-dc44-4c74-a481-b76111ca8f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29bbf83-c5b5-46f1-9d9e-d5637ec076fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60c78a38-05fb-4103-bd5e-40d6833aacb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac5e42-2527-404a-b071-62be2c8213c8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd26f78f-b98c-46ad-91b4-50d2095a1ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e54033-33d6-43df-b83a-ccbb60580ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57272db9-7e24-456d-8af3-91666fbb83e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b40542-b0b0-4d66-82f8-b1a82cfb7bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677bf0e7-5240-4a0c-a2c3-eb6067e9adb6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e538a6fa-09b5-44dd-959d-03e3285175e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769be97a-ff2f-45ce-889b-2bb847085eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9ef695-3c1a-4f01-bf12-4d8bfd0c4d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd902ab5-b392-43f7-9e5d-1a8f498bb216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be823eab-38d5-418f-bb13-d56eff3baeaf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0facef70-e946-4058-9dcc-a6d31fd85151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452cb4be-13cb-43b2-b353-d33ef5b5c3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54edaae5-2fc7-426f-a77c-d0fa642b317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e02563f-bbb5-42be-a5e6-28e3e5b95f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8177c922-3351-4a0c-9e67-059f3a459bb3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c32fe93-2f80-4ca8-b192-94ca98e5eac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66c2f53-9f28-47fe-9132-a41d34104701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f03523-dfe3-46c0-a507-3e883c40cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "decfb21b-26bb-4d9e-ae37-9dd1c5d5fbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162be60e-b348-4422-b9f3-c8fa1ae9937b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396d5036-7da1-4fe9-ace1-c0540b627238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce7417c-9245-4f8c-bccf-2b47bc1670e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194e1b5a-2808-41cb-9646-02033dc73af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4283f59d-2c8b-4157-ab32-4ec62c22ad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07350668-f5c9-465f-9f0e-a00bedcd66fd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f808220-cb7f-437a-8fe9-95faa4e627e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a243e326-0bca-4aba-a17e-bae9d9e4e5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce2818d-e387-4965-9cfe-a8356cac9c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4590ac85-91c8-4989-87d5-a27794b77587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e39e0d-568a-4cda-80c7-e0cc3597fcde",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55243f50-0dc3-4b3c-9fd6-a55173cd3d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f7ab5-d4c3-4a36-be15-375276892628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10c8991-5d83-4595-8f71-0d73e7d2175b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e949ea-4bbc-4053-9a0d-e10cd5c47d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a96975-4e3a-44c1-8421-d0c9a18ff495",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b327476-de76-48d1-9d52-10eca507b22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0392693-d06b-40fd-b1ed-62e1c980f181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49b46c5-6291-4cd2-bd25-d8e463c0af36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff9767a-ee62-4802-bed8-f63978eec1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ce903e-ad83-4b93-a9cd-b269ded854ab",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5d9c1e-3a04-441b-b3b2-6b38fe37b66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95c7a33-602f-450f-906e-6bde6a78788c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c59dc0-bbc0-4f1a-9a29-d5ec1de4207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdec131-4403-44f7-a5c5-5eefbd48be49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8932a238-58ba-4ba9-83a8-4445503d1502",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2f2daa-da43-4ba3-8396-bea256f416f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991a6cd6-a2e3-4011-8440-e76489d36a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb607444-6324-461b-a9f6-3806e161cda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22dfc8c5-946a-40ce-aaa0-0a4c208983c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2b49ec-001e-4116-a706-c061a01c8ca5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70492a8-3e91-4dbe-aeb5-15d361d7a3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3405808-e8db-410e-a764-55e883ad4ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd4d32-08c8-46cf-96e5-8ce0fd796b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a18a1829-da43-4470-94ca-0e1725dc3d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d42760-9a69-4533-8fae-c010f1cb0972",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c68f84c-f827-4a7d-9c44-4b0384bee5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b36d9a4-31f3-43ba-9617-195767177648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30db3c80-a3eb-479b-92fb-6d02e6a611c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a84e441-1730-4e6e-af22-93b8ea535f11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0543cf51-a862-44d4-94b0-1715c06e6028",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0036f81-b8b1-4d04-95b8-17993e03b7b4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c13a9e8-b206-41d8-876f-09d102bc0900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aca1f7e-b40f-42c8-9933-a010fbc1e513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ed6ff2-4fdc-41dc-b828-8317ec1cc655",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4e76f86-fb76-49c6-a026-3f30ff02b0f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59c753e9-ddf5-488e-ba5e-4111600d9036",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5289d255-fd19-4ba3-8c01-3b4008e47f9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7280f601-6320-4416-a8cf-9dbd6e53956c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58a05e40-8a2a-4670-81ac-70e7d7305e46"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e62dd012-b50f-4c73-9eee-56085b672bb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e169e3e6-8b67-4889-926a-b6220a93f5e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4dff01b-b7b6-44cc-9e43-4fa9fa8331e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13f93842-f534-43c2-a05a-4645338463cd"
                }
              }
            ]
          },
          {
            "id": "82d54edf-c64e-4c4a-9312-194cd1fba122",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05e27a0e-c923-47fe-90ac-426c9c4f4adb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0c3ae2a6-06ac-4482-8d0f-63ace1014669",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb10041f-aa12-41fe-b5df-bc170e319733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "759dc042-a508-4dc0-9aa2-8dceb4201532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8807336f-63f5-473d-a2ab-826675f01dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3eaea2-4c93-4ed4-901f-ac8db75a5ba4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6aabe564-5f26-403a-b8a8-afb58f7f6b46",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceb1ccee-6211-4035-a48c-6363675327a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0301b68-aac2-43c6-9969-1795d08ce001"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f6e6dab-1e03-40dd-b784-344d4f78d2ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d77e1b4-bede-41f3-b931-83c788436ad1"
                    }
                  }
                ]
              },
              {
                "id": "3fb2eeea-244c-409a-a522-4f592472e0f5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f756527-945e-4a6a-bfd6-0de20dd6f58c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9077c6aa-b537-44fd-8a03-c35d6fff2e8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a58f98a-85e5-44d7-a748-79d611347449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52c66fe0-6535-4f40-b728-c42326e65f66"
                    }
                  }
                ]
              },
              {
                "id": "12381c75-ed69-4fbe-8f91-d46cce38c346",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cab8c83-b37d-4d1b-af35-557ca60e70e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9317fce2-269a-4c56-a8b6-1480579be76a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "511b0689-13f9-44aa-973f-ab8e5fe98a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "515f8126-977d-47e9-8552-4fd4fc67a247"
                    }
                  }
                ]
              },
              {
                "id": "eaeebe07-99a9-48a0-881f-fe671a9565cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52649ce0-4a7f-4df8-9408-1826467e798a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b8d5018-ea39-4e76-bac9-cece1d982cbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b63bf063-8aa2-49d4-8f39-6d29486b7283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a12af1aa-63ad-429e-ad78-67ee85f63695"
                    }
                  }
                ]
              },
              {
                "id": "6d491ba0-170c-46d2-9722-2dde0036b519",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1db4eaf9-7725-4b2b-9bc8-3f23d9ef9cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b596bfab-ae80-4f56-bc1e-8ee99296054e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b969cb5c-77e6-46fc-806d-28ace48d2987",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b0f4baa7-224f-4361-b004-27e8ba5b23d2"
                    }
                  }
                ]
              },
              {
                "id": "209afad2-9448-4704-bb03-4ace53dbb0ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "846a4b53-db32-40bb-93cb-fa9b38568090",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb4a16ec-f2e0-473c-84bd-861d6edc347a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fabe80b-162b-4aca-8bdb-063a1552cb18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e7dd774-eee9-4b04-8d50-8b757d56b66f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4bc6086-7a9f-407f-b25d-fdceca1ebde0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "795ebba4-5570-48ac-ba5d-732b828cf472"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "db9088be-acb9-42d7-b057-6e946c5bb298",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c613485c-99a2-47f3-8cb1-468492cf55aa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbcc904c-0ba9-4b3b-8e4f-9bc69cfd3cd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b1bc31ed-c48d-473b-ba73-6afb1f5964be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c623b9de-b523-4f5c-aea5-4639b25329fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7d4c039-339a-4c9b-b5db-4e2c7453a8cc"
            }
          }
        ]
      },
      {
        "id": "adc9fe26-043c-452c-9c98-1bef233929c6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "62cce773-4eb6-44ec-ae35-6b6c88e4349e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4774160-bba2-4136-9d9b-1b21d217f882",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5b10335-08a3-46ec-b207-e6add19eb5e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4af8105-3eb7-4af4-9bda-a683874826bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e048cc-d389-4960-a753-8d79900654fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9747f3-9394-4242-9ab2-49083bab43db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0fb432-5c34-4e44-b7df-315e594e3544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe50a80-6eaf-4773-b9a3-03a0dcd1fe18",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd10c0a-4e9a-4fec-bbc5-7323a8123e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b81286d-10b2-49a2-ab63-339d33599d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9956af4-ea25-42d7-8439-6bafe5166964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3215cc-da11-4270-ae13-531a46bd9fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46249c2b-d910-413c-b5b5-ff8af2c50c4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb67f95-05b1-42a0-8f3d-ee537644157d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d583bff-ece8-4841-9027-c4e209cdeef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56912125-4e00-494f-b8de-61252ab52d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "794334a7-5843-44a6-b826-f994a540e6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c642a6-9c05-4337-b8b4-be469d739f23",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18f4d28-b36b-45c1-9a9c-ec3227104270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1ad6ad-93d3-49ba-a527-52906b78ebd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5ae8a7-7c5e-48c9-ac89-e08b94c6d195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "543d8f67-3d94-46fb-95bb-5b3d195b4d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d625f-3a49-416e-acd0-ee574096c97a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853e3423-2722-4187-9c2b-72683de705e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9e6711-5c81-47c1-bbba-ce73146f21f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116790c5-de3b-4ca7-a37e-bb327bb36efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "265da744-59de-444a-a633-d2ae6dec5599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cc92e6-eba7-449a-9f71-70f12069fcd2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5932be-80d3-4406-802c-47a10f269261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48806c08-b15a-4c40-842f-4a88f4af40eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1899460-c674-4191-b098-3d58d4a2e9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d49799b-634e-4931-911a-190a8019feb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bb2934-afbc-474e-9dde-3dfb4df0c0a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44fd4c1-171a-4ceb-b6ce-c7d131642e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09844b5-883a-43ad-89e3-7049defe3a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65c79f9-9e5e-4fdf-8244-89f57082e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88181d19-4b38-4e66-b4a0-bf51b7f6be5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c737a8-7e53-4333-bb53-a2196fc3dd06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b4bc97-8e8e-42b8-b3d7-d9bbf816f86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ef3b01-9191-4be8-a266-73ef06668ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3193112a-e930-4e53-a68d-16640ad90bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a577b3-8b59-46d7-b08b-f0f337db81b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ce0bb-0dce-4d73-8988-14c231651315",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61386f9f-52a8-4197-88a8-76cb91bcc442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65924582-4354-46a4-8a50-106bad4ea546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a83284-8e8d-4aaa-aa84-46f4b6d373fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2703e34c-5e07-4f02-8ad9-667f61b11f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915efe7c-dae5-449f-b062-8c23242d0d5c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc163df-2481-43cd-89a0-b8630128b2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83bcc20-30dc-414d-95bb-1dc2c22c1243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db50fd0-d427-47ec-b11d-6810476ec2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa03f32-0f3d-4e54-b757-61258f13ad08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b75fe35-8603-4c27-b36f-da979dd4684a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94ada32-ee17-4885-8bc0-cdc44f3b0e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b7b057-32aa-4471-9b60-a23e10a6b7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fc3a31-b2e1-455b-bbf5-fa2e2e39f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "97185b1a-b09e-4e43-90b1-ea3c81e01373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7edb0e-80db-4f19-8f43-cf1577b281f6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d375a6fa-2e8f-4d20-8f50-d68b77b32272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94b3fe7-e8c5-4fa4-8a26-c08fb5fd1cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43be9f71-ee30-4ffb-87d1-713ba9097c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8518234-7f23-4c3a-8041-aa30150b5f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75206da7-0698-4d35-9294-1781fd94050a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98933b2-dc1e-4e95-9475-4cf177bc41de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc6a373-7ece-44d9-886a-9e7d3bb2c783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d88d6-f385-4e41-bd00-a11697b898ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7ca148-aad2-441e-8bd7-a4adeac249f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e83160-d8a2-41fc-815b-c037ba36c3ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd6e317-a7c7-4677-8189-81dabeec4b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a681858d-cc13-463b-ad29-6b1b8986ea24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7fad18-17d3-4763-875b-1871e5ef8fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6a08d7-9158-4c9c-8e1d-475c830128f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad73b97d-b646-4834-a897-ddbb0afbf4f2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b34622-2212-478a-afd6-e269efe01282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bafab72-e6bd-4152-aa8c-d615288f2e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec1c7df-8c75-4fe2-8930-6b841bd1ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eacbff40-7e0e-41a3-a4c8-4091133c14b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9991f380-48fd-492f-8573-8b982c507b5a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f20692-6f68-4e6f-b86a-cdf442d2b11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c53d29-caa4-4e93-b0c9-42dfd66f090a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f81693-bea0-46ed-a617-b56ca00df179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "24da2643-5462-40cc-8119-7e3093e1074e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b5d69d-1adc-47d7-afd1-f410673a325d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d9f57-8505-4db9-9c03-94cb2d7a5884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd3773b-efda-411d-a56e-87d88c1463c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71acdf4-a900-437d-8efb-74f66a725356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1d4625-e022-4f76-a092-89d54e88a1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fc539e-cf3a-4902-8b33-3319b9b4c12e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be06e779-c523-4022-8922-6d5fb14fbdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfc8033-501c-41fe-8735-0246f8c6f1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09468569-89d6-4dca-b03a-1ce4b377433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9804f2-0c7b-4e8d-8070-54f2a7531cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd940d70-da90-4c89-811a-bd83f6b12858",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1927ccc-3ce4-4721-95a3-492e09ae63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d83a3fb-fa33-4110-85b2-35a2cc6c7d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3b4428-7316-4fb1-bd3c-0ea77857b342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63cff2e3-7f81-41f7-9947-96be3caad28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651926b4-65b5-4d3c-83d4-e049c628645a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd3dd78-0a63-4972-916f-a1ae8ac8398e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5271141-3a6f-4fe7-91bc-c8294ddeb7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfed324-a8c5-448a-975b-3f7b0a1bc968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da282721-55c9-4a58-aad6-7a9d94fe0b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325d96bd-4e42-467f-baf4-9133c37ff22e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cca6bae-b975-40fd-ac8e-a72cfe32cccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332995b6-3778-4e54-a56d-0e9425fb25ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f578f5-9fd3-489a-b054-f72b33b84265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d62aa38-aa53-410c-9415-7d321cda514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed3b3a-a733-43b4-913d-e5379518c702",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb99f67-74a0-4b92-b201-ef376b0a041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b02984b-2395-4b70-a581-0b45e9ee27fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62868ec5-61d3-439d-afd9-e492632ab55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f36f48e-0d81-4215-9aad-84afbd93a5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930f49fe-543e-4097-beff-41b75fc614c9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed30e6f-67a6-4403-8a42-b809393860e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82aa47e-c079-4a3c-9477-ffafcea7ae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6d93a6-108f-45a5-8bf8-cc008efb50ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2c676a-e3ed-452b-bf99-fdb760c6e9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10c3747-51ef-4a39-8245-d55b67a935a7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cb382b-fef3-4be2-a707-58b6302db249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538599e5-e437-464d-bf75-c04467ff8547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b02be64-3a38-4514-a524-23a4aae15f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "946927e2-1caf-4ab4-b1a0-d3ed9adbd6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cab288c-007a-4174-aea7-0048c89c0713",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75afa5fa-3c69-44f8-b246-4ee5943c44d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392d17a6-1c9d-430a-b545-88d8eb210d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11c6367-f0b5-4f26-ba77-1e9cf5f84cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2f0697-a474-4aaa-b884-f193a74fcaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86191277-f2b6-49fe-8f78-730f18aa97ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa1e9a9-849d-48ab-82ff-f19e716ce3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e3ecd1-16b0-4d89-8183-198bfc2514ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d803922e-6374-482a-9a43-5112db5dfd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d502eb-19cc-4ad0-ae60-824e28ff27e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee748db3-8642-4244-aeb1-8e864bdda2f2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d60fc3-1939-4beb-b98c-1066e6019c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6e9d48-5e5f-4d02-b4bf-443df1e593a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a0d776-3d52-48d0-ac38-b8851ad4452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80e7683-7ff6-43be-8fa8-b395cdf326be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ef0cba-192b-4165-93ff-d8ca97644313",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f138e09-8584-40db-98e4-edec062d7973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9467ef-2c9d-487a-a2b6-dbce3f37df2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a844c7cd-9e47-463f-9147-b9453cfb9e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50281750-e7fa-44ae-af33-7fee780557c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82251d79-30ba-4b0e-ad2d-70a8f0c27e2a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0b1f3f-8c15-4092-8321-b813c9010270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b626d77e-8920-4973-9150-0b541f5855a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65802f83-5f7c-4a96-b9a0-cf78763edd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ed05d0-5dd2-49be-95d8-982f37299ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7cb686-a890-46c5-9219-63454ced52c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f442992b-fb7b-4cd1-8b7e-731233a3711d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c248d6-fd55-47ce-957a-499df8c5f1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c1d849-67e7-46bf-982d-772a922464ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f77e74b-6705-403f-8ca4-6790f18535a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950b3fa1-b84b-4516-8fe9-febf880a6586",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3586e8ef-b9ad-4868-b8d3-2c22fb38fc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8989495b-0342-4dfb-b5ea-199cd9105dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644d26c6-8cf2-4aba-86bb-e71308fcc188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5daee9ca-90f6-48e6-b2e8-911d9923bf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeafa48e-bb1a-4f95-9e2d-5680b5405251",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952bb617-a78a-40bd-8ac5-74ed405862c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c92f624-682f-4e4f-bae9-07d8f562b6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee3cca1-657e-4496-b86c-60b4bd61d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "623c9077-8d98-4433-b849-c7d8ed7bc3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ce111-d811-4024-87f4-674197075d3d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd87d9af-64ab-4652-b636-37ec0450c115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d6ce93-0a51-4857-8f5d-d1a4cbd4b55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c5816f-d5e5-45ab-9b1c-baefcdb70141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7517744e-236e-4179-8092-7b8b2d4df9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115fd777-6873-44f1-9c3b-cc87f2c8ab5b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85484305-9151-4c54-8170-8d0a9defebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f83299-ed11-4bee-b390-19707338cca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13eea3f-acc7-4b66-be9e-7ce3e46d56e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf63d5c-4e7b-45a1-8f5d-0699718dbdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f848e598-90c0-4a29-922d-f4f7f06bc15b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714de73e-7980-4490-b0c8-3353bb859b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d930bd-c55d-4fe0-b49e-64ff296494b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a38f3db-7821-4a31-8733-ebffeda76ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d6e310-a6c4-4a68-b576-277aa2b45e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5278849-0605-4f6b-8b8c-e8b77baf0e17",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac47e10-1e85-4f37-8f57-b3ec1bd87244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d597a0e-476c-4965-9518-c1c51d5fc80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb936a-4957-4f72-ab18-f08eebe61b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8274dad9-79db-4307-bf42-c31944120763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3118a7a7-efc2-481f-addc-87de8409810f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45103b88-7b01-4340-ac9f-6393a0837174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a249d7-cfad-4614-bab2-a4171b390e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7808c5f5-5c8a-4be8-a82e-b71ede725e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1c8956-54c5-40f9-9946-2e5f26ab6d39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76be53e6-9bc6-41aa-9a74-7fcd566b6b09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d873ec1-1790-490e-9641-bcd332bed662",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3016ab7-577a-45e2-ab32-ed7554dcf94f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "708cfb81-21f1-4920-9822-2315c53db3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dea16d-5999-4552-b2eb-71f1f55cf385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98061bc3-cbe6-4aa3-ad4d-1718c12af513"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d300730-a807-4034-adbf-a5666d932c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2013660e-03ae-48b1-bb77-642c3d7c5e11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c67a5385-4391-47f9-bb53-d9fcb8568347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43680be2-36f2-4952-8694-168263145d3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "932efd3a-b1f7-4482-8f5c-9e4cea21398e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8619a076-4a71-4559-a6cb-7a7907f26c1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe7d818d-7923-423b-bd9c-75c3e4353c87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "553a266e-0b50-41f8-970d-905910c3d5e4"
            }
          }
        ]
      },
      {
        "id": "454b9df1-bdf5-4115-8686-ea38333c6353",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2686a67a-0eca-421c-88c2-96b42e120fd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2289cebe-a447-40f1-b673-2484d549d20f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "995a3111-bc08-4c08-bc10-cedc7b43a71f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f41584-5098-49cb-afd4-6df0321942da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ac54ea-8b01-4d2e-bd8d-a2c1127f0142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5356a353-0a08-4b93-82ea-b6754ab5a9af",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd40a17b-6d05-438d-b5b8-34e7f1967dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11d5e19-917d-49af-b11d-ad7db507446b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a65bc22-9d87-4e54-b467-b7c3d7ae1be8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102fed25-d449-46b8-be54-da8d05ce9944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe4d4e5-9a19-4cb1-89b3-c896683df6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e9cda6-4e90-4612-97a7-588494885447",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdb9a3e-8949-4388-b8d8-e29e3c4eced2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8983c1-08f7-4c1f-b403-c7b45a906665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a347e8b0-2011-40f8-aa79-0b806b4c9112",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b4d638-4cf5-40d8-86e5-3bb137f11112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14702a20-f1ff-4ccc-a295-69d8b1f60445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cdc430-6f9f-40cd-bcf5-2b91ea04d9df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2eb9f4-72d1-4223-be72-41a338e1246d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c279c73a-9b58-49eb-8906-2567eea579d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d8a7b3-93f8-46a0-b428-6f46cba0f3ea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3118906f-d2cb-46a3-ae28-2b00ad5d6e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d648f7-babd-4160-bb02-65cf392aa76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5936d98a-7b1b-4910-92fc-f974d5bb6c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272985f4-6509-4480-b10d-afd0454c3c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d118dc-f6c1-460d-9694-7c30f1fa7c93",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6634d2-95a1-4b82-acc9-4b5b067a4d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b8188c-3a0b-42ba-a905-c4e44e2eff92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1293d947-9073-4747-baeb-cad2a4f42421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defbc655-34f9-4638-a6f9-d81875125755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f5edae-d956-4c83-8853-3e557d881dcc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebe12d1-7df5-4fd5-ac3b-b51ced42ebe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6d52ec-779a-4356-b6e3-c59878b66efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af85f233-2f80-4071-b50a-c554ec8ac721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995cebd7-c75f-4637-b127-ead1cf12afb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ba6e5a-0b87-49da-b253-58c4b717cdf2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188a1e82-8fd2-4352-a72e-3b96432867ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3378bfe-77bd-4cbd-9bd6-4c1c98bd7d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7621af-f14b-4127-a764-735277556fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa87261-dee2-4057-8d90-c6971ef07b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5194bf84-cb98-4402-99ab-147c5b44c262",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dcdb5c-fdd0-4b21-b003-4ef3259c9b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fceba86-51ea-4196-8c88-4c54618ad39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500b52e4-0c0d-4d12-a3d8-00f086271838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf941ce8-49cf-4fe4-acad-56bbb039a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47900b59-6044-4685-a9ab-d6708b686a2a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a7e001-b69f-408c-bb62-c07a62efaaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f03df0-866c-4683-9529-c824f6d80de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a08179-3670-4326-9b55-e21b64e9743a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bcee68-4480-46a0-b32e-75f42ef3a8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711ab970-f728-44be-b770-13cb074943a3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392c2afd-902d-4432-89ad-cd67e2aabb47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211cc1e2-3442-4b22-9568-d76e0f4d952f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d60253-2ff4-4f48-87fe-dfbdff6932cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d73ea41-976d-41ec-86f0-892976f73744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d30747-229d-4ac6-9635-2f4c04a8b80c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59beb4d1-cca5-4abb-bf8c-771a46abd281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f66d85e-6c49-4ab9-9d51-0ab6d1e0f5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a270815-8833-478a-a96f-9a556dc25a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd70b720-49d4-414e-8237-187728ac059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaa476d-56ed-4ac0-aa98-bd1ef594970b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce504cb-e695-4d50-9f38-0024153dd14b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52419504-db46-48f5-ae06-f4306ca52fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e74b1a4-4de7-4b3c-9fc2-0a55be2543bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9cba93-25db-4c44-9f37-8c17e02596c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd31c592-baf8-4e8b-b72e-42058599bf19",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a7a802-d975-4d87-8791-7e03f0184fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afff9a55-4769-4aa8-acd6-7c4c7dab61a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f14724a-d946-4f13-8686-466894bbbadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2236f804-e37b-40fc-b061-adbf16db66fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfdbe56-fdda-4db8-9462-4a190f57f56a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a99fc9a-2575-4ab1-9299-757e94ead381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57100fc5-502a-4bf9-9db7-553b366a32c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6837cda9-9089-4eb7-8ac0-91e0458cd2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d883391-dbc3-4f2c-ac8b-15ed3a08b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56df8a93-1826-4e8c-9908-b9f20f3d2ca3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c8a9f-22a2-464a-93d6-65504b4db8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831f5f2e-d411-4c45-8229-2e71a818d34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b78f12-2400-43bf-921c-61b4b8de6c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56244896-9e65-4739-91dc-67e0217d05d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869b6833-7245-4621-842c-303f2c8b98e9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be9e445-a4b8-4547-a094-5f4830aca1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef55d3d-ad05-4c09-b226-1c5eb385b350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1119f8ca-dddd-4c75-b5ed-98a9de8111c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ccb307-9fad-4ba1-b662-ef419efb5a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49f4e2e-f031-44e3-8447-4c91c9ba6a6e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743bf99c-8e6f-41ff-8bde-17b8f6d973ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e24992-f3f2-4b45-96f9-e88cd6cde475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59079d8f-5bde-4423-939b-d8397dcb01ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e85564-0570-4868-bc20-4a3a52bb5f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc1cddc-7f5f-4cc3-8ffa-634ca7a5b003",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2592a2-f9f1-4407-b5b4-11af39335edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79f2b06-1940-442e-b433-4a3278eb8e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a9baf-bc20-41f4-a2a4-ec80947e4def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776f8504-b5fc-4598-a383-c81c9f2d7062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc61b02e-5b97-4462-8a0b-f7ce013559df",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d412e7-fa44-4e4c-af3c-d7a757668f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fca61e-bbef-4816-9e12-aa159060de89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f27f36-2e47-483e-baa1-7730efb34552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ffebb4-50ec-450a-9b1b-89522b9bd340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ac18e8-f764-4c29-b69c-359b8c810211",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107de5ea-f45e-426d-a12c-73052e59b90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0ce4e9-d868-4eaa-a09f-71b51e0b0f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46515a70-32e5-4c5c-89d7-d59311582512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf003ed-9fb7-462e-bbdc-3a6e6af5e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd83e4d-218c-4a1e-8ffb-f7997c2d73b1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12318c4-e95e-440b-b280-540b0bf64d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f585aa42-2ecd-4af4-b4e1-7898b5375b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b1672-9fd5-4907-8e92-f1fc4f29fbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105b7269-92aa-4753-ba87-a4fdecc6aa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed495ff2-0fb8-43f5-b0dd-77e67a5fbe04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064ba05d-cad4-4e63-a07b-6a702a415d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55bcc4d-b6f8-4f9e-b406-4fbda6b25d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634acb4b-9ebb-49e9-95b3-2b2cb808c6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265e792c-aeb2-4b2e-886c-65093ac352ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796d1c37-5b75-4c4c-a81b-d2ee239ffd5d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e00cfc4-6f33-49df-b906-68599e00e1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68393e07-6c64-4620-bace-a11dcbe0fbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d2a14c-98e3-4fbb-9848-3049d9d1c6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0959dc6b-7df7-47b8-a322-ef251ff68cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297c6d2a-ac9d-4686-96ee-f7c775a644fc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0aa019-bd4a-4766-ad12-fefd54587e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233d576d-bff7-4e8f-944f-07c49fb498d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d99797-e6b0-4291-8d2b-033a57d4ca56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bd8b0f-f562-41ff-9cec-62e85db25fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f440ed44-47b0-4df8-8c6e-b9b808fd1ba7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065ed503-5500-4b7c-8a21-c205192b5402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b741b2d-bc88-4c11-9903-49f6352892de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7aae65-f292-4dae-9c64-f525cb5ef8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e5e6f7-cc6d-414b-9998-60b6333c6c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee0c005-960b-42b8-9893-93f599f20331",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa5e44b-c009-4271-9bda-bdbf33e367c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533ebd6f-a0c4-4c0b-b250-5c42b62c093b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6115f82-5d92-4f6a-8e83-a7c85320bb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69117fc-a8ba-487a-b7dc-0a1b70ece00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259993d1-ffc6-401c-869a-da585a71e790",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e85963-4423-47c7-ad9a-e55f23084c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200114af-f415-4f83-9eb0-76407eb34f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aaa461-5cb0-419b-8c8e-cdec0015ce23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1eb515c-61d0-40b3-b834-245009ba5b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e662b44-fd6a-4d7b-82f5-5510b6973460",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faa06f2-295f-4499-95d1-d7598a72777a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c2b3438-a2d8-4575-aaac-05edea790150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f308530-d002-4179-9572-ecaf52a64391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35de7068-fe9d-4287-ad27-3a751733be7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9079f9-6459-462b-b34c-5f265dda5934",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a544f60b-0017-494d-bcee-de06ee45533c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc033c2-92a7-4ed1-8252-d0ecd86cd564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4079eaac-93f6-4aa2-b8d5-7f27170d702c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fea3d22-a1a3-458b-9d1a-56b88a57dc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b2582b-5057-4822-9176-d3e1d5b35077",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d54842-9df0-4614-81ae-9c1ebfc4e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a10031d-05f8-45df-9ae6-611068847ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa9dea8-2ddb-4b68-9707-131a8d60993c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8718ed8-9d90-44ea-a543-c8cf74367eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dfaf4b-2d50-4652-92a0-591742f190e8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b481f778-8c86-4888-8846-dd7725de8c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ae9018-e431-418b-a293-15b364ed3145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9365903d-88d3-4a2c-bb88-1e160dc51356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c6ab72-198f-455c-9e0d-89ea1fd09bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b16cc7-503f-4ada-aeba-c57e4165126a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431d3c23-1581-42af-80a2-785f70e0de0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd7109f-143f-4bfc-b715-c9eb64333bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62908b8d-5a3e-4171-b999-f676d118b555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9a16d1-ed46-4472-b433-edcf1b35a66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68a4ddc-bc9f-4d87-9104-18abf99c7821",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11da5bf0-0f9d-446e-aad8-1769ca34411c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b5c7f6-ff1b-4e80-9407-d918d35a6ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c84f6c2-cb81-481c-a863-c5acaf018da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6034c30b-7670-4b18-bed2-26c54527f005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2e75ea-46f1-4707-befd-27e591bfabd2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5644f7cb-60a0-4bd9-ba38-21fbc959d4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2558697f-097e-48a9-bc94-f1f5b57c97e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a36142f-b223-42b0-92a3-f9348ad15969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffa4d86-8dca-4fce-abb4-9f3ea87605b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df7e9b6-541f-4655-97cd-146f3f4a7883",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d529fd-5812-4626-927b-ee0e24f44e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c8813a-d706-4279-9701-165fe770ad7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8c2ebf-b9b7-451e-aa4b-d527f69b6f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a63094d-d622-4bf0-b198-81c7c5cb6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fbc539-591b-4ec3-9f3e-eb2bb021d3d6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea83cda-2e42-4434-91f3-06bdde0bc4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4a2100-da09-4421-af93-a8391e568c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa93f781-9444-4ebe-b6a9-40df9bdfde5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8417bcd7-a1df-4380-b1f8-a4ffebcf61b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4777e4af-7095-4b60-b828-6c6d12061534",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4e4738-d7e9-4441-bd6e-dde22dc0fe56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2731d809-e414-4da8-be30-851cced9feb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12aa42f3-c63d-4433-9ca1-b0aee5867df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3171c2f6-906b-41e2-bdca-23cbb7f37a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68abdefc-8d0e-4a25-9ce3-376092ca2384",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b1e0b1-3790-4a65-be44-97ac6d466af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f59afac-1d57-49a1-81c5-66cc1687ce72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5bb99f-533c-44bc-8523-79c620674b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d9d694-0c03-4072-9f88-b67a97f20dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545e134b-be80-4312-a521-c9678132a851",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15b1638-825b-44f0-94d6-2eb9677e028d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19b97ed-3f7f-4f32-b38c-d0cc4c7db0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0388a917-36f8-4d97-9307-ef0b8af5c4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53708e6d-7cdf-4098-84e9-deabea30e004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fe55b8-4111-41f2-8141-d74a7fb53c5d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d230f63-0fa4-4d6f-ad36-e6e4e703de62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca4de5b-cfca-41f5-9e8b-59d5801b7bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db92d31-8988-4905-aeac-acb7e8dca23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560a2a04-1863-4f2b-be86-b689a021704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a8a68d-c9c3-47d4-a03d-b395b793142c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e125bd7c-f55e-4e6b-9e72-9f880e8c8751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20a5023-f3f9-4be7-bb5d-dee1dc0d6328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9eeedf-957d-43d6-98cc-fe529e20ccbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13f87fe-b3d0-4d7c-abcf-0224e7479a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a43881f-8130-4737-a5fa-43ee946da3c6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef54b2c-3128-47bf-938a-86609655f4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b360a872-f53b-4491-afcc-854565fc32e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0243564c-a908-451b-bc52-7af0fb03a64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cb5e7a-df97-4771-b8c3-06de47be340f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7a1b3e-6ff6-4362-aaa0-072e5cd90e6e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392114b9-5ae5-4c0b-af59-e4a00e70c7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e815373-2533-48ed-a8c3-0683314cd4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c479f2-a9ab-48b2-ba64-c56b5d8b029c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8281e81-4d1a-4403-91e3-327963d6d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5182f30e-9458-46b2-83ca-ca3f1b32eeb2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa710fb2-77ba-4e07-a73b-717459be1e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fd2228-99c9-4695-9616-196ec3ca6685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc62a730-bbbd-413b-8f94-2a08d585b50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028058f4-8b11-48c4-a6ec-43772fb5bc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7161e233-391f-4c53-9289-6fc5edb05af8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29458e9e-ccde-44d6-a4c0-bff755c60d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c32290-3428-44ea-bb15-e0a802f392e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e8d0f9-cd48-4ace-bd04-dd92e8ea00ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74484655-c895-4325-a641-792999b6dc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6da200-386b-4fff-827c-9abcb3fae358",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219bcedd-066b-4b9b-948b-1189823644af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fb798e-8cf5-49e0-a07b-c4afa376a333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8170bd49-ca7b-4b1e-a472-7e6e83668a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b346526-d2d5-4d84-b7d4-b8af33b75b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20338a11-79be-46b4-a192-34c986774436",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e4522-8423-47d8-83a6-bbe4efb44373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f09737-49ef-4865-ab93-cb27ac9096be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a230e6e4-b751-4e5c-aefe-1a1bcb170b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4f53ae-e82f-45cf-81d3-2a868dcc5fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3724bd32-2785-4bcd-81d4-60feaa698bb3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db9b3a-8113-4218-9831-08a5a852d0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3b9c8a-e03b-433b-897b-2f8762e4a6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369ba4c-354d-4a07-b6cf-f9ebf9b9f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ffe9d2-5168-4e10-95a5-3675d7d073c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557f1a0a-f307-4014-bb10-c5bb4c41c496",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a556ec-46f9-42ed-b261-fdab32e0821b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d94331-4f1b-4c04-a4fc-7fda4cdea8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c4b374-28bf-43c9-a050-b4012285ffeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b3ab3a-9c45-40b0-8c73-538b11b51630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d40e631-85e7-45cd-a615-d2c01c704d70",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18b3c24-bd39-43ba-90e8-6706e16ca3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abcf284-da79-474a-b05e-60cb520f81e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d383b6-a28d-4df4-92a4-58f4a340293f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b2c4a4-b41f-4954-b391-3e2260a7a248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debba323-e994-4401-8b2c-5ea7cd04eb50",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55d76a1-426a-40f5-9972-ec0bb01b7b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18ad120-41dc-46f0-bae9-134dfc24c69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc3011f-7bce-47dc-bb1e-fb1ba27d0ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19e79ac-efbd-47d7-8b10-f3687459d831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d064e0-a50b-4d72-a44f-43048aba5850",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b021e629-9f55-42f9-a30b-48b34ebde85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824dd501-5081-4921-bc58-569977d111d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b54ab78-2ab2-4f8c-8370-53a3a2c28fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232ea64c-1467-44d7-8c89-8ad62ce9cb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a81e58-21f0-49d7-9aab-d6f4df9022db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45db62f-56d9-4f9f-9cec-094b53b3da90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f62e4c0-714a-45b1-b703-24e4fe1ac5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdae546-0a4f-49e3-84b3-779562a633b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca1ab1c-d119-411b-95c0-fdc812b9882c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb933db7-2d3e-42e4-9bb1-512847540514",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9a4c3f-7731-4600-b9e5-eab4c28829b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240f2254-cfe8-45e0-8ff9-77228fb5817b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e453ed12-a328-4c7a-95d6-852458765eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505c8dda-834f-4f7f-8eab-c2be8c955b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9efc7a5-e97b-44f7-96e8-f21fb0f638f4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc54fc7-ff68-458b-8820-f15daa408961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf22f616-da6c-46b0-8beb-82ad8530fe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1263428-4206-41dd-b070-042a672e1df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd53319a-1cda-40e7-8b35-5d797737e2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81d7a9b-82d6-49f0-bb9b-9f48df357f6e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dfa611-a7f8-4e84-a0c6-bd0e28a71f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47b3269-ae3a-4a0d-9f72-197845bab730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a263b89-fbf1-49c5-ba34-080d6f33fc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d4805c-8b14-4fd9-b56e-fa5e273bc2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24939bed-4d2c-45b4-b940-269341532dbe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d5bda7-2f59-4431-b8e3-d91e0a11fbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c62085-7e37-4d8d-a914-22128136b5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2129670-6f59-4e58-a0c6-0de708118672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1afed7b-ba1a-4a61-b79a-dfcdea6fd26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a90cbd9-1bbe-417a-9a4c-140568b40230",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0665ff3-c62f-41af-9d0f-d679a8f614f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41a625c-921a-4e5d-85ef-d167a3719688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322756fc-4355-4378-83b2-139622237a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84b16a0-143b-49a3-9615-5d5e7c6dfef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccb75ba-4d14-4e9c-852c-6c10c195d6d6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafe0e0d-3c43-4fba-8002-bcd19d5120ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14fbe3c-b5f9-4d02-a7b1-183c1d1e0fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b4f45a-3505-4192-9600-2eeb7ad20274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55c66f9-3b50-4b38-8b75-ecfb10ed846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aefe32c-1f00-4f9c-af55-79533731a15b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b409128-e2a6-41ac-9325-24f1f50889ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f89b33f-b020-474f-a2c7-13636fce8e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1d0cd8-46f5-4f4a-b240-04b1a583f1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d0c95d-a708-4d13-9e6e-e1951afa63dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556c9f5d-ac33-4f78-a761-b9f2e121b874",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179b213d-2b66-43a6-aa61-44f179548a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e028175c-2533-4a67-baf2-c66c49597e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0570e9f-e980-44bc-8633-e4c35ef0df0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ea9736-c1c6-44b6-81ea-862631630db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed1e006-2ed2-4812-9f36-f9e2ef8b8dd9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028bfbc5-cef3-49e3-be7d-5301ec809fd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df992f0-718c-4fae-9fd6-5738a15489e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bf98be-5d81-40d0-8451-994160ff5e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1244f4c8-8a73-4ddf-a5eb-c197bf06127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a21e8-d4a8-4773-ab14-e08726949435",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bce3f3-b5dd-4724-b1d9-022a493d82fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bf1eca-550b-4bdf-a08d-d5176ee0f284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58bde44-b721-4d02-884a-940495b302fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2275db52-dc74-4ccf-a33f-636cbe99f3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd953d0-2c20-406f-9cdc-3ce90564274a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2491bbcc-467b-426a-95b2-0495713c6530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffe0facc-41a2-4977-a5be-e75b4c5eba23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6888c28a-1775-46ba-9705-d92fb6b94864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605baadd-6764-4d97-96bc-ca02d18256fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63064e8-a697-490b-a506-5be917d5373e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248cc169-7c18-49f6-8d56-573e38ccf7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9baa4e60-ce73-4bef-8117-b7c310ddfec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36560445-fd5e-4528-9a61-a73d503c031e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57964f0e-c617-46f9-b677-14b74faedcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0d6c90-827f-4901-8642-1eed51294faa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d9ec48-6fc7-4e92-a200-fdc76e3d3d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8cab63-c261-47ef-b204-99951e4c7c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eecac3-18b2-421a-937f-d686369a276a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92fb36b-a127-47ec-998b-faae6a3fa64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2351a580-abe9-4da6-a95a-c68f4901b610",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f56ff5-563e-4a81-ba0f-7d3044f679ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baed6907-f786-4b5d-af21-5dcc75f3917d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4a1059-b488-4417-ab08-a04df79d3c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1031eb1-83d1-4518-bbc6-7a3bc03b65f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855ac972-a9f8-45d6-894b-9d6dae7926c3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb2e8b1-baa3-4b86-8506-e3faeb0f5875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3251a54b-0b8d-4ad1-9747-5a62d2b6dfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3e0184-caaf-4551-b113-7a14d891b678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c1218c-5fcd-4838-a618-a369e822db41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561f698e-52ee-41d7-951e-529317c6e230",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d1ba46-9cf7-40d1-a0ad-bc57233bcc45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd911be1-300a-4af9-9f2e-cf318b1f52cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d62330-7c1e-4dd9-ba5b-13ba30864bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72052471-b230-45d4-aea1-66010e4c3cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e9647b-8e6e-4c95-a430-4494be91d0cd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0335c173-c837-4979-a5d5-3a80ee003dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac0b767-037c-4b49-805d-ce8e74dfc414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22d584b-8fc5-47be-a1df-2a4ad52a983c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ebaac0-957b-49a3-9081-88e2459763c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84829742-1e00-4ccd-ab78-40ab936631a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c629682d-08d4-4431-b845-ba15650d1869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e5005e-e983-46dd-a15a-646723f1033a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82960fa-162d-4a90-9c76-bcc1636a3685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4f5554-02d6-41f9-96bf-be033d1b187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425b8eff-ac24-44aa-abc1-9f79a060dc3b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbd7307-1453-4578-9a59-d73af1bdba22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ce53b3-a175-410b-86fa-79ea99ebb459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c3fff9-3b5f-4a8d-89c0-30d29d121a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c9fdfd-3eef-41d1-b29e-c8bc34c8e8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a21140-49a5-4eee-8509-ac4f77aa0421",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bca60ac-43e1-4cb5-bc04-cd1174dd4e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e02b329-6e26-47d6-8750-6dd345fd5eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab949e7-117c-498b-bfd6-d5a1b0c2c04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5541ae3-c6dd-418b-9abe-6b5eeebc9982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc929fd9-d9ef-45aa-bf0a-8ce37f67b6a0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6c2f4d-0c1d-4bff-8a86-d6105697ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac240a67-bee4-4e84-b7c4-97d63456d133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf75e156-2055-4196-a4a4-d54a721407fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd14915-7c18-4547-b602-14968920e8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68138efd-d245-478f-8199-b81f8df43586",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2826ec1-12f4-4876-a029-41420eaeac2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c18b9d2b-dc76-41a8-af86-fde54d4c8249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a8c00-ca27-4f37-8997-3eae73e3a54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d1a1d4-687b-43e3-b43a-5b7d6d070006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e143c5-425b-4bf0-9620-0f4a519b8d2d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb1305-3897-4aeb-81e2-95d12247ae6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a51f41-75ea-43b7-9091-a7056d0ca331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdad415-4bf8-4536-876d-2eb5d247deaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2e7985-b3ae-4079-87c0-7d6dcd512863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f486a7a1-2c52-4886-b3e1-6a51ed09342c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d739d4ed-1694-475e-a5df-f6792a65738b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d0d2bc-0d20-423b-a160-f4f620a41dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6df511f-18c0-4faf-b005-2f8227304cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e20838a-4ae8-46c2-aa5f-11e7f31fcc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf8dbd7-c057-44de-85cb-476b5d0c99dc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e571dfb1-3747-418d-86ab-743436474d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f4e31f-c304-42b5-98ac-1b12ca8dfd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a03af15-efbe-4ac6-b168-73759a392df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a60020-66d6-4a79-be59-44b58220557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de44159b-1e7e-4823-bfda-7c70b782d355",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd2ea42-5e90-4e3e-ae54-6ecd41c85123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b18a266-4ea3-4808-9cd5-b364c351c637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb5b64c-21e6-4978-a823-ba6f4506dd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689fb1f5-96aa-4c95-9152-c366cdcc1c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca29349e-f714-4062-ad04-e622299eec00",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b30cc-99cb-4408-a298-e2eca99efde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc2853e0-3a07-4a25-8f8e-1394bf93b4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddeed7b-2b96-4165-aeb4-1bce4d9fc2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a17111-d308-4792-9f14-7cf16ec0a953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a23c761-7709-4db5-954e-d7b14d1f3656",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11825c0a-844d-49d4-a83f-ec5da15aa054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe606b1-1e7d-4f6c-a1b6-d4266bd722d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b56cc6-dd05-4992-9ca7-07ed552c7be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d4b49d-0ada-4fe2-a6e9-eaddbca4ff55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ba91e-f02f-484f-82e1-aeb028f1a939",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f746c4-b319-4591-8a1b-cf1306787811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e11b43-355e-4033-97e1-60b9ad1c54cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b050091-ce62-4ee3-af78-9ce2242ead2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c5a313-8682-4636-83c0-3ee747477366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e0e86-32b3-4dcd-86dc-9532f837e5bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae74630-09b1-4c54-93e8-a6be1c2e756f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376c2866-489e-4104-a6a5-587aa5059426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f9d99d-b584-4343-b5fb-31ef2245b883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5467a16f-b88e-47d7-a3e6-d4ec8cbd6c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb501e79-9574-4d39-88ae-fcf44a5bebdb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052f4bc9-3fce-43c5-94b7-cb7e8c2c7512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "093abfda-84dc-421a-b127-127fde8f945a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98eeada0-e831-4393-ace4-34df21b3efe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a0f2b1-54ca-4f07-b76e-e0889750266e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496749f2-9327-4d01-b4b1-e908d180d76c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523b0a0b-b7b3-489c-916e-26672e9bbb14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b3912d-1425-4e7b-b3e0-b9a5dcbf1978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5afded-83bf-47ed-bfba-f892d7b5ed03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba5757b-595b-4c70-8afe-a50cca0092f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6c6409-9005-4713-85ad-bc014d36d348",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c46f3c-edb5-4bba-8461-c9ed59e00470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e2d06f-505f-49eb-b7dd-2a73dd81aec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfcfd1a-b3ca-401c-affc-d3e1a5c6b4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcadb41b-65dc-451e-a01e-fb67e6046022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c257f7fa-2fae-4864-8675-242a60d7823c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcffee3-46c0-4ade-a777-6f590977235b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad92a03f-1024-4811-894e-4c217107507d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6542a6-fae9-43d2-becf-d5f55b796928",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0da99d-1470-473f-b0d0-c5d234dbdc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64af8a1f-c564-4ff5-bd19-41d1f6bda211",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02128c14-de91-403e-9c20-601ec15ad5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8155ce-3d23-429d-bbb0-d075c696b4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2419d5-11ec-4064-af48-10ef5620e5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5c1da4-b6e5-4fe7-8bab-3b6f9d8e9930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a645c057-fae7-4efe-94cc-35492e1dfedb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db16b788-e31c-4559-8908-110dfd2b2f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b52f04-3149-4d8d-b571-bf9cb424700c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d939347-98bd-4f65-8d90-b11a6882470a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979bcaf0-7965-4d44-9b69-0f41e533728d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94b006b-45da-4a3c-bf68-dee73a8e37be",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b467de2c-1b8b-4239-b615-5dec658e8009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57673ac1-365d-4895-b058-ebd2e2ddca6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48c6d1f-d97a-43e4-9dfc-02dee590df26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1695ef5-b3c2-4d40-be2c-8eccaecbc570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d638132b-c31b-4147-8f2d-12f88c174516",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8057f9-8682-41ee-81fb-9d0064542c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6b7487-1463-490e-a3a4-1e30fdb506c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f97095f-fbc5-4d35-b1a0-868c26d03705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbad23f-704e-44c3-93d9-43e72731214a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70ece13-14a7-449c-b109-93ae4eb2fc86",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f663ac32-95a2-49e8-9c7a-3e5bafb2b60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc7e92d-c722-45d6-b27b-3a829bb20dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c456ab84-1cd4-4903-92d2-714bfe46721f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32fbf9a-a328-4528-b0f1-dfdf1c56db8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8b547e-a9be-43ba-9159-61b7217142ff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb88b2d6-c519-4855-8b14-a8157e140f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52fac5a-27ee-471d-9e9a-e4d9094a2196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042260e3-6d70-44ad-b5c4-9539bb3f643c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a7da31-74f6-469f-b26f-4162c1fad1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21adc664-172d-4de9-ac45-0b60298cce7d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d800df-c8b4-46ec-b8c5-6154b6b7daf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da56ee33-5125-4d99-aebf-74da443676ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d3a190-21f7-4cfd-92de-44db9ff17ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27320da0-8974-49f3-8604-1ab88413b797"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db786ae6-aae7-45ca-8a0f-981535ecd31c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f5da580-cb1e-43dd-aa8c-abddf3b89f3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fae22fe9-eea5-4a09-ada3-b4df88f51f87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41e49891-1dd6-4ff6-8241-13ceeb66be8f"
                    }
                  }
                ]
              },
              {
                "id": "b2f33e17-4fae-48e4-bcaf-cc7a2ee2e23e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "785a811f-a6a1-4301-b499-c7bb3c89b122",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9a43f2-29e7-420c-80f9-f879904a41bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d24acf3d-7881-4b5c-b82f-f121b4d34af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7decc91a-6690-466b-b2f1-7b2d8f88a707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0db3460d-8be7-4303-b19a-e3446c15df03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "443a0b1e-6614-4ec1-b81f-dc5a5fe810f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4031ae3f-d9bb-4535-9c24-240e9dd90396"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20aac459-f159-4e11-9685-3286089e2acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96361af9-425f-4506-9c8b-96b5ff82638d"
                    }
                  }
                ]
              },
              {
                "id": "443209e0-b12e-44c7-ab40-ef390164857b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7d5b358f-68a7-4c68-9516-9ef79bcb07aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5493aa19-e723-41ff-987c-2ee4106db5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "afc87c90-a072-42e9-93a5-ae9abde558da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44236cde-2586-4108-8f51-ba8cde2e4315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840fc1b1-1ce2-44b7-975d-0a26d9ecb188"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69177bb3-3700-4975-b621-09aabb6b75c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb836ce2-bd58-4503-83d0-8ecee5a94396",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aca20ad-9ad7-4973-8aee-cb3629f0e0a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb2a90f2-6fe6-43a3-80f5-17e43aed24f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc95135-e11c-4d1f-8265-f0fd60f87e41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6374f1-20a0-4ef9-aab6-7ef580206825"
                    }
                  }
                ]
              },
              {
                "id": "9b626357-9c24-403a-8f91-99da4967f85c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5704f8b-a8dc-42aa-829c-23643599d57b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "173c20dd-13bd-41c2-b049-5a9ac7539aee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91517967-ed5e-44f0-a07c-756e719ecc72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eca2d6f9-5ad9-435e-a875-f70918fe8a0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "296ceecf-aac8-4ca6-a718-91745de6a88c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "383b4132-6312-4084-9888-3346a483f3bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77b7d2e4-6ca9-4681-aeb6-50a09a0e718f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30fa4e54-c15b-402c-a700-0308905ec99e"
            }
          }
        ]
      },
      {
        "id": "a30582cd-6c1a-475a-933a-001503c82265",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4b284ad4-74c3-4ea0-a422-154102a1e2e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41571c61-b444-48c9-8509-a91ed3466623",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b64c2ef-dac7-44eb-b3fe-c9f598f3c5d1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d505291b-a1bc-43ac-8cc2-3267c576ddba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d72f0c34-d87f-4614-9f42-3521eb1240e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d290301-965e-4982-9f50-b4d0722d6e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b4f41a1-9619-415c-828b-57bea65f1692"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "865f2f67-c0a5-463b-8997-27b2293a0e1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f2a3dce-2b6a-4466-8b4d-f6380ae5899f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ba7a8f6-07e1-45eb-aaf6-cee7c1d96e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6c73a36-2171-4e13-a46d-0f0908b88a78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7de0396d-acbc-493b-924d-38298f18881c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "60ea02c2-def8-471a-8bd1-ce6a04d6f0c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4301960-0049-4e1a-9ab4-8a92c080fb25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ad70ba5-6920-4602-bb9e-f42853f83dfe"
            }
          }
        ]
      },
      {
        "id": "5fa85c05-775b-41e3-9fe9-be3e64b46ed2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9a060a8e-5b8c-42ae-8d99-3b42540361c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c65c22c-c195-417a-b9b7-4d9a480d9215",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ecda593-87be-4312-a3ff-d3ae4aa60da3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3b31b1-767c-4aa7-80f6-2251e988cba5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd8b023-3a3a-43cf-b0ed-4ee4844b6b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e178b3-0286-4334-91c9-561b475dd750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfdae4b6-d8f9-4f27-b516-cbec57fdfa8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d213dc6f-a0d0-4374-ba97-3f02e430c625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fcda3a1-e82e-444d-a644-cedef2960663"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "838dc218-4392-4e79-b9c4-56f3680f1891",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "485cba66-70ec-499e-bbe9-16fddd637bcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fef698a-18f9-4490-8ab8-5210bb70f306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c67996d2-8517-4666-8b59-08d7a2fd7e6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "550cd8fc-90a5-4d50-a0c1-98c9d621e38d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24e0fdff-911d-4ccd-90cf-3b784a0d1df6"
            }
          }
        ]
      },
      {
        "id": "cdd533ff-f5f9-4e79-9669-0050af517fd1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "723bf4ba-b122-464a-b30d-5cbdfb70edae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31ae0394-0ee7-408c-bd9b-acd9edc0769f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d5d661f-59bf-4d02-88eb-619270f607be",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6becd6c6-2e63-4624-adb4-d224bc1e4023",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d9848ae-f213-4a8f-9ee1-2672ffec2d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53aab51-0bd7-4cd0-a7cf-bfe58433b3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b282f691-a680-41c0-a0b9-9655f403772a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a215fab-764d-440e-aa70-3e5e92fc123e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef95654-d16a-435b-b484-0f95f79d52a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d54034a-8438-47d9-8598-6d7b5e6f4c3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62f78583-4b61-4231-a44e-658a322a56c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38d002ea-290e-4b64-9cbb-840f8d518a6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4764a21e-f6c6-4e00-8c87-0f707c9e526d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f58b816-019a-4a69-a58e-975d70cad854",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09f3b892-270f-4c5f-ac4e-5aee9606cfc4"
            }
          }
        ]
      },
      {
        "id": "d5b89732-99fa-4bf4-b950-4e8cfe0819ac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7320a33-63a2-4466-af05-e53289eef6de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e54efce-a8d8-42bd-a618-872f32a79b34",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "766cee20-0b85-40ef-80b7-5431023d0fe2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1aa7a27e-96bf-4cdc-a978-03d69674b9b2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "883a3dab-9db6-4744-a1b4-55601fe9e388",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 128.7063492063492,
      "responseMin": 5,
      "responseMax": 11041,
      "responseSd": 809.7915670239969,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727484287290,
      "completed": 1727484328558
    },
    "executions": [
      {
        "id": "449b1c58-32ca-49fa-afbe-3235ea490f6f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "55dcceb8-887d-46d4-b451-1f0240408738",
          "httpRequestId": "11d5e45e-f955-4eff-ab7f-2b0fb903593e"
        },
        "item": {
          "id": "449b1c58-32ca-49fa-afbe-3235ea490f6f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "74300a2d-0cde-4ab6-928c-65537d998d01",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "5d84b59b-788e-47d2-ae4b-c0d56bbd2183",
        "cursor": {
          "ref": "44bada7b-6dbb-49a5-9a06-5f455ade3c62",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c2e3fd84-7ed7-4011-8ad6-ef791d9ad6b3"
        },
        "item": {
          "id": "5d84b59b-788e-47d2-ae4b-c0d56bbd2183",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b9ea63e3-8a6b-4877-ac92-1c19a0741657",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "1fb8305f-ea7a-41b4-9815-1a41f504edb6",
        "cursor": {
          "ref": "f294efc1-e334-44d7-9ab9-5137e22db48f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "71168c63-84c8-4d80-9e93-e18101f674d2"
        },
        "item": {
          "id": "1fb8305f-ea7a-41b4-9815-1a41f504edb6",
          "name": "did_json"
        },
        "response": {
          "id": "6548062e-a1d9-415d-a7b2-9974aff1d7e4",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef3a5d-1b63-4ff4-a222-e328f3db5f15",
        "cursor": {
          "ref": "6a52f01b-c79f-405d-b308-a406fa56a797",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cd5db63-a12e-412b-b278-dca2aaff30db"
        },
        "item": {
          "id": "37ef3a5d-1b63-4ff4-a222-e328f3db5f15",
          "name": "did:invalid"
        },
        "response": {
          "id": "09024b75-abfc-4819-9280-2be9d1201a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef3a5d-1b63-4ff4-a222-e328f3db5f15",
        "cursor": {
          "ref": "6a52f01b-c79f-405d-b308-a406fa56a797",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cd5db63-a12e-412b-b278-dca2aaff30db"
        },
        "item": {
          "id": "37ef3a5d-1b63-4ff4-a222-e328f3db5f15",
          "name": "did:invalid"
        },
        "response": {
          "id": "09024b75-abfc-4819-9280-2be9d1201a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f275bf1-8646-497a-8e7b-4af2b0718e44",
        "cursor": {
          "ref": "58781656-b0be-4c37-8f36-4fa1a2a35f7d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2d79d2a2-f5db-4756-8fd7-4f00fa1aa78a"
        },
        "item": {
          "id": "2f275bf1-8646-497a-8e7b-4af2b0718e44",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cd6bc351-e546-4724-bde8-b10d18e6537b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbaff6d-f328-41a3-9d46-330bce7fedb4",
        "cursor": {
          "ref": "92d3f443-530a-433d-b01a-99262104faf2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9c977d87-1cfc-4673-b1a3-c1fb472ccba9"
        },
        "item": {
          "id": "2dbaff6d-f328-41a3-9d46-330bce7fedb4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2432ca72-946f-4526-a16e-038fb0aef75e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4eccf8-46c9-4657-a878-3561c833221d",
        "cursor": {
          "ref": "93e8f9d3-541d-4a54-a19a-bc6b2d19e38d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cd146a96-708a-428c-b9b0-485ebf6bd316"
        },
        "item": {
          "id": "fd4eccf8-46c9-4657-a878-3561c833221d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3674123d-76f9-49f2-9db7-c9cc96bd97e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fb8805-0c38-4b59-9745-dfc54d01ea13",
        "cursor": {
          "ref": "5439d8cf-f6e0-4679-a512-231af14cea63",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb3afb0e-27b7-4553-a803-c006bda0b71d"
        },
        "item": {
          "id": "83fb8805-0c38-4b59-9745-dfc54d01ea13",
          "name": "identifiers"
        },
        "response": {
          "id": "679f8499-967f-43b3-98f6-5de993859fce",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ca3644-b23e-4720-9215-bef735fdcf45",
        "cursor": {
          "ref": "4f0a2244-d956-4f54-88bd-b10a3743ec1f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f771df41-3cc0-4ffd-857d-8559a33f06df"
        },
        "item": {
          "id": "58ca3644-b23e-4720-9215-bef735fdcf45",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b79285e-bb94-4993-8f9f-6db2a11bdd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3272a7f8-8c18-45c6-9e4d-fea64283e557",
        "cursor": {
          "ref": "bd73df16-2e74-4f00-b621-dff1b63964ee",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f704166c-e0b5-43e3-9922-d4bc0bda55a1"
        },
        "item": {
          "id": "3272a7f8-8c18-45c6-9e4d-fea64283e557",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "924703b8-522f-4b06-8dc0-8cdf15fd49b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3877634b-f3e9-43aa-97bc-b025e6ad793d",
        "cursor": {
          "ref": "c59f58ae-6e9d-41d0-a9a2-5fc218dc4bdc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "121a52d8-99d1-4fa8-9f30-90eacabc89ff"
        },
        "item": {
          "id": "3877634b-f3e9-43aa-97bc-b025e6ad793d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a00d8bf3-422e-426e-ad26-a110aa84e652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb1c966-be38-4b93-a840-33f02db35073",
        "cursor": {
          "ref": "1e65627d-adbb-44c5-9fbe-75717a248410",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2a96cbe7-a22a-4613-a247-fb1210617323"
        },
        "item": {
          "id": "5eb1c966-be38-4b93-a840-33f02db35073",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ab739401-c205-4dc5-a166-3b2b17a93d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb842d7d-2a12-4936-a017-e21f134bac91",
        "cursor": {
          "ref": "79fa9378-9cc1-46e3-986d-5195b2b44fd6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8a22c75e-f7ad-468a-a146-114267219a75"
        },
        "item": {
          "id": "bb842d7d-2a12-4936-a017-e21f134bac91",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "536049c2-d394-4b4e-850f-349bde3cdc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2af843c-644d-4759-8258-8e9240c779c5",
        "cursor": {
          "ref": "6b19d229-14b1-4815-8165-6e9510929864",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4c12b9db-21e3-462d-9785-2bf4c6495b49"
        },
        "item": {
          "id": "a2af843c-644d-4759-8258-8e9240c779c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ad93c3a1-9674-46ec-b771-ae06cc36374c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5c2a57-c120-42ac-88c1-849dde9c8ae9",
        "cursor": {
          "ref": "47c0b7ea-e71f-4010-9b87-b27e4e286c89",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "70aa60c6-0111-439a-8e89-14f59cdc3110"
        },
        "item": {
          "id": "6c5c2a57-c120-42ac-88c1-849dde9c8ae9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "60a3875a-035f-4452-b635-73fb1f16f25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23873e5-8277-4e5d-9887-9d574109bb05",
        "cursor": {
          "ref": "280d4183-6e9c-41eb-9045-f8a2f49a34a8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "62784fa5-c33a-4d81-ad14-244bca2e39d0"
        },
        "item": {
          "id": "e23873e5-8277-4e5d-9887-9d574109bb05",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "71bcd608-97a4-44ad-9e36-b6c0ed0c8a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0824a87-357e-4f04-bed8-bdf877b7dc59",
        "cursor": {
          "ref": "0df76529-16b9-4c94-88ed-0b50514d7696",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c12743f8-997e-440e-a4e9-bc042849d816"
        },
        "item": {
          "id": "e0824a87-357e-4f04-bed8-bdf877b7dc59",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b6c2c83d-f750-437f-8772-7636fcc97804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf3d30a-baa4-429d-802d-beed29e29ca0",
        "cursor": {
          "ref": "62099ee6-cef0-4c09-ac09-d3f60882946d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b1762f9f-40a3-4c56-8364-5bcd0548259f"
        },
        "item": {
          "id": "abf3d30a-baa4-429d-802d-beed29e29ca0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a51eca41-c497-4c57-bcf6-acc8a8e84936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a65718-42b6-42d1-90f8-21985d4e0f41",
        "cursor": {
          "ref": "45d7fa82-27e4-4c5f-a694-796ab20014b8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "485230dd-4b0d-4bce-bbbe-4dbacedffe84"
        },
        "item": {
          "id": "96a65718-42b6-42d1-90f8-21985d4e0f41",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c0c36c0f-8a30-44ea-adda-3d6c59ec0350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ed5fb-9a97-41d3-b87c-33ce882000ef",
        "cursor": {
          "ref": "ed1f5798-0bf4-4180-81a0-6249d659b4bb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dcfc0d4a-53cc-4fa8-bda6-a0160c0a8493"
        },
        "item": {
          "id": "925ed5fb-9a97-41d3-b87c-33ce882000ef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b53c4402-6194-48f2-9ffe-ff97a5947c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e3a235-e6db-4340-912f-f0af39d64492",
        "cursor": {
          "ref": "f54bcbce-2bac-4f05-a681-346c9baeaaac",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4585366c-8e2b-4104-9de9-ded379d61d92"
        },
        "item": {
          "id": "a9e3a235-e6db-4340-912f-f0af39d64492",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "99133937-fbda-475f-a565-ece1dc42ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3a9b07-ca29-4da9-92f3-c08aa4d0337f",
        "cursor": {
          "ref": "6ef4278f-9894-4c17-80b2-fc9963e3dd08",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1474f4b0-0e36-4847-8d9e-91e78e2f7059"
        },
        "item": {
          "id": "1b3a9b07-ca29-4da9-92f3-c08aa4d0337f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5d0a98eb-4510-43c9-bf1b-9723073bec65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4833bc-913b-4fd7-894a-b4d5d5c6642b",
        "cursor": {
          "ref": "c13d9138-5119-4bfe-8f6b-b3129640f92a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "de563501-0430-4eff-90e1-05730a0f566e"
        },
        "item": {
          "id": "0c4833bc-913b-4fd7-894a-b4d5d5c6642b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "65e7ad78-e98e-4c48-b670-45990e19a094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4add10a-5a79-4a36-9c49-c05d5da15572",
        "cursor": {
          "ref": "4007e44b-e0e6-40d4-aee2-74b039741ee2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c8c70946-3f12-497f-bc1a-18ca1cc5a273"
        },
        "item": {
          "id": "f4add10a-5a79-4a36-9c49-c05d5da15572",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "45cc2ae9-669c-4a49-8e14-8ad803b628cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f632faa1-aec7-435c-a8bd-559153b8bd33",
        "cursor": {
          "ref": "40aacb4a-ef55-4d9e-b111-09f97877fcb2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d35846ae-abb6-40cd-92b7-f5cb298327d2"
        },
        "item": {
          "id": "f632faa1-aec7-435c-a8bd-559153b8bd33",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e55a697d-1ecf-410b-9889-04631aee4573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86378643-d9aa-4f12-bc62-9435ff1c49c2",
        "cursor": {
          "ref": "5d03403d-62c0-4df2-8ae7-b07005a8e1fc",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "18c6f573-49bb-4144-8d48-eec8a9877b29"
        },
        "item": {
          "id": "86378643-d9aa-4f12-bc62-9435ff1c49c2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "56f78658-ef6f-4a59-8b6b-c3a8816a2198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd46fdb-4f63-41da-846f-6dfa638567f6",
        "cursor": {
          "ref": "024e0e73-2313-4527-9b05-c1d2d7d7de65",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dc89da2f-885f-435a-a80b-af2f7ea7e0e8"
        },
        "item": {
          "id": "9bd46fdb-4f63-41da-846f-6dfa638567f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b5e10af9-abcf-48dd-81b6-aa1393e7f6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c89d45-7aa4-4a8e-bdfb-c8cd0f72e704",
        "cursor": {
          "ref": "c1c9cd16-dec6-44ed-9f51-22f39a883255",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ec421cc7-88ee-4423-993c-6680f8ef5691"
        },
        "item": {
          "id": "50c89d45-7aa4-4a8e-bdfb-c8cd0f72e704",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "72807952-1668-457a-8a2b-59ebadb3265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f72279-0766-4f98-b9c6-5c435891974e",
        "cursor": {
          "ref": "d349ff1a-8365-4ba3-8daf-4397d0783791",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fc6b5925-7369-4aa9-bed5-911e7d1806f0"
        },
        "item": {
          "id": "d4f72279-0766-4f98-b9c6-5c435891974e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2af18a2c-f124-46da-a6cc-9b92ebf6fdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9f7135-abed-47e0-8550-c70c9b1a0287",
        "cursor": {
          "ref": "65da818f-3733-4a33-8e79-1732651ca41a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2cce21d2-eeb8-45c9-bb04-e191c9cda478"
        },
        "item": {
          "id": "cd9f7135-abed-47e0-8550-c70c9b1a0287",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e783c292-931e-4663-8d39-63805763b849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18712dca-139d-46cb-853e-bb61dc13eecb",
        "cursor": {
          "ref": "63d1e9cb-1d8b-4cee-b3dd-79cd1cb6dc3d",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8e9dd956-d0be-4c4d-9fa2-e2a76cdd4d94"
        },
        "item": {
          "id": "18712dca-139d-46cb-853e-bb61dc13eecb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4816a595-5217-4e3d-8b0f-b925621c637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8157cb13-05f9-45de-aba6-e8b893e45851",
        "cursor": {
          "ref": "cac8057f-c952-42f6-a7d1-8a7b285760a1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "127dedaf-17ae-471b-8d85-492a4d6a19df"
        },
        "item": {
          "id": "8157cb13-05f9-45de-aba6-e8b893e45851",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fa5691ee-0b8f-427c-8fde-3bfaab65bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8fa7b5-5b16-4112-96cd-713ff79cfcaf",
        "cursor": {
          "ref": "c0183d81-476d-4db0-a18d-bd624aa62f31",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7841f8e5-9548-4acf-a27f-0dbed557d282"
        },
        "item": {
          "id": "4f8fa7b5-5b16-4112-96cd-713ff79cfcaf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bba5ed90-55cf-4acc-83dc-5ffcd5750d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a610a7-8943-434d-a41e-42e6b7e90cb9",
        "cursor": {
          "ref": "7b4fdcfd-ca84-4b66-be47-caf286042b8a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fb26d50b-4aab-4648-b50c-e5eecf7de716"
        },
        "item": {
          "id": "73a610a7-8943-434d-a41e-42e6b7e90cb9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "39d445e6-39c2-4146-92f9-565390937c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dbfcab-f347-462f-9f23-e286b0db050d",
        "cursor": {
          "ref": "82797883-c6bc-4317-a13d-f074d8a5465c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23a2007a-3b28-4385-af24-e8014465b379"
        },
        "item": {
          "id": "35dbfcab-f347-462f-9f23-e286b0db050d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "81b03cfa-90d9-4f85-be66-6b3c6c0b50a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b7823-2863-4ab8-be10-f9e9a199cda2",
        "cursor": {
          "ref": "885852da-1239-47df-a6fa-fd226abb4338",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4f8f570e-c5c9-4008-b79e-cd549bc2a858"
        },
        "item": {
          "id": "4e5b7823-2863-4ab8-be10-f9e9a199cda2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9ad81abc-71e7-4806-96e3-726763f3bd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf18a87-f616-47cd-8034-72a5200aee67",
        "cursor": {
          "ref": "f0d20e4c-aff1-4b34-bffa-15ecd68c72eb",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f061ea59-5384-4dfb-92d7-b1445c2d984b"
        },
        "item": {
          "id": "9cf18a87-f616-47cd-8034-72a5200aee67",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "773c60e0-9c89-45b2-b838-07889064dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9409fa76-e633-4844-9fa4-023cfe17cc4e",
        "cursor": {
          "ref": "c1737812-047b-471c-9b42-a3ad55887d7f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8c6a9719-9a7e-4db8-baca-f654ea78480a"
        },
        "item": {
          "id": "9409fa76-e633-4844-9fa4-023cfe17cc4e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bf89febd-3d9d-4b2b-b70f-07616d6ce4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d5db19-bb11-448f-9d5f-43622d637140",
        "cursor": {
          "ref": "92bf3416-4528-4c04-9c25-7811c64edc31",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bf3caab1-4be5-465c-b3ee-e53443585d57"
        },
        "item": {
          "id": "47d5db19-bb11-448f-9d5f-43622d637140",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d30708af-e115-4619-9d35-2503bcf38040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941a289-d57e-496c-93e0-913a6a22eb3a",
        "cursor": {
          "ref": "835abd45-1cc2-49dc-9fdf-9be438e444fd",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d462a486-9536-47d2-a1ed-a9a161ca68f0"
        },
        "item": {
          "id": "e941a289-d57e-496c-93e0-913a6a22eb3a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1e69f1c1-20be-40db-bbb7-6c260d3255d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc94e49-9aba-4c68-b71a-2800ea1d9fa0",
        "cursor": {
          "ref": "c5af5ea7-7d65-41be-80d4-27157923ff94",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b841fe1f-8419-4306-a430-c839e7a8259b"
        },
        "item": {
          "id": "8bc94e49-9aba-4c68-b71a-2800ea1d9fa0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8c3de50e-ad22-4e0d-92f5-06f172fb44d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df96a70-3b37-4d85-8c2a-f490078829e6",
        "cursor": {
          "ref": "f6594336-a242-4223-a3a9-038ef36edb70",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f134aa6a-cd23-4baf-bb88-af2b25eb9170"
        },
        "item": {
          "id": "2df96a70-3b37-4d85-8c2a-f490078829e6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6193f232-9f39-445d-b5e7-af9afbcb6ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fd70e9-df89-4978-ad18-9a5806093e41",
        "cursor": {
          "ref": "91dcb3c4-aebb-4ead-bc3b-a0569873aaf7",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1b0473cc-226e-4ba9-8048-bf965f655380"
        },
        "item": {
          "id": "a7fd70e9-df89-4978-ad18-9a5806093e41",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ca2c9fa4-6581-4221-848a-fcb68053bf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404d11d7-5cb9-43e2-bd2e-be347b40ced7",
        "cursor": {
          "ref": "f4126d51-f0b7-4296-8fb7-7de5989b1e24",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d1aa030e-1509-4c6a-92cc-7d96c2c1ab62"
        },
        "item": {
          "id": "404d11d7-5cb9-43e2-bd2e-be347b40ced7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5a358077-fafe-4185-adc3-8952134a2230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a283b-bb04-40db-8507-b87c77250df5",
        "cursor": {
          "ref": "58ecd766-924a-4763-9f7e-51593c9b0658",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8416bfd2-b260-4963-adef-8087c7d086ce"
        },
        "item": {
          "id": "1a5a283b-bb04-40db-8507-b87c77250df5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81a57460-80da-4740-b905-103b81a72da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7331ee-cf99-45ed-a310-62b5083ed22d",
        "cursor": {
          "ref": "98410c8c-f894-457d-a3aa-28b07bebefe1",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0d63a0b-45d3-447f-a5ca-5ead9d37bc03"
        },
        "item": {
          "id": "aa7331ee-cf99-45ed-a310-62b5083ed22d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1a654e55-5111-49d6-afba-c29fcb89226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f29d22-f4f6-43f4-a4a1-b409d4980658",
        "cursor": {
          "ref": "9aa5d7c3-94c8-4623-a4c2-a7029769077d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "21ed5ebc-db73-4201-acc6-8a0ba0757fd9"
        },
        "item": {
          "id": "13f29d22-f4f6-43f4-a4a1-b409d4980658",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9c46189a-b478-4d46-a64d-f3b24db5957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1e6269-e588-48bd-9083-747cbbed85dc",
        "cursor": {
          "ref": "17012ffc-a46c-4d80-8437-697da5abf6e1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5a0af5a0-06fa-444b-ab4c-add362645d88"
        },
        "item": {
          "id": "1c1e6269-e588-48bd-9083-747cbbed85dc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c2cad5c1-d5eb-49bc-b5ef-c1d843d145a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12358fca-8b07-41f2-8789-bb6ff3ada3f6",
        "cursor": {
          "ref": "2d829c66-a958-4e1b-a10d-d0d0f40cbb77",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "29474e0b-3d14-474e-84c5-0a0dfda788d3"
        },
        "item": {
          "id": "12358fca-8b07-41f2-8789-bb6ff3ada3f6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a91327a-9db4-4e74-896b-00754a56c506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf43208a-4991-488a-8262-9453887c613b",
        "cursor": {
          "ref": "2419ac4b-e16e-4945-a84e-2bd019ec18d0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1480b686-117d-4e84-b866-a282c9421500"
        },
        "item": {
          "id": "cf43208a-4991-488a-8262-9453887c613b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "79ec1f2d-10d9-4450-87db-2b22e9a78ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65ae06b-f6ba-47a2-a937-7e6677284fad",
        "cursor": {
          "ref": "2cee1087-6825-45d9-9ecf-e3a5d6e74dd4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5dda7c41-66ad-45a0-bedd-bffe70c140a7"
        },
        "item": {
          "id": "f65ae06b-f6ba-47a2-a937-7e6677284fad",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "31b61c63-88e9-4e89-a6bd-cfd3c399406f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9e3ba1-543b-4d30-ae7c-b87df1cda423",
        "cursor": {
          "ref": "728c5cf0-e029-4287-895d-a36cfd29dd0e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e2318fec-d0d7-4fe3-b331-7761672bd447"
        },
        "item": {
          "id": "6e9e3ba1-543b-4d30-ae7c-b87df1cda423",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c9e4a8c9-03b0-4aae-9172-f41f430f7482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e20d55d-f328-4d23-a952-ae102dfca62a",
        "cursor": {
          "ref": "a3bdd770-b5d5-49fb-9516-c86d95f8bbf9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8c4a6f42-493d-4149-9ce9-115b0ba99692"
        },
        "item": {
          "id": "9e20d55d-f328-4d23-a952-ae102dfca62a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "74afb4ca-da2c-4389-8204-aa36d28dea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c798cce4-fdc2-4c1e-b618-604d8a6cddb4",
        "cursor": {
          "ref": "50a22082-c7b9-4028-8c55-c8bd480435c2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb10e7e3-6c50-463c-838d-76ba79b07f88"
        },
        "item": {
          "id": "c798cce4-fdc2-4c1e-b618-604d8a6cddb4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "21c03b27-b47b-45fe-8d22-c9ed5103cade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be40fd5e-efbf-4878-9bc8-c705e223228e",
        "cursor": {
          "ref": "003c82f8-542d-40d3-a3f0-f4147ae31dab",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "314187fa-ae42-4947-942d-8bf4def148fe"
        },
        "item": {
          "id": "be40fd5e-efbf-4878-9bc8-c705e223228e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4d212aa0-04d4-49fe-b962-1ffdc0c7bfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d813ab-34a1-4174-9a2d-195b291a4acc",
        "cursor": {
          "ref": "89cce462-7a1c-430a-9e7e-908dbc6fc770",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ea5d8a5b-1ce0-450a-975e-a3e12e3792fb"
        },
        "item": {
          "id": "24d813ab-34a1-4174-9a2d-195b291a4acc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5d9bc624-c48c-47dd-9a2d-478d8c8e9d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5502ec-b2b1-4769-8477-25d037a683aa",
        "cursor": {
          "ref": "69bf1d75-1041-4d3b-a3f5-3960dc4afa7f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e58f286-636b-46e4-99ba-96f834cd529a"
        },
        "item": {
          "id": "ed5502ec-b2b1-4769-8477-25d037a683aa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "556fe523-ce8e-4a26-9d8c-d4163f4c097a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf45469-13d0-4c34-9b41-af5d1f7dcc52",
        "cursor": {
          "ref": "dab0732d-6f85-43bf-a15a-05f42794600b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "80437903-a765-44d5-a7c6-c5541da301b0"
        },
        "item": {
          "id": "ccf45469-13d0-4c34-9b41-af5d1f7dcc52",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d4035a30-1715-4134-b047-338aa4a9de42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b056eb-3513-4b65-be7e-25fdf8e28b09",
        "cursor": {
          "ref": "34c46159-f126-4f74-abe8-419dd1305863",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6915a2be-2c1c-4ed9-b000-9715a5770673"
        },
        "item": {
          "id": "26b056eb-3513-4b65-be7e-25fdf8e28b09",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9ce7453e-a80e-401a-b537-97a858578263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa07abf0-4ebc-4df5-a1ce-19759fef09ff",
        "cursor": {
          "ref": "cadd5a69-aa70-47de-bf84-e041cdd1961d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b792db18-0f42-4bb4-a71e-653ebe823fd8"
        },
        "item": {
          "id": "fa07abf0-4ebc-4df5-a1ce-19759fef09ff",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f47c32e1-df74-4b70-8d0a-ad83a5d7a502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e9ab30-83c4-4c7e-a317-3fbdfa83e063",
        "cursor": {
          "ref": "196f9b15-2f24-494a-af04-0ce69ac2e379",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "945a75fd-67d4-40e1-813f-43508e716179"
        },
        "item": {
          "id": "30e9ab30-83c4-4c7e-a317-3fbdfa83e063",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0124bfb4-5614-43bd-8d92-efecb098e880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20fcd4-1ef3-48c5-8e27-c226b05e4220",
        "cursor": {
          "ref": "4c43b378-2b10-4f03-864e-4191a02d9222",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "46a46e24-0864-4b1d-8dcb-788de8014ac4"
        },
        "item": {
          "id": "fd20fcd4-1ef3-48c5-8e27-c226b05e4220",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77db36c6-67a6-4e5e-8b25-bc795b1345da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7581c14-ecc7-44b8-bf35-c4e642b633d6",
        "cursor": {
          "ref": "781102b3-f9fb-4b89-bbc8-1ad8c01db88b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "273df15c-0f55-4dc0-a9ff-f94d348b859a"
        },
        "item": {
          "id": "f7581c14-ecc7-44b8-bf35-c4e642b633d6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b6580e7c-37a5-4d7e-926a-e2b8bb3d17c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb008c5b-1c7f-4044-87a4-ac84ee93739c",
        "cursor": {
          "ref": "83cc40a2-0ff7-4799-b4ec-2b46b7830975",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "00d43db6-e6f1-4dc3-928c-0b8857cc9ce3"
        },
        "item": {
          "id": "cb008c5b-1c7f-4044-87a4-ac84ee93739c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "00dd9f68-ddfd-4385-b1ec-492ecc0f0f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7690b15-786a-4f1d-943c-87546de07ee7",
        "cursor": {
          "ref": "6452c2bc-4868-4e67-b75f-99d608c4db4d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "951a8377-8e9a-402d-afed-45418ad72028"
        },
        "item": {
          "id": "b7690b15-786a-4f1d-943c-87546de07ee7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ff7164e-1eb4-4fed-878b-58d5ffd84e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a581ab3-a38e-418c-b69e-6dc22a07ed48",
        "cursor": {
          "ref": "506bfd12-b301-4188-a400-ff893445b131",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dafb0b90-bb81-405e-9b40-dba7f5858239"
        },
        "item": {
          "id": "8a581ab3-a38e-418c-b69e-6dc22a07ed48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b186f81c-1d33-40a6-b708-d33a514f15ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943645f7-b497-420c-87c5-177f68ccf77d",
        "cursor": {
          "ref": "3c03b1f8-a15b-427a-b7a4-a2919cb6ecd0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "488574a4-193e-4463-a96d-a84a54dda1fb"
        },
        "item": {
          "id": "943645f7-b497-420c-87c5-177f68ccf77d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1ccca651-7671-4879-b1ef-b94470421259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e79ca50-5df0-4dd2-8300-2d630931444e",
        "cursor": {
          "ref": "fff71362-2b93-418f-8853-2dfc9e0457b4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "159745a7-b393-4b40-b852-0caeafbedeb3"
        },
        "item": {
          "id": "2e79ca50-5df0-4dd2-8300-2d630931444e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3a4ff9d8-115a-4423-b5a7-3579ef7a0566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca907cb-cfe5-46f3-a47f-1d90ae023f37",
        "cursor": {
          "ref": "006e7a32-fd9b-403d-8616-bb56e0cccb05",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ea819780-c0a4-4668-909e-c882287ee6db"
        },
        "item": {
          "id": "bca907cb-cfe5-46f3-a47f-1d90ae023f37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "66560d41-ceb7-468d-acc2-353ecc35dceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860927c7-3dc1-4467-bf2b-fa0c22e32d74",
        "cursor": {
          "ref": "4740b348-ebaf-4020-a3cb-85107797a6d6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a5fd9cee-e3bd-4af2-9b2a-bb725c403497"
        },
        "item": {
          "id": "860927c7-3dc1-4467-bf2b-fa0c22e32d74",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe286c54-3406-4a18-8c7c-d0ebd4d2b9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732ece97-26a3-4039-bce2-488ed6a2cade",
        "cursor": {
          "ref": "24dda9c7-5760-4b33-a298-e4d63cc82438",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5c4c3045-b6a1-4c13-9fce-2f7eef75c7fa"
        },
        "item": {
          "id": "732ece97-26a3-4039-bce2-488ed6a2cade",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "09a64093-0523-4387-b718-364d34308e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bf6e6e-eeeb-4379-9c19-38ebf7b865f9",
        "cursor": {
          "ref": "7462a2e4-d548-4044-8b4b-a77a53489b8f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e36d53fc-b5e3-4305-aca8-a7c7ab3b71ac"
        },
        "item": {
          "id": "c5bf6e6e-eeeb-4379-9c19-38ebf7b865f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e6f5777f-06dc-45ed-9602-0d208f7a161e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c9720c-278a-4ee4-bcfe-7820d3852eb2",
        "cursor": {
          "ref": "763819e6-4bbd-406a-b72a-9df07c393bf6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c12d8640-759e-4d79-8982-e87e0d8c6877"
        },
        "item": {
          "id": "a3c9720c-278a-4ee4-bcfe-7820d3852eb2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bd60dfbc-c42a-4a85-960a-37495688910d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20057869-940b-4c5e-897b-eb352f754e8f",
        "cursor": {
          "ref": "8e163b48-2d48-4f0b-a5b9-f9f4d5fd0ee5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8d420f14-f592-488d-b3f8-2c715d8ae6b5"
        },
        "item": {
          "id": "20057869-940b-4c5e-897b-eb352f754e8f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fb3d28e0-e2fe-4ef8-8bea-ad7f18fdddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4694d90-0da7-4907-a085-453da8d845a3",
        "cursor": {
          "ref": "707b41ed-2453-4ddf-8bb3-ce41f601eb1d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "191b44c0-4467-4e1c-9a97-6712695b4e6b"
        },
        "item": {
          "id": "e4694d90-0da7-4907-a085-453da8d845a3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7dcec2b2-7934-4df9-9425-b60ca12a5615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1e65a8-3542-4d03-9cc3-0d50df5db78d",
        "cursor": {
          "ref": "2d24d1c0-e320-42f8-8a87-306ad4dca601",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7566c005-19e1-406d-b86b-05442879a501"
        },
        "item": {
          "id": "2d1e65a8-3542-4d03-9cc3-0d50df5db78d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1426d3c3-abba-487d-a086-4023bd36be25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7616cd4-4fec-457f-8065-1d02c15aaebc",
        "cursor": {
          "ref": "1b671e9d-6511-4de4-941e-1c33424c27b2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ffbd0617-c352-4cf9-8580-12d7a101139d"
        },
        "item": {
          "id": "b7616cd4-4fec-457f-8065-1d02c15aaebc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4dcb8087-f9e8-493f-8008-5a3167421e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6282a8a6-70fa-4539-9164-5086a2c45829",
        "cursor": {
          "ref": "d4a6571a-66c6-4b15-82fb-fc5ce6badb49",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "27c8d5e4-aa24-451a-af76-2341da53f1d3"
        },
        "item": {
          "id": "6282a8a6-70fa-4539-9164-5086a2c45829",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3c0ccd32-fde9-45c5-ae20-04f9c2e47023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc519856-44d5-4e65-92c3-44952133ab6d",
        "cursor": {
          "ref": "1ba2f15d-dd86-498b-b756-bfadae68d0bf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "763ab202-1d00-42c0-ad25-83b673be1ae2"
        },
        "item": {
          "id": "cc519856-44d5-4e65-92c3-44952133ab6d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "da71edba-a06e-437e-8151-39da300eb161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ec09b0-2520-4277-a8af-bb12a6f2b29a",
        "cursor": {
          "ref": "d25769d1-39fa-414f-b664-f5f7de10150d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "498c28cc-35dd-4d40-b26f-d385dbdcb876"
        },
        "item": {
          "id": "94ec09b0-2520-4277-a8af-bb12a6f2b29a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b1726d16-2169-4907-bacb-4d08f759c645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c35fc1-c32e-4b39-8b0e-7620877841c4",
        "cursor": {
          "ref": "6f32439f-b861-4533-ae30-c158f6b83409",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c3557d01-2ae9-4919-837d-1cf160f397c3"
        },
        "item": {
          "id": "c6c35fc1-c32e-4b39-8b0e-7620877841c4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ae8262f3-feef-400b-8958-6e8327b070cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4904c6a-01c6-4ac9-b3e7-1d9213aedf35",
        "cursor": {
          "ref": "0e2a48ca-568e-4d6f-a2f7-ad9ed9f2c3fa",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "608e9160-978d-4a54-939e-5b1dcc70f478"
        },
        "item": {
          "id": "c4904c6a-01c6-4ac9-b3e7-1d9213aedf35",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d437b565-6234-4bc6-ade6-3b688287adc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0be47c9-001f-43c9-a485-d869fbe4b4e3",
        "cursor": {
          "ref": "c22021ab-99d7-42fb-8a53-79e81625f82c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "881b8941-e04a-4297-9f6d-1974d589b87e"
        },
        "item": {
          "id": "b0be47c9-001f-43c9-a485-d869fbe4b4e3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3dc3f621-2c8a-45bb-a126-97061d7bc28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ddcbec-5563-4d9e-87b6-baec64d94f53",
        "cursor": {
          "ref": "baa948ea-e709-4c6a-94fc-9392652ab34d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f06cc020-068a-46ba-ace0-4e2aadf9cf12"
        },
        "item": {
          "id": "b0ddcbec-5563-4d9e-87b6-baec64d94f53",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1292678d-fe64-4162-be5e-14fd8ef7651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98374dd-f3bd-44d4-ab25-1b065622ba62",
        "cursor": {
          "ref": "50bfb6d2-4eb8-4a80-bdab-ea50a5a0058d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "469cca71-49f5-44c9-a62f-693c6dddbfdd"
        },
        "item": {
          "id": "e98374dd-f3bd-44d4-ab25-1b065622ba62",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "146d887a-3efe-4ba6-9516-b0e503051e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e95ee2-5eeb-4aa7-9fb7-0e05c1bd5d21",
        "cursor": {
          "ref": "bd006491-bc8b-409a-83f0-bb0b4d9422f6",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "050b7cc7-1552-47a2-abc1-51eb3fef70ba"
        },
        "item": {
          "id": "b3e95ee2-5eeb-4aa7-9fb7-0e05c1bd5d21",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1d9363ad-0b70-40d1-9e86-89f758614c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f5848c-d3db-498d-8c96-a6f87c35e137",
        "cursor": {
          "ref": "ab5cfe19-412c-40eb-b010-9445298381c3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e68af3a8-5771-4a23-b84a-f21c085161ce"
        },
        "item": {
          "id": "56f5848c-d3db-498d-8c96-a6f87c35e137",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c4c3f985-000c-4ba3-81da-7e2373890f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067da715-abbd-4d81-b2ff-3d1dea71db49",
        "cursor": {
          "ref": "12897dcc-54bb-427d-9157-f05b3c841096",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "62e82584-eaf2-4a15-955f-4e75217b0e60"
        },
        "item": {
          "id": "067da715-abbd-4d81-b2ff-3d1dea71db49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3906149e-599e-4daf-88a9-a19926ebe6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac5e42-2527-404a-b071-62be2c8213c8",
        "cursor": {
          "ref": "d077ff42-b4f0-4fe1-9e92-86d2c7fbf2c4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e235898-0e14-4488-bd6e-52a32bab16a9"
        },
        "item": {
          "id": "afac5e42-2527-404a-b071-62be2c8213c8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3f4373ba-c7fa-4074-9204-b041e249ae3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677bf0e7-5240-4a0c-a2c3-eb6067e9adb6",
        "cursor": {
          "ref": "936c36bc-070f-4b2e-84cf-c9c329135cd1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f6c428a0-78e8-4813-88d6-7a060df6b2d5"
        },
        "item": {
          "id": "677bf0e7-5240-4a0c-a2c3-eb6067e9adb6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "91bbef36-f261-45b1-82e6-c6594d191304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be823eab-38d5-418f-bb13-d56eff3baeaf",
        "cursor": {
          "ref": "9166a260-69b1-49d5-b689-6004a6e668ff",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6ff9a6d9-129b-446e-8136-c8c708232673"
        },
        "item": {
          "id": "be823eab-38d5-418f-bb13-d56eff3baeaf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e855569a-0540-4765-8242-3c365dc35df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8177c922-3351-4a0c-9e67-059f3a459bb3",
        "cursor": {
          "ref": "6d4e1265-3647-4cc4-bb19-19520ef6823c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "246b43a2-54c7-4dea-a97e-7456f0e77b1e"
        },
        "item": {
          "id": "8177c922-3351-4a0c-9e67-059f3a459bb3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "58b0a01b-9cfc-4181-bb2a-5c9d729a9df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162be60e-b348-4422-b9f3-c8fa1ae9937b",
        "cursor": {
          "ref": "7cae2385-d059-47a8-ab5b-8b3f5dfaa062",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fbfdda8e-aefa-4374-8906-cdad7c9186e0"
        },
        "item": {
          "id": "162be60e-b348-4422-b9f3-c8fa1ae9937b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "73a6b673-5370-42dd-84a0-f46972094eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07350668-f5c9-465f-9f0e-a00bedcd66fd",
        "cursor": {
          "ref": "c2e5757c-6601-498f-a6ae-e0a834ee1cd3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "94599d38-6062-4c8f-b9bb-771d178ffbe9"
        },
        "item": {
          "id": "07350668-f5c9-465f-9f0e-a00bedcd66fd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1e052b6f-2b7a-4b61-9745-87613135038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e39e0d-568a-4cda-80c7-e0cc3597fcde",
        "cursor": {
          "ref": "bbb5676e-22db-4a2f-acd2-c46ca91865a6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7eacbb34-2839-424f-8c48-6f2511954909"
        },
        "item": {
          "id": "98e39e0d-568a-4cda-80c7-e0cc3597fcde",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dbf5557f-d3fb-4de8-8dad-cee573f874d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a96975-4e3a-44c1-8421-d0c9a18ff495",
        "cursor": {
          "ref": "c373fd96-2b2f-43ac-b0ed-48ceb1787fab",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9647f94d-db68-4392-8522-24b100e6b04d"
        },
        "item": {
          "id": "d6a96975-4e3a-44c1-8421-d0c9a18ff495",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9b0b9857-ed56-48ec-9976-8120e8f44ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ce903e-ad83-4b93-a9cd-b269ded854ab",
        "cursor": {
          "ref": "b95d2d1f-a428-4cb2-b17d-eea4828d242e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6e8456ff-1d61-477a-82e2-e5831e442c79"
        },
        "item": {
          "id": "66ce903e-ad83-4b93-a9cd-b269ded854ab",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "12c044fa-c133-4a51-8b3b-4b74d25762b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8932a238-58ba-4ba9-83a8-4445503d1502",
        "cursor": {
          "ref": "07facc03-7af8-4045-8958-5517bccae3f8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b7565198-d833-4866-a67d-beda24670e1a"
        },
        "item": {
          "id": "8932a238-58ba-4ba9-83a8-4445503d1502",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "27ce8be8-565c-4c2c-a247-56e3044e035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2b49ec-001e-4116-a706-c061a01c8ca5",
        "cursor": {
          "ref": "98839361-3859-4e26-a1c2-60e18a69bb19",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca56c2ef-b484-41cb-bf44-6893c28663ff"
        },
        "item": {
          "id": "5d2b49ec-001e-4116-a706-c061a01c8ca5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c14cade6-6c24-4e50-b783-6f46cc5436a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d42760-9a69-4533-8fae-c010f1cb0972",
        "cursor": {
          "ref": "45a25f8d-c5d1-42f0-8cd9-f1d414a4d55c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5abd3b5a-9069-46bc-91c3-c14d679be642"
        },
        "item": {
          "id": "f5d42760-9a69-4533-8fae-c010f1cb0972",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "06e3e2fe-af8f-43e8-83f0-5b71a3b4cd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0036f81-b8b1-4d04-95b8-17993e03b7b4",
        "cursor": {
          "ref": "988266da-23e6-4757-8b0e-839f5c34a326",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "471f94bf-5f75-425f-9df7-5e836b89cb65"
        },
        "item": {
          "id": "f0036f81-b8b1-4d04-95b8-17993e03b7b4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f1c099d1-c192-47a7-99b0-fc05fe94d432",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3ae2a6-06ac-4482-8d0f-63ace1014669",
        "cursor": {
          "ref": "cdbae428-74c7-40c9-85be-76f1d4902e77",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0270888d-5b76-4686-864e-fda983330269"
        },
        "item": {
          "id": "0c3ae2a6-06ac-4482-8d0f-63ace1014669",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "54c0d176-e393-49f5-acd5-7e1b1dc9a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6aabe564-5f26-403a-b8a8-afb58f7f6b46",
        "cursor": {
          "ref": "1ec79ab7-2fbf-4de6-b316-e9c7af9f95ff",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "91947049-827f-491b-8cff-e4f561571f54"
        },
        "item": {
          "id": "6aabe564-5f26-403a-b8a8-afb58f7f6b46",
          "name": "credentials_issue"
        },
        "response": {
          "id": "169fcff1-0bdc-4059-abda-1bdcd64e6094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3fb2eeea-244c-409a-a522-4f592472e0f5",
        "cursor": {
          "ref": "98e06b2d-f652-4e9f-b42c-87a69f0dfca0",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5024b040-1b5a-454b-b164-1947327c844c"
        },
        "item": {
          "id": "3fb2eeea-244c-409a-a522-4f592472e0f5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c0b04932-5f38-445d-a4b7-7e70590092c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "12381c75-ed69-4fbe-8f91-d46cce38c346",
        "cursor": {
          "ref": "dec9761a-fc37-436c-a0c3-7b3dbcd336b3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "33e6eb26-3e70-4aa5-a9d9-375c5d036427"
        },
        "item": {
          "id": "12381c75-ed69-4fbe-8f91-d46cce38c346",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a287916-2dd6-4b77-be8b-3cd8be51da30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "eaeebe07-99a9-48a0-881f-fe671a9565cb",
        "cursor": {
          "ref": "b73be935-2a37-494a-9b88-ca09b6d6b514",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9e178ce2-0e30-4097-8a12-28cb99c9d76b"
        },
        "item": {
          "id": "eaeebe07-99a9-48a0-881f-fe671a9565cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "be5ab293-5916-461a-a6b4-4e21315ab8e7",
          "status": "Created",
          "code": 201,
          "responseTime": 11041,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d491ba0-170c-46d2-9722-2dde0036b519",
        "cursor": {
          "ref": "97f0c6d3-aa47-42cd-a58a-2aadfe6faf20",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3019b240-68d1-42cc-9d50-5e61ff9c0bcf"
        },
        "item": {
          "id": "6d491ba0-170c-46d2-9722-2dde0036b519",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7b0afb1c-acc5-479b-9b59-e6d50250cbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "209afad2-9448-4704-bb03-4ace53dbb0ac",
        "cursor": {
          "ref": "3b5c2e37-fe9e-416e-80ad-eaac0b16b64a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e6829427-5ef0-46a9-a563-eb45103f3e46"
        },
        "item": {
          "id": "209afad2-9448-4704-bb03-4ace53dbb0ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c3ec1745-5c5e-42ff-90fa-369f9b404aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d5b10335-08a3-46ec-b207-e6add19eb5e6",
        "cursor": {
          "ref": "76688f5d-d6e8-479a-9778-1844e41eea5f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d66a989f-839a-4a80-b2ad-de0183acd58e"
        },
        "item": {
          "id": "d5b10335-08a3-46ec-b207-e6add19eb5e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "115c248e-1fe0-4743-a881-7221f6a80e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe50a80-6eaf-4773-b9a3-03a0dcd1fe18",
        "cursor": {
          "ref": "6ee2096c-63e8-4344-a3eb-5af3db26553d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "50c16dd1-9fab-495d-a809-c7caea3a882b"
        },
        "item": {
          "id": "5fe50a80-6eaf-4773-b9a3-03a0dcd1fe18",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dd606303-58a7-4d00-af7c-985155722063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46249c2b-d910-413c-b5b5-ff8af2c50c4d",
        "cursor": {
          "ref": "cc54d484-639f-417c-a16d-864b91065496",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1c907225-e98e-413a-9793-6648246739df"
        },
        "item": {
          "id": "46249c2b-d910-413c-b5b5-ff8af2c50c4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9370a21e-02e2-4c13-afeb-fc76a857754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c642a6-9c05-4337-b8b4-be469d739f23",
        "cursor": {
          "ref": "1231f488-fb36-4987-a785-8034171b4415",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0f0460ca-180e-4044-b848-61ad8f660064"
        },
        "item": {
          "id": "93c642a6-9c05-4337-b8b4-be469d739f23",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "75a4fb89-f107-454a-8c73-82b7505b8c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d625f-3a49-416e-acd0-ee574096c97a",
        "cursor": {
          "ref": "dcf97099-25f2-4376-b50c-2009f5f192b9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f13b112-7c20-4593-b7f5-9956129db9a0"
        },
        "item": {
          "id": "381d625f-3a49-416e-acd0-ee574096c97a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1ab4e478-fa21-4848-8b3f-17ec60bc7e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cc92e6-eba7-449a-9f71-70f12069fcd2",
        "cursor": {
          "ref": "84430e73-d1bb-48b0-84e7-adf7e243c9f0",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4a5d9856-b51e-490f-8ad2-a66577b46da4"
        },
        "item": {
          "id": "a4cc92e6-eba7-449a-9f71-70f12069fcd2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "901ec83e-bc7c-497d-b9da-245368686e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bb2934-afbc-474e-9dde-3dfb4df0c0a8",
        "cursor": {
          "ref": "45425936-28e7-4935-a61d-da0dfd610fab",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "57c7a0e8-4a6c-4321-975e-fb150d83c360"
        },
        "item": {
          "id": "81bb2934-afbc-474e-9dde-3dfb4df0c0a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "95492159-866c-4257-a20f-ba63ac877695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c737a8-7e53-4333-bb53-a2196fc3dd06",
        "cursor": {
          "ref": "5ddaeb58-cb04-4fb0-9ad5-940d051f8c99",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "35ea360f-4c34-4dd9-a238-ea54baa0c93b"
        },
        "item": {
          "id": "32c737a8-7e53-4333-bb53-a2196fc3dd06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50a3dcc5-cd75-4669-a4a8-cedd86f1968a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ce0bb-0dce-4d73-8988-14c231651315",
        "cursor": {
          "ref": "6ca28d26-cc88-47d5-9e5d-a39dce168701",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e786723d-75f8-4ace-9321-eabceabcc430"
        },
        "item": {
          "id": "150ce0bb-0dce-4d73-8988-14c231651315",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ea274f9b-8720-42b0-8b7b-127ab3ffa989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915efe7c-dae5-449f-b062-8c23242d0d5c",
        "cursor": {
          "ref": "e52e08e0-bcd5-4cf8-a4a5-eb7135e99796",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b25dcf00-5b42-4b0b-96e6-dabbcd65e0d5"
        },
        "item": {
          "id": "915efe7c-dae5-449f-b062-8c23242d0d5c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ac748c25-fe8d-4eb6-b804-8b7635961a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b75fe35-8603-4c27-b36f-da979dd4684a",
        "cursor": {
          "ref": "db69938f-d67d-474e-b8a7-ae418ddb94db",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "962628af-c366-43a9-8a78-79e476f5774e"
        },
        "item": {
          "id": "6b75fe35-8603-4c27-b36f-da979dd4684a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a7e2448b-39e7-4a60-a2f5-b1ed3958b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7edb0e-80db-4f19-8f43-cf1577b281f6",
        "cursor": {
          "ref": "0e3341fe-dab3-4dc4-a8ac-6ba2e05d295f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "702821d6-035a-43f4-875b-2f353868b296"
        },
        "item": {
          "id": "ce7edb0e-80db-4f19-8f43-cf1577b281f6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aa0fe58c-8916-4888-98bd-2c0c4506a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75206da7-0698-4d35-9294-1781fd94050a",
        "cursor": {
          "ref": "213d045a-f098-4917-9392-0ab6e8d6d541",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7e96d3a4-9254-4641-951d-4c476a91cd14"
        },
        "item": {
          "id": "75206da7-0698-4d35-9294-1781fd94050a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3505b09a-f3d5-44a1-b036-4c2f690a4659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e83160-d8a2-41fc-815b-c037ba36c3ec",
        "cursor": {
          "ref": "eb6fdf28-af29-4355-8434-45444556061e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5c903d37-a5b1-4a46-8991-5be7a028f4b2"
        },
        "item": {
          "id": "29e83160-d8a2-41fc-815b-c037ba36c3ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff159aea-9d3f-427f-bb56-eb3205188cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad73b97d-b646-4834-a897-ddbb0afbf4f2",
        "cursor": {
          "ref": "0ebaaec0-7478-4102-9e49-6b84fbb6cac8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "22e5663d-98cf-4770-9f3b-e013bc5b7fd0"
        },
        "item": {
          "id": "ad73b97d-b646-4834-a897-ddbb0afbf4f2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2a1329ad-140d-4dac-87bc-2f46064f0d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9991f380-48fd-492f-8573-8b982c507b5a",
        "cursor": {
          "ref": "b33d868d-4437-4986-8b49-cb443de7e444",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7dd5352f-9d17-4630-bc1f-f00f0cf0219f"
        },
        "item": {
          "id": "9991f380-48fd-492f-8573-8b982c507b5a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f40b90e1-668c-49ed-aef5-35b6728ef35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b5d69d-1adc-47d7-afd1-f410673a325d",
        "cursor": {
          "ref": "2c8be9f6-5352-4f74-99ae-b152c6ab60a1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "654621d6-e6cb-491e-8ee9-08649bd4aeb3"
        },
        "item": {
          "id": "66b5d69d-1adc-47d7-afd1-f410673a325d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "38c591ac-6720-4c60-b897-6f2a036cb3dd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "96fc539e-cf3a-4902-8b33-3319b9b4c12e",
        "cursor": {
          "ref": "464852fb-f83d-4a99-a75c-3a5224022827",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2f54e5ec-d9a2-4d49-aaf6-949fb2b4a385"
        },
        "item": {
          "id": "96fc539e-cf3a-4902-8b33-3319b9b4c12e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9ea3c6de-441d-4d56-8ac9-4ef6fe38e313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd940d70-da90-4c89-811a-bd83f6b12858",
        "cursor": {
          "ref": "7f18a50e-0c6a-4236-b314-6125f8460639",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4c4d45b-5e6f-457f-af2a-bcaeaaa6a672"
        },
        "item": {
          "id": "dd940d70-da90-4c89-811a-bd83f6b12858",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0175c694-7b56-4348-98e5-7dfc87cf403b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651926b4-65b5-4d3c-83d4-e049c628645a",
        "cursor": {
          "ref": "14a94f60-5dbe-4915-8ab5-5d5a39e2cabd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "adfd315a-0d03-4375-9b72-883991b0a541"
        },
        "item": {
          "id": "651926b4-65b5-4d3c-83d4-e049c628645a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "96c92084-73fe-4a2a-b8d2-4c1758b8dd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325d96bd-4e42-467f-baf4-9133c37ff22e",
        "cursor": {
          "ref": "52a81f62-89d3-4e06-bb06-e1ecd0b3c1b8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "076fdcb4-a36e-4a8a-905d-199a2058894e"
        },
        "item": {
          "id": "325d96bd-4e42-467f-baf4-9133c37ff22e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7a54835d-7bf3-4acb-a571-fae8ba58f8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed3b3a-a733-43b4-913d-e5379518c702",
        "cursor": {
          "ref": "0a87a804-7f02-48d8-88b4-764a33b4179f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "88278cad-7438-4c52-84e6-58cbb0dfb982"
        },
        "item": {
          "id": "90ed3b3a-a733-43b4-913d-e5379518c702",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3252b0f9-4f41-43d7-83d6-e58057158772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930f49fe-543e-4097-beff-41b75fc614c9",
        "cursor": {
          "ref": "747e58e5-ce43-46f8-b7d8-3d1c253e259a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f96b4eed-a3ca-4a1f-abaa-bf39f6d71a54"
        },
        "item": {
          "id": "930f49fe-543e-4097-beff-41b75fc614c9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f6cce58-260b-4584-a595-9623cbc15d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10c3747-51ef-4a39-8245-d55b67a935a7",
        "cursor": {
          "ref": "3ca50eb0-1bb4-4d4c-80b7-2335da6d8e6b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "708580df-5f4b-4faf-a7f4-641573eb9754"
        },
        "item": {
          "id": "e10c3747-51ef-4a39-8245-d55b67a935a7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b1ac3a87-40f3-4c8e-8ca6-193d1dd51db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cab288c-007a-4174-aea7-0048c89c0713",
        "cursor": {
          "ref": "2cc7fe5c-052d-4585-a591-3f0063b57f0f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bfc28d56-8e1e-49e7-a330-8e82be54c737"
        },
        "item": {
          "id": "4cab288c-007a-4174-aea7-0048c89c0713",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b32cc239-044d-4634-b3ca-0f4f978ab13f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "86191277-f2b6-49fe-8f78-730f18aa97ca",
        "cursor": {
          "ref": "b90eedac-5491-4b88-ac80-380ebdb0cbfc",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8f69d7f0-1412-47c7-b702-e303bf6e4383"
        },
        "item": {
          "id": "86191277-f2b6-49fe-8f78-730f18aa97ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "28fdc05f-0abf-44a8-aef0-462eb3bd15e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee748db3-8642-4244-aeb1-8e864bdda2f2",
        "cursor": {
          "ref": "29672aae-fdec-4522-ae94-8aa191ef9d8b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "27a3bb14-0d0e-4200-ac71-d4eb1d6fed55"
        },
        "item": {
          "id": "ee748db3-8642-4244-aeb1-8e864bdda2f2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "92fb9c57-d996-4089-a2c7-fb05c41945dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ef0cba-192b-4165-93ff-d8ca97644313",
        "cursor": {
          "ref": "9485a9f2-7678-4149-aa03-d5594f8ebd3f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f69f6910-4e88-44a4-b086-6fbd8c7d9bbd"
        },
        "item": {
          "id": "21ef0cba-192b-4165-93ff-d8ca97644313",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e4a5b781-b71a-4bec-8074-6d458f21b1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82251d79-30ba-4b0e-ad2d-70a8f0c27e2a",
        "cursor": {
          "ref": "06a19e67-c441-4845-a2e1-e2a4ef244247",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6e54d49b-15a1-4ab4-9905-8b46f76e935c"
        },
        "item": {
          "id": "82251d79-30ba-4b0e-ad2d-70a8f0c27e2a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4ae00b2-9164-4e62-ad4f-df0c04ddae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7cb686-a890-46c5-9219-63454ced52c7",
        "cursor": {
          "ref": "c0d89d27-c1df-4d47-b06d-7fd1933ae9d6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3bce53e9-cf15-49a9-b39a-f4e02a06ae86"
        },
        "item": {
          "id": "ae7cb686-a890-46c5-9219-63454ced52c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "295bdcf0-8ce0-4789-adf9-c53650ac6af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950b3fa1-b84b-4516-8fe9-febf880a6586",
        "cursor": {
          "ref": "cd2ed054-e55b-4d0b-a9da-1a349eb79dc5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "96f7ed79-7eb8-4e17-a3db-2163b34ce35c"
        },
        "item": {
          "id": "950b3fa1-b84b-4516-8fe9-febf880a6586",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ca70722-ed77-407a-961a-7baba1ff9037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeafa48e-bb1a-4f95-9e2d-5680b5405251",
        "cursor": {
          "ref": "b503717d-6a6c-4ef0-9391-23af1d9a101e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d1caeb15-f0db-42e5-98cc-beb4f50a25e3"
        },
        "item": {
          "id": "aeafa48e-bb1a-4f95-9e2d-5680b5405251",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cd56c2f0-7b2b-4fd7-b674-6740f3c727f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4e0ce111-d811-4024-87f4-674197075d3d",
        "cursor": {
          "ref": "b1318c12-f368-410a-bbd1-29d4b637a96b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "255f5d45-a9a1-4ac5-a27e-4752e9f0a466"
        },
        "item": {
          "id": "4e0ce111-d811-4024-87f4-674197075d3d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "14d8ec0f-2254-4598-9ff6-007a07062c12",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "115fd777-6873-44f1-9c3b-cc87f2c8ab5b",
        "cursor": {
          "ref": "71485f83-cf3a-4938-9b33-b215df2918ce",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "02c9dd26-d6e9-49bb-8ec1-10073fd01a5c"
        },
        "item": {
          "id": "115fd777-6873-44f1-9c3b-cc87f2c8ab5b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8085f815-da5e-4590-8376-1ffda8751b19",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f848e598-90c0-4a29-922d-f4f7f06bc15b",
        "cursor": {
          "ref": "d7dba896-59e3-4f36-9d4f-cd139af74046",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1f69264f-8dbb-459c-a89c-a45ec741818e"
        },
        "item": {
          "id": "f848e598-90c0-4a29-922d-f4f7f06bc15b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0d74951a-b06e-4ca0-9d32-eb9348586038",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a5278849-0605-4f6b-8b8c-e8b77baf0e17",
        "cursor": {
          "ref": "4d45895d-2b3d-4c45-894f-7afb53d99784",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7fe2bb88-13a0-4e40-827f-017bf6871bc0"
        },
        "item": {
          "id": "a5278849-0605-4f6b-8b8c-e8b77baf0e17",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fb14c48f-6429-4076-910d-4dba5b14f2b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3118a7a7-efc2-481f-addc-87de8409810f",
        "cursor": {
          "ref": "df27746c-efb2-4de4-949f-110140440a60",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0b460e4c-371f-4c9e-8a5f-a09c73f9158d"
        },
        "item": {
          "id": "3118a7a7-efc2-481f-addc-87de8409810f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8d9d3a3d-fcb3-4937-a506-17f2f41e850e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6d873ec1-1790-490e-9641-bcd332bed662",
        "cursor": {
          "ref": "e94a7aac-ac7c-4526-936c-a8e223d8c852",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c9ea33bd-85be-4430-8628-c74a1a9ebe88"
        },
        "item": {
          "id": "6d873ec1-1790-490e-9641-bcd332bed662",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "29300573-ef31-43bb-8a88-e5e9434df402",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a3111-bc08-4c08-bc10-cedc7b43a71f",
        "cursor": {
          "ref": "ed26bd53-beeb-4dc1-b6c8-a7e945aee23d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "80275c18-7cfe-4995-8b26-206c6204c392"
        },
        "item": {
          "id": "995a3111-bc08-4c08-bc10-cedc7b43a71f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b8008e8-d153-4c10-af0f-50d6f9122048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5356a353-0a08-4b93-82ea-b6754ab5a9af",
        "cursor": {
          "ref": "fc5b9dd3-2b68-4f4f-9b5d-b69e64a21399",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a0cdfbe6-bf08-4610-94ab-318fa6b050f8"
        },
        "item": {
          "id": "5356a353-0a08-4b93-82ea-b6754ab5a9af",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8464d6d4-c787-46a0-abfa-544ba0680600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a65bc22-9d87-4e54-b467-b7c3d7ae1be8",
        "cursor": {
          "ref": "73582088-ca70-4803-b58f-91256a3f07da",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "78e74e3e-d8e3-49d6-8dfc-5c95f5054f66"
        },
        "item": {
          "id": "1a65bc22-9d87-4e54-b467-b7c3d7ae1be8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e7de0989-eb9c-43be-b3a7-3c9ca1fb2cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e9cda6-4e90-4612-97a7-588494885447",
        "cursor": {
          "ref": "2d56f765-6211-462c-afd7-485ae6340860",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dfb2e8fa-20a1-45bf-9027-2d239492a43e"
        },
        "item": {
          "id": "13e9cda6-4e90-4612-97a7-588494885447",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "db7103e9-8e9e-4beb-935a-8b34883dc287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a347e8b0-2011-40f8-aa79-0b806b4c9112",
        "cursor": {
          "ref": "d7b23645-af23-40cd-9f2c-26748f47a9ac",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d3010dfa-f0cf-4be8-82bd-caee6aaebdf7"
        },
        "item": {
          "id": "a347e8b0-2011-40f8-aa79-0b806b4c9112",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "752985f8-abfa-4e74-8cef-855dff5d6775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cdc430-6f9f-40cd-bcf5-2b91ea04d9df",
        "cursor": {
          "ref": "074114c6-79c1-4ce6-a3b6-02d4279a18db",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "152b1b47-f893-42e5-b5c3-50c1f446d803"
        },
        "item": {
          "id": "f1cdc430-6f9f-40cd-bcf5-2b91ea04d9df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6a2c8bc2-f041-4a5b-842e-e718d3ca21d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d8a7b3-93f8-46a0-b428-6f46cba0f3ea",
        "cursor": {
          "ref": "c2374c1c-d835-451a-a9ec-de6bb78861e8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd63e81c-a32f-4e0a-8b44-e47b2c97de25"
        },
        "item": {
          "id": "e8d8a7b3-93f8-46a0-b428-6f46cba0f3ea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1dc29fc5-4fb1-44b2-a267-5d4856dd0645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d118dc-f6c1-460d-9694-7c30f1fa7c93",
        "cursor": {
          "ref": "d840ccd7-c6b7-416f-984a-551207d1a386",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7e876899-f834-4416-ac81-678f28184492"
        },
        "item": {
          "id": "37d118dc-f6c1-460d-9694-7c30f1fa7c93",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aab4cea4-3557-4716-a2ff-dd153c788014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f5edae-d956-4c83-8853-3e557d881dcc",
        "cursor": {
          "ref": "dc39d2a1-5716-4b89-95ad-03c6e0e8b1d9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fa969807-d934-450e-92c3-70d4249bda26"
        },
        "item": {
          "id": "50f5edae-d956-4c83-8853-3e557d881dcc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6a9dc4a2-df49-4822-9b15-ea26e8b761fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ba6e5a-0b87-49da-b253-58c4b717cdf2",
        "cursor": {
          "ref": "1f5151d0-2632-46ca-952b-48ddd081c889",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c8b8eba8-bfe8-430d-9a05-faad50eefb5e"
        },
        "item": {
          "id": "87ba6e5a-0b87-49da-b253-58c4b717cdf2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "81000b5a-a7f5-407d-8dab-128ed96ab5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5194bf84-cb98-4402-99ab-147c5b44c262",
        "cursor": {
          "ref": "57d1b3d0-80f8-4ffd-bd18-88b6564c167b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dae48760-e2d5-4ae9-867e-8df3f026c9df"
        },
        "item": {
          "id": "5194bf84-cb98-4402-99ab-147c5b44c262",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "81a5320f-7e78-4bdf-8e45-97059a50630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47900b59-6044-4685-a9ab-d6708b686a2a",
        "cursor": {
          "ref": "9614bebc-9dc1-4f0c-9c2b-c41e5f245d4c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e2e1db7-9ca2-46f9-82bd-2309df329f0e"
        },
        "item": {
          "id": "47900b59-6044-4685-a9ab-d6708b686a2a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a18d41a0-b731-4db0-97c2-681d21bcbee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711ab970-f728-44be-b770-13cb074943a3",
        "cursor": {
          "ref": "c6e000d3-bcae-418c-b22c-e08df30dc1e3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ae4be88c-1f3e-4653-91b6-9303ec457fca"
        },
        "item": {
          "id": "711ab970-f728-44be-b770-13cb074943a3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "771a80d9-b4c2-482e-8fb0-15a4d96394b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d30747-229d-4ac6-9635-2f4c04a8b80c",
        "cursor": {
          "ref": "f1833b8c-b2a7-4fe2-a41a-3518883be10e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "929dc0d6-92c7-4f71-98ae-7c74727f670c"
        },
        "item": {
          "id": "88d30747-229d-4ac6-9635-2f4c04a8b80c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7422fcd8-283f-47f0-8b2d-69e79af2ab78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaa476d-56ed-4ac0-aa98-bd1ef594970b",
        "cursor": {
          "ref": "8edd4fea-8a6e-4fe1-a186-d478f5451c1f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2ff4f1ca-2bc4-41f9-a484-b42c5909ec2c"
        },
        "item": {
          "id": "afaa476d-56ed-4ac0-aa98-bd1ef594970b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "72fa7c82-df6d-4bc0-ab6f-43fd04093e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd31c592-baf8-4e8b-b72e-42058599bf19",
        "cursor": {
          "ref": "6f322b51-74de-4e6c-a09c-7a517bcbffca",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2b9f9c38-19c8-4e9f-af76-1e0cc31a9bca"
        },
        "item": {
          "id": "dd31c592-baf8-4e8b-b72e-42058599bf19",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e29668cf-29ad-4cea-b850-b6ae80779a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfdbe56-fdda-4db8-9462-4a190f57f56a",
        "cursor": {
          "ref": "2babbcc0-5aba-443a-814e-6c4280be4791",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bde5905d-7f45-4cd0-9c2f-dfdd4a9602bf"
        },
        "item": {
          "id": "ecfdbe56-fdda-4db8-9462-4a190f57f56a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "140edf9e-a990-44f7-8848-76b3ed1737ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56df8a93-1826-4e8c-9908-b9f20f3d2ca3",
        "cursor": {
          "ref": "07310bfb-5f67-4dcb-bb69-9b4388a323da",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f5270609-bd2b-42f4-b83f-3d11c9643f9c"
        },
        "item": {
          "id": "56df8a93-1826-4e8c-9908-b9f20f3d2ca3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "64894e3b-2a53-44b5-b959-5f5306689c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869b6833-7245-4621-842c-303f2c8b98e9",
        "cursor": {
          "ref": "194be08d-e6c7-4c36-a95b-c3096a621e7f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e923649d-c1e4-4cbd-be3f-8047f46541f4"
        },
        "item": {
          "id": "869b6833-7245-4621-842c-303f2c8b98e9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d10a7b25-74c7-44da-be8e-c64b6a355f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49f4e2e-f031-44e3-8447-4c91c9ba6a6e",
        "cursor": {
          "ref": "ec585d96-2aa4-4288-bb93-7820b08dc91f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2f04f8f-4bab-45c6-86f1-82d4a5f7a8ab"
        },
        "item": {
          "id": "a49f4e2e-f031-44e3-8447-4c91c9ba6a6e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cedff2fd-285b-4c14-b8e2-8d31e41d7f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc1cddc-7f5f-4cc3-8ffa-634ca7a5b003",
        "cursor": {
          "ref": "34dd1974-be16-4b4e-bdfc-6bde2e85a0e0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2020413c-e4fa-4676-adb4-2edb34da1271"
        },
        "item": {
          "id": "2cc1cddc-7f5f-4cc3-8ffa-634ca7a5b003",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6c7f2be2-e3c5-47dd-9798-482d3fd39798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc61b02e-5b97-4462-8a0b-f7ce013559df",
        "cursor": {
          "ref": "a16c2a19-471b-41d4-af21-15b690407c67",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3da41716-681b-4b7a-99b7-fbd0078d0a63"
        },
        "item": {
          "id": "bc61b02e-5b97-4462-8a0b-f7ce013559df",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c8fbf40-6045-4cd1-b9d8-1ab5955c60c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ac18e8-f764-4c29-b69c-359b8c810211",
        "cursor": {
          "ref": "79bf31a9-c793-4bb8-9216-ed8114a9f87b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "201c390f-6f11-4792-992b-0327da6edbfe"
        },
        "item": {
          "id": "41ac18e8-f764-4c29-b69c-359b8c810211",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "656e744f-5934-445a-8d1f-8befd8da8bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd83e4d-218c-4a1e-8ffb-f7997c2d73b1",
        "cursor": {
          "ref": "9679bfb4-83eb-46ea-aa86-341af80b94e4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eea4d5dd-9e8f-488a-8240-d2f5a61d12cb"
        },
        "item": {
          "id": "8dd83e4d-218c-4a1e-8ffb-f7997c2d73b1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "23085d04-9b07-42bd-a911-43e2fcc0b26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed495ff2-0fb8-43f5-b0dd-77e67a5fbe04",
        "cursor": {
          "ref": "ca6cd46f-eb7d-45c5-929a-fe86f6facc85",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ee7f4e6b-ac55-4845-a8f0-fa0403eddfe5"
        },
        "item": {
          "id": "ed495ff2-0fb8-43f5-b0dd-77e67a5fbe04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e6c14dea-2a4c-4e11-a4a6-f94f6d9886ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796d1c37-5b75-4c4c-a81b-d2ee239ffd5d",
        "cursor": {
          "ref": "e89582aa-d88c-41fb-9af5-1e49eaa883ee",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cfeee2a3-3b99-4d79-88b5-e0949d2ff961"
        },
        "item": {
          "id": "796d1c37-5b75-4c4c-a81b-d2ee239ffd5d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bd9a7e66-f56a-4fe5-b9eb-aafa0d3edb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297c6d2a-ac9d-4686-96ee-f7c775a644fc",
        "cursor": {
          "ref": "2165f8a2-d436-4205-8e2a-ed4935146514",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e37da0b0-ac7d-411c-bdf6-6ded8b1fb0b5"
        },
        "item": {
          "id": "297c6d2a-ac9d-4686-96ee-f7c775a644fc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c2fb9969-e1b9-419d-853f-01421ee28607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f440ed44-47b0-4df8-8c6e-b9b808fd1ba7",
        "cursor": {
          "ref": "8125646d-27dd-42a6-89a9-032d35657f13",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "efafc264-5e38-4df3-b355-a854e478cd36"
        },
        "item": {
          "id": "f440ed44-47b0-4df8-8c6e-b9b808fd1ba7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7107d69b-7b87-446c-ae6e-9816f7d312ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee0c005-960b-42b8-9893-93f599f20331",
        "cursor": {
          "ref": "bf7a3708-1feb-4145-8cb2-70ea97d171a7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "758da3ca-4243-441c-b177-7c9a922a22dd"
        },
        "item": {
          "id": "bee0c005-960b-42b8-9893-93f599f20331",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "333ecce3-71fe-4e2f-a2cd-1a83436b8aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259993d1-ffc6-401c-869a-da585a71e790",
        "cursor": {
          "ref": "6ed9ae64-86f4-430d-932d-74cdf91e2d80",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb7f4841-4c8f-47af-a729-13f51cb11946"
        },
        "item": {
          "id": "259993d1-ffc6-401c-869a-da585a71e790",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2ed65344-6baa-407a-9e08-3d90dea4aa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e662b44-fd6a-4d7b-82f5-5510b6973460",
        "cursor": {
          "ref": "781c6f1b-817e-4c20-9056-e060a708b511",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b9adc92c-6bea-4208-8cb9-393ff0270886"
        },
        "item": {
          "id": "2e662b44-fd6a-4d7b-82f5-5510b6973460",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cd645e0e-7a43-4d31-9e59-dd690670f3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9079f9-6459-462b-b34c-5f265dda5934",
        "cursor": {
          "ref": "e02ab0a7-7be4-40da-8144-485a75b1e82d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f893aee5-4997-4e16-a251-3142cfb698d6"
        },
        "item": {
          "id": "fc9079f9-6459-462b-b34c-5f265dda5934",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "49f46077-e311-4b0b-9e03-79824621bd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b2582b-5057-4822-9176-d3e1d5b35077",
        "cursor": {
          "ref": "06a59712-5435-4261-9649-49a9edcbc558",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4ef37672-8be5-48dd-9fbc-cdfd9990d878"
        },
        "item": {
          "id": "f3b2582b-5057-4822-9176-d3e1d5b35077",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "17646e61-d5d7-42fd-ad0a-a7abae4ec2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dfaf4b-2d50-4652-92a0-591742f190e8",
        "cursor": {
          "ref": "7dd3f620-ef95-4ed3-9b28-0240dae630ec",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "afada7b1-68a3-467a-9113-1d8c2c7949d2"
        },
        "item": {
          "id": "60dfaf4b-2d50-4652-92a0-591742f190e8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6935fb24-b829-49bc-a98f-629e8fc37aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b16cc7-503f-4ada-aeba-c57e4165126a",
        "cursor": {
          "ref": "57aa7122-c44a-4d5d-baba-3ec360f919ea",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3d0bafb1-498d-4647-b9ca-4496170819a7"
        },
        "item": {
          "id": "87b16cc7-503f-4ada-aeba-c57e4165126a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2fa845ae-880b-488b-b27b-0ea7d22c7966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68a4ddc-bc9f-4d87-9104-18abf99c7821",
        "cursor": {
          "ref": "32d67dd0-ff79-43a9-a3bf-e16d1bfd0e43",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f8914685-8a6c-489b-9719-4140a38a65bb"
        },
        "item": {
          "id": "d68a4ddc-bc9f-4d87-9104-18abf99c7821",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "36dcbeec-fdc0-4aff-886d-418c5febd686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2e75ea-46f1-4707-befd-27e591bfabd2",
        "cursor": {
          "ref": "1e8363c6-b420-4ba9-850d-45e2203f73c9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cda07240-0dc9-4329-8560-c51c5c518c4c"
        },
        "item": {
          "id": "6a2e75ea-46f1-4707-befd-27e591bfabd2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "66126f6e-4bb1-4fec-9fb7-35aa8d06bd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df7e9b6-541f-4655-97cd-146f3f4a7883",
        "cursor": {
          "ref": "6a57212b-fbeb-4411-80b0-d13f3f0b6580",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "68f80501-94fc-49f1-b20a-3d6b4f9dcc2d"
        },
        "item": {
          "id": "4df7e9b6-541f-4655-97cd-146f3f4a7883",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9c3bad0-e59a-402d-bbfe-b30da97e543f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fbc539-591b-4ec3-9f3e-eb2bb021d3d6",
        "cursor": {
          "ref": "73644d72-4545-4414-83c9-b3a85ef8692f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "826b720a-52be-4e74-8483-bd2f90bbc45f"
        },
        "item": {
          "id": "59fbc539-591b-4ec3-9f3e-eb2bb021d3d6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3a7c36bd-0c8a-447c-a39b-44166ee0ecf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4777e4af-7095-4b60-b828-6c6d12061534",
        "cursor": {
          "ref": "d92e3def-b609-4c03-a4d5-2ba993db5fdc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a6f1e1ca-7f15-4e11-ad58-bbc6c2beb15f"
        },
        "item": {
          "id": "4777e4af-7095-4b60-b828-6c6d12061534",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "33e3c40d-42d6-4fdc-aca9-4223bf497ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68abdefc-8d0e-4a25-9ce3-376092ca2384",
        "cursor": {
          "ref": "fde99941-cbd7-42f9-8d6c-70b8e4ec4eb9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5dda26be-bc06-4ef1-be87-fd07a936d9b1"
        },
        "item": {
          "id": "68abdefc-8d0e-4a25-9ce3-376092ca2384",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4c56bffd-7ab7-4724-a79e-2ac608f666b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545e134b-be80-4312-a521-c9678132a851",
        "cursor": {
          "ref": "1460f9e3-fe47-42ed-9696-fc3da4ffc9e1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cd195f7a-f333-485f-9694-a4518bc48569"
        },
        "item": {
          "id": "545e134b-be80-4312-a521-c9678132a851",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4f9ebb47-acd5-47dc-b284-61a13f2c7e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fe55b8-4111-41f2-8141-d74a7fb53c5d",
        "cursor": {
          "ref": "5074352d-c287-4059-90c7-80401cf306cd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "15c556e7-648f-4c3b-a2c1-66f74358b1dc"
        },
        "item": {
          "id": "99fe55b8-4111-41f2-8141-d74a7fb53c5d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "140a1a6c-e9b1-4c9f-b79c-00e9d05d635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a8a68d-c9c3-47d4-a03d-b395b793142c",
        "cursor": {
          "ref": "42dbd233-40b8-456a-aeaa-4fc554e78b6c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "47c0f8f2-6b36-47b6-8367-ea4c3883e27b"
        },
        "item": {
          "id": "31a8a68d-c9c3-47d4-a03d-b395b793142c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5e467065-5609-4114-82a8-ee906340b153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a43881f-8130-4737-a5fa-43ee946da3c6",
        "cursor": {
          "ref": "9154218e-0b51-4f72-a1ce-3e0cac3ba5f0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5e046489-6ebb-4f6b-af24-b98ad7becbd0"
        },
        "item": {
          "id": "8a43881f-8130-4737-a5fa-43ee946da3c6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "301fea06-39c3-42b7-af8d-e3822f19fe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7a1b3e-6ff6-4362-aaa0-072e5cd90e6e",
        "cursor": {
          "ref": "c4d6155e-bed5-49b9-9792-b4c6939a24a8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5849bbe2-000c-433f-83b5-ae3a75b588b1"
        },
        "item": {
          "id": "8e7a1b3e-6ff6-4362-aaa0-072e5cd90e6e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "054b2930-2af7-456d-abda-c990ccbd2709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5182f30e-9458-46b2-83ca-ca3f1b32eeb2",
        "cursor": {
          "ref": "1aea4cb7-6181-447a-8bf2-65be55f190f5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a93d852c-b7f3-4af0-aee1-4d93745bc87b"
        },
        "item": {
          "id": "5182f30e-9458-46b2-83ca-ca3f1b32eeb2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8ee02f8c-3cc0-4609-806e-119dd61da760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7161e233-391f-4c53-9289-6fc5edb05af8",
        "cursor": {
          "ref": "8d5b9c3b-8faf-42f7-916a-bee911af760b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "719190c2-fb7b-423f-981f-d4badb6ec526"
        },
        "item": {
          "id": "7161e233-391f-4c53-9289-6fc5edb05af8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "054a0c93-7626-4e93-b6d9-5e3a04b47633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6da200-386b-4fff-827c-9abcb3fae358",
        "cursor": {
          "ref": "09189769-e390-427d-b870-1e933a73c233",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6778cae8-d401-49c2-a04f-38ae95891cc8"
        },
        "item": {
          "id": "ba6da200-386b-4fff-827c-9abcb3fae358",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f6548ac6-2bc8-49ab-8b17-faad2472bc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20338a11-79be-46b4-a192-34c986774436",
        "cursor": {
          "ref": "24b908eb-e9b9-4b4b-8d23-0471d1e7beea",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d1a5ac06-a632-40b3-b211-b00b3e42e2db"
        },
        "item": {
          "id": "20338a11-79be-46b4-a192-34c986774436",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f24393f5-6bbd-41ec-b71a-ebe59e37cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3724bd32-2785-4bcd-81d4-60feaa698bb3",
        "cursor": {
          "ref": "2419b45d-6a8d-4161-afec-c7b586047650",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "82d8c0e5-a940-48e4-802f-fdd13f938402"
        },
        "item": {
          "id": "3724bd32-2785-4bcd-81d4-60feaa698bb3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "93e87e54-9c88-40aa-ad26-fae6beb1f8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557f1a0a-f307-4014-bb10-c5bb4c41c496",
        "cursor": {
          "ref": "cc10e4f7-eec0-4f8b-a252-64cba6a9da93",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7b4eb8b2-a9f9-41ef-ae8f-9ef618eda3c9"
        },
        "item": {
          "id": "557f1a0a-f307-4014-bb10-c5bb4c41c496",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "91074781-2830-4dc7-bc17-802e9dcc6709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d40e631-85e7-45cd-a615-d2c01c704d70",
        "cursor": {
          "ref": "df502cbc-e22b-4f1a-880f-0a831185c048",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "59e6fabc-932c-49b8-ad94-c595cbfea695"
        },
        "item": {
          "id": "1d40e631-85e7-45cd-a615-d2c01c704d70",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c179500d-4adf-4569-bdc9-6ada371b485c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debba323-e994-4401-8b2c-5ea7cd04eb50",
        "cursor": {
          "ref": "ac8cdaa7-7350-470a-a6db-23110459e4b5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "45718c57-fcfc-4948-accd-03bd42e1af15"
        },
        "item": {
          "id": "debba323-e994-4401-8b2c-5ea7cd04eb50",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87f36f9d-3853-4795-90d4-34cd76d1064d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d064e0-a50b-4d72-a44f-43048aba5850",
        "cursor": {
          "ref": "294e7b30-4c2e-47cf-b743-f525656b190a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4f78fec9-0692-4189-a532-a9c426e2c78f"
        },
        "item": {
          "id": "f6d064e0-a50b-4d72-a44f-43048aba5850",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "af2c469a-ffbb-443d-83b7-d5fdc17d7189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a81e58-21f0-49d7-9aab-d6f4df9022db",
        "cursor": {
          "ref": "4f0155e1-96b6-478e-b938-826cd458a2a1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e8214b5-0ea2-4aa9-8c26-b6dc570efd39"
        },
        "item": {
          "id": "25a81e58-21f0-49d7-9aab-d6f4df9022db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cbe42cad-2e89-4507-aaa7-d2800a2245b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb933db7-2d3e-42e4-9bb1-512847540514",
        "cursor": {
          "ref": "fef826eb-9b1c-4e05-89c3-6181bab202cf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7636d71a-bddb-4fe5-ac95-cf8b62e3cb3b"
        },
        "item": {
          "id": "cb933db7-2d3e-42e4-9bb1-512847540514",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e6ac71f-9b30-4cd4-bf6f-ac4ca6cca0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9efc7a5-e97b-44f7-96e8-f21fb0f638f4",
        "cursor": {
          "ref": "58775ee9-bcc9-4f84-835b-c6d1bbb16ba6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1134bdf0-2662-4451-b266-7bfcf6021bf8"
        },
        "item": {
          "id": "b9efc7a5-e97b-44f7-96e8-f21fb0f638f4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8edd8220-7b34-48fb-aab8-fea5c96d0b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81d7a9b-82d6-49f0-bb9b-9f48df357f6e",
        "cursor": {
          "ref": "c6101d70-c99b-4bc4-aa7c-2b55a88d1c82",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b8bbac25-c0df-4e87-92af-fbb505746870"
        },
        "item": {
          "id": "b81d7a9b-82d6-49f0-bb9b-9f48df357f6e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7da5b59a-99c8-4641-9f22-95e33cdf9f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24939bed-4d2c-45b4-b940-269341532dbe",
        "cursor": {
          "ref": "2360c5f9-ceab-47af-9d7f-2824d968f5ac",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f746c066-849b-4cc1-bf9a-13bceb73d90a"
        },
        "item": {
          "id": "24939bed-4d2c-45b4-b940-269341532dbe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8845382f-a28d-4b78-88de-792a226f07f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a90cbd9-1bbe-417a-9a4c-140568b40230",
        "cursor": {
          "ref": "2d7dfbaf-348e-454d-bd48-77c5370506be",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f7194e6e-3b0a-4ba1-879a-f699e6430434"
        },
        "item": {
          "id": "8a90cbd9-1bbe-417a-9a4c-140568b40230",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9e4a63f0-6f52-4cd9-a21c-eb79ba8c33f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccb75ba-4d14-4e9c-852c-6c10c195d6d6",
        "cursor": {
          "ref": "bc475c29-99c7-48cd-941c-532ea72f24d6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b0d9a300-96c9-4425-95c7-4874840ebdc7"
        },
        "item": {
          "id": "eccb75ba-4d14-4e9c-852c-6c10c195d6d6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d3888dc4-a4e3-4e03-af44-07f775d890b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aefe32c-1f00-4f9c-af55-79533731a15b",
        "cursor": {
          "ref": "4c5bf3e3-9296-46f0-bf5b-01f717e5371d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7f892041-d9ef-46c9-9df3-4a2a4dee1c5e"
        },
        "item": {
          "id": "8aefe32c-1f00-4f9c-af55-79533731a15b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e54981ef-09f8-47a4-97b0-10b8a8daddc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556c9f5d-ac33-4f78-a761-b9f2e121b874",
        "cursor": {
          "ref": "3206321a-847e-4163-a803-42f1a450d5a5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a076587-50bc-4686-80f9-db833d7cb3b4"
        },
        "item": {
          "id": "556c9f5d-ac33-4f78-a761-b9f2e121b874",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "11612531-1c49-48af-bc27-432d116f15af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed1e006-2ed2-4812-9f36-f9e2ef8b8dd9",
        "cursor": {
          "ref": "6a917097-39c8-48ac-802f-9c92ed8b414d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "60205252-420e-4574-99fc-28f43164ee67"
        },
        "item": {
          "id": "bed1e006-2ed2-4812-9f36-f9e2ef8b8dd9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b001461e-05b1-435b-ad5a-cab2a7b91be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a21e8-d4a8-4773-ab14-e08726949435",
        "cursor": {
          "ref": "f5ef8f71-3385-4def-803a-538a919b1a97",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "941a5bbd-7ed3-45ea-b96c-99f1c0107123"
        },
        "item": {
          "id": "324a21e8-d4a8-4773-ab14-e08726949435",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "163fbb55-8357-4ec1-8403-a57b4f44aa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd953d0-2c20-406f-9cdc-3ce90564274a",
        "cursor": {
          "ref": "ef6ab7b0-347a-4d92-8672-5e3fd4d532b8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fedcaf3b-3ec3-47d5-9185-49932e323333"
        },
        "item": {
          "id": "cdd953d0-2c20-406f-9cdc-3ce90564274a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "88b407dd-fa1a-4dd5-b9fe-7f673b0a67d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63064e8-a697-490b-a506-5be917d5373e",
        "cursor": {
          "ref": "47e7eef5-e011-4d75-be71-eebbe031874a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "38051cab-6286-4c14-a92a-a74334f4b2bb"
        },
        "item": {
          "id": "c63064e8-a697-490b-a506-5be917d5373e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "81bdca0d-c150-41c8-86ff-13b99195b16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0d6c90-827f-4901-8642-1eed51294faa",
        "cursor": {
          "ref": "9389675b-c00a-495b-9453-db73f51f377b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ed5c4058-e40c-41a8-acdb-7632f48e6469"
        },
        "item": {
          "id": "0a0d6c90-827f-4901-8642-1eed51294faa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "287de2b1-fce6-44f5-b217-0ccf466c8f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2351a580-abe9-4da6-a95a-c68f4901b610",
        "cursor": {
          "ref": "98c7352e-55a8-496a-9f91-98e42b092589",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9e8ce457-5fb7-4aba-8a6c-e14831e4ec17"
        },
        "item": {
          "id": "2351a580-abe9-4da6-a95a-c68f4901b610",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1136c198-0c30-4eed-a9de-b75038486a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855ac972-a9f8-45d6-894b-9d6dae7926c3",
        "cursor": {
          "ref": "67b19a81-b805-402e-bd9c-9682b7881298",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9a690cae-2c18-4a6e-b4bd-2c2f6882c70c"
        },
        "item": {
          "id": "855ac972-a9f8-45d6-894b-9d6dae7926c3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b90c10d3-ef49-49ab-ad0a-6a39ba707648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561f698e-52ee-41d7-951e-529317c6e230",
        "cursor": {
          "ref": "96855a54-313c-4934-9566-a859a2a82488",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9c62175c-a67e-4a38-92d5-7e875ccfe273"
        },
        "item": {
          "id": "561f698e-52ee-41d7-951e-529317c6e230",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "35552f18-7839-48d4-ab4e-9803de2d364d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e9647b-8e6e-4c95-a430-4494be91d0cd",
        "cursor": {
          "ref": "9e301cec-47bc-4638-9d20-d1906dc1b7a6",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "00b0309e-f623-42ce-a4a3-63546bafff6e"
        },
        "item": {
          "id": "35e9647b-8e6e-4c95-a430-4494be91d0cd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8a0933e1-4dec-47fd-b9cb-c8c323871403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84829742-1e00-4ccd-ab78-40ab936631a6",
        "cursor": {
          "ref": "88f239c2-7be4-4294-b1c0-5d2005a9f9d4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2808c6a4-e023-467b-80ca-cae4eed0666a"
        },
        "item": {
          "id": "84829742-1e00-4ccd-ab78-40ab936631a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0b434a5d-1a2a-46f8-a523-fcf149718133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425b8eff-ac24-44aa-abc1-9f79a060dc3b",
        "cursor": {
          "ref": "0e82763e-df4d-4ac6-ae86-5d61816a56a5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cfbf19c6-dc84-48ad-9fb7-630a6ac39e1b"
        },
        "item": {
          "id": "425b8eff-ac24-44aa-abc1-9f79a060dc3b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90df6310-7db2-4a7d-a3de-7c49680aeae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a21140-49a5-4eee-8509-ac4f77aa0421",
        "cursor": {
          "ref": "7276b705-f9d5-4d2f-ba37-0a0edfc291e8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "01db50e9-f331-4eb5-9d7b-be9ac2359280"
        },
        "item": {
          "id": "26a21140-49a5-4eee-8509-ac4f77aa0421",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d112b9f9-774b-4679-95df-81f8d718a49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc929fd9-d9ef-45aa-bf0a-8ce37f67b6a0",
        "cursor": {
          "ref": "de3caf75-546b-49aa-b28b-ef72963375b0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4d3a6513-3dea-49a3-818a-cb37237579b1"
        },
        "item": {
          "id": "dc929fd9-d9ef-45aa-bf0a-8ce37f67b6a0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c1fedab-d5ab-4b8c-bb16-66362161d0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68138efd-d245-478f-8199-b81f8df43586",
        "cursor": {
          "ref": "282296fa-128a-4bbc-91fd-8606ecea68fe",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "92d65ff0-f8b7-4de7-8f7b-de33f848fe6d"
        },
        "item": {
          "id": "68138efd-d245-478f-8199-b81f8df43586",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "71c59c0e-af9c-4d2c-aef6-52d82a325028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e143c5-425b-4bf0-9620-0f4a519b8d2d",
        "cursor": {
          "ref": "5162ed22-9bff-4c1c-9d65-df5a36e355c5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0bdb8667-f1d2-4805-936d-c8fe055518b4"
        },
        "item": {
          "id": "13e143c5-425b-4bf0-9620-0f4a519b8d2d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "30dd071a-c1f5-490d-9088-1b005cdb3e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f486a7a1-2c52-4886-b3e1-6a51ed09342c",
        "cursor": {
          "ref": "150c1f99-a98e-4f35-9554-bfcb7941eab9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c2679c90-2597-4a97-abd8-39b2a55b0f14"
        },
        "item": {
          "id": "f486a7a1-2c52-4886-b3e1-6a51ed09342c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "66353dbf-d5c4-419d-80b8-76a4787ad8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf8dbd7-c057-44de-85cb-476b5d0c99dc",
        "cursor": {
          "ref": "ad046a77-d3e9-4842-9f37-e5654d7fa458",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "055962fa-9ef3-4c40-92e1-e8800324f740"
        },
        "item": {
          "id": "ecf8dbd7-c057-44de-85cb-476b5d0c99dc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ab4fb280-db17-42d2-9045-fb0c863f28bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de44159b-1e7e-4823-bfda-7c70b782d355",
        "cursor": {
          "ref": "1944a076-9588-4e73-8126-ac2e6063f106",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d175e407-9b94-4013-a999-fca8e3a9b7fa"
        },
        "item": {
          "id": "de44159b-1e7e-4823-bfda-7c70b782d355",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b3cbc21f-925b-4c8c-92b3-143b48341739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca29349e-f714-4062-ad04-e622299eec00",
        "cursor": {
          "ref": "43f136df-869e-4aa4-865e-4fc01f3dfbcc",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d454e7c6-fb0d-4319-b2ae-2ac256b14199"
        },
        "item": {
          "id": "ca29349e-f714-4062-ad04-e622299eec00",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ab438706-db0d-4e88-a53e-fc2a5f71a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a23c761-7709-4db5-954e-d7b14d1f3656",
        "cursor": {
          "ref": "8e56ec7c-67eb-466f-8ef6-81ee6ab1030d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7027617b-dbbe-4da9-ae40-54ae346265b0"
        },
        "item": {
          "id": "5a23c761-7709-4db5-954e-d7b14d1f3656",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "785278aa-d032-4a89-9d13-590cc3f1fafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ba91e-f02f-484f-82e1-aeb028f1a939",
        "cursor": {
          "ref": "57555df1-2dce-49b8-8f15-f225d3b84910",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "39482ff8-0ce1-4925-9f7c-076335756884"
        },
        "item": {
          "id": "538ba91e-f02f-484f-82e1-aeb028f1a939",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d2a429a5-f016-4a9b-ac46-88400b8ef2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e0e86-32b3-4dcd-86dc-9532f837e5bf",
        "cursor": {
          "ref": "9cc74074-a032-466b-bf9e-7edcf0c3d4f8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "67bc14d9-c1ca-4e9d-90ed-413f8ab5ee5b"
        },
        "item": {
          "id": "bd8e0e86-32b3-4dcd-86dc-9532f837e5bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "649ecc46-b9ce-4d12-8a61-dfb2ea69b581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb501e79-9574-4d39-88ae-fcf44a5bebdb",
        "cursor": {
          "ref": "8a1a1bca-72d6-4df5-b7c6-0f15f08c1c78",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f0f68dce-d741-4e0b-b0f3-5e6c42bfdae7"
        },
        "item": {
          "id": "bb501e79-9574-4d39-88ae-fcf44a5bebdb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5be51106-5417-442a-8413-52c693de61bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496749f2-9327-4d01-b4b1-e908d180d76c",
        "cursor": {
          "ref": "a31f062c-a3bd-4f52-9f3d-03ff9298bb96",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7d57c0f6-ad78-4fbc-ac3f-e5416cf2ee63"
        },
        "item": {
          "id": "496749f2-9327-4d01-b4b1-e908d180d76c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "80a7a86f-bfde-485b-bb3d-13eeb7244c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6c6409-9005-4713-85ad-bc014d36d348",
        "cursor": {
          "ref": "f6c7f039-752e-4002-930a-9a54da8ff6fd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "230b1c5a-32fc-4d42-b72e-8f1b07b1aae3"
        },
        "item": {
          "id": "4b6c6409-9005-4713-85ad-bc014d36d348",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6b3afde3-af74-4c66-b52b-efb190feab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c257f7fa-2fae-4864-8675-242a60d7823c",
        "cursor": {
          "ref": "fa177d33-804c-4da4-b5cf-891357b08f30",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8ea062b0-d72d-419f-b094-e2b92a74e69d"
        },
        "item": {
          "id": "c257f7fa-2fae-4864-8675-242a60d7823c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "919ca22e-b5a3-44a3-a341-e14e3d78de63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64af8a1f-c564-4ff5-bd19-41d1f6bda211",
        "cursor": {
          "ref": "a77e48cb-f9a7-4dba-8797-c3772a528311",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "14ce2f5a-91a4-47e4-bb22-89f79005ed3a"
        },
        "item": {
          "id": "64af8a1f-c564-4ff5-bd19-41d1f6bda211",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "27eb7954-dfb5-4849-bc64-8871ede8684b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a645c057-fae7-4efe-94cc-35492e1dfedb",
        "cursor": {
          "ref": "a2d86ee7-0e14-48c0-bf57-e9dca034fa9f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3f11d003-4b59-4356-b5d4-9d36c69d165b"
        },
        "item": {
          "id": "a645c057-fae7-4efe-94cc-35492e1dfedb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d78f276f-5c22-41aa-921b-2b90d6bcb9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b006b-45da-4a3c-bf68-dee73a8e37be",
        "cursor": {
          "ref": "5c5b32d1-8ec4-474b-b341-1d5c33b92775",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ffcfcaed-384f-4288-addd-89b93c9e015a"
        },
        "item": {
          "id": "c94b006b-45da-4a3c-bf68-dee73a8e37be",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21c6fe13-c2a8-4c55-a8d2-9f8f7c32054f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d638132b-c31b-4147-8f2d-12f88c174516",
        "cursor": {
          "ref": "e14ec5e5-d4a6-484a-b585-c68eff74cf37",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ae5ac3b4-5481-4d28-b99c-7a12fcca7abb"
        },
        "item": {
          "id": "d638132b-c31b-4147-8f2d-12f88c174516",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1302cff0-925e-443a-852c-4d591c4872d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70ece13-14a7-449c-b109-93ae4eb2fc86",
        "cursor": {
          "ref": "200b3eec-e613-4bcd-98a3-177541ef5ba6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "933a29fb-249c-4526-9695-f6475156394f"
        },
        "item": {
          "id": "a70ece13-14a7-449c-b109-93ae4eb2fc86",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "50955819-31a6-4ef5-9dfc-0927c47322fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8b547e-a9be-43ba-9159-61b7217142ff",
        "cursor": {
          "ref": "c98968f7-f508-4822-aca9-0bffe1af5955",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "67a71dd4-1447-431f-b29e-d34cf8ac9ae8"
        },
        "item": {
          "id": "6d8b547e-a9be-43ba-9159-61b7217142ff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bfeacc8f-8e93-4b21-9ab2-89717ad5d684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21adc664-172d-4de9-ac45-0b60298cce7d",
        "cursor": {
          "ref": "dae12ed8-5a3b-4296-92cb-154205bc5f78",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0dfa156f-3fa0-44ea-a995-455cc664ef0e"
        },
        "item": {
          "id": "21adc664-172d-4de9-ac45-0b60298cce7d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ece3f766-a9da-465b-b1e0-a3e89f5d873f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785a811f-a6a1-4301-b499-c7bb3c89b122",
        "cursor": {
          "ref": "3e3d5c6c-950f-4ad6-9031-cc3e223485fa",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "47784820-55c8-431d-9584-c0aeb1488ff4"
        },
        "item": {
          "id": "785a811f-a6a1-4301-b499-c7bb3c89b122",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "53991bb8-212c-4757-898b-cc9b6124f3ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b358f-68a7-4c68-9516-9ef79bcb07aa",
        "cursor": {
          "ref": "1fb2fb45-1b3a-4c4b-acf9-b19f6a31f3c0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "15cfde37-2383-4598-9a8c-55cb5b1344eb"
        },
        "item": {
          "id": "7d5b358f-68a7-4c68-9516-9ef79bcb07aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "148d426c-e519-4ff8-8ea8-dc5a7376ad56",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb836ce2-bd58-4503-83d0-8ecee5a94396",
        "cursor": {
          "ref": "25fc77b2-2da6-4d4c-8487-0c7f994257b2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4da513a-f423-4802-8972-ff89aae6a5f2"
        },
        "item": {
          "id": "bb836ce2-bd58-4503-83d0-8ecee5a94396",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2f29082d-c1c2-43c0-8e80-80d633e0f883",
          "status": "OK",
          "code": 200,
          "responseTime": 5227,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b626357-9c24-403a-8f91-99da4967f85c",
        "cursor": {
          "ref": "193bdbae-6cc4-474a-a186-e797f65ac927",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f677ee77-62e9-48b6-a18c-9af1e4b41846"
        },
        "item": {
          "id": "9b626357-9c24-403a-8f91-99da4967f85c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bcd08ec1-07b7-404c-a237-bfbd07779cc8",
          "status": "OK",
          "code": 200,
          "responseTime": 4171,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b64c2ef-dac7-44eb-b3fe-c9f598f3c5d1",
        "cursor": {
          "ref": "9aa389a7-c539-4301-ba22-bf796dbe552b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0df9c49c-4186-438f-ac9d-e4930db59c95"
        },
        "item": {
          "id": "4b64c2ef-dac7-44eb-b3fe-c9f598f3c5d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9833130-6c01-46a8-bcbe-a8b43fc22478",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b64c2ef-dac7-44eb-b3fe-c9f598f3c5d1",
        "cursor": {
          "ref": "9aa389a7-c539-4301-ba22-bf796dbe552b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0df9c49c-4186-438f-ac9d-e4930db59c95"
        },
        "item": {
          "id": "4b64c2ef-dac7-44eb-b3fe-c9f598f3c5d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9833130-6c01-46a8-bcbe-a8b43fc22478",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecda593-87be-4312-a3ff-d3ae4aa60da3",
        "cursor": {
          "ref": "3381bd08-93cb-42eb-8c9d-16262b4be28d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "23c962bf-b95c-46d8-a4a2-09a4e78414ca"
        },
        "item": {
          "id": "1ecda593-87be-4312-a3ff-d3ae4aa60da3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "608da228-c7b8-48fc-9afa-b10f149f8fe2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5d661f-59bf-4d02-88eb-619270f607be",
        "cursor": {
          "ref": "2e51a216-3200-4962-a7b5-df0e24660324",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4cb6fd34-f02e-41bd-9c0b-96d914d162f0"
        },
        "item": {
          "id": "2d5d661f-59bf-4d02-88eb-619270f607be",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b206d802-4609-483f-9dc1-7c1430a4f623",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}