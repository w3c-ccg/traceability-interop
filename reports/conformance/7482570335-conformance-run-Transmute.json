{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "91c4a4c5-5b01-48fc-9e59-acae6b4938fd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d84cedab-35c3-4866-b8e6-d2dee604982a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10280368-68c2-447e-b499-925bdd34493a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51a09bdf-66b2-45a7-998e-f409241e4aaa"
                }
              }
            ]
          },
          {
            "id": "89628977-9b57-437a-a4ee-fbc815fea5f6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aaa04794-0ae0-441b-8923-8adee4b9b965",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b149bd71-1057-4d43-8ec6-91cfc35f6ee0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2f54b2fa-368b-4540-908d-aa7d073effe8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "49840043-e822-4af8-b1e1-79e2486e9d14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7fe0144-b657-4ec8-b42e-2f67bdf03283",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42e28dde-98c6-4c36-a4c7-ee2aec32f014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51913604-4bf9-4024-9ce2-19376855b645"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "085f4679-60fa-49e6-a017-4b707a1b683a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c80891c1-6dfe-420d-8517-70c43f0037aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54be1584-32da-4c3e-b071-b6faa439fb88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1a541cf-9722-415a-9500-5a5fb60248fd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06b42b2f-74ba-4ab4-81f5-5003a05305dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a10e5c3f-f413-451f-9de6-6d944ac7f798"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b79c8861-4b51-4d40-8727-4f5d850947f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "815c5eb3-db1d-4086-b2ae-b975e98d381a"
            }
          }
        ]
      },
      {
        "id": "f93f3150-382d-4448-8816-24bdabfbd315",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8514d64c-4b03-4362-a63d-fa6a5bd4c421",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1f08e34-1024-48f4-bac6-7947db652cff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbe0d023-3cbb-4739-a58f-ef5038126859",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613442e2-e13f-4d80-af10-c5f64bbd4cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29261bd1-19c7-4e79-a539-38a4c213d846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6339117b-a6dc-4381-90ce-69671c58f9ff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9825242e-c3b7-4d44-9845-f9dd25a5ee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec8f3869-dba7-490a-a1a0-87b1a4249a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa579b0-de8f-4155-8511-ccd1091a7474",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec224c0-fb1a-452a-9fd6-f7f69b940a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b75e9b9b-4bfc-4e8e-b76e-8b6b84cea11e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6f131ee-8977-4914-a6e6-29200f0d16c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef6c10c1-c1d7-4888-ab24-dd31dd35067a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a57e919-45d4-43c8-8456-e03865cce0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e316c2e4-f7f2-4008-aaef-331af5081d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6722ae9-05d9-4d56-99e7-2a0d5cca1bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbb7b1c-00e2-4c28-83df-63c1bea22465"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f9a71f42-a483-4986-b96a-af58937e65c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bb3f5d7-9fc3-4d9f-ac61-6b1c6a64b3fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cdff06f-5a41-456a-8bd4-1ef40431d138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e70b2ef8-5b8c-401e-b22a-e717efced9b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e75d2cf3-d8ff-4100-9b44-f78359171f11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "072aa5c4-3dae-4588-9083-14a701dc134a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6135e72a-159f-4e42-8a67-7176dc8d6e62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86d0370e-17c4-4a59-897f-05f813ae2fcd"
            }
          }
        ]
      },
      {
        "id": "8bb9e532-bdba-48d4-825e-415f9cd1780d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b3f95d3b-ca52-49ff-afe9-4a57617c379c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea503a67-65f2-41bc-a96b-854eddf54183",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae3226c2-7e0d-4e88-9a63-e50ad1421059",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d855151a-41ff-4e96-afa2-f794ccd75d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad74a30-5918-441c-8753-f8159e08d059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee225a6-2d83-4f96-8f63-6708030ba7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cecf6937-cb20-4a64-af34-90837ab0961a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc5e67c-7d8f-4dc4-b463-020e2fdfc8d3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9b5376-2136-42dd-a888-e43b6c252eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5d2c61-10cd-46d8-a6e8-d7feca5e0a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154dd74c-eee4-423b-a425-2a15954bb28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e97e1a6-0133-472d-8a01-4c97926dfb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547d594f-1f64-4ca2-ac69-fcdd5880e62e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828acd7f-c5dc-4a2e-b7a3-c168271c8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eccc51a-e0e1-4dbf-a827-7bd1e891c54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48083dc-9d16-41c2-b851-cb1d32d9efde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac7f268-5218-4e44-a762-877eb1742f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da1df51-14d5-40ab-88c0-f21f7d175a6d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1161954e-d2be-4ed4-b06a-d2ac3004f052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38175351-b7e7-485d-8711-dbda5ee9462f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b895b46-8e5a-40e4-834d-b819b7018a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3856b142-e0f4-44af-9f2e-7f63e44e5eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf1690d-0e18-4f72-aae1-7f0b9101fcc0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7c89b-ac08-4702-97d3-1e214ff08caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46856100-a1be-4d32-943d-0e779af924ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c900fc9a-df67-42c2-9ccd-8dcb7f3b9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1255e87-ccb4-4201-ac61-11e7ee335456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb72d24-661a-4870-97f9-7acb84a0142a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c382a1-b23c-48a8-905c-2ead969b96bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6155f5-7251-4d05-80e1-b8922c03dc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80674d82-2e69-4519-8359-62cb7b6bcfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71535363-856c-4e2d-a4a9-6ddcfe0bf477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb7f7e5-5c2d-4f6f-aaf3-5a64d8f1df95",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc8826-8dff-44d7-b4d3-71ac1a70374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812945e0-749a-4df5-8c2f-d9925f10c07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20486e2-77a8-45f0-95b9-3278692db354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67542905-1a25-4a93-919c-cdb991f954ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9f5ce9-0390-44be-959c-c6055fb0b2cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbef858-7eff-4f8a-999f-3d8ebc60f529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb4339e-6a96-418f-b20e-c0440121c96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935c127-fb3d-46a9-bf9a-14de1660bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b69972b3-226a-44e1-b8ae-3fadabc7b43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea6d04-8bd3-4561-8130-449bd9f8809c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c3372f-8fbc-4d8d-b8d4-a54e89b72d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6651397-2c1e-44a5-9038-e7a8fceb73ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc6e97f-906c-4ca4-ab69-3f50b20955ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96358c6a-214e-45e9-b0b2-6d80786f2060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5528d653-e8cd-4370-8742-ef3a23abb342",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a6fccd-d0a6-4183-9bdc-ae1c52992d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cdd0a3-8612-4159-b3db-b014ec1b3386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156283e1-2044-44f5-9d34-619a18bcab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fafc2106-7dab-4eec-a5ad-a4c6af57c51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471318b3-712a-484d-9d89-83468da44a30",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b977cfc8-44e2-427c-b874-28f0fb72db34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b469bf2-4ba3-4aae-af0a-7175ed10115c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c817f93-d996-4504-8513-ddb506458905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de50a077-92de-4bb0-a9fc-06277acfd989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c97bc3b-80e1-4e75-9c1e-af8c71c1dd97",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aa33e5-0afe-41d3-a4a7-4e59bfe3980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9904297a-1f45-4c4e-824e-a9afc8357737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec03c83c-2e20-4098-87ea-f990296a8e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32f081ec-21be-490b-b0eb-2a1a82c8f888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf96641-1a2b-4ff7-987e-c818b9a866f9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340ffaf-9c4a-4aa3-ab5e-c6eb00a3ad71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f07b6e-6f51-4365-ba93-4ae583676a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee39fc28-d272-425b-97e4-03f7e5cfe606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a74de587-e8fd-486d-bfc9-30481f153540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5fe693-0ed8-42ae-b9fc-9d089aeb8718",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68959b36-787b-48dc-a571-b828062f1bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0bcd93-1707-4d4a-b6f2-98206024d704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597194c0-071d-4c96-8d20-af7eca8de26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f04a66a5-45ed-4c31-8a80-dd6fcd730bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af31025d-2d64-4fb7-a0ff-17fc98ad77ed",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4e0f5b-e91f-4a1b-ad37-d98a927ee396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d1872d-9575-41fc-8821-988d0f9894d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2383a4-f4bb-4183-b895-c8fc32e125c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac47789a-7ea2-4220-bad8-665911a3bf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b44a9b1-51dd-4dab-bc8b-c22ad804e835",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e9e420-d54c-49de-bc0a-94472a3d98e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5b8e12-7d26-48ab-b603-9d9a0d6b8100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054d82be-6a7d-49c0-a28f-96874813c087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "078fef50-dc08-4ce7-a4a1-90ba8b8c6ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9945f39c-4b31-4864-8c84-9c34f2ce5d0e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1020a51c-182e-408e-b01d-96189dad4871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643c9f96-ef97-4d87-bb12-669be61ebf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5545db28-effb-48ca-8f2c-e10567ecf4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3d1027-eedc-4f5d-b034-047362c2a94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc016ed-2e98-4b6d-b525-cdb9090e024f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72469d07-2ffd-4b2f-b193-17d0f708cdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d90445-60da-4254-867e-3dfef3a8f038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b82d67d-a625-4a5e-8a0f-809752bcc605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b2a218-02aa-4c4d-8853-42542fe66c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab003d1-ada9-4c02-a590-6f3976aa2f55",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d74987-9ee1-430b-8e9a-45cd8a052867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800d6a89-db99-4c32-baca-0d977142c408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a053571-e88b-43aa-ae6b-ba95a0d51266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d90981-9d80-4b94-9aa8-9ff4ce871b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb2e287-cea3-4268-8aef-35a96cbe8019",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc16637-4ce6-4f42-bfff-b9867f53e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1b22d9-200d-4dc7-a02f-4017614e6e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4743cca4-b86b-42b7-a33f-9768279ca297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "096e012e-1960-4782-a3a1-341eb6dd6acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89464f04-ec1b-4adf-a205-b6321f3e23c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34cb93e-cece-416d-b812-a644c73c207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cd2ee5-a79a-41dd-afa4-6ffe32eeab78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb83128-2710-4322-ba8a-2abc2aa8f310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddc23ca-3e78-4583-a550-ef7b241729d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8067fc-89cd-48c1-b63d-704caf67f1aa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0fcda1-d885-4916-bce3-8df59f0a580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3caddf5-d8c7-4b75-b783-fce28beb171b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f80ac08-d2e9-4a0e-ad2d-ac8dc8c16a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9acf3e6-5bef-4d19-92d0-b29d8de4d665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11624198-3d08-4c4c-ba1b-9998c94c0b27",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3616c3-be0e-4c49-bf41-0ed7dec02e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a021602-13f1-437e-8d58-8da1ee86787a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e674ee18-f63a-490d-94cf-60318c65f634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5b3ceb-c608-4459-a0a6-887bfab3e2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a4d4f4-d218-418b-915a-765993883084",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f31b46c-1499-4fbd-8fa0-7ebbb1da3c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d4b5bf-1022-4ffa-9f15-a70d8508a052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ea5f5-b38a-4db2-b9f2-75fbe957e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47741c7e-e5b2-4758-a47f-07d914333f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6890e6-d4af-403c-8d86-20cbe2f1224d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cec6be-ba3c-4b8d-b2a5-03ec90f84085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97c7746-c8cd-4077-962a-eb31c48c73c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3bd95a-773e-4c1b-ba80-584fd084e1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bac19c-85c8-4a94-b527-f5911ccde3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7a4648-01a5-4e92-9372-19add53c244f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f2150e-806c-4ef8-954f-44ad6e291194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278bf3a3-1fa6-45a5-a0a7-c7d2db640492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab12293e-c80b-4687-9a49-4ad5f4c70eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d262a43-0387-42c6-9521-dbc8d5c2c828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aba8c7-ebc8-4262-a150-c4f62117320c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e69c16-d267-4e99-ae99-9d58b757bffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d62f86-13a5-45c9-b48d-e09e2d29d654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef265a7c-adb1-4b31-beb0-db5f74669842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37fc68d3-48fb-4f1d-aeb9-eecefe2197a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3cf572-3c8d-49a7-aa17-d4d59e0815eb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92cc90-edc4-4a3f-b09b-72513e75fdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e6028a-8435-4446-bd15-f470003be129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced44d1d-f6bc-4910-bd18-43b0b4aeb5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f8d9ac-4d1b-4498-ad29-d09dbb05485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0300a2b6-1499-432b-8eb4-55158740f1f1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b506bdf-9966-4065-95db-da50d17940cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3efe02e-e7d3-4961-8714-cedf166f0fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb6008-2a71-40d2-aef7-a734d2d1f2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3048d2a8-0afa-4ad0-a720-659fcfd8849e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281ea9b2-5431-48ad-9cc5-cfbeb754b762",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89b38c6-f9b5-4138-936b-04f284fa8015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a3e2b7-3ac5-4cb6-9af9-f26e54fdea25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f4f117-25c2-4acb-bfd7-41a00adc8ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d34b589-ad69-4d46-85a8-c4e02c1246ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69c8b2f-d611-4aaf-990f-4103129ec41b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b226c30-8082-4558-b318-2c51fce27a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc108512-b1b3-4d05-83b6-03ce787a937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf8c72-50c5-4f5f-a65d-5a83f5e38642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b219bb-ee0c-4836-af96-e5389f25c673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4de928-6cac-4f6a-a449-9099ff134261",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e874b597-e127-4861-acbb-24199e61ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d59f42f-eb6a-4b05-8aa7-673e4d21f044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555c749c-95a6-4be5-b0e6-469c5edd2c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e2895d-4699-45c9-8dac-e04cf75fae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a48bec-7e53-4133-9a40-f59aa9c8745a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfab12a-cab6-4f9e-baeb-f09995cea752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c5a241-8482-4640-aef1-7d327963e127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09498898-525d-4e18-9eb4-2e94d17806be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c62e68ce-f6a7-42e5-8279-29598abfdf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497fb5a6-6d8f-4b3d-8b7d-54d77534d772",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa3bf5f-48f8-4085-8e7c-6fd381da1901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b08dd0-d5fc-456e-a848-a93ed44c98e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff668dab-1fab-43ce-8ed0-a60d5c707b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7427189-c49a-4227-8169-35c1c0f5f34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae740f4-5b48-4bd0-825b-8bceda6c7956",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384d29f4-9be6-46f3-8a1a-6fe3365e154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d5daf5-5fcd-42d8-9b14-1b661ed7bd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6467af-ad77-4a66-b1b9-a4879950070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "15777151-aaf7-41f8-9af4-da132ec3ba19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0112bb-a48c-4aad-aca0-f26637400716",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f676c0-c805-4554-a242-3b315a314a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21e08bbf-d5c9-4fee-9fef-ff396ad98a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5ec0f2-22a4-46ac-a73f-0881ff1aa989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40b2bcb8-a7b1-4968-aed7-7c5329c1eb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb653c1-8236-454f-a58a-f6a8cca14937",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c448112-9f8b-4743-911d-7a0aced748ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4175eec9-eb23-4734-a07a-842ed0a4fcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647a0d2a-3d78-4aa8-a5ff-ba556dcee1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40ff900-53a4-44e9-ad39-1d94aab1b930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a20a2a-3aa0-4cee-8e7f-7eabbfbd260a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0866509-fa84-4a9c-8c30-ec8b9267abb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c057eea-f386-447c-b6c7-5afeeab85e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5f9120-67eb-4ff6-97d5-e01f16c9fb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fac15d17-1d1b-4ba2-815a-daf69935cba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f210e2-45a4-4c25-8c87-6770d4678dea",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892f8d16-c69c-4db9-937c-4338d3aca798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43e49df-de00-4336-89de-f5b2d6094ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7c45f-e151-467e-92d9-c56f397e3e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4f0534-fdfa-4fed-baed-46e15db672f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a733a7f-1f51-4a0d-ae5f-f2b42dbbbe16",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e2552-569c-41fa-b264-bf2d02b638a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6560d83-8972-45f5-b30f-85db2d493f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2431d4f-9966-461b-b131-cdb0c069cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49eeab9f-0773-451d-82b8-80eed84847e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cd609c-1bb0-41f2-9a6e-9636f6f19daf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064c515a-10a2-47e7-8c90-96fe3b2bdac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbc7627-613c-42ad-9ba5-2bb8b5d82be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ab3248-6421-4d31-8691-77c2d28dc0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "402fc621-e399-41d7-9dc2-9ec57d87a207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b4dbd4-2d1d-4d53-968e-cdf8aaf14d5f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0f44ad-8469-4b43-b9e3-1a348ed3239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71e4319-13c7-4562-b738-461eed3855f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad5a88f-5d5c-40b2-9de3-a6de58c1dd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0f77c5-4a20-4624-aaf4-014ea4b139e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35be83bd-74af-49d9-b1f3-d7278892e34b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42412585-e70a-4755-9996-df277ec8c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532bbdc6-da9d-4ca6-a419-647dbbe1c03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31461736-15bc-4cbc-9904-46c2b76cd252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8559dadf-eeb6-4a4b-8435-d74298d233e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930b819b-fd3f-45ae-9d8a-e6978bb781e2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8909ea24-7b2e-48c9-9558-7cbe237668f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0ff7ae-53c8-451c-9fd5-1acadc26e793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9f5caf-6102-4c97-aa8d-355576cdbb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e1bfee-cda1-4d43-b876-c0fa8aaf3d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341292f8-d577-49b4-8294-f3f682f46c34",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d267b0-cac8-4674-9495-5b2c941497c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30dd29d-c14a-4370-9752-0af93323e826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadd5a9d-a0ad-42f0-9f4f-d0da02258847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5df415-01b3-4ef6-92bd-560d020840db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c277b8-ff8e-43c2-bc25-3bab4b2aa95b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e078d7aa-916d-4ec7-90b6-58d8bf91a7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87e3841-6ced-49ea-9e73-e851949e17f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb96f36c-f123-493a-94b9-538692b72e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c334ab4-0aca-4c62-95a7-88ab0b9ab66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b102bf0e-c6a0-40bc-ac9b-521ea2b906ce",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e1814d-7a1a-4365-8d14-dc6c49ed2661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ec672c-4cfb-4976-babf-bde0f413879c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5890c7c1-1772-452f-905d-a870b193d03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea59d02-0ebc-4c98-b1fb-af23a73514e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d2592-4f42-4c42-9146-d83b8a42cec3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ef1104-ad79-43f3-a99d-6b5b8a8aa9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431d7708-3232-42dd-93a1-17735dc41dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775fc943-b921-4313-82b2-a69aad237b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3650fdb5-86c6-45cd-bc19-c6a04ac44197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9598849d-27b9-43fa-b914-b089e9ac01c7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c752d1c8-f392-4f2f-9b41-ba3110917f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599c82ae-0237-420f-945e-63a92278fe5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0374028-d254-4d48-8942-57bf970696c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "424afe90-b2f2-4c5b-95aa-575dc35bbe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcf12d9-fd29-4a9a-841a-bfc61a1f3181",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da8e653-0e7e-4dab-aec9-4835b2a5e220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b21a5a-640d-486a-aa7f-f0503c0c338d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cae36ff-ff2d-450d-aea0-074b8658dfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db4a919f-68ea-4e00-aa60-38c66b3e4256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4a1720-4bdc-4a68-a350-e1962facfea5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41cfd0d-c9ad-41c4-99cf-6a90ef069d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ed160b-97b1-4f5b-adbb-a0504c06d597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987229b8-28b4-48f1-ac28-82468120d355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58721014-39fe-425b-bc90-9a80806484ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7606373-6570-41bf-b79e-6d2c0379deb8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8bfe0c-9867-478d-99a8-7e6767a7456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95d14cd-7f6a-49a2-95da-271cd03c3372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6bb564-c708-4abd-8c35-fbf2d5421a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c89a8bce-9e6f-4812-8a86-189a13cc34b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad45cee8-7c00-4f1a-b227-01a0ee57c2c9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65422bba-f0c5-4041-9cb6-6580adb5bb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd7c9a7-1327-4500-894d-95c07ee3669b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebab06ef-3e4d-4db0-89ac-1b62663f90a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9646b8c4-6b57-4a52-bccd-60b6421d3b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7030c45-f1f5-41c2-934a-3b7ee3676bc5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da6cda-a2f1-4f2f-b3dd-25e711ad3b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c064604b-a81a-4321-9c0e-bcea8092ff58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac5bdf7-d64e-4dc9-b1c5-f987442129dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e1ce37-6cc6-4795-8622-f8e7678ccd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7178f17-da37-4e97-ab79-8bad041d824a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10be19e7-a3d1-4c60-9462-859f2057fa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7bdd5a-4e11-4715-9fdd-e03d28630e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef3c857-444d-49aa-81a0-891816b2d212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f575c4-8f0a-45f3-84fe-e8087a8beb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6624d751-6f46-403a-8556-68f512dee303",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfff79d3-620b-4869-acc6-61a12de44a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d264fff-9dd3-42c2-a497-f04832b41f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573d8c06-6ae7-452f-875a-1046a4ea667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4d205d8f-da91-4b76-aa84-af193df11afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a251edef-092a-4c17-8e76-2ca431e16be9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c65bee-7bbc-418d-ac59-cdb235e1b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7b2f05-8b8d-4d2f-a13a-a2ba692f86b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1091932-1427-4c7a-bc54-6d8ee2d60039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbbee84-013f-42ae-88ea-8dbdf73043e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321888e2-78c8-47dc-ba18-eab859a1ee80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f30927-589b-4434-9c16-4268747f3cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748f49ec-014e-411f-8c3b-48c804182308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde08697-1567-46d3-b8df-19918b6f67c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e4940b-804b-4ca2-a51c-75d10ba464b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c2272a-efe6-49ea-b33e-0dfff966efac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c076a61-d465-4e40-8150-e06ab0791c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e91426-bf12-4662-b433-4f18b6d5c57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7599162-1e8c-4722-ac77-bea0b7916613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca97a083-67be-4f94-85e1-060b7f1f9473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7466a3be-a3e4-44b2-81fc-9d4abed02ee9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ee6482-f51c-42dc-9b26-8367535da415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a273b806-b98f-468d-be12-64b721c39435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91587603-33e6-4003-a5ca-e461e58b6e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ced871-edf5-42c9-9374-c4ab30e9e516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e89b719-9416-4c9f-9067-1515cf4b34d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157837c7-1160-4c5e-9620-ae129bc7b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb4d82a-8fb1-4352-90e4-6d5390ba6a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8644823f-14e0-4e4b-86e5-7ab11646f07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "41246bda-f208-40ae-80ae-a6e892d99dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca947bef-49e1-47d3-a94f-6ef98cd0313c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8148044-cf97-4456-9ea5-dc87b5ab70bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc88073e-d79d-4685-be6b-e3b99282fc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a19f6ce-5e28-4d95-ba5e-d1d97c124ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "998df620-f6ea-4ab5-9ba2-0df9ffc9b12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b3e28c-4f3a-43f1-b1a1-a3b150bd5ce7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80da520b-8bc9-46d4-8667-ee544b4c8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184efac0-5515-4518-86d8-d888427765db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d78634-8597-47b9-ad5d-c4c4b03f95a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d08422-5616-4489-aced-0b4344efa401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862a0d52-fbcc-4af9-8ca3-46ab3c6e05b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4c8d8c-ae2a-4234-b38e-0c3da7c6ceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c2c37a-88a1-45d6-b242-7e801a656cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b562ff8-69af-4bdd-97f8-6bd9f2c8f0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f6c651-dfff-46d4-a809-cdd8e979836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67976fc-fce3-461a-9bc6-3b2419df8ce5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823284d-cf21-4812-9ffd-d25d216a466a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbfc891-f24c-44b6-9a06-3a6b2bf46997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdec1ef6-3107-4b92-b3b9-de3e8c5372b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22cfef34-349b-4801-8414-40cc49f26a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f84ed-3230-47fd-b908-6309a4dc7ca4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8273e3f-6749-47e0-a537-5e5e3df3c203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d0dbed-cf03-4f53-aff8-04c97b9395ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3d4568-1d71-4efe-a875-5a8a3605e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2016a569-9ae6-4dce-835a-21e38c1c535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e93567-f131-47d6-b33c-d93938e4e19d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01326d46-4cbc-4310-8605-a755232e2d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2957c043-cfb8-4312-8362-0b32d4056068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e1223c-2625-46a8-ac57-18366be08ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b556c1-2cca-4ecb-b5ab-7565b0e4b88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5301b017-7dff-4763-95fc-40935e04aeac",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92bbcc9-1051-49b1-9d8b-585db8d7ced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68623e15-1e19-4a57-be78-d9fb1123e2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285dc336-8e18-446a-ae7e-e0b56d1e0748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f38872e-d218-412e-b1b1-b746d82f60ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478cc1c6-6aca-49b2-bd5c-f6d9d42c8c2a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d999abba-6e37-4b67-ac93-ece58850c8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b708e789-1455-4646-bf10-8f16a0f87fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfde773-2b3b-4cd0-95d6-08eec8ed4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d053d9b4-9e91-49f6-9254-370fea9f5203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9083aadd-c9ac-4e34-a134-e372ff17d170",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9985faab-dde6-43ef-aa4b-98c8076472d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fae898-8ce0-4406-b2b3-ad31b295a424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf71e2a-5a68-4404-b39d-e67bff3af565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09547f3a-5293-42c9-abc8-b1bbb0a3396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840ae705-a44d-4aeb-94b9-fb0a33c333b0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f77c829-d10c-4682-a7ab-61bc082d400c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627f437b-3811-477d-a4ae-fa1f4874fede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a568c64-f26f-4a11-b206-66e8ad7e1ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67014e0e-38c0-4a39-ae26-553366e23f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd85b8d-9291-4817-965b-5974c9bcaa75",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d67ced3-6478-4e4d-93e8-aab3997d58fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b8c3d8-1551-4ae4-8c35-fc768671f389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ce4a78-3056-4598-aefa-095f0ff947f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84d9e31-1294-4b5c-bad5-9356e57f8f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2550b2f1-3ed3-4738-b2b3-27e7e7d58a7c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2b817e-6f8c-4c7a-9911-160858083bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19074c0-b917-4b98-8727-027166f92e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c01ef5b-9b08-4e0d-8e77-44d5f56c4aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58d49f54-a8b2-4e75-9b3d-ba88f44d41b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e9a2b6-1fdc-473c-8168-f816e9200181",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230e0e60-17be-45a3-9f2a-73ddc4cf6594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39606740-c401-4078-b81b-e0773e3e12e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e9be06-e263-409e-bcd9-c895788debc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e41f0dd-d5c3-4286-b1dc-d98f1d81f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a44d02-d6f8-4154-b05b-92914c74b076",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4419a0-9a44-4970-ac4e-f14582a1fb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f16532-bfcf-4668-b675-dbfb88c6a1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f89fcc-e6b7-4e69-9702-875b647db05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69c198b-6966-4729-b2d6-84885c869bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ac8c6-c3d4-4e72-9926-6d602faef5f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb384ca7-5be1-4f68-be43-1e0ad75da851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf15305-a85d-4559-a20c-0058bbe9b733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dfe09b-96f3-49db-b8aa-d6ef2581abf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22735b3-b0ed-46f0-91fb-da4e91d73257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d3a68a-ea6f-4da3-a576-9cb28e1e5b97",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0f0298-9a41-4e01-b9ce-307203e6af26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0673109-6532-48fd-b63e-f3a43d5d48b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd1232e-9820-4d47-a0c1-924c9d4a3466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6898437-6b3b-43cb-bb6a-76dd8c3bfc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b653c6c1-3dd6-4d71-8251-d436c234b4a3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85ae8c8-8577-42ae-b0fe-f47645b86beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eade40-ff7f-4332-a508-b759f30fad0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d551d8-17e8-4b26-a0ec-be073feb37b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4420f824-9238-4fec-8c87-ec37b3ef0665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65588293-5be9-406f-9f42-ac659468180e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9222ffcf-2ebe-43ad-9209-64b5ce23318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f5b9eb-8f85-4d81-b0b3-297c3c6ff6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d4d70-71c4-40ab-8e45-b958abb2937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4669c3-ef02-4d65-9eaf-1e9c1e84a772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0106862c-2fce-4e3a-a385-dd4da607a29f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f5083f-2594-4a44-bdbb-cf3b0740820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737d7390-5735-4d70-bb05-3760cf0da6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e26f1a0-2686-4c42-898f-92970f7ac67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaac1b3d-984e-48fa-bab0-6f4eee563025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65db4434-5b2e-4098-b11e-98f680905fe7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c740c766-3d9b-4381-9023-58ab3153fb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dab5b88-3f1b-43f6-9341-0f0bc281c860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e987ebf1-a48f-4e66-b55e-4d0277871d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d2ff4c-3d2b-4ffe-b6db-a827054742ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad762a0d-c9a2-43e0-9fd3-5c2d5e7ca375",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc0410a-490d-4a8f-818a-ad4bdd5672a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29187ae-0eae-40fe-ad8a-5e232f5315e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f27a0-5a5e-4cc8-8502-f0f6ccfe596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "317f863f-c7dc-4d68-a2e2-1a1d2b42b5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670a9fb3-74d7-4ffa-8e67-3639cdd3108c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f823782f-3142-47e8-8e7e-7a96f0dc086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbaf8bb-8d80-45f7-874f-961fd7e18254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3afbbc-df85-43e2-89f2-5873f95fba86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a346d68-5334-46e6-86b7-f029067add5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b59468c-9140-4275-b7c6-f74def235037",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1160f919-bab0-47fa-98e5-4114cbd1b1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8f8abe-93bc-487e-93da-59a4a74510d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a93845d-b2fe-462e-9d31-f57ab80b064f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3226393-312c-4f21-b693-874d1ef539ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72c0e7e-aaab-4dc9-855c-4138284ec597",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c63706-b2a3-4b9f-b63f-f57a2bf1afca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95523e9-18a8-4ed2-8b69-3b41b875fbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f95e20-0941-4884-bceb-01010264a841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2353b616-7663-48c2-879b-c76c4db886f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc84c4d-ef1f-483a-b52e-b1ed0652c9ee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbafebf9-9a47-406f-8a82-add6cd2cbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27acc6c2-bfec-4358-8fd2-716f29919cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa4b76d-aea0-421e-b2a3-1642c2829c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f90711-9536-4e2e-b356-436bc7a465fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639e2e15-4940-4f87-93eb-5a3f23bd17b6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbee2bf1-6d9f-49c9-8780-2d38c0b56d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9633e7-55cb-4220-9f4a-3cbad0afee35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6d4c2e-7924-4b62-84fc-1a981770dc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4bea38-b181-4e03-a0dd-0ec9ddc72147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4e7799-10ba-427d-bd96-459b536f89ab",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce191ff3-47f0-4f78-bf3d-5da1f5b0a7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50806731-eb1f-4d9d-a410-a7ab9290540a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdc466e-c437-40e5-b625-a109a599087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ca6fbd-4f76-48ff-a80e-e7aa6464d212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ade2039-2a1c-4f84-aa4b-41b19ee23857",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f049d2e-56ac-4f92-8d07-8534bbc5f62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf6e6a1-82ab-4462-b381-578ef53ec1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be0dc6e-a1e8-4a0d-8ec4-9086e9e92ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03d1f27e-e438-44f9-9ab0-07da107e2700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baf7dbb-a53d-4727-a053-80c3caa8f113",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1198032d-72a0-4b37-983f-c8df5eb1fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33db710c-7543-4697-8f20-20bc92d4f38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f67ee97-35e7-4a2a-a29b-ac2d22ec39f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e158b663-f43f-451a-b9a6-da80aca1edc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c67b688-6e6c-4e73-9c07-62230bd4b3fd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e64d3e6-60dd-4d9e-ad75-0e845c318ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8aa89f-7969-4c75-86eb-19eb3958ce0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9ef6d2-9c2d-47f1-8166-2b9062ccd961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5514f7c1-4bf0-4b6a-b19d-2a42d285f788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e94d8c-c741-4af0-94c3-9b6517695d74",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6b939-a2c5-4a16-8b00-02b9e89f18b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "04e92c9f-892e-44f2-9b6a-8ff7e6b48f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4507db7-6e99-4f04-bf41-86484a2cc8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92974b5f-5126-4d9c-a7db-f89e684c49e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66084728-b19d-4b23-bce5-0bb94962dd43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "869cf2db-10d7-49a3-b2b1-e9f195a91973",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2f61a2-ea32-4e69-8aae-e144c8c9e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80bde616-3df3-4f51-aa56-9fbfd14cb3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73da144d-8601-45f8-ae2e-b00f69152961",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef01b960-f8a8-47af-9bcf-400fd5d90d43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12a9e4ab-3d44-4471-b8c5-89bc8d8cd266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11e4fb29-19db-4af3-891a-d62fc9ea7bac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1feabf3-b3b3-41bf-b8cd-459ca21f75bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ce6871d-e2cc-4c55-b733-8657d9a8fe68"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d97da03-dd59-4b00-bef1-556471980c28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35dd3046-a2df-4030-95ad-51b1a35afb40"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f33828ba-e7c5-4433-a056-5f6cc4bfc2f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91e58bb2-57c8-4f0f-be4b-468fc0109e81"
                }
              }
            ]
          },
          {
            "id": "7987264d-de6b-4f55-9c87-d2c0588c9909",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ad45e5f-b47e-4a70-8361-c171dc940d0f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8dfb719e-a36d-4355-ba4d-202ab8a92cad",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3107856-2572-4fb4-8faf-3a7ab746c882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "183843b5-f818-42e4-baeb-f37d5d82fb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eb8eda-b10c-4faa-87c4-46f05f812170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac88fbe9-f13b-4618-a0ad-34d0ba72f01f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "990a878d-97bb-4a0a-86de-70799b840ab4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c0d146a-7fba-4e4a-8fab-032e245efc3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b263ba65-493b-4e48-a9c4-6e5940dbed26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "458a6834-020a-4923-a612-a745d8dbcacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95427ba5-8e6f-46ca-81d8-10cf423d627d"
                    }
                  }
                ]
              },
              {
                "id": "14db2bcf-8089-4250-bc9f-a6867dbbffba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1c0d951-5416-496a-9f6a-180ffa910ed7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37ab7d69-2b24-4717-a8df-a8fc63a862bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a23e006b-0f2a-4fa4-8466-1138868bccc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e835ec9-d78d-4801-ae72-c1a3b896f49a"
                    }
                  }
                ]
              },
              {
                "id": "0aa2fd0a-9773-41f5-9b71-ff81c244c3a8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "431d69a7-e3c9-4b40-ad70-e87f2e289f41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50f868cb-3727-4d7b-8d35-8fa07fc42e98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f801174b-6f49-4d95-97e4-c503b173f88b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50ea2a3e-b0f6-41c4-9cf5-40d1ecea7c3f"
                    }
                  }
                ]
              },
              {
                "id": "a0a85fa4-0619-4c2d-9ea1-336d93b64588",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6929a6b3-a2a8-4021-9f30-2780b313af78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cad72da9-192b-40d8-97e4-edbde45d50cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa544352-5b49-4319-9fdd-7c3eb0d5d4bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3f7f76c3-8223-4209-811a-7b6a526cd8d3"
                    }
                  }
                ]
              },
              {
                "id": "33920726-2002-4ffb-aeb3-45d3c69660a4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37336029-55ad-4240-a8eb-320eab86d501",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0a1a470-d372-4e91-a5e9-7fa08524fcd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c3c0b3c-3e42-46bb-aa33-aaf4c5300a06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d6411d16-bbc8-458e-ad9f-7c03613b49e7"
                    }
                  }
                ]
              },
              {
                "id": "28225c88-0e6f-49d7-844b-98900cfd2c06",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a71fb600-6bcc-4280-82cb-cae46abfcf12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85f0f0bf-dec0-448d-82d6-368dc67dc0cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb1e313-54b6-4f78-ac06-852e4d3354c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13afea23-0d6c-47af-a527-c6d66ac2ebe1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59d41f38-df55-464b-9814-548caf7e6c61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bffb66c7-ad67-4def-9704-b7996b982bb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b11f8121-e302-4b38-a6f8-d14d39898578",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f6c482c-e8db-47d7-ab86-40b721fde54d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8523f21-0a60-49fb-928d-cc4060b5ad9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "715270dd-209e-41ed-987e-fd44f9f4bf72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb468c6e-d431-418c-b373-68fff2043e6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0abedf28-a3c1-417c-b38c-22d3a9e6335f"
            }
          }
        ]
      },
      {
        "id": "047e6eff-00a6-4ba3-b16e-7793b3b83b3d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "174846d9-5456-46f7-86bd-d16a7ab2d3fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a23936f8-0bc8-47c7-8b2a-2101c6c2f3ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32f973fb-7c68-4935-a7f3-5bc2456cca9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd70ce72-65b3-4feb-8fdd-4b75266d73e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ab91c8-1a65-47a6-bf6a-00ddb3a7efe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39ce158-017a-43be-9aef-cbfd4b76aad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "db485fa9-870d-4a4c-bd8b-ff56d9c91c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b08303-00cd-45ff-9957-f8e3380eef24",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aeae0d-8643-4e5a-99dd-372aaeee4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b274d545-d5a2-4a9e-bb52-23a43ca06a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c895889-8fc9-47d2-96dd-189128d7a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "925f9aa6-b66f-4c5a-8da3-5f37c4333a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b6677d-c430-456a-b0d8-85b926650a22",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da21dfb-0ff6-41c6-9a95-936afe189a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be4f888-87cb-41e7-8894-f64f01e96046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255ba46b-57f2-4bda-afb2-32bb3edc1046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d779ec3f-507c-420c-b1d6-732f41b6c4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da32d93-f127-40cd-9d5d-76fa0353fb61",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38005b47-3786-4c89-87ce-55b99b408871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940dc786-a605-4204-b0a9-e8dc78ae8846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bd28ff-6695-468a-9444-c76a1c03c6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6047bad7-5363-4bf0-939e-63d8cb07398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b942a00-197f-4be5-bc82-6055e1b559a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c4f91-7db5-47d2-bb44-256045466544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02dea33-da4b-4097-a811-9027b059b1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f5557f-9710-4f06-9c34-2736de9b50b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3309654c-6c42-4e79-8542-a3e97665c493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71387c94-4088-4069-b006-bd25379a6d67",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4474a1d5-ffa3-4fdf-80a9-df9bad6fcc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfacf41-065e-4531-a989-25fa17f97c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51047dc7-b24a-45ae-b6a3-72661f1d74ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eae2bc-4296-4706-9fa9-a6b2416f1420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422b1d0b-2b8e-434d-b4dd-3c7b616a182d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f06266-6e91-40fa-b4bb-a7cd90746613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c730670-22f1-43f0-b1ca-7e058ec46aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b38db7-38b5-4583-9c64-eabcab559c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26d5c72-de27-4fa2-b624-44e80027c58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a72148-0e28-4d4d-ab63-0025371a98fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12307d3-4113-4421-b495-0584131e6d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a673ccb-5ca4-41ab-bf15-d7890298fade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ca6674-9aae-4f68-867b-bcab941520c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a501711e-6fb3-4ddf-8382-fb8aef8ceb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d870e020-ae07-4b5b-84ad-8f39db5d23d9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5302c1-3b3b-45fc-aeba-2055f0952e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ebb7f2-6bcf-4ae4-952e-fae71cca2068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72b1309-3390-4c16-9d38-df01e6968235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4680d5a-2bab-438f-98d1-d8be9fa7f7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b11b68-5f6e-4c96-9b2b-3561cfa97f9a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4af13e-acda-49ea-a1a7-3c1e1eb1a789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6943de4-9bc6-4ce6-9cc4-d28516282c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97249dd4-e8b4-4039-a986-f5cf8563ae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e11cc7-b6c8-476b-b686-ae81979b211c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e97ea31-351a-47f9-955c-832eb40084a7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6ee53-30b8-4bfe-ad20-92bf3ae385b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8140dc09-d91c-4d77-b759-48816f0dab20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ac9a43-4d77-4b4a-b7ed-387f669ec206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb9447b-737d-47ac-aec3-6db4daba8fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f247510f-0262-4ba5-aa43-6b547c126267",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f44684-66ad-41b9-a50b-60923bcee885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5ce27a-278e-4539-aec0-e7a8a9e88032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107dce8b-5829-4564-8c27-5108d005a919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "665b5d06-c0f7-407f-824b-e3d48484fbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959b8fff-6965-4ca8-bea1-572481ab46d5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6512757c-ede3-47f6-b063-e4dc70952b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb952f3e-ed52-49f4-834c-045ad0bbafc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47727eb0-a0ed-4c78-8e70-992d1b7856a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe48d2e-7d4b-455c-a9b9-94da91c00d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae12f62-d7b2-4845-a143-72a18a76aab4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0d256f-8f8b-45e6-b198-fdf3e4726d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ed740f-9dbb-47a1-b287-45eaf753d439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d853bb-cdb6-4448-8cac-b2d9ec5b7bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1f0527-3ecf-49fc-9bc9-2d7c9137a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869d3d44-e04e-43d2-9cde-8e982ea6e4c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397e98e6-cf52-4990-88d7-8a1e3a4206c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c71602-dfd7-4e55-98dc-19cfd0646a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3310d7a9-9524-4617-8a52-4ae3eb84bde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4422b4a2-0035-4287-93a1-b2385442bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2768a841-e70a-4a55-b195-2bde3453a6dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32247a3f-91cc-43bd-8588-eaa22bb8ba61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181aae60-1033-4598-89d8-e1273fccf610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b748cb-a0b0-4cdb-a8c4-32cfce84c5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d83d03-9821-4dc2-9129-829359011926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4dc4b8-25c3-415b-b328-6f095268f9a6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b32220-31af-4cce-abc7-9515d7982400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a77104c-de23-44da-89a8-4eae4351d11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf6435e-4bed-4060-9f3c-b1a1933f66fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d914325-5b9a-4feb-b314-8eacc01e67f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e28388-163a-4a21-bbe1-7878c58352f6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc219b78-2696-4f4a-9b1c-91081292db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0930af36-1717-43b4-b395-a61aea478982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee619e14-1604-4a68-a288-855d05b0e7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7428b817-3a8b-4629-b18b-3f568fce5c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfd2d8f-471f-4fde-a352-2af8cf765c9f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c2e0c7-82cd-42af-bcf1-2660a9d3139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db9142f-a9ce-4d14-b485-e520c928bd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe6a4c7-270a-4b20-af37-af3f9697db59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14f2866-c94e-454b-b17b-8d69820b3b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e95ddcb-6089-4ca3-bec0-d3fee5a62b91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3ed6fe-3457-4d4a-a709-33af78139cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519787e4-2ed6-41a8-afe3-c763b1611ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f8c161-4633-41a4-855c-6a87bc27e030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2525b1ca-6415-43d1-801d-0274e1e7619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f514af2-c328-42ef-98fd-306ee6b4c351",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7089fe0-79c2-49bb-a925-d72ed0f5899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c24c3be-b3e8-4fa4-afc8-d51920ffc18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b2fa74-177a-4998-9074-d9b03e48c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ececbcde-bec9-4001-b79e-7c84fe353266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b49e075-d389-4b5a-b640-1fd99f548909",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6676b866-dcad-4f98-adcd-6a6dbc943100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e32e9a7-3cdf-44b4-9cb1-77ab1f499672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46840cc2-fa92-42e2-bb44-e969d8b3eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0812e879-eba1-4f76-9222-2d7d74c9f052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d1fcd6-86db-4381-9d62-98235a0a8c61",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4af1633-a04a-46f3-88d5-6013dd1b0c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b740b43-3f04-42dc-a7ef-9e90e24de6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f03f04-b8ef-4327-a502-b8319a4d980b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac58896-2058-4106-95e4-69c95f37bb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4679a6e1-8066-4ebc-9834-17c4dc109bed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42e27bd-d96b-47ec-8f33-fe944c47b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8702bc1-547c-4d0d-9332-281ed12a552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84422c6-e0ca-4ad0-a220-38a5efd52b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1341e73b-dd93-4218-a13c-b4c67083b6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9c18df-fb38-41c2-9689-f48e8d7ee008",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655e668c-07d8-42fa-8998-b67fb049ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea36b56e-103e-4e54-b344-22a388c190dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df64c34-a232-4848-8e47-2a35122a551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad77d83-187d-4b18-b2b7-6b15d05c71f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283b8037-acfb-4362-842e-0b112435240a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e16eb37-8e5c-4c80-8757-57513555483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90968597-59bb-47cf-98cb-fa0c71a088a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8465baf-4e6b-4491-84eb-c9ed722afaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9611cdc-09b5-4ec0-bd1f-2fc99d9001ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77887c58-1ff0-41a5-a7b3-4a6ca633d32a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb7fb56-45c8-4ddc-8635-5c307502a29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a93011-f7ed-48ea-9223-21520ae3737b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fcb1b9-eb32-45a4-9814-34a3c9c7bf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f63448-37ce-456f-86ce-85b4b9c9eb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82763c6b-4fde-4b30-9230-90838684f214",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb35915-bb01-4d2d-8d70-fc673efe7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9b9fb2-0c31-4a34-8e25-22accd513555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e13ad-9a36-4193-92c9-80b5dda95dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93083d9-799b-4444-b294-786f26ac8f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0e93f0-25e7-4f85-9a2b-14804fcbf5d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b006c08-86d4-46bc-8026-5525726fd643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527ddda0-5ccf-4a23-99aa-842dfeaea030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289153d3-9363-4860-9550-2c99f762f866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c504ef4d-cbf1-4133-86a2-a105ea7110aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d31e2-5b8f-4678-b0e7-ad37a9873c6c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc80342-2a0b-473b-a96e-927f5bda59e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aea7b64-f307-4a23-989d-4f0b37e272ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad51bb35-9ce9-4ae2-8a49-28dbf737de20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e07949-30dd-4337-a7ef-fbb58e48974b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566f32aa-89bb-43d0-943a-bb60acc76f62",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d189d8d1-d34e-4eb5-8acd-4588f19f8d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f0a32c-5b38-45d9-996b-990f8ee0cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8f3e38-b81b-4061-8887-8a56c3bfc0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f151533-d73c-4008-b279-db401829729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f35157-f5ce-4827-bdc6-2b43f5a078d7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b91a109-509f-4bca-aa73-d52aa6810e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06853a7c-cbf1-4062-85a2-7042cd864d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daee00e-8230-4272-97f4-38a68e0aa057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d13eab25-f5d5-4ce3-a32c-b660f01fc11c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a189a63b-20ca-4aa3-9ec0-31355815c846",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "beb38a78-26ab-45ad-bf71-b30878093a8e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b97817e-6d91-4acd-90c7-e7c60ff2230b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "abb71efc-3a5d-475e-9927-691ee1a03796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c685c17-b214-4b13-be84-3232a68ac57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc02f85e-1495-4fa7-8638-2cdd202c540e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7fc1a26-9f54-4997-8560-92f4302e4f81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef365e8-87b5-4d75-afd6-f2e35393b53a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8da798-9dd8-4197-bfeb-5b2a79e740d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceacb149-8118-42e3-b0bf-4620f1a9075e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdc106d3-949a-43f2-a3f8-1036c06f1ed1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a16bc3f7-b034-4b98-9055-db20fd874f98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30d62246-1d53-4e94-bc92-da52e9e638ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f7060e1-1ca4-4d01-bfb6-72dc699b7a24"
            }
          }
        ]
      },
      {
        "id": "1e839baf-d14a-4c53-8310-2bd60c60a6d6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "259e0f48-ebe4-4d32-84b8-5850c7a23e1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fee58db-b3a7-4320-a491-6f74cd14b957",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3036c90e-a164-49d3-99c8-33e87b6e0fb7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325781b5-455e-445d-89ad-071c27bd9360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc82605-3062-440d-aa7d-2b8a16b2d5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8feae081-d415-41e8-b2c0-ebc66adfef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d013f0-749a-42f9-804e-f1be42420f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faef5529-f5f9-42c6-984e-2c8fc5871cb7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38265904-0046-49c0-9136-7fb8004a264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a87eed-7124-401f-916f-371b7fb06f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90acc31b-2310-4d78-859b-107b340e1996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad33f06c-650e-42ac-ba34-9da84474b841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1f9358-4cde-40a1-8fc0-8ff65270f7f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c766696-a1d6-4d37-854f-4ec0e7ae0814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e88a2f7-981c-43e4-b32d-d5438d4b717f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af57f988-fe64-474d-ab20-852013ba5640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "742cad86-6483-47d1-9a18-e803a78875b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67d94d6-6afb-446e-a784-22f3a723371a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ec54b0-2226-4594-ad4f-7196fce02b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbe40e-6df7-4c51-9f2d-fd16c8e5e0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01f6bf5-b465-4a7c-aba0-22294a17c7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a4f85e-727b-4969-977c-8dceef11989c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ac8b9f-5f1f-4869-9804-32ebe3d8e087",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aabd1d5-cc66-4fac-b75f-1a2e5812b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c632656-612d-42e9-8b9d-9b0d47c07094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e624f26e-285b-4299-9349-ec50ff328b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3565e2a2-e099-4cc9-a9e0-210aba98cfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94040ed7-d31c-4fee-a02c-388c46662ebf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d80edcd-fc59-4883-a118-8b9463a5c8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340cdda5-ae95-4698-ab24-3f177105c27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118dd78-483b-43de-b9ac-338d3b60daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e04bd13-fdb2-4890-99da-985863c64ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a52b69-782d-416d-a756-07f39d71485e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc28006-4574-4bc3-9e84-b6956451c87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0496e664-39a2-424b-ae74-4ffbf9825174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b53cd3-6713-4ef3-ba1e-e9b6102a58d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9401cd9d-85aa-49bd-b62b-a1a40a32baa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745effe2-4f50-46ea-a43c-049ef218dc79",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc97423-603e-4dc2-9f58-21cd56a0a590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64ee527-2bd0-43d2-9ca4-3f507b8875f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f79240-98cd-4f88-95bd-7a13cb37dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97513995-51a4-4d74-a58f-7502a52c999c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dcee4-dff6-4ce8-a654-343325a39e06",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207d1bc2-6cd7-48c2-a07d-9abb2a533086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bea8d4-e36a-4ef1-a37c-9917b39f8d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0176158-fd3b-4503-b347-e5bb380c4a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a0453e-a6b2-4aba-b888-503d47c34bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29eea24-e893-4291-b788-7698a89b8604",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b80760-157b-46a0-aed6-5e6ffb99d99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67157ba9-cd71-492c-add8-3406c669a223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735a5489-de1c-4869-930a-45fe25eb2000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdbf345-ff62-431b-a162-7acef56c3091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe04a9e9-71b6-4112-ac69-b5c666d3482d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63da0335-c180-46dd-967e-f99a0ae3c82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b68382-b117-42a1-9bfd-bf69612faf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2898e71b-8b56-4f28-8e4b-45887daac9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0131255-fcc5-4979-b711-2cec3b1f2343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed544982-2b86-472d-94d5-a88933fc0f7b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf8d27b-26d8-4849-ad5b-9ab74db4e477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75801225-afc9-4f18-9c7d-dc4a2a879f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766ee67b-13f4-4253-9ed8-c63eda615e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c846d521-38a3-459d-866f-cd6962ed83bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f138d60d-eabb-445b-9ec2-9cc6a0b16ce2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f532a68-95d1-4bbb-aab5-3ad2ce7f2886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11131868-85ef-446d-860f-f430b611d743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b37225a-78b9-4859-99c7-00fc6fd87ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "029a7848-6f2a-40d8-9bb5-83037b95d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d843c8-4564-437e-87b5-d8e6c4fdafb1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7cbeba-6120-4405-a59b-b5ec49b0f746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db69562c-b0d7-4193-8988-156e09907085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96769b6-7c72-46a2-982c-e86807aa72c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6655e65f-3ddb-40a7-a08a-72d99f3fadf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34ff220-285a-48a2-906a-66a13f37e948",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c730677-e143-4708-ac54-64269f9e64b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156409af-dedc-4a4f-be55-655c1b2befc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5527404-d8a0-4b17-aca4-9a9bc27ea555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "291510db-65af-4df1-9dc2-4440fc989cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58196b78-d848-481a-b0fd-0378944147a3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333239e8-8052-438f-8af7-8ffef7818bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453b07b6-7856-4d3d-93ec-eb8f6cefb3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864387b8-942d-4b03-a9ba-7d863071b008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59e327a6-1889-42d8-9219-25cd7b6df35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e496d81-09ef-4ffa-a565-e7ec624cfc40",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c191c410-b414-4023-bfc3-bc13c168dc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcd7019-97c0-46eb-b0d7-14700fafb394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d53cc6-6dfb-4fbd-bcc3-e4c971b8ff5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ae15fd-e594-4a42-99ef-654f0421dfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24293bfa-b996-4b03-81e6-0756baf6b156",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29644d3-0a03-4789-a024-a87590553e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7560cdde-872d-4c60-aa39-c9d64c76b715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd76337-2110-4af8-85b2-8f03e8b900b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce4366a-eb1e-44bc-8a02-1eec6f5cc76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7138556-7dca-4458-9f10-5900288415d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4a3cb-707d-4b32-8a31-61b6e6bded68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3231f2a-bfb4-4937-bc0e-fe868b49e200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d36815-f8be-46ff-ad61-5a8dc83ce984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62048522-b79e-456d-bdd6-923083337fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ca4f52-a886-41a0-8793-4a1b811b71ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f3863-3b99-4235-9565-49e865a01842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974c13df-46a4-4cb3-b4ce-4f28c0bcbebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80db890c-5417-4ea1-aedb-51788ff17607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e1811f-f53b-4544-9d22-90df524af6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef0ad97-95f4-420d-8ce5-569965705d81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c27d08f-1b00-4140-9595-a03ad2b21f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d921f7-a0f6-4d2a-9272-8abbd950bf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4ec2cc-f67f-4565-81b7-674aa1a949c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42c1ef9-de59-4205-8acc-da2d5e33be0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2736a59b-fb90-4de7-b3ea-47d4d5fc52f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de391f8-9643-4437-b9f2-c44260db059b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2bd6ad-0753-4ad5-a8ec-6e9d932b6a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3ebf99-1529-421f-9b75-c6ea95b8065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6715849-beaf-4f86-8e42-7c9a1e30d597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bc4e80-a82f-4fc6-aa0d-31fc7fc53dd3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7f4cf9-44da-4713-bf90-5c53b8391ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4fc060-7a82-4634-88e6-279dbaae6601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2194bb-683e-4fc8-9dd8-cff70cad554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8c6b29-4a23-40ec-8dba-61992dfbb4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99377c9c-9490-4880-b6c0-08f9b65be7a6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453711a5-b617-4b9a-9ab1-187b31797d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00c7e8e-82ce-4897-ac13-2c736071816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28ecfcc-29df-416b-9a69-2a5acae7bb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ab5707-3877-47b7-aeea-ca005acf499d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93490ed-451b-442b-837f-a868fd9fb376",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d523134-1b93-4dc9-aa62-29cc5003ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520876ee-0263-4cfb-a276-f0842de28f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7e8d7c-466e-4c45-8f9a-3a7013a4a71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "561c6066-dbea-4b84-94b6-20baff4561aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762def94-abb7-4b4c-b987-5826041acba9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f191dd4a-a1a5-4209-b0e9-c7ce3c0e669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e73eeca-31ed-48a8-accf-5e7a57bdd4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59e32ce-f41c-4eca-9180-ced1bd415f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21765054-334d-4e56-af75-4bef41935004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98edc7d2-2e58-48c5-8c2d-ab9f8d08916c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ebbe63-4ba6-4393-ac47-e038492080b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af6f496-ada6-4f27-b172-f07a4958cdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0add0289-4b03-4312-993c-9d200b51fef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45431386-f121-424d-a786-c4d1d3ec58b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca918a5-c0f1-4f6b-8ce4-86783da468e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca1967-de73-425f-b651-56977ae7a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63af937c-4886-465c-8e71-ddedc40ae5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6aac93-1284-4dac-84de-236d45108602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da396612-ba07-43d7-9e5f-61e910e89b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fac8cf-2b7e-4514-8b1e-db3c1d1e3507",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f983606-8ad4-42dd-8360-4c0f6b392371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab05dca-d554-49bc-9b9b-9c84498787dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8893cd-4670-4479-8ac6-6d42889abe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9e72f6-c8fd-482f-918d-e76ad0237057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b0aea1-13ee-4fd7-b745-872420fcb845",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515f1749-3159-442e-9380-36f1a377e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eb59a3-3e08-4c2e-8dd5-c4ba2106a35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47ca91f-671e-4ae8-855b-67b5bdb5ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2b0553-a26f-4af7-8651-b3a9512f5486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7f44a7-6ef9-46d0-b002-9f85014b68d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d0fc85-b321-4429-a6da-d1cfb8edd7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206fb749-3e85-4d6c-a0aa-41e6ac5f404f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655f86f8-454b-441f-986b-8ea8576c21f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce377e61-d60e-45b1-adef-d670ff73474a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bee4bcb-4eb4-42b9-8bd5-c9dd618806a9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4714b538-042e-404c-8b72-28093b3bb64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74107627-f419-46d0-ade1-ddbe9c1f9180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e55a44-31f7-4c46-9a16-32962a1aebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e549910-9fee-439e-be5a-6182b8c4d641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdda684-05f2-41a6-bd1d-55759dff31bc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c001852f-e753-4887-ba9b-808c137765b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa47f0f3-2487-4972-99d6-51703f34e310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6b1bb4-d754-46ab-863d-2eb5b1ffd276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea63d6e7-d272-49c7-b8ff-99441a666ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6675ed9d-b5ed-4d86-adbc-1e2c9fe4de35",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c11d9f-c39d-44e8-ae53-18baf5d8c17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f8d68a-6a4b-42d3-809a-56495705fc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6a85d0-d8b1-4a65-89a0-cfe9cce86653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3081f822-6cf1-46d0-b229-0d8bd8fb96e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c788d0d-481a-4751-a2ca-92583c68be70",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38549220-5bdd-4d31-b7d6-e4cc2eab32a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a8d969-aed8-4894-ae22-c4d5822b1e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a892a1e8-d3dd-4dfc-98af-1e77fad75d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78825d82-5043-44a0-8dcd-ca3051cb8cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d884dbe5-7ab2-4e54-91e4-c8cf0e154030",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce30b08-ed4c-4ac8-8bd6-721d85ba3545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca25929-6168-42bc-b62b-e65d6aabfbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1dde74-40d3-45da-bab9-6938e82e4526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "202d22bc-b9d0-4c2a-936c-726f2e5692bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696cf552-c755-4fd6-9f12-210391de8858",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3d9884-b4a8-41f5-a552-e073422e8211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c476064-1c76-40c8-b049-d2f97668052a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2052343a-2021-4b6a-8207-2fd67527137d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c57703f-2d14-463d-b469-d8780e83f147"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db854500-03cd-458a-bcce-940e78f4982c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54405467-50a3-47ef-ba79-5dd17b6634f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30305485-973e-4a2e-854e-81a1159aba33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2d64fa-b556-4d06-a4f0-b6f8a510e674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010a2772-4227-4f0e-9b1d-674902124099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a544112-3998-4491-8aa4-98f3823a65ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "629973f7-5562-4b5f-ba46-73d00cc3a8dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60e2847d-d84a-43d8-9855-6e4e3e85017b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61255ec8-f113-4b54-8661-7f14332d9912",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d69eb00a-6d0d-4826-b65f-c82b2328d8a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7658ec4-051c-49cc-bae9-6ada03023298",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a38f93b-4de1-4702-bc3f-138cd7286ab3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4192e37-f027-4fa4-a364-26516322763b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deb84da7-7ee6-4070-98f6-fce1662adc9a"
            }
          }
        ]
      },
      {
        "id": "2cede8a4-1920-4564-bafd-a20bcd68c727",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "30d24637-afd8-4d85-931d-0a49504b6b07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2e966ab-3f94-44f0-afcc-1c050a9f34ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be6a1ec7-ac6a-4dbb-b011-2d314528483d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354cb26e-8150-4e4b-8264-e824edfb6f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8974e633-86ce-4c03-aa1e-c392700a4b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958840d3-022c-46e7-b2a7-29ac71ae30fe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2722f1-8ab0-4d1d-a581-22296a9f2ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b3939f-9aa4-4b99-bf03-5e60cae16c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42830319-c72d-41ca-8388-84d85bfb3ff6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c764bb-af70-42a6-afc0-5dc6658f302d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab643889-a476-4eb6-bcf6-7c588b85aeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76359a45-feba-425e-bb7d-cc91d3052b40",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a0096-4e89-4863-88fb-66a2db5536c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a876d0-7a57-4729-a78e-9dde6e1b8013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1491a22-a6d7-4a66-91cf-7da6452990ab",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3169fef-a0db-4caa-a985-717c3bc11c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645d71fa-f792-44e9-bd9d-d7f16aabb9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9dcce7-5958-4324-831e-80f86800e86f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cad587-c6ca-46bd-9f7a-f3d6e7c79e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acada75f-f10e-4d8a-9a26-1e41e547449f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f51199-89e9-4b60-b690-927d6e38f591",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0235e0-17e1-463d-af79-e4880ffc9029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965891c6-10a3-47ce-a03c-06b1e9cb5e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56511d7-3dfc-48d7-8051-e302d0870311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425e6295-ea8b-4547-b91b-a56edc6420d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e59a493-4b1e-4a75-bf94-540fdfa9d294",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82254f74-a96e-408c-9e95-4c87318e4968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73414d4e-76a7-44ab-a518-15e70cee147f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a6c9a4-cf7f-4771-ac6f-c2efa137a789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f863541-f096-49db-a901-3944f6a48064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfdc97c-4fc5-4c1e-988d-a2e3b25f4786",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b0ada-ec5e-4de3-96fc-efcd7c146307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285bf68c-2cd1-41ab-8b7b-8c536ff1f788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bffc1c-52e1-4398-9730-1a8c9cfa7c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6497c47-7402-47f6-8003-3e6afd71aa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec6ad33-b201-4c7a-b2b0-bda756fb529a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90ddb2d-50b1-4df6-90fd-5e04df392009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f8359b-3047-4f5b-a11b-7bb73a8c080e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9522b419-e713-408f-9b60-e6e9fe76d713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92d6677-b984-4c22-96e7-4f11381e8461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0a530f-ccc9-4048-9f8c-de150296c30c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6619637d-976d-459d-aa3d-e38f8eb4c209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42144aef-5a7c-48e6-8211-cc21d78f3c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b2d72c-36af-429a-9e6d-8b10c2866332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4b9d06-d398-48e6-b6b3-bba47dd5a37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a2f0bb-0c94-44e7-81cb-2973f5607836",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d4bcc4-d351-4893-bf7c-8efc8a072f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8add7e6-1281-4f0e-87fb-63ea43305ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a052e16d-e86a-40cb-aa07-317ea5c7aa58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3676e768-a470-4b98-8611-a7b69b1630d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116f4e51-f39d-4a8c-b051-5889542653d2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2558ce12-6ecc-4729-8acb-e09829031c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d3617d-8abe-4bff-8d37-74944b9a922e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b8c40b-d972-4a71-96f4-227cfcecd39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc837363-e8ac-4ce2-8cbe-1b5dbb139465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872d34e0-66c5-4def-8f57-71afe42aea72",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955824e4-2978-43e7-a3f9-20b22dd49780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92da3691-7e94-4ff6-ace9-2a98ad73073d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8354ca2-6e15-4c59-bf67-1df769edfaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a37914-f62d-47bd-889b-c914a346eba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f4953-105b-41e7-a6af-c82ff0b31d5f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed53be2d-f069-4c9e-b2fe-7fbf2ddbfc24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37cea1df-4c3a-45d9-9501-3ba893879da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825a8ee5-1362-4e1d-aa60-aa5d5e55d228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b580c4-b13e-4972-bd4f-7381d4477a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109d6766-6df7-47bb-9f16-7f1348ffd96a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5087a46e-ec34-4aa8-a027-cb0054a91dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ef7fd2-3ffe-4a5d-8c20-7dd93c7bb807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a5214e-4f35-4803-a9a3-0474a30eb600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6c9314-6e5d-4b8d-a5a1-5a898626ecdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b97685-3007-441f-b4f5-7f754a5181ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a116471c-1926-47e1-a184-0d71a3acca40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb70c556-e1cb-4f12-a844-df0c486b58a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de772e88-019b-4482-9445-729832998bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c1edff-53a7-4811-9198-f41515fbd55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366fd122-a677-4e0c-be07-95f9a556d847",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9d623a-eeae-490d-aa00-749052eaa416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c19f93b-a30e-454d-b0d9-2c4bdcb788e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498004ae-d3a5-4be1-a591-16762321f04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e887397-4bc8-446e-bf63-20e2c0bcc27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78fe4a5-85ba-4b99-8b4a-81f649836d7e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c34b2a4-e8bd-46ad-a4a2-58b5bbbfa015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218c1685-77a5-4eac-9c72-d002565bd61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d48950-f891-4a3a-95c2-832a20edef4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6877d5cf-489c-4f98-99de-32cdcfebbd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533c0e5b-68ce-498c-bdc1-3db84c4a2ae7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1227f6-0dd6-46f5-b4d1-9d8c2d319628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61524418-c008-4cd1-a05c-09801af63fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f35fb0-ca6c-4821-9bea-d1de39fd9d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5a2661-7554-482a-9b61-f9a2c78d9632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc48e05-71b6-4d1a-8f2b-e1504a9a16b9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25613d6-3e94-43a2-824a-099722c11f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee249eda-4dad-473a-b92e-e9902da6ea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9158bc7c-eeb6-4761-a1b8-a805dc7a08b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78337ff5-6d81-4210-9a49-32c30cdf224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ce01e-3d37-4880-88a0-99ef26247fab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afae863-8404-40a8-b203-a527d4baa5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb518280-ee0f-4074-ba4c-dd531d78ff1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde0d5e2-1749-4a0d-a368-6b73aacb2c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4eeab94-735a-4cee-a805-27ea3d5ec10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e985e40d-602b-4b64-a35b-2f9cc31f5408",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9bc887-0f86-4182-b74f-44f6e765c4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1087e6f-337f-4650-9060-f664658780c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a0407f-f53b-434a-aab2-4dabfae23a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b412928a-28bf-45b0-978d-557ac3d95fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d07222-8ed3-4a7f-9055-4ff457f10fc2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d932a7d7-9506-4bee-87f6-8f9939af52cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f122bfe-5a2f-471a-b77b-8131bfbbe2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1098a509-0d35-432f-bf06-1e65434b2adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1225e91-1acb-4551-950a-21dd49bb7bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdcd415-acd0-4d1a-a0f4-5274bffe870a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebd3ef8-cb72-4dbe-939d-bcd59bb2134c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d03de2-7e9c-45e5-9b0e-6f90b5f8d27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa262487-c674-49b1-85d7-d1cf5fd56677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b9a767-f544-4ca2-9a5f-96657077d7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f55fd5-8e2b-4580-8338-68182f013af4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973b6ac4-90fb-41a5-9163-4c65626f8ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2591bb4b-cf7f-4c91-b3b1-206693ad21b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5f550f-3718-49ed-b600-adf21778d268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40039bbf-1a95-41c6-824e-026f9ecc04fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558ade04-8ac0-43a0-b877-09bee3fead5f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2d1215-7cd1-4149-9c71-96255393b2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ef8d2f-8c4a-4593-bf16-d8be5cdcd47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98232f08-748c-4914-b47a-94d442e6ec5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3122ae1-4961-4b53-9828-04c0d5c48bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea49319-b099-498d-ab75-8fd5f348622f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a44b452-3b89-47a7-92e5-2bf2a108eb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b408aad-7a4e-437e-9c62-acebe5f5d88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5c0f00-26f9-44ad-be23-6bbddf3ede2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfab0cd-1638-4c09-b3e0-3d25ee0525db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754e4b73-c916-454b-89a2-a242ef489fe6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691d7f9c-ba1a-4537-a1e5-648aa1154f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad050924-a021-4163-8ea1-64bc2143f029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db3644e-48b1-45c9-b625-0c33d17d5ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5793543f-6834-4e85-ae7b-359c43a7e45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d922b3a2-0b13-43f6-83e3-705e342e86eb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca5d93b-7a89-4915-ab57-8e2b1c86d977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8295a401-1b9a-482d-9830-88a90070ee63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2063a7bf-e090-4835-a6e1-dd8a7b7091ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adb95f6-2fd2-413d-915d-31be9df9df9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c7c899-8ea8-4ed1-b2a0-d7c8a094ecde",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75983b15-ca6d-4d68-b71a-14c17ae8b3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cd94e8-9d87-49b9-903e-bbfda1e2d450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52406633-cbb9-4c2b-a355-42464ea39b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea61d0d-7d2a-4d93-82c0-43051f32297c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a85397-146e-4743-a992-9a8a1b4356dc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dcccaa-0096-425a-81ca-e4b4bbacc0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac05856-60b4-4442-9c6f-37bd254ae508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a4c14b-4125-4f12-85be-a326dce44455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3f3adf-9852-4df5-87f8-ce92cca2c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b28d85c-217f-451a-ae52-03b481872f0e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da3665d-6f54-4063-a99d-39f55b9bec7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c41a8d-4f9e-4d4a-854b-86c6a05a6f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552e0280-00b5-413e-b0e7-028e4a0e4d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6e0f6f-55f3-449c-a71d-064a66056f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458ce15b-b232-4873-aa1b-667d740bdc79",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20737984-bfeb-4d5f-82a1-42ac8c9147c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35edf18c-7581-4350-a98f-ab4725b5b586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4ba052-8e9f-4a60-96b9-cc537b9e4b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36693d0a-b7d7-4bb5-99dc-6898edd830b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf734e1-b2d7-4121-813a-fb182fd338bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c31f329-9ea1-491c-b38a-2841454c82e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4238228-cb5d-4f91-a3de-2dbcedf96d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50284914-5aa2-4e11-b924-a01e69e8ccac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb46bdaa-c66f-4b94-82e5-7fe94c4a6d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af2e62d-d9b9-4871-95d4-776c1e741fe4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f3334a-5278-4a56-a2bd-c3eac8807789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d48db3e-9bec-482b-9d90-26b8dd0b941a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7efbe2b-99e0-4bc0-9ddb-daa459cdeda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0b51d4-64e3-46dc-994f-32f5c68d76f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5681543b-c0d9-4796-9afc-2a4d0f72c206",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc68fa06-48bd-4ff3-a8ca-fa4716799a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e01ed11-5214-441e-a542-ff808e7d82ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a202df-1c8a-4174-8a77-5116927529d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640fffea-4d63-495a-8bf7-7e904912c331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb479bec-ef2d-47c2-80d0-578b9f414bef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0288de81-dcbe-470f-842b-8aedfc53de72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f51844a-a61a-4d98-a3f9-258aa6976c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd368ba7-2dee-42b9-a13f-6a0f01829e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f876c85-16e2-49cb-814c-e38cbd0b7ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb48940d-d334-47f8-9690-19621fab3ea2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f48be9-efb4-47dc-be4e-ae8bab5299d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2cce04-e2ea-4d62-8c88-dcb3240e530c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600527d0-4851-436c-9af9-d60b92dcbe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb389a0-abd6-49ad-98b5-08858df7a723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ad16a4-5e84-4f00-b743-d30a48aa52a6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80ef357-b877-4c84-a9a5-9b597cfa9f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241979b6-71c0-4add-afb7-6a800e97772c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bd7c29-02a8-4cd7-8ac6-46fb464e2c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fe19af-2c96-41ec-b7f4-a36de3991d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8375a51-4d3b-4950-918b-b2aea17b8432",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c906eb92-377d-47db-bcad-40490fcafcc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c281b702-89ba-45c4-a553-adb083ae1a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ca370e-956c-4672-81d8-25a17d419398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116c72c2-6d91-410d-a716-db57a59b237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199d900b-8678-48f3-8028-ebd7f388bf9d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c982c17-cf6b-4f34-8b7a-355c20b19020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d193de-053c-4ac0-8d53-70143a3a1ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc76cdf-2f06-48c5-9bd9-adb9d78e57eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b47f33-e757-4a5e-b417-ba444fefb1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dff3476-5c6e-43f6-a8b1-9e014eac4a5f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aec889f-7136-436d-9617-2e36607ef6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f348241a-5c14-4dd6-9eda-997266496597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc659472-d239-432a-9ac8-854a50479786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01f918e-d3f5-4211-abb0-8d0390bf4d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3adbd69-a00a-4338-b4a1-495de1796f32",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962e02e9-d580-483f-b1b9-fc083142eaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd14e09-de23-449a-bf77-96890f6bfbac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e16af23-2734-44c9-98a9-4049043b60f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295ed97f-1e92-4050-b2c1-82e2cb342f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92f56a2-e43f-46dc-aded-83b999827b16",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8aa603-74de-4d1d-b25b-ba710d3f1491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef381072-2b9f-487a-b227-12a73c7db26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5a35e-bccf-4e7e-b467-740319d254a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c02924-4910-4866-9461-35d7da4b088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242309df-a008-4166-8ae6-b88d881c8064",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3019aae-a893-4e82-9354-68dd9070bd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809929b4-6c9c-4578-af25-45607d6a5c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c7a3b0-a9ea-4877-96d4-b40fe3662884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27d883e-a1f8-4a29-922b-63c278b4e6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc5dcee-4fcd-44f0-8fef-0258400a071e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40478356-bcbf-42c6-8b3c-f721e18c882d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beef232a-2675-421d-a87c-2917c37722e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a967d8d-7594-416a-899d-44319285c1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e2f857-5b2b-4f11-b3fa-ec95582ef1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4629c35-f272-4a57-a32e-1a7c579c05a5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d45b253-778b-42dd-85c7-9ee5a43e1b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f904610-ea8b-410f-80b5-df8b5d54a4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46e83ef-3e36-465e-a441-939fac05cacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d77decb-e146-4083-81cf-52c551a5adc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3bd4aa-6c2e-48b1-8d3e-a7a5a0370aa7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6868c686-14ca-44f7-a8e3-2ca7d88e6be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57a91d3-e0ac-4ff0-bbde-9119aae76679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c576f0e9-7f67-4010-a59c-321fcda65bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a966890-188e-4d7e-b24e-1b174971d571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e7c9ff-6dda-4a4e-a2b4-5376c92760b1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f5951a-38b0-49fc-b477-98c18f70158b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1597be-697a-442e-891b-9b066363b96d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b36f45b-8970-4589-ba58-73894d487087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d322359-ff8d-4988-a0f4-266f7683e1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c0152b-b9a1-4d6b-9d16-686f2de5c62a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8880498-1198-402b-b5a4-6088220e06d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab18357d-330c-47b2-b0d5-7d932abc5f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0643487-6a34-473d-a838-08d6e69c8b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1074fb4-1c16-4ff7-8ed1-5da1f723af24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c808c7-230c-46f0-89bd-79bf8b866873",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb351dca-3c38-4def-8b5d-35292f6dde2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fda3e7-2265-4000-8d6a-57d1b241b0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc4cdb6-acb0-4282-a756-b6db95641690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b06b90d-d463-4dd4-a439-bb824beb48b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6d7c54-6cae-4bfc-8ead-dd4f0a5daf46",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dd9487-e73a-4207-8bfd-593abde87aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6debd32e-3d87-4982-ab95-5ec5ec3f1daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d03b53-5787-4501-be0f-2b2fd287fb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc52d45d-bd6d-43b5-83fe-f7c68758acfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6912e610-f066-4c53-9f05-156a35d2abb8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c3ed04-67b4-444e-95e9-50387608fe0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5187beb9-476c-4a40-a6a4-8f1f16e7d25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1521231-8b6e-46ca-9d29-f44b8efd1591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76549cd-49d6-4d60-8cb5-86e8689ac69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2994249-0bea-417f-be35-40e4ee426e20",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01289e7c-21a2-4562-b18d-59ef561bd2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f612245e-5958-47f2-b039-2b15870490a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89733675-a5b1-4d95-8fd4-78dca1691569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46d1321-8fb7-4acd-8c39-0096c907463a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5504907-9d89-45b7-979e-bcf6f185cc51",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54583ba-3ced-4e8e-9e2f-bdc73f1b7b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb93c7b-17a9-4127-97ce-f82727a1b18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27572380-9786-48d2-8ffc-a21faaeb7e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c4c14e-81e6-4c5b-b11e-17eef0b6f9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60068d9-4c92-4a3a-9c24-4ad9ca3b9775",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a8e89-4265-4153-82f6-9e7260da4c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3dcd74-2560-4f1d-8fee-f3efe7aca618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b66188-27c8-4ec5-92fd-bbd5c570a2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cfb397-ee23-491e-b143-9fb3a278f527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44370775-5fe0-49a9-8a44-d420efdfd614",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a709a689-31e8-4e55-b5a9-f463c12578e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd98d48-233e-4fb6-b850-a1f8876007a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a340b-d116-445f-b332-73077f3f4f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded37af6-0606-4e12-8a9f-e6c2707b1acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929109a7-68ff-48d7-9e73-28463b537dbc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcd1521-b743-4785-b7b7-87369e8617b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ab7172-7f56-4d73-8d95-5c46af3295dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065c301c-5fca-48e4-a642-29f64a617e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54030c2-8e31-4590-a814-b5ac1058febd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc74f52f-ca65-4fec-8b0a-7d6042d23886",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7815994-d0a9-4c6d-b20c-4f68f347da16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ecaa29-b54f-41c9-be31-3b78879004c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae92b4a-2bdf-4347-b0fe-dafc26672e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96656995-b5b1-4f8f-9e4d-f004b79fb007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18545985-6d92-4b7f-860d-41ff196f7cd0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ac076b-3bdb-4757-9f90-a54a6e28b6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d746dfb-7872-4a5d-87b2-62a1628478ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e3e76b-1e20-4127-9d13-b19836972a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59607d4-44f0-4df7-a7d6-c3bdd583e4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde5f064-01dd-4e6a-8a85-36caef7854cf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fcda39-6771-4075-b9c1-0380d10f9747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e93373-17b3-41ea-873a-59e5e01dfe5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdb7e96-9100-41b4-80d1-71eabad37a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07238b0d-cda8-4358-a024-1d59a4a8caaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93592aa7-41bc-45de-8047-3aa2da64f896",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d779681-f841-4267-8e60-5075f681859b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0567ab-9fc0-41e7-9191-b4409f3e5853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1572b399-f31a-423b-86be-f256a0cf1f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb9deee-47f0-45b9-8dd9-5e8384f94cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546e9496-1e72-411a-a33f-2f5612070625",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83063b28-249b-4e96-b87c-fc3024572905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e80a51-9a01-4d01-9b5c-4dd055769b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4173f9-56dc-45f1-ac79-2954bcf4aaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096e9f4c-aa75-4867-93d7-eb95472e533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7833b4b-ff51-4c2a-928b-0b1aa599202d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cf0b54-9bf8-47eb-9c83-55f83386df33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3c1c70-47b4-4270-bf05-fb8e27e9885e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcef3ae5-580a-4cf3-b63d-81705e0bcf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1da24c3-baca-4577-9970-b62d88f38c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48506866-fe98-4408-a332-8dae049347d7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc06f7d-7ba9-4a56-aae6-6411fa808b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceffa15e-6d8e-40e3-988b-3641fc08a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62622f27-1bbd-4b49-b9da-d6e055b3c3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19aaab4-34cd-48c9-a24b-2ebd712bb072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f05971-7e44-43ff-ad26-558777e6a4d1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6131b7f-68ff-4658-bb1a-e199d94f3662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd981e2a-4385-4bba-98a1-b1758b0c7744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cb63f4-5810-40c3-8a2c-2fab61c4808f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e448fb2c-8ed4-434c-9407-4f36976812ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d821f344-3f01-4470-add3-290abb2bc4b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72aa31c-892f-422a-a7d6-fb7d90ee46c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61372c9f-61ed-4542-990b-ad9e3263a75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9f1419-7175-441b-ab23-aa307e1f8466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffff4ac-f130-40d6-bcfe-29521a0dcbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26edbee5-2ced-4c47-8071-e306ad3a933c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16844f20-25d7-4b11-a954-ec6b394d6bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e33531e1-0900-4308-b612-7b82cbbc30f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7734b0-0b67-4c27-a1fe-f416bcbc3b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ffb4d8-b861-48ed-a345-c0f9902a624f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d45fe3-0e00-4d72-b70a-c5acc2669420",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e87d4f3-c516-4655-8e1e-8ef541817acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27bea76-7f3a-4403-a2a4-06a320f3040e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd37ed80-9cf4-4cbe-8199-7b18bd6f0aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42547419-44e7-4e59-af65-2f0528db470a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dbc070-6305-4aee-b0f8-83213e04af36",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cace70-bb34-40df-8c7a-814bb05307fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9155be4-f19e-4cbd-9d2c-08daf8b4df91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c2aade-9521-4d60-864f-851930ba870a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9486a56-1b67-46d3-808e-d41aad22084c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4881b9db-8772-4d1d-8ad6-734383ab5830",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e57e9b-d1b0-4d40-9a02-217066f3cc51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160da223-f7b2-474b-bf02-747393f3fa2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac91dace-5b74-464c-a695-b6c4aaa4681d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825796bb-802a-4469-97e4-0c78aaecc956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fc5c2d-fd50-45ce-b736-7bb576ad8537",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ed8e05-235c-4d57-b4c6-3dc13493ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5344053-5a93-49c5-8fab-beb3e26380a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfb7d85-3044-4ea9-ba0b-7734f2d20838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06bf7f4-3390-4671-a61f-2e5953b1ebfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf90c94-3774-4055-826d-f85d4bdb52cb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdf6735-85cd-40ab-85a1-6b8c7dc7b87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a25d66ee-0859-46dd-a55d-c448a440f76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01c36cb-7bc0-4126-8015-27028aa232c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3208514-8718-4fcd-bb75-c270fe07ba99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87f3d51-f2cc-4941-bb30-0c6bfa8dca07",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6c9be-997b-4d83-80df-99502a67fd72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a8c1a63-b0ee-4e0c-a65c-d0979a00dbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbbef8d-72a6-4152-8ada-bbbc2e5b6d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75839344-64e4-4add-ad6e-78bf6f2e6152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdcb453-d866-46c4-abae-292fd22bef0f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a848f9-d893-4f1d-9c30-4a77eeb00d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f7d88f-bbfc-42b5-abc8-f07859e40554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3217955-fa3a-472e-b8aa-663b8118b867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1257aa8e-ed5c-42c4-895c-55d5d7d160d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a7e0cb-dfe6-479d-9049-2ddedc27bf45",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e83fd2-ccdd-450b-b8c4-3f78ea67446f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e946471b-8949-4015-97dd-bc7eab5ebbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c12416-8498-4f24-9cf8-a5d2ac33e21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126bbd29-a3e9-4f78-9546-5af0de27231a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb54d72-76be-43e7-af61-207285a631d1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecb1aa2-7722-4345-ba76-9691adc13860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ab0116-c863-45ec-9d70-cc3f09d8e40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43dbfbe-1413-4ae8-ba59-257da1c3118e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1996e32-04ab-4353-9563-077584e715b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f388b35-fd9f-46ce-aaa8-d1d670c60b07",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78801418-a1cb-4d67-9d4b-f05dbeff63fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260184cb-a61d-4065-ae86-e35d0e76ef71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1926699-bc61-42a8-b937-0681e9b11355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66035f6a-17bf-4837-95ef-302920b6ee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d535d11-a6cd-4abf-87f4-0d1104a5b3c2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ea2b85-1fe0-4b50-be4f-82cd5544a72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7fda9f-e9a8-4598-b48d-9b05a738ea40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de43bcb-8ad2-45f3-a8bd-ffc340f5da88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587638a1-dddb-4c26-85e6-2f3d38651670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2c3f18-2c49-45d0-9ca4-644c29b25b4d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae338b0-bed7-45d7-849d-62b9b1348036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f611f68-3a76-4f36-a1aa-8bdd85228a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bdc432-d746-4d41-b754-38f7f92baf6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd63803f-30c1-468b-a719-02d4d6603a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb8ddc5-8846-4d2d-8de2-0d26e53d8813",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56c3a7d-56e9-4d99-8378-90c7d3af701e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd25d61a-577e-493b-bd6b-63f92c90ef7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b82adc7-3f75-4430-8721-fbd858e33333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a821705-0c32-4706-a9c4-abccb3249fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48c886d-3042-46f7-ab94-72c0cb13e432",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efdadab-120c-4617-94fb-7116ce84d1af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c018342b-e44d-4731-bff6-8391de80b27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d275319d-27c4-44ee-852c-62a41f458a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fd3602-13e9-4208-bb74-b5a331b2ce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee618a55-f7b4-44a5-9c6d-b91563fe477b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d315e7a-72a6-4469-9919-462906ad43d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d42e064-a438-404f-8852-6f29eba48d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a52d12e-cee2-4ee9-9533-b9b02c4b0541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d018dde8-83f0-4362-b077-01e99f642d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ac2a80-7b30-4ca0-b95b-8ac1b204dfc7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0c1f8c-90d2-49f0-8c3b-c94ed77b6d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc421200-de00-4b8a-93fe-ea93f0d6f46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1210475c-a161-4d0f-9c9c-ca7f27ccdc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fe037a-3429-4e12-b773-c3bcbaed04eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0015856d-7942-4655-8c71-34fd1d611570",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7943d032-14c1-42f4-bac8-099a78670f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46a495b-ba4c-4d8e-8e67-9364ea7c3b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e9431-04f4-4734-ba6a-525dfd52a909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22816292-e7cb-4871-a2a7-b9eac4e449dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda8b46-13e6-4526-b986-ff37b1026d79",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1dd3e1-9438-426b-b5cd-d32a7be48052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa9bc9e-86ea-4a07-b33b-bd129f1c4453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b681d9a1-686b-4aa5-882d-3115235a57af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc57b53-2993-4d11-981b-461b746ddf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395dc34e-78c8-45b5-8a60-794d7612f242",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17061a0b-95fd-4910-b4ed-b89f29717dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e79fc8b-7697-4b03-9dd0-da6cea6fe4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfbad67-ff03-4ab5-a01e-fe95e67f3e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3427e611-894f-45aa-8495-e46eaed32f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc661fe0-e51d-4050-bfde-20f7e929b316",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae4197e-ccd4-40ba-94e0-f45c3d47346e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651814c2-371e-4f18-b260-e8a0e6779ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2b4555-189e-4132-85b7-ca6a6525406e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d794b500-5d0e-4b6a-a228-d7453b2e6524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6747f5-6083-4d58-a17c-e377d792e2d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef309ab-7865-4e4e-8bb2-2cb249aff3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94c31da-c0d9-4d21-b241-92b67162dd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8076dd59-6e4c-43b1-beb7-69429419492c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee418e2-8320-488a-9eb9-ea8a14cab920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42667894-c095-4f20-b663-1ba4e0cd258f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f0e99c-fe0c-490a-84f0-2691579b0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334a97d5-344d-4781-984c-d2813163e24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0809ea7e-c1bd-45b5-83cc-4f9bb0fc2854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71ca089-0142-4a60-bbf9-3cab3e02a1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e362ca0d-820c-4ec2-8fd0-ac20efa1ccd5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a77c02-7e9c-410d-8aab-de60aeea0a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbb2ea6-40ae-4e9e-8697-972a3e4929a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e61bdb1-0cca-4e48-8a15-015e45755f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122b68a4-f67c-48d0-ae84-0b863d6d7238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40153cb-86a6-4d1f-9a39-9836822bab5b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48babcff-6a10-4f58-b024-cd0f1c75af1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9febaf52-78e1-485d-a220-7fe11ad18452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27ab7c0-19a3-4ac3-971c-f61375e14210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1540461e-4c3c-4989-ac67-4db6fa664dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f63a84-1f9b-4d5c-9482-35d40783d71c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc5730c-2b7f-4639-b233-745cba15d44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04e0544-8ff7-4019-8a9f-13e9a4aa04cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc36522-06a0-40e9-beac-b7d1ee86c6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff927adf-8ecd-4528-9f81-056a69f39f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2433d031-ef2e-4245-bb45-eb2bebc896d0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9a053a-f372-456f-bb1c-8ac7701d1106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acecdd38-1191-4726-9600-27aa10069b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ea25db-2475-4386-8785-9adfe8b0efbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d2db65-1528-4be4-bff8-8e739da28950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0d55d4-3f99-4e3d-b21f-da6e2b210352",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2792b0-d270-4612-a3c6-e93a6f84f85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "accc42bf-9bad-48e9-b99b-7c6e23b68b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08d2de4-968f-4dee-b7a5-3b55e0bca34c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ccd49b-d3f5-4121-83e7-d6c6faffc124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe04624-aeb0-431b-a83e-5b1e7cbe0928",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f94e558-501c-4c86-9456-4585527f9386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b87f642d-2afe-44e8-a2bf-f82145bbe7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714daf44-c105-448a-84c8-1aa43f1e1e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d8e5c7-cda5-4f2a-862e-0c09aba2c3b3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a677a482-d386-4ca2-9fd4-17d5fb0401c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbdfb4f0-70bb-4587-81d5-021774dad4fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d458cf2-1fb9-4b7e-938a-0eaa51a13d9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1940c7b-b3b0-4264-8f08-ee43954ea6d3"
                    }
                  }
                ]
              },
              {
                "id": "20e3f2ef-19bb-4ab9-a4ba-9bc20991d38e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4993af08-5ce2-4869-b02f-ab1a51bf37d6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867ae280-63cb-4a0a-bfe5-320c1805e508",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f9527e96-de94-4709-b204-3820fb6801c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5258be4a-e762-4d58-992a-183b67da153f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8be63d7c-5881-4e30-9d2a-85994846d544"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7564cc1a-a5f3-48c0-832e-0ddd252bf319",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8ac8ef9-ff7e-4d62-b74a-51776bc2c49d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cc2a5ba-768b-41b4-abfe-200178e94460",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2d3ecd6-f57a-428b-a2d0-f3f031b46e69"
                    }
                  }
                ]
              },
              {
                "id": "a46c8c3d-4418-420a-ac57-6485431dd89e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c1a8f225-181d-4fd3-9446-c13853a2be52",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca76066-a722-44a5-aaf1-379372e78600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1cfa9007-42ea-4cc4-b368-54a6856da2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c459725f-ec6a-4c1b-b737-21e5e8e33aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec6f1da-8354-4520-a030-7aad3092f513"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff4eeebb-64be-4873-89da-71d6b83a4eb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82a6330f-aebd-440e-bb5f-15f51931de35",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d029bc9c-204c-4b56-a1cf-780d2e043182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6fb5400c-2554-410e-bda8-5aaf7e4d8d5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "760ae363-9d18-45c6-b63a-cb00f359b9bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8a4b0c7-a371-4443-a3ca-c8b6508eabde"
                    }
                  }
                ]
              },
              {
                "id": "e2bae99f-ea35-4384-9388-4df84ff6efc8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0efd28b-3688-44c5-9d45-b2c53c503061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "edb1f730-3f06-46c2-b50b-75fe6f4405ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b5ababa-4ff3-4a93-b87d-aa867a2150a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebad8b23-e082-4f04-8078-aa4448754898"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "510bc703-02a6-416b-a0dc-8625b572dc47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8f5e8f6f-b44a-401a-8b20-c35af8979a7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd54660b-503c-44d1-baf2-92d8e326da3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e791abb-dd7e-43e7-9f5e-02346dfa3158"
            }
          }
        ]
      },
      {
        "id": "334b3d7e-df32-4a74-893d-a2436b096910",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e44da7ad-43f7-4d4c-9c65-00ba4c0bd4e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24d61ec8-bfbe-4cb7-a71b-1650074f49ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05a0c09c-130d-44bb-a5e4-8e164efee10f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedb78ed-64d6-4908-99cb-3db7e0f6ba66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8d88d6f7-cde8-488b-95ec-2c48a232bc17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a5b6d9-00c5-47e5-8881-11b400fe44d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "717f1767-e9f7-4a59-9a45-74d53d83adc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee25f0c-e896-4a4d-bc17-812f5644e53d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e1bece2-8dba-4120-88f0-09e3049779bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81d7896-507b-4695-907b-72048fdc3097",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8d97ba3-beca-4368-8018-89be2531ceaa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e08263a1-c51a-4ab2-abf1-b6c28947e497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3f663fa2-23be-4acb-a7a3-842e36076735"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51d1d62b-41f4-4664-baf8-2d137c8f7b59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aff0b410-df2b-4f23-870c-872d840ce443"
            }
          }
        ]
      },
      {
        "id": "d301ba67-14fd-488e-9d38-f3d95e3557d2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c48eacd-6ad8-4600-bec3-3d074f77cc54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0d7d10b-5437-4c8e-a642-985bc3d485a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d102db6f-4c60-475a-bae0-8181a18ff4e2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25159ba9-10a5-4d6f-a926-774fbb6b04f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10184b15-2747-4605-b52d-25dc0328469b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87add21-1a68-44c7-b179-83de6b21b35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c392539-857a-4a18-bc76-c8b3c6914335"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3ead86c-4c0d-421b-88c6-cacf1b731083",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97836576-20d3-48f9-bf61-ec038eba7c5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "418ebc22-22d4-42b2-b4b9-a11eecbe0796",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c7c4335-83a7-463e-9f8c-51b19c223aed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e341050c-ea4e-43fa-8825-a4d59460fcdc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b3b154f-54c1-4160-b314-8fa2cc9f580b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c979034-83f5-4dc3-a96d-ba29988cad11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b73b119b-d83d-4633-870f-f1f28bdbf0b4"
            }
          }
        ]
      },
      {
        "id": "01610f63-e3e9-44d8-82cf-daf9432d66fa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2112bc1b-a65f-40f5-bf94-33e1eef2326c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ba1e42c-65c3-4eee-b839-3b73a3996278",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "706d86c5-e3d1-40cb-8530-f072c5c53f3d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644bc8ec-c9e1-4bf8-b5cd-6fec34f68879",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8183187b-d3a3-44c3-9b00-6893188da70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fdb1a6-d971-428c-be78-8749e2d2f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41ee7476-8950-4b35-ab5c-a588066ce64c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15dbd548-0269-4409-b98c-9f773544dad5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "598e3c75-2652-43a7-bca4-1b893802009c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f999a6-71c0-4d39-bfda-aceaab50020b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95f0767b-01e3-4003-8ef3-3ac0590ca17a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "431dbd84-be60-4040-b45e-0e244af989a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a5eace36-3c1d-4f8b-b725-ac83297a261e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69df55aa-154d-4b58-b824-ce5443ce2680",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "182f1cb2-f362-4a00-81f4-833c324e3fe3"
            }
          }
        ]
      },
      {
        "id": "4cfaf6a5-bb83-4cc4-9873-8c3b7255d545",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d996ba94-3a07-4d3f-a59f-a03d7abd1ed3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f44e6a8b-6d85-4d07-9e4c-562941f10098",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1daac27e-1028-4797-b174-a2ed883a8bae",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "154d196c-d46e-4734-9c79-4596c8eb22a7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f232cf6-c0b9-43fc-94fe-03a9c02a3fe2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 117.64561403508765,
      "responseMin": 9,
      "responseMax": 3796,
      "responseSd": 358.91231987486316,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704933399256,
      "completed": 1704933441975
    },
    "executions": [
      {
        "id": "d84cedab-35c3-4866-b8e6-d2dee604982a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a8bf3ccc-6688-451a-8200-39ee3b3800d3",
          "httpRequestId": "7f17bb33-ecf7-4c83-9fd2-c6f8b86336be"
        },
        "item": {
          "id": "d84cedab-35c3-4866-b8e6-d2dee604982a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "92faf8c6-c512-4482-94b8-df7430c58e42",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "89628977-9b57-437a-a4ee-fbc815fea5f6",
        "cursor": {
          "ref": "08882c41-e4eb-4784-9fa9-bfb37de5f9a1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "29d3d9c4-3196-4679-8c3a-38671393a5b9"
        },
        "item": {
          "id": "89628977-9b57-437a-a4ee-fbc815fea5f6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ce783f03-9c35-46c6-be15-70122eb1b57d",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "f7fe0144-b657-4ec8-b42e-2f67bdf03283",
        "cursor": {
          "ref": "b86424ed-f668-44fb-89fc-03e3c256d20e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a9bfb432-ec85-4679-8744-eef2e2fd8beb"
        },
        "item": {
          "id": "f7fe0144-b657-4ec8-b42e-2f67bdf03283",
          "name": "did_json"
        },
        "response": {
          "id": "a83bf4fa-afe4-40dc-ab66-b1a9566d89a7",
          "status": "OK",
          "code": 200,
          "responseTime": 535,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0d023-3cbb-4739-a58f-ef5038126859",
        "cursor": {
          "ref": "c9002062-01ff-46b3-b42e-9f0be5ff607c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "065392d5-9247-4d40-afa8-974408c46d76"
        },
        "item": {
          "id": "cbe0d023-3cbb-4739-a58f-ef5038126859",
          "name": "did:invalid"
        },
        "response": {
          "id": "78c82f93-88f8-44a8-ac06-d99d9272c179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe0d023-3cbb-4739-a58f-ef5038126859",
        "cursor": {
          "ref": "c9002062-01ff-46b3-b42e-9f0be5ff607c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "065392d5-9247-4d40-afa8-974408c46d76"
        },
        "item": {
          "id": "cbe0d023-3cbb-4739-a58f-ef5038126859",
          "name": "did:invalid"
        },
        "response": {
          "id": "78c82f93-88f8-44a8-ac06-d99d9272c179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6339117b-a6dc-4381-90ce-69671c58f9ff",
        "cursor": {
          "ref": "9fd86a09-ff3d-4117-8608-72ff81d21641",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b3585a21-fe8b-4ad2-b5a5-6a989c4c655e"
        },
        "item": {
          "id": "6339117b-a6dc-4381-90ce-69671c58f9ff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c502ec06-377a-4aef-a85d-212dee00bef3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 270,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa579b0-de8f-4155-8511-ccd1091a7474",
        "cursor": {
          "ref": "aa7c00e9-24e6-40cc-bc14-0c2420a1e819",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "81e65d3a-164c-445d-964c-1bdb1a94e7bf"
        },
        "item": {
          "id": "2fa579b0-de8f-4155-8511-ccd1091a7474",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f448c904-850e-4067-b066-7ee0dd0035ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c10c1-c1d7-4888-ab24-dd31dd35067a",
        "cursor": {
          "ref": "eadaa76f-83be-41bb-bf68-f05080e588a2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "94ff42b3-1a86-43c5-b64e-6be9cfb9d8d7"
        },
        "item": {
          "id": "ef6c10c1-c1d7-4888-ab24-dd31dd35067a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "81cb1878-27e0-4c50-b00e-ee007266c6e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb3f5d7-9fc3-4d9f-ac61-6b1c6a64b3fe",
        "cursor": {
          "ref": "980a325f-0302-4cc3-bd00-dfcc76fc5a45",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "736edb85-663c-432f-b263-6a9f3348f685"
        },
        "item": {
          "id": "3bb3f5d7-9fc3-4d9f-ac61-6b1c6a64b3fe",
          "name": "identifiers"
        },
        "response": {
          "id": "e91e9cbc-2441-4387-9bbb-1f6452b4f56b",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3226c2-7e0d-4e88-9a63-e50ad1421059",
        "cursor": {
          "ref": "2a0d8adf-5ad4-4346-b7cb-eaf81b87912b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "17771459-2288-4b1e-b20a-4d1f4c296439"
        },
        "item": {
          "id": "ae3226c2-7e0d-4e88-9a63-e50ad1421059",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3289674a-166c-4b35-a316-1caca3a6d663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc5e67c-7d8f-4dc4-b463-020e2fdfc8d3",
        "cursor": {
          "ref": "1287e1b7-6bd8-4105-a434-b4d866b7e394",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "56220a2d-38c8-417b-aeaf-3c547f9fd220"
        },
        "item": {
          "id": "8dc5e67c-7d8f-4dc4-b463-020e2fdfc8d3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2b107e44-c761-47ef-9eeb-edcb73099803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547d594f-1f64-4ca2-ac69-fcdd5880e62e",
        "cursor": {
          "ref": "6f5edda9-131c-41b3-92f2-956c81ed1769",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a0a2f6d4-0833-488c-8956-b5a3517fc8e1"
        },
        "item": {
          "id": "547d594f-1f64-4ca2-ac69-fcdd5880e62e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1ed0506c-c808-4027-ab19-78bf2034f90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da1df51-14d5-40ab-88c0-f21f7d175a6d",
        "cursor": {
          "ref": "1088c1a9-9540-4a8c-8d25-ed9a20db30dc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "be701abf-2070-4a83-bd76-a1bb55f4ed0f"
        },
        "item": {
          "id": "4da1df51-14d5-40ab-88c0-f21f7d175a6d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "13ea5b79-f4c1-4681-b3e4-5a2c54fcb0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf1690d-0e18-4f72-aae1-7f0b9101fcc0",
        "cursor": {
          "ref": "0d3e28e8-a270-4aba-87af-772b179efa0c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f27421de-614a-4649-b7cb-7cd825d260dd"
        },
        "item": {
          "id": "3cf1690d-0e18-4f72-aae1-7f0b9101fcc0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2d494034-85e0-4ac0-8e6d-ab5e8d7a1147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb72d24-661a-4870-97f9-7acb84a0142a",
        "cursor": {
          "ref": "57d0e9ad-172a-410d-a7d7-06494831cbb8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7f451394-818a-4cde-8420-fe842d22067c"
        },
        "item": {
          "id": "1eb72d24-661a-4870-97f9-7acb84a0142a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3a1f781f-50c3-42d7-8442-29e34c4c5323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb7f7e5-5c2d-4f6f-aaf3-5a64d8f1df95",
        "cursor": {
          "ref": "91d10654-e61c-431a-b3ab-f1a684d4cbb1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "88d5ad8b-8d49-46ab-b0a6-633378d3aaa0"
        },
        "item": {
          "id": "beb7f7e5-5c2d-4f6f-aaf3-5a64d8f1df95",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9848677a-e7a3-441b-9cc7-1728f2311247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9f5ce9-0390-44be-959c-c6055fb0b2cf",
        "cursor": {
          "ref": "183af48a-0616-47bd-bad3-2d0c5fc1bec1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d832b86-fd4a-4e82-a9cc-d83808b42b28"
        },
        "item": {
          "id": "ac9f5ce9-0390-44be-959c-c6055fb0b2cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f6739000-12b8-4416-a7f5-e5d440d5f06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea6d04-8bd3-4561-8130-449bd9f8809c",
        "cursor": {
          "ref": "b8c33120-2ddd-4bf2-a571-48f59256a0d4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b1095610-9593-4544-b75e-26cba1d1c9c3"
        },
        "item": {
          "id": "82ea6d04-8bd3-4561-8130-449bd9f8809c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7f047008-ae0f-40e4-8c42-61472b5e7bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5528d653-e8cd-4370-8742-ef3a23abb342",
        "cursor": {
          "ref": "d089957f-d77c-4ce1-95b0-a0f344686f04",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f2349f23-9dbf-4c50-a2ee-b5a1142cc71a"
        },
        "item": {
          "id": "5528d653-e8cd-4370-8742-ef3a23abb342",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5ca59821-7857-4492-8f60-eca92d0ff7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471318b3-712a-484d-9d89-83468da44a30",
        "cursor": {
          "ref": "9082dfb5-1e55-4ee8-bc79-d5ea8affc9b3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6c8d2963-d95a-4ec4-af2f-b7777cba1539"
        },
        "item": {
          "id": "471318b3-712a-484d-9d89-83468da44a30",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c3869604-9d02-4b54-aaf2-fbc4f4d08e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c97bc3b-80e1-4e75-9c1e-af8c71c1dd97",
        "cursor": {
          "ref": "ab3dbf69-e84a-4e52-b496-6c129b24546f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69960a6d-f675-49f1-aa63-d38c325b88d0"
        },
        "item": {
          "id": "6c97bc3b-80e1-4e75-9c1e-af8c71c1dd97",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "91a6edc0-9bb6-41b1-ba7a-19abc6e2f508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf96641-1a2b-4ff7-987e-c818b9a866f9",
        "cursor": {
          "ref": "d4ec1222-2214-4d95-ba1d-c266082cc6b0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bdb15cf2-fe74-4006-ab5c-f65394a0ef15"
        },
        "item": {
          "id": "fdf96641-1a2b-4ff7-987e-c818b9a866f9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "545257aa-c163-4c9d-a786-b7d019895ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5fe693-0ed8-42ae-b9fc-9d089aeb8718",
        "cursor": {
          "ref": "82229873-87d7-440b-93f4-4ec05289eb4a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a63b066c-d5cb-4111-8a16-444c4a344874"
        },
        "item": {
          "id": "3f5fe693-0ed8-42ae-b9fc-9d089aeb8718",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "24a81c17-7504-4dfd-b6de-776e102aafa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af31025d-2d64-4fb7-a0ff-17fc98ad77ed",
        "cursor": {
          "ref": "b55c6b3e-b04a-45cf-9b37-f87e35ba5b60",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8093d4f3-a113-4a13-9c57-6c17f74f02f7"
        },
        "item": {
          "id": "af31025d-2d64-4fb7-a0ff-17fc98ad77ed",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "515efd55-c947-4367-a4ec-83d521137345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b44a9b1-51dd-4dab-bc8b-c22ad804e835",
        "cursor": {
          "ref": "0c8ba784-84d0-4682-8b8e-686c881bf96e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d51e245-3e2a-4d53-9172-09398561963b"
        },
        "item": {
          "id": "8b44a9b1-51dd-4dab-bc8b-c22ad804e835",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cb3a4d36-3f01-4e93-a419-edd7179338a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9945f39c-4b31-4864-8c84-9c34f2ce5d0e",
        "cursor": {
          "ref": "571338a7-71c2-4478-8103-76ec6f641d16",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "67d95e51-7087-419c-bb39-06e419d6e5ac"
        },
        "item": {
          "id": "9945f39c-4b31-4864-8c84-9c34f2ce5d0e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c531fb2a-79ce-4105-87b2-162b5db8d9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc016ed-2e98-4b6d-b525-cdb9090e024f",
        "cursor": {
          "ref": "37d65e24-eeec-48ed-91f4-f5d6141edc4b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "540368cd-438b-42ed-9fea-46847b19014e"
        },
        "item": {
          "id": "6cc016ed-2e98-4b6d-b525-cdb9090e024f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f8b6a34d-1336-4a49-9cdb-79c3a9204a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab003d1-ada9-4c02-a590-6f3976aa2f55",
        "cursor": {
          "ref": "00ca43f8-01cf-4c8d-bd70-ce931d492b91",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f49a76e7-c438-4712-bb94-fd852da010b2"
        },
        "item": {
          "id": "fab003d1-ada9-4c02-a590-6f3976aa2f55",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5bd0fb42-89e7-4c5a-b5fc-8310bf5d41b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb2e287-cea3-4268-8aef-35a96cbe8019",
        "cursor": {
          "ref": "0dcf1d39-fad9-4f63-a62e-4e398d60b336",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5292b63f-68f5-4679-ae44-beb0987d48ae"
        },
        "item": {
          "id": "ceb2e287-cea3-4268-8aef-35a96cbe8019",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1ddd5b96-e974-41ac-9664-745a9f5a5d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89464f04-ec1b-4adf-a205-b6321f3e23c6",
        "cursor": {
          "ref": "3ea0191d-9fa3-4415-9464-9f866570ee73",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7984d6b8-fc42-4536-9448-3518c5349949"
        },
        "item": {
          "id": "89464f04-ec1b-4adf-a205-b6321f3e23c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1f8617c9-54b4-4206-9a16-9ed68754a352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8067fc-89cd-48c1-b63d-704caf67f1aa",
        "cursor": {
          "ref": "333085ee-e99a-40b8-b6a5-464efe23f59c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ef33722b-0cee-4f93-810f-d852786c1f7b"
        },
        "item": {
          "id": "5e8067fc-89cd-48c1-b63d-704caf67f1aa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21424520-a846-4d04-83e1-b042efde4f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11624198-3d08-4c4c-ba1b-9998c94c0b27",
        "cursor": {
          "ref": "09a1cb94-852f-42fc-bd23-9c6497e46490",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "134caa09-364c-48ba-bdcb-290951d0ffe2"
        },
        "item": {
          "id": "11624198-3d08-4c4c-ba1b-9998c94c0b27",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d8836e0a-7f0e-4c95-9eaf-e5a602de3236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a4d4f4-d218-418b-915a-765993883084",
        "cursor": {
          "ref": "40c7d5c7-2ef1-4874-a5dd-858b9fe41858",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3122d337-e2a4-4888-a977-ae284bd52cb8"
        },
        "item": {
          "id": "60a4d4f4-d218-418b-915a-765993883084",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "81d2bf0a-20c1-4fe6-85e4-46995eb3e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6890e6-d4af-403c-8d86-20cbe2f1224d",
        "cursor": {
          "ref": "898e184e-bc62-4105-b22e-7110c9aa13dc",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f774c1f3-fccd-4ae8-bfcf-8f8818e77338"
        },
        "item": {
          "id": "6f6890e6-d4af-403c-8d86-20cbe2f1224d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3922c72c-2e09-4843-8db0-e169357bfd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7a4648-01a5-4e92-9372-19add53c244f",
        "cursor": {
          "ref": "0fc1e45e-3fc9-4512-be9c-353c13414256",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5107112a-d327-42b2-8d2f-324b27398af6"
        },
        "item": {
          "id": "6d7a4648-01a5-4e92-9372-19add53c244f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6c71cd61-0e27-4df0-9a07-3eeb3ebec748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aba8c7-ebc8-4262-a150-c4f62117320c",
        "cursor": {
          "ref": "5ffe3658-5777-4efe-9c7c-9aef2353b628",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "acd9d70e-6253-47c4-95dc-26e5434f9b95"
        },
        "item": {
          "id": "a8aba8c7-ebc8-4262-a150-c4f62117320c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dca4291b-e1d1-4b80-8853-aa1cae383c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3cf572-3c8d-49a7-aa17-d4d59e0815eb",
        "cursor": {
          "ref": "d55e33f3-b722-44ba-ad2d-46db4eeb0143",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ae2b0746-cb9a-4d37-9147-c092bee6f7f3"
        },
        "item": {
          "id": "3d3cf572-3c8d-49a7-aa17-d4d59e0815eb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "04efa6b1-2e8b-4649-80fc-29928fbdbc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0300a2b6-1499-432b-8eb4-55158740f1f1",
        "cursor": {
          "ref": "c92ae189-1067-4d29-8afe-3667df738072",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "72cd8ac6-eb49-4ce8-89e2-474a314f694c"
        },
        "item": {
          "id": "0300a2b6-1499-432b-8eb4-55158740f1f1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3e7457a2-677b-479d-bd8a-d00d7eb6d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281ea9b2-5431-48ad-9cc5-cfbeb754b762",
        "cursor": {
          "ref": "bb06755e-1fea-475d-bde5-c9adf6f0bb9b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aa54294c-1b8f-44b1-b39e-1529a07399f4"
        },
        "item": {
          "id": "281ea9b2-5431-48ad-9cc5-cfbeb754b762",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b73a5b68-fae0-4dda-98c4-d39f3f2ade78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69c8b2f-d611-4aaf-990f-4103129ec41b",
        "cursor": {
          "ref": "9a2ce977-6719-4475-87b2-bae6137b6e81",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1c4c43c7-b7a8-4931-9a76-5d9cc5180a1d"
        },
        "item": {
          "id": "e69c8b2f-d611-4aaf-990f-4103129ec41b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bc6caa3e-619d-4d37-89a2-688d50d2135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4de928-6cac-4f6a-a449-9099ff134261",
        "cursor": {
          "ref": "5fa255f4-6f14-4e4c-ab90-ec295f3e6b57",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "18718694-22fc-4061-8a03-232378caae1a"
        },
        "item": {
          "id": "fe4de928-6cac-4f6a-a449-9099ff134261",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d26e395e-4fd0-4ed6-ab7e-698d0635f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a48bec-7e53-4133-9a40-f59aa9c8745a",
        "cursor": {
          "ref": "86fb61bf-dea9-450c-bed6-8b44cca6d7af",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0d8dfafa-b01d-4fe3-bb6f-e1f412e144a9"
        },
        "item": {
          "id": "99a48bec-7e53-4133-9a40-f59aa9c8745a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "22c0c963-420a-49d7-85a0-714a19b4aeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497fb5a6-6d8f-4b3d-8b7d-54d77534d772",
        "cursor": {
          "ref": "5571b93d-b227-48ba-a801-a286cebf3844",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5263dc13-26bb-484e-a785-ba5a7a790de3"
        },
        "item": {
          "id": "497fb5a6-6d8f-4b3d-8b7d-54d77534d772",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa38f570-780e-4bff-aa94-811bdcc222dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae740f4-5b48-4bd0-825b-8bceda6c7956",
        "cursor": {
          "ref": "7dbd64c9-6d25-46c4-aeae-35de69391efe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5213d545-6e0b-4fa8-9d9f-d61410d76257"
        },
        "item": {
          "id": "fae740f4-5b48-4bd0-825b-8bceda6c7956",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3899b487-35e6-42c6-adb9-77ca9575d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0112bb-a48c-4aad-aca0-f26637400716",
        "cursor": {
          "ref": "81c0974d-55ca-4bac-aff2-367128c2e539",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7d8b39ef-5a48-43f5-86b5-12ad0cff82a5"
        },
        "item": {
          "id": "cd0112bb-a48c-4aad-aca0-f26637400716",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ca7b74ae-8655-4478-8ada-fbd1cb0dcddd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 333,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb653c1-8236-454f-a58a-f6a8cca14937",
        "cursor": {
          "ref": "8d891a4b-eecb-4ee7-a338-74fa21b9519b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e79a3634-db3f-48a0-8088-76ad0ae202ff"
        },
        "item": {
          "id": "eeb653c1-8236-454f-a58a-f6a8cca14937",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8a8c6289-f104-457d-b00a-032a34235695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a20a2a-3aa0-4cee-8e7f-7eabbfbd260a",
        "cursor": {
          "ref": "ac1d3644-e34c-4d28-b267-2d22a7b1bb33",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "24510992-2ba7-4eee-bab5-25aab1f98b18"
        },
        "item": {
          "id": "53a20a2a-3aa0-4cee-8e7f-7eabbfbd260a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9bc604f7-9f66-4be4-ad89-1e41585932fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f210e2-45a4-4c25-8c87-6770d4678dea",
        "cursor": {
          "ref": "16482153-f91c-4573-bb22-ccf2b61b040e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5c7fc8c8-d1e6-4310-92dc-dfc4f423becb"
        },
        "item": {
          "id": "a3f210e2-45a4-4c25-8c87-6770d4678dea",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86aa9b98-c2dd-4d41-8c90-4cbdf06ddf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a733a7f-1f51-4a0d-ae5f-f2b42dbbbe16",
        "cursor": {
          "ref": "a9bb54c0-e61f-4df9-a9f0-2aeda30365ee",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "45ead0b1-5cb1-48fe-953e-a3625fe2b9c1"
        },
        "item": {
          "id": "4a733a7f-1f51-4a0d-ae5f-f2b42dbbbe16",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b24fb25f-761b-4a1c-b36a-19ae4e82c2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cd609c-1bb0-41f2-9a6e-9636f6f19daf",
        "cursor": {
          "ref": "9a4bcf0f-e1eb-45ea-b67a-ea9619f48935",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "faea26ea-3624-4d1d-96c2-bf19e644b68f"
        },
        "item": {
          "id": "33cd609c-1bb0-41f2-9a6e-9636f6f19daf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "633bb1e4-e99d-42f2-948e-7e16af14d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b4dbd4-2d1d-4d53-968e-cdf8aaf14d5f",
        "cursor": {
          "ref": "cd8a99bc-60c4-441c-b115-ff99330cd0d0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7117ad6e-7d91-4b78-8685-af9396adfed2"
        },
        "item": {
          "id": "09b4dbd4-2d1d-4d53-968e-cdf8aaf14d5f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2758a63a-20cf-4f67-922a-fbb36b366349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35be83bd-74af-49d9-b1f3-d7278892e34b",
        "cursor": {
          "ref": "726e674e-7fba-4c26-8e6f-d464976ebbee",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d4387357-5cb2-4ee4-b0e8-d1ff17d6621e"
        },
        "item": {
          "id": "35be83bd-74af-49d9-b1f3-d7278892e34b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d0043e2-6314-4134-9f1b-00bf6f92c0fa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 346,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930b819b-fd3f-45ae-9d8a-e6978bb781e2",
        "cursor": {
          "ref": "f269011f-f684-4eee-9654-28b6948e8a77",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0cb100dd-182d-4891-b558-72060a3cf050"
        },
        "item": {
          "id": "930b819b-fd3f-45ae-9d8a-e6978bb781e2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fa4c00b5-9eb1-4ace-beac-f324c2cf1fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341292f8-d577-49b4-8294-f3f682f46c34",
        "cursor": {
          "ref": "ef5ece3c-5aa0-440a-bdf0-244efa356931",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7b2b1d23-8255-4716-a622-d98ebaac06e7"
        },
        "item": {
          "id": "341292f8-d577-49b4-8294-f3f682f46c34",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5ff60bb4-e042-4aa4-baf6-f98941c99895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c277b8-ff8e-43c2-bc25-3bab4b2aa95b",
        "cursor": {
          "ref": "853afbed-c15c-46eb-992a-3f3e3a42e782",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f1d0ae53-ebc2-4242-ab1b-07bfc59582f4"
        },
        "item": {
          "id": "f6c277b8-ff8e-43c2-bc25-3bab4b2aa95b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f4f71d30-1e49-4c15-b643-d5a75f1d0e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b102bf0e-c6a0-40bc-ac9b-521ea2b906ce",
        "cursor": {
          "ref": "d3364fc6-f1ba-4b50-b67e-ede2b1277ec5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d67e82ad-a27a-4a1f-8114-887d7cee82e3"
        },
        "item": {
          "id": "b102bf0e-c6a0-40bc-ac9b-521ea2b906ce",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "31ac3445-c907-48ad-a08d-752a3641d245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d2592-4f42-4c42-9146-d83b8a42cec3",
        "cursor": {
          "ref": "87fcc5ab-167b-4c29-a112-ed805c9b3d96",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "874c3890-0c34-4497-abbf-b4fcaa9d7b31"
        },
        "item": {
          "id": "f38d2592-4f42-4c42-9146-d83b8a42cec3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0ad975d3-262f-447d-aaa0-6335157562ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9598849d-27b9-43fa-b914-b089e9ac01c7",
        "cursor": {
          "ref": "fb31c1c3-401e-44d3-865e-6c7056f71e3f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "63d7db2c-92e3-4a64-a0a5-de0bc68c4a62"
        },
        "item": {
          "id": "9598849d-27b9-43fa-b914-b089e9ac01c7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "64a74941-28f1-4386-86e8-7ded4dab27aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcf12d9-fd29-4a9a-841a-bfc61a1f3181",
        "cursor": {
          "ref": "0e9a669b-2e44-4bb2-bf08-60f762e90de3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6f8a2705-d5e4-40e3-b2f0-90e604522710"
        },
        "item": {
          "id": "9fcf12d9-fd29-4a9a-841a-bfc61a1f3181",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ac848a31-9fab-4731-be3b-6bac7db48411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4a1720-4bdc-4a68-a350-e1962facfea5",
        "cursor": {
          "ref": "e4595c9c-2c33-4cfb-84e5-2f3260a05ba8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f73d297-a1db-494c-bc32-c1d8297e24b8"
        },
        "item": {
          "id": "3d4a1720-4bdc-4a68-a350-e1962facfea5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b473d9bb-75ee-45b9-a579-6ebd4b20ac2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7606373-6570-41bf-b79e-6d2c0379deb8",
        "cursor": {
          "ref": "62a20c8c-fb9d-421c-8e6f-6e252c9f955c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f1783f5c-9965-481d-b458-8bf971c05cf9"
        },
        "item": {
          "id": "a7606373-6570-41bf-b79e-6d2c0379deb8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b8a3989f-382e-461e-a1d3-604caf656118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad45cee8-7c00-4f1a-b227-01a0ee57c2c9",
        "cursor": {
          "ref": "cd84f2af-77d4-4714-a116-c32b3de1d822",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1d767b75-f2b4-4f1e-9547-98105df00892"
        },
        "item": {
          "id": "ad45cee8-7c00-4f1a-b227-01a0ee57c2c9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab3217c0-800e-443e-b6f8-472759bf4059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7030c45-f1f5-41c2-934a-3b7ee3676bc5",
        "cursor": {
          "ref": "21ef22ad-6251-42e0-bd19-bb5fe7795f3e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1317b80-ab5b-415f-a95a-02496dbc29ed"
        },
        "item": {
          "id": "e7030c45-f1f5-41c2-934a-3b7ee3676bc5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ecc7e298-d97e-44e1-b40e-a86f9da2090d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7178f17-da37-4e97-ab79-8bad041d824a",
        "cursor": {
          "ref": "d03c8a4a-6753-4b31-b0b0-43024b0e97f7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "79c85015-31f6-4ddb-910c-756fc6175276"
        },
        "item": {
          "id": "f7178f17-da37-4e97-ab79-8bad041d824a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9a5d7a8f-5e3e-4b31-95bd-814279b6254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6624d751-6f46-403a-8556-68f512dee303",
        "cursor": {
          "ref": "2ddf36bb-470e-4bae-9a1b-b629954825a5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "314ae703-5b45-47ce-8ae5-baa0b5d2a2b7"
        },
        "item": {
          "id": "6624d751-6f46-403a-8556-68f512dee303",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0dc49dba-ba51-470d-9e37-ac3d809176a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a251edef-092a-4c17-8e76-2ca431e16be9",
        "cursor": {
          "ref": "bb46c331-b0db-4baf-891f-b3fab4d710af",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ca063631-3953-4f80-b23f-a9f8e6511cd1"
        },
        "item": {
          "id": "a251edef-092a-4c17-8e76-2ca431e16be9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2f5f943c-2d5f-49ea-941d-4797f969a0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321888e2-78c8-47dc-ba18-eab859a1ee80",
        "cursor": {
          "ref": "5d9cbf9f-ea23-466e-a4fb-ae47b5a93994",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e4953e31-8a60-4afe-9015-4d9e7d8fa991"
        },
        "item": {
          "id": "321888e2-78c8-47dc-ba18-eab859a1ee80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2028a419-7cf1-45d6-8ad5-8f2f3e89c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c2272a-efe6-49ea-b33e-0dfff966efac",
        "cursor": {
          "ref": "a933e804-2a56-449f-b330-e06e968f16f5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0c7b070e-c261-4956-a72f-8fe13ac27203"
        },
        "item": {
          "id": "40c2272a-efe6-49ea-b33e-0dfff966efac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "95cd4b8d-f653-4c51-9656-9c04b27710bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7466a3be-a3e4-44b2-81fc-9d4abed02ee9",
        "cursor": {
          "ref": "7b8fb4b1-971e-44bb-a00d-d16ea7cf5e91",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b605f6fb-4271-463b-b46a-ca28b6c1f86e"
        },
        "item": {
          "id": "7466a3be-a3e4-44b2-81fc-9d4abed02ee9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "88d72af4-6e46-4325-b875-7a56341bff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e89b719-9416-4c9f-9067-1515cf4b34d7",
        "cursor": {
          "ref": "88312e75-018e-4263-8c2e-7a8353764332",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b05a4429-b010-4953-a553-35e12bbde871"
        },
        "item": {
          "id": "4e89b719-9416-4c9f-9067-1515cf4b34d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a1cbbbc-de0a-4fb6-bcaa-8c9b8a9e2b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca947bef-49e1-47d3-a94f-6ef98cd0313c",
        "cursor": {
          "ref": "ac32ff6d-7999-4ada-b028-a765cee05c11",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2dae2b09-0ca7-4dff-881a-f41230f915ec"
        },
        "item": {
          "id": "ca947bef-49e1-47d3-a94f-6ef98cd0313c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b96cfa72-40e2-4f59-a77b-7e8b4c12fd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b3e28c-4f3a-43f1-b1a1-a3b150bd5ce7",
        "cursor": {
          "ref": "9b025cf8-1986-4d80-98f2-c7c490b5e488",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2e729dc6-8de2-4f37-98b0-1fe560d43e40"
        },
        "item": {
          "id": "85b3e28c-4f3a-43f1-b1a1-a3b150bd5ce7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a812e60a-9d48-4a30-bb4e-fc2b21cfc585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862a0d52-fbcc-4af9-8ca3-46ab3c6e05b3",
        "cursor": {
          "ref": "da4e0d08-e7e4-4d12-b9c4-2ff69932d765",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a873935d-c653-4a25-909f-a86d91fd9143"
        },
        "item": {
          "id": "862a0d52-fbcc-4af9-8ca3-46ab3c6e05b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b590366a-c51f-4d1f-90e4-efd59a4c5599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67976fc-fce3-461a-9bc6-3b2419df8ce5",
        "cursor": {
          "ref": "3f0e699b-a93f-4c9f-9c54-a98b00db8a10",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1daf8121-252e-4bc8-84e7-3b5b4dc25aa0"
        },
        "item": {
          "id": "d67976fc-fce3-461a-9bc6-3b2419df8ce5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cfd48481-5b44-4e66-9e12-51730c9bee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f84ed-3230-47fd-b908-6309a4dc7ca4",
        "cursor": {
          "ref": "d9ae0a73-b52d-4f27-8ff1-c3bd87d68b41",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "79ca7e08-4093-4677-9dc1-d41dee9df8cd"
        },
        "item": {
          "id": "c35f84ed-3230-47fd-b908-6309a4dc7ca4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "238d7a42-3801-465e-a4a4-bd415eeb4427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e93567-f131-47d6-b33c-d93938e4e19d",
        "cursor": {
          "ref": "b90659eb-fbed-4add-b497-bdf4520bdcb9",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24a7d000-41d0-4a6e-8bfa-8d22c91b4eca"
        },
        "item": {
          "id": "45e93567-f131-47d6-b33c-d93938e4e19d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9137ac4a-94ec-46ca-8737-5a4c63fcbdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5301b017-7dff-4763-95fc-40935e04aeac",
        "cursor": {
          "ref": "2d5127ca-8b20-4a22-896f-f5820a60f0e3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed1516fe-d8f2-4e61-a1cc-5cbf49ab532e"
        },
        "item": {
          "id": "5301b017-7dff-4763-95fc-40935e04aeac",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7430925a-4563-4622-aeba-fe4a255132f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478cc1c6-6aca-49b2-bd5c-f6d9d42c8c2a",
        "cursor": {
          "ref": "b14a9028-6400-497a-9083-de2d66d1c076",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ed4bbdcd-22b1-4fff-b1c8-ae291d4f6ae8"
        },
        "item": {
          "id": "478cc1c6-6aca-49b2-bd5c-f6d9d42c8c2a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1bbd8b48-18ce-44ce-993d-7bb58853dba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9083aadd-c9ac-4e34-a134-e372ff17d170",
        "cursor": {
          "ref": "ace59e67-6155-4ca3-9601-103519cdcf31",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bbf7a92b-11d5-4bc1-a778-f4bbde2667e9"
        },
        "item": {
          "id": "9083aadd-c9ac-4e34-a134-e372ff17d170",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb4104ea-78f7-436c-825e-c48f37658bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840ae705-a44d-4aeb-94b9-fb0a33c333b0",
        "cursor": {
          "ref": "e8eb3a7c-044d-42f9-bbc7-f446cbc74574",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cb4eb230-ba75-4e91-acf2-b5873363d73f"
        },
        "item": {
          "id": "840ae705-a44d-4aeb-94b9-fb0a33c333b0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "444a9319-5e95-427f-9c21-4b4840b8c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd85b8d-9291-4817-965b-5974c9bcaa75",
        "cursor": {
          "ref": "ea77aeb2-b50d-43e8-b29b-0d9319fbeb51",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4502b7e1-eed4-4077-a10f-70562039f7bb"
        },
        "item": {
          "id": "ccd85b8d-9291-4817-965b-5974c9bcaa75",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e4c77ec1-8290-4ca3-85bb-02df2c55f914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2550b2f1-3ed3-4738-b2b3-27e7e7d58a7c",
        "cursor": {
          "ref": "09db9414-b435-4aa3-af2b-e8e1040bc4e0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "64f71ffd-3311-48de-bb4d-fbe17e1e8beb"
        },
        "item": {
          "id": "2550b2f1-3ed3-4738-b2b3-27e7e7d58a7c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5e7df454-743e-430d-9de1-973756dd16e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e9a2b6-1fdc-473c-8168-f816e9200181",
        "cursor": {
          "ref": "1c462154-fbf6-447f-b768-70d5c67f409f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b2efcc18-6925-4424-be72-31cead992793"
        },
        "item": {
          "id": "12e9a2b6-1fdc-473c-8168-f816e9200181",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3239ee61-8159-40c4-b434-b975c88fae79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a44d02-d6f8-4154-b05b-92914c74b076",
        "cursor": {
          "ref": "9246ff62-6eee-4690-9958-787783ec937d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f0e64720-7b3b-46b9-b7f8-77800e8e5a71"
        },
        "item": {
          "id": "c9a44d02-d6f8-4154-b05b-92914c74b076",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4d7d172d-a239-4adc-8a9d-3b7ef97a2d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ac8c6-c3d4-4e72-9926-6d602faef5f3",
        "cursor": {
          "ref": "354121db-3dc0-4d84-8e9d-ef3916ef214f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "91153998-3aa5-46a2-9e91-aaab8d3288c8"
        },
        "item": {
          "id": "3d5ac8c6-c3d4-4e72-9926-6d602faef5f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "47d3fabe-aa8e-4f14-a302-6489a6bc90ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d3a68a-ea6f-4da3-a576-9cb28e1e5b97",
        "cursor": {
          "ref": "d8d79b5c-250e-4bc5-93a7-216a205fd21a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c1add05d-8765-42dd-bb92-9bd416a20422"
        },
        "item": {
          "id": "00d3a68a-ea6f-4da3-a576-9cb28e1e5b97",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "21526736-3e01-4215-96a1-92c9b2c3fb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b653c6c1-3dd6-4d71-8251-d436c234b4a3",
        "cursor": {
          "ref": "1bc04fd2-11e9-47ba-ac5f-a8c9e8c02be1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0f1240a7-2ef8-42a5-9571-4ca44cf92836"
        },
        "item": {
          "id": "b653c6c1-3dd6-4d71-8251-d436c234b4a3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "33886c0f-0159-43c9-9a23-f696591be23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65588293-5be9-406f-9f42-ac659468180e",
        "cursor": {
          "ref": "e62e590e-43b7-4b7e-a8b4-38307dd12176",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f3eb86e5-2d3f-4151-80a5-e950ef216386"
        },
        "item": {
          "id": "65588293-5be9-406f-9f42-ac659468180e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d5fa72cd-7d8a-4336-bc69-bfd5a48f54ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0106862c-2fce-4e3a-a385-dd4da607a29f",
        "cursor": {
          "ref": "f4657f7d-92d2-4fe0-8e3d-12caa02d370b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5eb7aad9-debe-4d49-9c2a-6d7d21a04794"
        },
        "item": {
          "id": "0106862c-2fce-4e3a-a385-dd4da607a29f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a2f1cdf9-e379-4daa-83b0-d8f42a9f8401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65db4434-5b2e-4098-b11e-98f680905fe7",
        "cursor": {
          "ref": "eb9cac29-1a91-42ba-aed8-9a8d7ff03f7d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e78fc957-81b3-4ffc-8160-d4793502831e"
        },
        "item": {
          "id": "65db4434-5b2e-4098-b11e-98f680905fe7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "87e54fb6-59df-4aff-95bf-fb3844ddd751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad762a0d-c9a2-43e0-9fd3-5c2d5e7ca375",
        "cursor": {
          "ref": "b7964d68-d896-4dc5-a631-97d2eb5b094e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "054e31ec-0c4d-432d-b9ea-f899e1e1d492"
        },
        "item": {
          "id": "ad762a0d-c9a2-43e0-9fd3-5c2d5e7ca375",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cf6b81b2-5363-4949-8727-b43e3bc4e1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670a9fb3-74d7-4ffa-8e67-3639cdd3108c",
        "cursor": {
          "ref": "03ebb675-d4e7-48c0-bd95-78781c222556",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0263cae-5c41-434b-ab1a-b3701c3b3555"
        },
        "item": {
          "id": "670a9fb3-74d7-4ffa-8e67-3639cdd3108c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c4a9109f-45df-49d7-b00b-62e7af439170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b59468c-9140-4275-b7c6-f74def235037",
        "cursor": {
          "ref": "40567d08-3562-438b-993e-3a2a0714a9a4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eb1f0699-db9a-43f8-8935-d26061d1fe2c"
        },
        "item": {
          "id": "7b59468c-9140-4275-b7c6-f74def235037",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "57d6ecf8-f8d9-407d-bf88-56760af09241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c0e7e-aaab-4dc9-855c-4138284ec597",
        "cursor": {
          "ref": "c3f7d129-6f86-4831-b305-5c2c5d41aed4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3b9ea9f6-ef2e-4ff9-b878-9e606a8e1c06"
        },
        "item": {
          "id": "c72c0e7e-aaab-4dc9-855c-4138284ec597",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c7c1091d-159f-4af1-865c-e223662adf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc84c4d-ef1f-483a-b52e-b1ed0652c9ee",
        "cursor": {
          "ref": "75ef19f7-6c41-4a40-94cb-ac77fe201b67",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e7b1c95a-c732-4bf2-865e-c5b7d08c7ef6"
        },
        "item": {
          "id": "2cc84c4d-ef1f-483a-b52e-b1ed0652c9ee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d4cf17ad-c45e-46c0-8b8c-836c67d7c5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639e2e15-4940-4f87-93eb-5a3f23bd17b6",
        "cursor": {
          "ref": "5a77206d-e0d2-42f6-81e2-c91b5f1a22eb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bb8c60d8-33af-4532-a1f2-e683acfc6deb"
        },
        "item": {
          "id": "639e2e15-4940-4f87-93eb-5a3f23bd17b6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ec9152f8-38ef-445e-8ee5-06a33bf6d769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4e7799-10ba-427d-bd96-459b536f89ab",
        "cursor": {
          "ref": "9ee01dac-a8d7-4b65-9fd2-5510a6cfd3b1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f25c983e-5f79-43c6-9862-f43e6d4046a9"
        },
        "item": {
          "id": "ab4e7799-10ba-427d-bd96-459b536f89ab",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a5acd518-4cf0-4d52-a966-c891d9198e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ade2039-2a1c-4f84-aa4b-41b19ee23857",
        "cursor": {
          "ref": "651f38f4-221c-48a7-bf47-c2bdcfccfdce",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f63144e5-6b1b-42e9-9d26-c14c42167629"
        },
        "item": {
          "id": "0ade2039-2a1c-4f84-aa4b-41b19ee23857",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "698c87b6-6e9c-4de6-8e96-6cb979e0cd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baf7dbb-a53d-4727-a053-80c3caa8f113",
        "cursor": {
          "ref": "e7354872-551c-4791-9565-873343129397",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d0448d6c-d89d-473b-a3f0-ba4917602a45"
        },
        "item": {
          "id": "5baf7dbb-a53d-4727-a053-80c3caa8f113",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d531f77-eb8b-48fe-a75d-488543174675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c67b688-6e6c-4e73-9c07-62230bd4b3fd",
        "cursor": {
          "ref": "d057f0c6-fcff-4691-a4b5-9ee92bc42613",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "93ac08e3-4d5a-47df-b323-28f6cea2c87e"
        },
        "item": {
          "id": "8c67b688-6e6c-4e73-9c07-62230bd4b3fd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1de546e-4b79-4bf2-b55c-837fbee20aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e94d8c-c741-4af0-94c3-9b6517695d74",
        "cursor": {
          "ref": "51f9e16c-03cc-48be-b27a-07f169b0e566",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "84830dbc-5309-4ba9-8131-04a60bd200c7"
        },
        "item": {
          "id": "56e94d8c-c741-4af0-94c3-9b6517695d74",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b69797a-3da3-4d35-b66b-157f43ce25f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869cf2db-10d7-49a3-b2b1-e9f195a91973",
        "cursor": {
          "ref": "de09fd1b-d58b-4544-934c-a0e85566f1cf",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8c5677cc-a559-4c63-a5db-b3419a0e2620"
        },
        "item": {
          "id": "869cf2db-10d7-49a3-b2b1-e9f195a91973",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb67ffce-0246-4ecc-8121-d7dbc202385d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfb719e-a36d-4355-ba4d-202ab8a92cad",
        "cursor": {
          "ref": "bbb40da1-862a-4b56-ab16-87261e33e384",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7a2350c3-a7ae-439d-ae47-d4bee44aacf0"
        },
        "item": {
          "id": "8dfb719e-a36d-4355-ba4d-202ab8a92cad",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cc42bab4-82a2-451d-ab1f-106c89f5ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "990a878d-97bb-4a0a-86de-70799b840ab4",
        "cursor": {
          "ref": "2784db05-1c2c-4ba5-bce5-7d1eed2a46f0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "77dc0494-9ca3-43fe-b1b2-b04e0f8f4a9f"
        },
        "item": {
          "id": "990a878d-97bb-4a0a-86de-70799b840ab4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "33de0c69-642a-4a6e-8f84-08d9050de0b6",
          "status": "Created",
          "code": 201,
          "responseTime": 2841,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "14db2bcf-8089-4250-bc9f-a6867dbbffba",
        "cursor": {
          "ref": "ad8e09df-6fc3-47f4-b615-4e62c982a561",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "703a49e0-36b4-4d9e-939d-b2dabb25cc65"
        },
        "item": {
          "id": "14db2bcf-8089-4250-bc9f-a6867dbbffba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "54dbc5f8-cc2a-4b3d-8e59-a53464eca6e9",
          "status": "Created",
          "code": 201,
          "responseTime": 1982,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa2fd0a-9773-41f5-9b71-ff81c244c3a8",
        "cursor": {
          "ref": "6127d7ee-274c-47de-a653-d9d24dcf2bd1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "867c1d0b-6223-47df-ab40-58007e283a2e"
        },
        "item": {
          "id": "0aa2fd0a-9773-41f5-9b71-ff81c244c3a8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d7074f2f-6c2c-4e00-a964-df939199346b",
          "status": "Created",
          "code": 201,
          "responseTime": 2067,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a85fa4-0619-4c2d-9ea1-336d93b64588",
        "cursor": {
          "ref": "04315072-d343-40f1-bb16-a6f8578f2809",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "73fc7205-a953-457e-b356-b538547fe1cc"
        },
        "item": {
          "id": "a0a85fa4-0619-4c2d-9ea1-336d93b64588",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "15c7b3da-7be5-44d3-81ec-10e994589970",
          "status": "Created",
          "code": 201,
          "responseTime": 2153,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33920726-2002-4ffb-aeb3-45d3c69660a4",
        "cursor": {
          "ref": "86f3fabe-e1a5-406b-a2b6-716ab4dae464",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3b4d7e77-8305-49fa-9d1e-d620f6bfaf2b"
        },
        "item": {
          "id": "33920726-2002-4ffb-aeb3-45d3c69660a4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9254cb8a-5a25-46c0-9f71-972d1fa86731",
          "status": "Created",
          "code": 201,
          "responseTime": 3796,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "28225c88-0e6f-49d7-844b-98900cfd2c06",
        "cursor": {
          "ref": "006aff9f-1f41-4a74-a8a2-6731ade23ebb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "df080c1f-8685-43cf-9a50-5f697cf30bde"
        },
        "item": {
          "id": "28225c88-0e6f-49d7-844b-98900cfd2c06",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4f50dc7e-d14d-4c2b-8383-4d2de6c028f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "32f973fb-7c68-4935-a7f3-5bc2456cca9a",
        "cursor": {
          "ref": "7f42b208-c7cd-4d27-9ab2-405da166852c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "219b39cc-7e89-47d1-8754-15e4cc054d94"
        },
        "item": {
          "id": "32f973fb-7c68-4935-a7f3-5bc2456cca9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "10d6adfd-62db-441a-8e65-4bd44d8c6b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b08303-00cd-45ff-9957-f8e3380eef24",
        "cursor": {
          "ref": "6337a3cb-d771-414f-b1e7-677f839a4abe",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0696a740-dfe5-4230-a1c8-5a98eda395d3"
        },
        "item": {
          "id": "a2b08303-00cd-45ff-9957-f8e3380eef24",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "11aae10b-e58c-4806-8eec-4bf2d8cb55e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b6677d-c430-456a-b0d8-85b926650a22",
        "cursor": {
          "ref": "d802c949-b3c8-47a2-9948-fb96a31538ef",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f4868994-1faa-480e-bc24-a057a0bcdc26"
        },
        "item": {
          "id": "43b6677d-c430-456a-b0d8-85b926650a22",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ffd45dd6-6340-47ac-80a2-df64ef03cb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da32d93-f127-40cd-9d5d-76fa0353fb61",
        "cursor": {
          "ref": "495af716-8117-461d-b05b-d51a2ab0b425",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "46bbf6cb-f5a2-4d8c-a6f4-4158d6728f38"
        },
        "item": {
          "id": "2da32d93-f127-40cd-9d5d-76fa0353fb61",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7f4d3cd9-6b77-429c-8bab-f2f6270e5d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b942a00-197f-4be5-bc82-6055e1b559a3",
        "cursor": {
          "ref": "1d787f01-d9fb-4ac4-b16c-b15450e13b14",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6ce6e62-4783-4d1e-a225-926df6498a48"
        },
        "item": {
          "id": "9b942a00-197f-4be5-bc82-6055e1b559a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "21ca44e7-f620-49e9-aa1c-45fd6474f7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71387c94-4088-4069-b006-bd25379a6d67",
        "cursor": {
          "ref": "ba5d6fb7-627c-4b06-b685-bda05b8ff567",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "db6665f1-3c26-49ae-855f-251af863b4a0"
        },
        "item": {
          "id": "71387c94-4088-4069-b006-bd25379a6d67",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c9f94626-b903-44f9-a8c8-75bb83ead4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422b1d0b-2b8e-434d-b4dd-3c7b616a182d",
        "cursor": {
          "ref": "1ff8fdcc-41dc-4d80-b414-461695281f4f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "322b4c72-111f-4c34-9f1c-8dbbbfbe5a3b"
        },
        "item": {
          "id": "422b1d0b-2b8e-434d-b4dd-3c7b616a182d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c7c347a9-29cc-4c5e-895a-4b91dcb7b91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a72148-0e28-4d4d-ab63-0025371a98fa",
        "cursor": {
          "ref": "7de029d9-46e1-48b5-835c-90bfb6c23b18",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9af1d5ed-eb11-45b6-b992-d858cf7dbc65"
        },
        "item": {
          "id": "35a72148-0e28-4d4d-ab63-0025371a98fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0735298c-0d8f-4a80-bc71-c83e2a631f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d870e020-ae07-4b5b-84ad-8f39db5d23d9",
        "cursor": {
          "ref": "183afba7-236c-4361-a04a-9faf6ba3ed72",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a23b2dcd-fedf-4e52-a7ef-ba2a452dec62"
        },
        "item": {
          "id": "d870e020-ae07-4b5b-84ad-8f39db5d23d9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "08383b67-1b2b-468d-8735-ca8d777a56a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b11b68-5f6e-4c96-9b2b-3561cfa97f9a",
        "cursor": {
          "ref": "d458215e-e482-40dc-a543-392fbf45c28d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fdc29a7b-b8a7-45f7-a34c-3cd004360133"
        },
        "item": {
          "id": "86b11b68-5f6e-4c96-9b2b-3561cfa97f9a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5b83f901-1095-4fcd-a861-dea958ed8ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e97ea31-351a-47f9-955c-832eb40084a7",
        "cursor": {
          "ref": "2391e2cf-704b-4ee5-91ec-28df2333f7eb",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b7c0cc5d-4715-4b08-b5b3-f25ac18fb741"
        },
        "item": {
          "id": "6e97ea31-351a-47f9-955c-832eb40084a7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0151136f-b51a-46d2-9089-ce4756a17790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f247510f-0262-4ba5-aa43-6b547c126267",
        "cursor": {
          "ref": "9a303b37-b30a-4339-89f3-d4a61f759ef6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "009a5628-1937-468a-a517-804bb9b35453"
        },
        "item": {
          "id": "f247510f-0262-4ba5-aa43-6b547c126267",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf14dabf-b300-4c1f-803e-b51b517437af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959b8fff-6965-4ca8-bea1-572481ab46d5",
        "cursor": {
          "ref": "819223b4-02e6-4139-baf1-cfd5580b6142",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b08b02e2-7193-4c30-b63f-4b3283eb4588"
        },
        "item": {
          "id": "959b8fff-6965-4ca8-bea1-572481ab46d5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d7a6beed-2066-4ad9-9a7f-90691115a90d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 115,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae12f62-d7b2-4845-a143-72a18a76aab4",
        "cursor": {
          "ref": "5bcac99a-fba7-4c8c-8a77-fe2e104fb6db",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dbaa240e-c777-4c3f-8d04-10d2402292fd"
        },
        "item": {
          "id": "cae12f62-d7b2-4845-a143-72a18a76aab4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5314d3ff-9740-4b23-92ac-20dd880d54ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869d3d44-e04e-43d2-9cde-8e982ea6e4c8",
        "cursor": {
          "ref": "20f315ad-fd83-485e-ac29-2c9103e63599",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "36e3a231-fcf2-490d-bcee-c8dfd51896b7"
        },
        "item": {
          "id": "869d3d44-e04e-43d2-9cde-8e982ea6e4c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ea2da849-297a-4d5f-a213-c72e8837a695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2768a841-e70a-4a55-b195-2bde3453a6dd",
        "cursor": {
          "ref": "7e964c94-9553-4b53-a0ca-588e0e65467a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6063e735-4cb8-4358-83fe-1c20ce98a28e"
        },
        "item": {
          "id": "2768a841-e70a-4a55-b195-2bde3453a6dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2133ef1b-7090-488f-ab8e-42ea4b207a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4dc4b8-25c3-415b-b328-6f095268f9a6",
        "cursor": {
          "ref": "55a85edb-cbb1-452b-8d9d-8bfbb23fb383",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a748afcb-3bc9-436f-85df-94a9befb2eae"
        },
        "item": {
          "id": "fc4dc4b8-25c3-415b-b328-6f095268f9a6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ac13b20-8a12-41e3-b3e1-8520a0234dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e28388-163a-4a21-bbe1-7878c58352f6",
        "cursor": {
          "ref": "4404780b-2026-44cb-99d5-1b9fe1dbb29f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ce9f3d6b-c570-40a3-9964-bfcffa006ad3"
        },
        "item": {
          "id": "19e28388-163a-4a21-bbe1-7878c58352f6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "905b3e64-78cc-47fd-91db-dbc7fd65f7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfd2d8f-471f-4fde-a352-2af8cf765c9f",
        "cursor": {
          "ref": "5bc8c96d-1ec0-4c2a-a3e5-d888e07102f5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4c01597d-e4cb-4d70-a591-dbda7210e443"
        },
        "item": {
          "id": "5dfd2d8f-471f-4fde-a352-2af8cf765c9f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b4fd18d-8152-49a8-a850-17ad18e396b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e95ddcb-6089-4ca3-bec0-d3fee5a62b91",
        "cursor": {
          "ref": "0a132aa6-f5a4-4ea5-96ba-533b430ce273",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "22b75419-cb7f-4498-865b-e1a739509d9e"
        },
        "item": {
          "id": "7e95ddcb-6089-4ca3-bec0-d3fee5a62b91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2623d39f-f54f-454c-8c79-cfa2738ce04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f514af2-c328-42ef-98fd-306ee6b4c351",
        "cursor": {
          "ref": "1ff04277-a0fe-4667-b5ed-e50aacd7de98",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e57a3732-d19a-4973-9f32-beb872a2c0aa"
        },
        "item": {
          "id": "9f514af2-c328-42ef-98fd-306ee6b4c351",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9c3cfd2-9fd8-4c34-b2ff-fcf9507cd6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b49e075-d389-4b5a-b640-1fd99f548909",
        "cursor": {
          "ref": "a6421016-a891-40f5-a6a7-db29072d609e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a4e93397-9a24-47b3-b802-339d7805f3b9"
        },
        "item": {
          "id": "7b49e075-d389-4b5a-b640-1fd99f548909",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a39e79b9-fde2-4dee-bac0-eaa307c1b41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d1fcd6-86db-4381-9d62-98235a0a8c61",
        "cursor": {
          "ref": "2198ee17-ae40-4ebd-8056-9aa957fc9a29",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "73cb6378-dcd5-4bc4-8db3-37c11453406d"
        },
        "item": {
          "id": "42d1fcd6-86db-4381-9d62-98235a0a8c61",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "11355926-d42b-4e2e-bb8b-fce9c09822b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4679a6e1-8066-4ebc-9834-17c4dc109bed",
        "cursor": {
          "ref": "4f9237ca-701e-443b-b3d1-f05d8af932f4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d2800672-92c7-448d-95d1-d5195bd20f9e"
        },
        "item": {
          "id": "4679a6e1-8066-4ebc-9834-17c4dc109bed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "93c0542d-71c0-4fd5-8556-b9c314769f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9c18df-fb38-41c2-9689-f48e8d7ee008",
        "cursor": {
          "ref": "aec33fac-910e-4f86-81c3-7edad19c699a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "afcc4522-a1fc-4bc8-b632-0ddb75bf9401"
        },
        "item": {
          "id": "6f9c18df-fb38-41c2-9689-f48e8d7ee008",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "efbfdaf3-0962-451e-95b3-1888664efba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283b8037-acfb-4362-842e-0b112435240a",
        "cursor": {
          "ref": "e298c5b5-08b8-4619-b8c2-efb40a03487b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bab50e75-ed8d-4644-a7e5-e91037fd9831"
        },
        "item": {
          "id": "283b8037-acfb-4362-842e-0b112435240a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "afb4b949-9c94-4c90-b489-fa831a8c3fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77887c58-1ff0-41a5-a7b3-4a6ca633d32a",
        "cursor": {
          "ref": "ede282b1-91f6-486d-92a8-40fc74c6add9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4cb7c291-a8d1-4463-b7c9-d018336c1f38"
        },
        "item": {
          "id": "77887c58-1ff0-41a5-a7b3-4a6ca633d32a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d850294c-1da6-44af-903a-8408849ed2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82763c6b-4fde-4b30-9230-90838684f214",
        "cursor": {
          "ref": "56926996-fd2b-49aa-bd93-51f18e5d448d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "51a0d06e-73c1-468b-b2dc-608fa25a83eb"
        },
        "item": {
          "id": "82763c6b-4fde-4b30-9230-90838684f214",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7afdbb22-2fe2-41a1-b6ee-f5f642431579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0e93f0-25e7-4f85-9a2b-14804fcbf5d2",
        "cursor": {
          "ref": "2c449eee-e01a-47d3-8a6e-da51520d8b1a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b4a138f-dd2a-447b-a127-2ac1cc2b2a6f"
        },
        "item": {
          "id": "4e0e93f0-25e7-4f85-9a2b-14804fcbf5d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e952e5c-bf20-489e-a02f-1d2863a065ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d31e2-5b8f-4678-b0e7-ad37a9873c6c",
        "cursor": {
          "ref": "dbc521e2-f7a3-479c-95d4-d6c516c9c96b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e31d053-9181-4f43-825d-06ac365d3687"
        },
        "item": {
          "id": "717d31e2-5b8f-4678-b0e7-ad37a9873c6c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d5f9fb0-3e50-451d-9961-a3caeb052d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566f32aa-89bb-43d0-943a-bb60acc76f62",
        "cursor": {
          "ref": "5227d874-50ff-4444-a267-5ebfcb8c574d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d9801847-4c40-47c3-9d05-1bac5a6242eb"
        },
        "item": {
          "id": "566f32aa-89bb-43d0-943a-bb60acc76f62",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ea76951e-ab40-4b5d-a701-7d21f533b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f35157-f5ce-4827-bdc6-2b43f5a078d7",
        "cursor": {
          "ref": "be10e39d-2fb0-453f-a793-1d5f6f8d3575",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "58370c73-e994-40d0-9cdf-634398ae384f"
        },
        "item": {
          "id": "d2f35157-f5ce-4827-bdc6-2b43f5a078d7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0558db86-d0aa-4a6d-955e-dc30afabc73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb38a78-26ab-45ad-bf71-b30878093a8e",
        "cursor": {
          "ref": "f2078f0a-4a6c-4572-8257-43ba59830765",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6bb71272-e20c-42e4-a9c4-c89ac001cf39"
        },
        "item": {
          "id": "beb38a78-26ab-45ad-bf71-b30878093a8e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72bab2c7-fee6-4bb7-a232-0da816899caa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3036c90e-a164-49d3-99c8-33e87b6e0fb7",
        "cursor": {
          "ref": "c2cf328c-8c49-4697-9cfc-86845108085a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "65aba3e5-4f41-4dd1-9b1b-f3efd152054e"
        },
        "item": {
          "id": "3036c90e-a164-49d3-99c8-33e87b6e0fb7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a374f31a-c579-4c2b-9124-95a43c248814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faef5529-f5f9-42c6-984e-2c8fc5871cb7",
        "cursor": {
          "ref": "a627e569-bf03-4463-92c6-5e19f93a9db9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b0723d07-b66f-426c-8582-385df30036a6"
        },
        "item": {
          "id": "faef5529-f5f9-42c6-984e-2c8fc5871cb7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb601d13-1321-4c6c-9b22-1dd631f1d5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1f9358-4cde-40a1-8fc0-8ff65270f7f6",
        "cursor": {
          "ref": "ceb5237c-d8b3-48ac-bcc9-1729fe143c66",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f04b47b1-15d4-46c1-8694-1cd268e017a9"
        },
        "item": {
          "id": "0e1f9358-4cde-40a1-8fc0-8ff65270f7f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7e282bc5-9a7e-4928-a75a-cdf3a6c3eb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67d94d6-6afb-446e-a784-22f3a723371a",
        "cursor": {
          "ref": "28b7a7d7-7a35-42ee-bc9b-7dd7a7fdaf20",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "17cb833e-9cc9-4496-9fb5-576cff43d60c"
        },
        "item": {
          "id": "f67d94d6-6afb-446e-a784-22f3a723371a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b560f284-067e-41b5-a3dd-e03602fdaee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ac8b9f-5f1f-4869-9804-32ebe3d8e087",
        "cursor": {
          "ref": "f043e32e-2574-45e4-8f52-5377114f8137",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "85a2818b-39b6-41c1-a97c-0b722ba9ceeb"
        },
        "item": {
          "id": "51ac8b9f-5f1f-4869-9804-32ebe3d8e087",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08fbaaa0-e25a-49e9-8322-5d2c0a852e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94040ed7-d31c-4fee-a02c-388c46662ebf",
        "cursor": {
          "ref": "88077cae-0200-492a-9802-e59104ebd9b1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "36c05965-59cb-4f17-81e5-2aa509496b2d"
        },
        "item": {
          "id": "94040ed7-d31c-4fee-a02c-388c46662ebf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b14b12c6-4c85-428d-93b7-7c06a34ea1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a52b69-782d-416d-a756-07f39d71485e",
        "cursor": {
          "ref": "bea37550-2b3b-4679-9575-5c6a61e6bc85",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "171451df-6d92-41c5-9954-1bce7d9c344a"
        },
        "item": {
          "id": "81a52b69-782d-416d-a756-07f39d71485e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2c6e382e-4bd7-45bc-993c-990fb70abf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745effe2-4f50-46ea-a43c-049ef218dc79",
        "cursor": {
          "ref": "06f74786-af5d-4d1d-9a26-6aeb379a0eb9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "87ab5ab0-d8b5-492f-b922-addd6f8dd81c"
        },
        "item": {
          "id": "745effe2-4f50-46ea-a43c-049ef218dc79",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "396398fd-304c-4fd1-8cf0-4a19938a3e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dcee4-dff6-4ce8-a654-343325a39e06",
        "cursor": {
          "ref": "8e209aac-43e8-40e6-ae21-1901ada7b054",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "566eb569-6dff-4bbe-8f94-ea9422d71acf"
        },
        "item": {
          "id": "f28dcee4-dff6-4ce8-a654-343325a39e06",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "633a8100-2458-47ca-a50a-233d5c650de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29eea24-e893-4291-b788-7698a89b8604",
        "cursor": {
          "ref": "65c3fcfc-d6e8-4f42-831d-711becd2f6a4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ea6e4555-6b76-453a-9e75-b5938f6d7b59"
        },
        "item": {
          "id": "c29eea24-e893-4291-b788-7698a89b8604",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "530c6771-0be7-4ba8-a842-44e529e86848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe04a9e9-71b6-4112-ac69-b5c666d3482d",
        "cursor": {
          "ref": "d3c7e96c-ab26-492f-90ec-6e997397d73a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "77783306-ab0c-47e4-9e3e-42e79004f7dc"
        },
        "item": {
          "id": "fe04a9e9-71b6-4112-ac69-b5c666d3482d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "744bada3-0e84-4ed2-b8b4-bd60436619ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed544982-2b86-472d-94d5-a88933fc0f7b",
        "cursor": {
          "ref": "5f62ab54-00ed-471f-ab0d-10c9147bc3ca",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ed22b5cc-9af7-4983-8bf8-92243bda23c0"
        },
        "item": {
          "id": "ed544982-2b86-472d-94d5-a88933fc0f7b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d3f581cd-a964-4430-a3d7-9b54848aed64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f138d60d-eabb-445b-9ec2-9cc6a0b16ce2",
        "cursor": {
          "ref": "609ad046-0bb4-4308-ad73-0966741ce93f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7e1816e5-9a86-489f-9ff9-dbec4a312fb3"
        },
        "item": {
          "id": "f138d60d-eabb-445b-9ec2-9cc6a0b16ce2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23fa8159-d099-4204-a18e-c9db5fe28c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d843c8-4564-437e-87b5-d8e6c4fdafb1",
        "cursor": {
          "ref": "450b0884-95b5-44b3-b14a-ca972bec281c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5acc3b6-7b7e-462e-942a-f4c57fb5184f"
        },
        "item": {
          "id": "16d843c8-4564-437e-87b5-d8e6c4fdafb1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0862b33a-ed49-40bc-a032-fc0359074546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34ff220-285a-48a2-906a-66a13f37e948",
        "cursor": {
          "ref": "51c3ae86-6ff2-4c94-8027-aa3c1416e1b7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c3f2f7b5-631e-4f16-b051-a64a54fd2ec8"
        },
        "item": {
          "id": "c34ff220-285a-48a2-906a-66a13f37e948",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b8677261-8e9d-4769-a1ad-d7deb27811aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58196b78-d848-481a-b0fd-0378944147a3",
        "cursor": {
          "ref": "0d27de8d-9ea9-45e3-9d6c-7cbb7d12a1af",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "35888153-b4d8-46fd-bb89-fc2d7cf01b78"
        },
        "item": {
          "id": "58196b78-d848-481a-b0fd-0378944147a3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c1eca49-0a3a-4982-90c2-5d4cf884d1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e496d81-09ef-4ffa-a565-e7ec624cfc40",
        "cursor": {
          "ref": "bd5a1e10-4b3d-435c-a35b-b1635b9aebda",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0c965eb2-f5b7-4443-891a-3e0ff98b80ba"
        },
        "item": {
          "id": "9e496d81-09ef-4ffa-a565-e7ec624cfc40",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a8c4103-ace9-45f0-aaf0-1f3c211c82b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24293bfa-b996-4b03-81e6-0756baf6b156",
        "cursor": {
          "ref": "39035e53-b9c7-4819-8dd8-4814b46573df",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2e07fe06-48db-43d9-a5c0-4426116df21e"
        },
        "item": {
          "id": "24293bfa-b996-4b03-81e6-0756baf6b156",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4c8d01bf-7577-4ab0-a738-413258c6bff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7138556-7dca-4458-9f10-5900288415d5",
        "cursor": {
          "ref": "81356971-1af8-4ffa-bfc1-4e0e854723a9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "df0d725b-9579-49ad-a259-db0f182900e2"
        },
        "item": {
          "id": "e7138556-7dca-4458-9f10-5900288415d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6c016429-f291-473e-be12-e099dbd43c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ca4f52-a886-41a0-8793-4a1b811b71ab",
        "cursor": {
          "ref": "b25c6f4e-7bc3-4a58-8739-564f26980cf2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5f144c37-523c-4bc6-83ff-b9e9660b3849"
        },
        "item": {
          "id": "65ca4f52-a886-41a0-8793-4a1b811b71ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "908ddfdb-418c-43ce-8930-d0812db2e55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef0ad97-95f4-420d-8ce5-569965705d81",
        "cursor": {
          "ref": "6edfac3d-d6f2-461b-aa49-10a02b295b84",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e99d1c0-5291-4c73-be7e-ccd29e34123b"
        },
        "item": {
          "id": "3ef0ad97-95f4-420d-8ce5-569965705d81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "115a24d9-d17e-4ec4-9189-800f49e825f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2736a59b-fb90-4de7-b3ea-47d4d5fc52f6",
        "cursor": {
          "ref": "0d77bd89-7d3a-44ab-bb87-5fd4809e9d18",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6625f593-96c6-4bfc-a9d6-febf04aeedc8"
        },
        "item": {
          "id": "2736a59b-fb90-4de7-b3ea-47d4d5fc52f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d77ee1e1-f631-4de9-89cd-2f44e23685d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bc4e80-a82f-4fc6-aa0d-31fc7fc53dd3",
        "cursor": {
          "ref": "b8c74ca8-51cc-454a-888b-6638fbf0c715",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a1450b84-ce57-4a1f-8611-6a558a18d09c"
        },
        "item": {
          "id": "64bc4e80-a82f-4fc6-aa0d-31fc7fc53dd3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8aa1cc16-d167-4fc0-af8d-ecd86750e59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99377c9c-9490-4880-b6c0-08f9b65be7a6",
        "cursor": {
          "ref": "66e8c5a8-5221-40e9-baf2-9851e08dcebd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4a2ca771-0cb6-4927-9141-bc7ae149fd15"
        },
        "item": {
          "id": "99377c9c-9490-4880-b6c0-08f9b65be7a6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fdee51df-0f36-42e3-b274-f4582150d0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93490ed-451b-442b-837f-a868fd9fb376",
        "cursor": {
          "ref": "36e87c22-cdb1-48ce-a5bb-43426eebd5cf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "447806b7-e83c-4c93-ad5f-25379d04c716"
        },
        "item": {
          "id": "d93490ed-451b-442b-837f-a868fd9fb376",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "504d57c0-c0e2-4ddd-9a19-30b9af990737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762def94-abb7-4b4c-b987-5826041acba9",
        "cursor": {
          "ref": "54a63d9b-98fd-400f-85ac-de64a63a3e15",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "28fe87cc-844d-4fd4-8113-474f2dec0613"
        },
        "item": {
          "id": "762def94-abb7-4b4c-b987-5826041acba9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "753b8aab-ab91-4476-a4ed-bc08acfc795d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98edc7d2-2e58-48c5-8c2d-ab9f8d08916c",
        "cursor": {
          "ref": "be339dad-ab3d-40dd-bd1c-d281ea32224a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f093d463-cfe6-44b2-90a9-b1eca50101c7"
        },
        "item": {
          "id": "98edc7d2-2e58-48c5-8c2d-ab9f8d08916c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "50c69710-4215-4546-a084-6f3fe3201341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca918a5-c0f1-4f6b-8ce4-86783da468e0",
        "cursor": {
          "ref": "8ed21d82-f274-47fa-8722-6b7e76ec2a9b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "11c80e7b-a1a9-49d9-8791-6740f8948dc3"
        },
        "item": {
          "id": "2ca918a5-c0f1-4f6b-8ce4-86783da468e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1af023c8-986b-40fd-af10-3f69efc0c636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fac8cf-2b7e-4514-8b1e-db3c1d1e3507",
        "cursor": {
          "ref": "34aa3e7a-85ef-4b08-8bfb-8177f95b707a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0017b632-a129-4704-a261-864211b4950d"
        },
        "item": {
          "id": "c5fac8cf-2b7e-4514-8b1e-db3c1d1e3507",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "20050a45-bd1e-4606-8d35-e36ca2c56958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b0aea1-13ee-4fd7-b745-872420fcb845",
        "cursor": {
          "ref": "4ef1e966-422f-4812-89a0-c02bc6995fd7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "34fe5d20-abb0-4d23-a216-eb0aef834bfe"
        },
        "item": {
          "id": "62b0aea1-13ee-4fd7-b745-872420fcb845",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "127dae3b-b4c4-4374-9457-91f4c31a4c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7f44a7-6ef9-46d0-b002-9f85014b68d2",
        "cursor": {
          "ref": "d8bb145c-1299-45d4-a798-9dab6fc60ba1",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "31bf5b2a-20bd-49db-84c8-f5048b1b8473"
        },
        "item": {
          "id": "1e7f44a7-6ef9-46d0-b002-9f85014b68d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5cff135f-5e16-4418-932d-9e93141c6d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bee4bcb-4eb4-42b9-8bd5-c9dd618806a9",
        "cursor": {
          "ref": "4025eb89-ca4d-4231-ac0f-af7acb5e1572",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7bb8beb9-d0f1-4f8c-9388-4bc3c276dd90"
        },
        "item": {
          "id": "1bee4bcb-4eb4-42b9-8bd5-c9dd618806a9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c586ff09-e2ca-4702-bdd3-07bc8a0109c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdda684-05f2-41a6-bd1d-55759dff31bc",
        "cursor": {
          "ref": "f41441dd-0047-409d-b118-9910c5837993",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "637848f6-16e0-45a8-84fe-2cb074fbb198"
        },
        "item": {
          "id": "efdda684-05f2-41a6-bd1d-55759dff31bc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "31b0a1bc-ab86-4e72-bf25-a038627fbffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6675ed9d-b5ed-4d86-adbc-1e2c9fe4de35",
        "cursor": {
          "ref": "d3522923-377f-43de-b508-a40874a6ee9b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2d1fa470-ffa8-4832-b310-0ef9321307a1"
        },
        "item": {
          "id": "6675ed9d-b5ed-4d86-adbc-1e2c9fe4de35",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "60ac7f48-e133-4952-8cad-57f62d104351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c788d0d-481a-4751-a2ca-92583c68be70",
        "cursor": {
          "ref": "2512b028-b9a3-42a8-a96c-5e3a7f7dc362",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "16cf4ebf-fefa-4a37-9edf-47a15fcd2f1b"
        },
        "item": {
          "id": "6c788d0d-481a-4751-a2ca-92583c68be70",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7f16bb9a-719e-4bd1-b1d1-6db643af217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d884dbe5-7ab2-4e54-91e4-c8cf0e154030",
        "cursor": {
          "ref": "953ae2c3-53b9-400d-955a-9f47b1d8c233",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3122ed5f-1089-4793-8ad4-e5182287dc20"
        },
        "item": {
          "id": "d884dbe5-7ab2-4e54-91e4-c8cf0e154030",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8792d1c9-f217-420a-857f-300798c30fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696cf552-c755-4fd6-9f12-210391de8858",
        "cursor": {
          "ref": "6dcc105f-f0b9-4415-9466-1a2a4ce6cd88",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "918db8f2-fc70-430e-8e43-4c7b8a38b068"
        },
        "item": {
          "id": "696cf552-c755-4fd6-9f12-210391de8858",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5e8fca82-2441-4d41-bdb4-34c56da0f45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54405467-50a3-47ef-ba79-5dd17b6634f9",
        "cursor": {
          "ref": "d0c82fcb-4c2c-479a-b8b6-7a337ace88dd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99808427-d825-4af8-b761-bbffe40b4cc4"
        },
        "item": {
          "id": "54405467-50a3-47ef-ba79-5dd17b6634f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "145b21af-a012-4e4a-911f-472fc4f42726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6a1ec7-ac6a-4dbb-b011-2d314528483d",
        "cursor": {
          "ref": "78bb5dd5-6bbe-400a-a8d3-288436145e06",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ebb967b0-facb-49ec-bbea-0d91a6ef389c"
        },
        "item": {
          "id": "be6a1ec7-ac6a-4dbb-b011-2d314528483d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "94558196-ced3-40af-9575-988e95c6ae06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958840d3-022c-46e7-b2a7-29ac71ae30fe",
        "cursor": {
          "ref": "683192cd-1fd0-46fb-b3b1-9ef62761ad65",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b0b1cb23-3c5a-4359-aa43-732d96db17a4"
        },
        "item": {
          "id": "958840d3-022c-46e7-b2a7-29ac71ae30fe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "898a543a-c44f-43c6-8d02-c980f3d049cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42830319-c72d-41ca-8388-84d85bfb3ff6",
        "cursor": {
          "ref": "71cd586d-52af-4f8d-bd1d-cff5d9a54ed6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9d808e11-c37a-4425-8314-599e3740a0da"
        },
        "item": {
          "id": "42830319-c72d-41ca-8388-84d85bfb3ff6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6c95a066-41c5-4749-952f-fdbb4a9804f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76359a45-feba-425e-bb7d-cc91d3052b40",
        "cursor": {
          "ref": "497cc0e5-40ff-46c3-b5aa-fd7cf518a459",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "650eaeeb-9096-4a55-869e-0c7db7bebfe4"
        },
        "item": {
          "id": "76359a45-feba-425e-bb7d-cc91d3052b40",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3f164fa6-9d48-42b1-a571-1dc3e246bfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1491a22-a6d7-4a66-91cf-7da6452990ab",
        "cursor": {
          "ref": "09ce5eaa-5304-4477-8468-15160eba97f6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3a3dce00-2742-4ad8-a3bf-604ab2a844ec"
        },
        "item": {
          "id": "e1491a22-a6d7-4a66-91cf-7da6452990ab",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "105e24af-7fdf-40d5-8d39-c5c7bb332f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9dcce7-5958-4324-831e-80f86800e86f",
        "cursor": {
          "ref": "e06283df-f2ba-4d01-aa70-b40eabac4276",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac2f5e9a-4193-4c5c-9eaf-ae30487b8397"
        },
        "item": {
          "id": "9b9dcce7-5958-4324-831e-80f86800e86f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "aee47e74-f1dd-4253-9b81-48d229a10fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f51199-89e9-4b60-b690-927d6e38f591",
        "cursor": {
          "ref": "d0fd16fb-f628-44b9-91f0-d772c396dcac",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ebe728a8-6736-43a1-a37d-a12aa5eb8787"
        },
        "item": {
          "id": "32f51199-89e9-4b60-b690-927d6e38f591",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2810a7fc-fd82-47fd-abad-ccdbd66b44d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e59a493-4b1e-4a75-bf94-540fdfa9d294",
        "cursor": {
          "ref": "c6f7a944-5aa7-4ca7-af7d-5e4443b5c62b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c4c530a5-e294-430f-a6e8-ab7fa9bfbc66"
        },
        "item": {
          "id": "8e59a493-4b1e-4a75-bf94-540fdfa9d294",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a8fd9795-8c43-4ad9-bff9-a590403eefda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfdc97c-4fc5-4c1e-988d-a2e3b25f4786",
        "cursor": {
          "ref": "540546df-1ed4-4b37-90f4-93b4b4239400",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5f241410-19fd-479a-86f1-a2ecc0e370e6"
        },
        "item": {
          "id": "bcfdc97c-4fc5-4c1e-988d-a2e3b25f4786",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "de40d003-d471-4374-b93a-1f1ffaf73d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec6ad33-b201-4c7a-b2b0-bda756fb529a",
        "cursor": {
          "ref": "decb4f89-a98e-495f-bd5c-804c08c95adf",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3bc28202-55f8-40ec-9e67-86a85690febc"
        },
        "item": {
          "id": "1ec6ad33-b201-4c7a-b2b0-bda756fb529a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6b08a9dc-0f54-4576-bf6f-d668644e05bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0a530f-ccc9-4048-9f8c-de150296c30c",
        "cursor": {
          "ref": "edcfab8e-d7fd-4539-a8fb-b3a6bf9ce1a1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ada1c7cc-2a4f-45ca-bcaf-e5088ece9a87"
        },
        "item": {
          "id": "ba0a530f-ccc9-4048-9f8c-de150296c30c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "330028e3-45d9-45b9-bfde-a8f0df44d523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a2f0bb-0c94-44e7-81cb-2973f5607836",
        "cursor": {
          "ref": "79d85fbd-ee82-4593-81a0-577631a28993",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "83af4a9e-9e17-4d27-9bc7-09f4ffa59725"
        },
        "item": {
          "id": "d1a2f0bb-0c94-44e7-81cb-2973f5607836",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1e2e6ffb-009a-48c3-a7af-a1ae264070a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116f4e51-f39d-4a8c-b051-5889542653d2",
        "cursor": {
          "ref": "510d6361-1257-46ab-b862-9aff8a3c2d41",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "22158f2c-7b2e-4e24-9074-b21e3aade4a1"
        },
        "item": {
          "id": "116f4e51-f39d-4a8c-b051-5889542653d2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5c8745d9-f40f-49bf-9311-47e7fa6cb09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872d34e0-66c5-4def-8f57-71afe42aea72",
        "cursor": {
          "ref": "cd4b6750-7f57-4486-bb90-ff508862928d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2a190ccf-0de3-4512-9c28-cdb38520f993"
        },
        "item": {
          "id": "872d34e0-66c5-4def-8f57-71afe42aea72",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b42f4ffa-8210-494f-a812-70c8f5db64be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f4953-105b-41e7-a6af-c82ff0b31d5f",
        "cursor": {
          "ref": "3be025c8-1a84-441e-a47a-38e95f957a19",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1ca33d81-0a42-4c4d-b1f1-6d818373721b"
        },
        "item": {
          "id": "228f4953-105b-41e7-a6af-c82ff0b31d5f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ceb43d2b-7133-499f-a5ed-6ada7a4023c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109d6766-6df7-47bb-9f16-7f1348ffd96a",
        "cursor": {
          "ref": "6e248764-1a16-4a0e-9be6-d71a6860abe7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cd440380-fb94-4e74-80d5-a06e98066114"
        },
        "item": {
          "id": "109d6766-6df7-47bb-9f16-7f1348ffd96a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ffc642fa-e206-4c27-bf69-52431e6bd8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b97685-3007-441f-b4f5-7f754a5181ad",
        "cursor": {
          "ref": "75d0743a-d727-4c5e-8c08-13cdeebfe2e0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ed2fa9b5-d5e8-4262-9743-043383cbe9eb"
        },
        "item": {
          "id": "52b97685-3007-441f-b4f5-7f754a5181ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4cad2d0c-fb6f-49ae-87f6-3214929d5098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366fd122-a677-4e0c-be07-95f9a556d847",
        "cursor": {
          "ref": "8e6790b2-ddc0-4154-9287-4b2f934c8f46",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "313804d4-d6fe-4b84-9d9d-d5ff58e82e84"
        },
        "item": {
          "id": "366fd122-a677-4e0c-be07-95f9a556d847",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6e4dd73f-35e6-4cc2-877b-f84bc167883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78fe4a5-85ba-4b99-8b4a-81f649836d7e",
        "cursor": {
          "ref": "8e25457f-f4f6-4611-a26f-ce58dd1f0b4e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ac42e120-7f2e-4fa5-9059-7d21d7cfbd40"
        },
        "item": {
          "id": "a78fe4a5-85ba-4b99-8b4a-81f649836d7e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e43a469d-3124-473e-af18-308856e38fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533c0e5b-68ce-498c-bdc1-3db84c4a2ae7",
        "cursor": {
          "ref": "b873aad4-a30d-4365-b14d-8df0692ff98f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2c3cf543-8ba8-4edb-b653-4a4295f48df2"
        },
        "item": {
          "id": "533c0e5b-68ce-498c-bdc1-3db84c4a2ae7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "785cb2d9-9b13-4147-a773-39920dac3b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc48e05-71b6-4d1a-8f2b-e1504a9a16b9",
        "cursor": {
          "ref": "acd5a5d7-7475-4a57-bbf1-11072260c079",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7917bf7f-7521-439b-a4de-4f05be2ddc19"
        },
        "item": {
          "id": "6fc48e05-71b6-4d1a-8f2b-e1504a9a16b9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aaa86d21-c611-4510-8c80-a28e22eaba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ce01e-3d37-4880-88a0-99ef26247fab",
        "cursor": {
          "ref": "219693b9-4b2d-417e-9f87-80a2ee9a81f4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f3174e2-c389-486c-8ae5-c4146276d0d4"
        },
        "item": {
          "id": "6d1ce01e-3d37-4880-88a0-99ef26247fab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e962cbd0-6955-471e-889d-56b8ea875ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e985e40d-602b-4b64-a35b-2f9cc31f5408",
        "cursor": {
          "ref": "e6df8be7-c11f-4c17-ba60-52df3aeaf736",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c01eabe2-754a-4f22-b9f0-aae323a955b7"
        },
        "item": {
          "id": "e985e40d-602b-4b64-a35b-2f9cc31f5408",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1e4a7c41-b551-4071-b88a-8db21b598837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d07222-8ed3-4a7f-9055-4ff457f10fc2",
        "cursor": {
          "ref": "3653d795-9892-4b14-9e5d-5b169356950d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "801dd611-ee84-4aa0-8ddc-9adc6540fae7"
        },
        "item": {
          "id": "a4d07222-8ed3-4a7f-9055-4ff457f10fc2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "376a9e0e-e873-48fc-886d-e3c94d2e2426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdcd415-acd0-4d1a-a0f4-5274bffe870a",
        "cursor": {
          "ref": "ce91e8c4-a582-4a4a-b650-7f446ec1cd17",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8ebc3d4a-e529-4268-81c7-1ac5abd98c94"
        },
        "item": {
          "id": "bcdcd415-acd0-4d1a-a0f4-5274bffe870a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "395e252b-1fec-4ff5-8621-3182c90aa502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f55fd5-8e2b-4580-8338-68182f013af4",
        "cursor": {
          "ref": "01cba30f-5a4e-46dc-a036-d0e66bbf4fee",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "12169c8d-0411-4259-bacf-f4c3a137014e"
        },
        "item": {
          "id": "88f55fd5-8e2b-4580-8338-68182f013af4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "553c6d14-4975-4a17-89ec-8e29f82cac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558ade04-8ac0-43a0-b877-09bee3fead5f",
        "cursor": {
          "ref": "7b391e14-2733-4394-8ca8-3ae604d0b0f2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6f807175-c0ee-4f11-9b12-973e3844fb33"
        },
        "item": {
          "id": "558ade04-8ac0-43a0-b877-09bee3fead5f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9987f427-85c2-476e-8d66-1dc13e40e317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea49319-b099-498d-ab75-8fd5f348622f",
        "cursor": {
          "ref": "a0b1bfaa-0518-4fa7-be53-4dc10a2fb7fc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f5ccec8e-3721-4ce1-966c-782a5c95bdb7"
        },
        "item": {
          "id": "7ea49319-b099-498d-ab75-8fd5f348622f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a503f939-93d0-4351-b048-dcb024837d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754e4b73-c916-454b-89a2-a242ef489fe6",
        "cursor": {
          "ref": "b8f91739-5199-4411-95f5-8b5b4cb853fd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c5b87c34-4bd5-49c0-b634-0390dffb68d9"
        },
        "item": {
          "id": "754e4b73-c916-454b-89a2-a242ef489fe6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7f360c47-4c62-402b-92cf-abfda33bcebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d922b3a2-0b13-43f6-83e3-705e342e86eb",
        "cursor": {
          "ref": "f03e5938-217c-4337-a853-5c84a84ae950",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b1d89b26-9692-4dd9-a7a4-311134c38d73"
        },
        "item": {
          "id": "d922b3a2-0b13-43f6-83e3-705e342e86eb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3e7d6d10-b203-4b5d-91a6-09a042f3a422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c7c899-8ea8-4ed1-b2a0-d7c8a094ecde",
        "cursor": {
          "ref": "ad7518b3-9ad6-45bf-92e1-0fa3a79d9441",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "88133e3b-d93e-40e2-b12c-02098a962b48"
        },
        "item": {
          "id": "c1c7c899-8ea8-4ed1-b2a0-d7c8a094ecde",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "92ee19be-47ad-4696-be42-37dacf30af82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a85397-146e-4743-a992-9a8a1b4356dc",
        "cursor": {
          "ref": "f133ec8f-c0f9-49c9-afb3-a0e1d86161ce",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e0ddf796-2a62-4435-899b-542ed89c753e"
        },
        "item": {
          "id": "17a85397-146e-4743-a992-9a8a1b4356dc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "48512767-9fc8-4fc9-9e2c-1aae35744779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b28d85c-217f-451a-ae52-03b481872f0e",
        "cursor": {
          "ref": "a0a7eb43-011b-4220-95e0-5cd0310b52ed",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "925ccf9a-582f-4d74-8ab6-ed6938dfcc54"
        },
        "item": {
          "id": "8b28d85c-217f-451a-ae52-03b481872f0e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "14e1563b-b846-4db1-a220-77c67db35ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458ce15b-b232-4873-aa1b-667d740bdc79",
        "cursor": {
          "ref": "bac52a3e-8795-49ed-b440-f7874c6c05fe",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2e0a8b3-1542-46ee-a1c0-b7492d87a2e6"
        },
        "item": {
          "id": "458ce15b-b232-4873-aa1b-667d740bdc79",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2936d909-eb6e-45e6-a44d-35b12dc7dac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf734e1-b2d7-4121-813a-fb182fd338bb",
        "cursor": {
          "ref": "04055258-e243-4d0c-bf8f-4734e230c0bf",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "54746c79-27c2-4fff-80df-d2af54fc2dfb"
        },
        "item": {
          "id": "aaf734e1-b2d7-4121-813a-fb182fd338bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "04d6e325-8a76-4b2d-90e5-541fa2abe850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af2e62d-d9b9-4871-95d4-776c1e741fe4",
        "cursor": {
          "ref": "5b39c847-8ce0-4b57-b20a-a209bc96523d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b4242454-40a7-46bc-b577-1d6e2ad37e5b"
        },
        "item": {
          "id": "6af2e62d-d9b9-4871-95d4-776c1e741fe4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2e6e3296-701f-4329-9803-0c15838fe378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5681543b-c0d9-4796-9afc-2a4d0f72c206",
        "cursor": {
          "ref": "a5afdd14-b378-4ab0-aadb-511f8dd05e77",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2be8db89-239d-4653-bfd0-2025484451d9"
        },
        "item": {
          "id": "5681543b-c0d9-4796-9afc-2a4d0f72c206",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "012f00e4-d384-4f08-87c0-43866d00195b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb479bec-ef2d-47c2-80d0-578b9f414bef",
        "cursor": {
          "ref": "f3f33123-cf03-4b7f-93ee-f4216659ace7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d75aa09-acc6-4d44-83e9-07efcf573286"
        },
        "item": {
          "id": "fb479bec-ef2d-47c2-80d0-578b9f414bef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20c4c9a2-1c14-4720-8eff-a545d06744ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb48940d-d334-47f8-9690-19621fab3ea2",
        "cursor": {
          "ref": "b129137c-9a25-4dc2-b641-0a1b0faebb35",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "124b3730-f4b5-413d-812a-382d0e7af416"
        },
        "item": {
          "id": "bb48940d-d334-47f8-9690-19621fab3ea2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1c4430b5-7fc1-42d2-8daa-2585ecf96444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ad16a4-5e84-4f00-b743-d30a48aa52a6",
        "cursor": {
          "ref": "7d981713-17fd-41a0-aef6-c618d7652a26",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "66b37a6c-485a-4cac-b521-949ea757f936"
        },
        "item": {
          "id": "90ad16a4-5e84-4f00-b743-d30a48aa52a6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "69549629-1cfc-4d11-8cc5-551d4b5df792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8375a51-4d3b-4950-918b-b2aea17b8432",
        "cursor": {
          "ref": "bdd6fcac-5b07-4c82-8ef3-7148e652d246",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3507d0c8-eb9a-4a3a-a041-40039c1822c0"
        },
        "item": {
          "id": "c8375a51-4d3b-4950-918b-b2aea17b8432",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e80ad0a-3280-4b71-92aa-c4d4d7b7298c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199d900b-8678-48f3-8028-ebd7f388bf9d",
        "cursor": {
          "ref": "1c876b17-96b4-4bfa-b1b8-a3c92aae80c8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ddd572bc-03c3-413c-968b-6d3f3b215af7"
        },
        "item": {
          "id": "199d900b-8678-48f3-8028-ebd7f388bf9d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3105f0cf-57bb-43ff-89ed-130097adf4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dff3476-5c6e-43f6-a8b1-9e014eac4a5f",
        "cursor": {
          "ref": "1cb6dc95-99f0-41f4-9668-0eaee6f0970a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "36bba72a-44b6-4ce6-85d8-edc927c07b10"
        },
        "item": {
          "id": "9dff3476-5c6e-43f6-a8b1-9e014eac4a5f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eabc9850-a94c-4b41-bb85-a5688ffa5b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3adbd69-a00a-4338-b4a1-495de1796f32",
        "cursor": {
          "ref": "302493d5-bdaa-4487-b530-9e647b7259ca",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6aa7b0e9-b190-4f64-aa16-ef2a61cfbf9d"
        },
        "item": {
          "id": "d3adbd69-a00a-4338-b4a1-495de1796f32",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a4dddbfb-5a1a-4b32-9bfa-7dce742ee83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92f56a2-e43f-46dc-aded-83b999827b16",
        "cursor": {
          "ref": "76a78712-6e68-4c2c-aa7f-d3c3fefabfc6",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa7ec0ef-a1cf-470e-a322-1f2ac0ba5cad"
        },
        "item": {
          "id": "b92f56a2-e43f-46dc-aded-83b999827b16",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "954eed67-118b-4bec-9c86-41b969ded189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242309df-a008-4166-8ae6-b88d881c8064",
        "cursor": {
          "ref": "0e18eea7-485e-4caa-8a53-eb720e58851e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "119dbaf9-abdb-4429-a3f5-7da7d855fee6"
        },
        "item": {
          "id": "242309df-a008-4166-8ae6-b88d881c8064",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ea7ad64c-47e8-4114-a8dc-b9fce8f87433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc5dcee-4fcd-44f0-8fef-0258400a071e",
        "cursor": {
          "ref": "01de53d5-6533-4b80-8dc7-b4dbc13bef42",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0c56a74f-c94f-418f-93b7-670619a0e0df"
        },
        "item": {
          "id": "2fc5dcee-4fcd-44f0-8fef-0258400a071e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ee07a986-ad2b-4b56-861c-e1a43df82a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4629c35-f272-4a57-a32e-1a7c579c05a5",
        "cursor": {
          "ref": "76849a62-c8b4-43df-b13f-d45d16df78df",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "109823eb-9adb-4d86-9e3b-367010bf2609"
        },
        "item": {
          "id": "f4629c35-f272-4a57-a32e-1a7c579c05a5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "80b6ecfe-6b49-4221-999b-29040f9537a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3bd4aa-6c2e-48b1-8d3e-a7a5a0370aa7",
        "cursor": {
          "ref": "b8e0caaf-9731-4ce7-9c52-2a0b3e524be2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bfa74eae-15b9-495b-86b4-5218e6332927"
        },
        "item": {
          "id": "fc3bd4aa-6c2e-48b1-8d3e-a7a5a0370aa7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e4856e7c-001d-4b68-bd54-0506bab4b69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e7c9ff-6dda-4a4e-a2b4-5376c92760b1",
        "cursor": {
          "ref": "24e86804-6f60-4aaf-b880-99f2198a67ff",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3dd8d1e1-b54f-448d-b692-381b5a074d1e"
        },
        "item": {
          "id": "f3e7c9ff-6dda-4a4e-a2b4-5376c92760b1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "276d4a40-428d-4f45-9730-80f5105bd35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c0152b-b9a1-4d6b-9d16-686f2de5c62a",
        "cursor": {
          "ref": "d705818b-1f58-46d4-9f67-0d5bcc75a430",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ed69e64f-53bd-4ac4-93e3-4ae301e40fda"
        },
        "item": {
          "id": "71c0152b-b9a1-4d6b-9d16-686f2de5c62a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "200ae47c-82d2-42de-b80a-a0451c94f1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c808c7-230c-46f0-89bd-79bf8b866873",
        "cursor": {
          "ref": "0a77db5c-0ee1-44da-89e5-ad085b1b709b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "41d9fb47-b0ce-4d64-9b42-9020b26dd3f4"
        },
        "item": {
          "id": "d9c808c7-230c-46f0-89bd-79bf8b866873",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5bd69a46-0f67-4fad-a98f-763c67478911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6d7c54-6cae-4bfc-8ead-dd4f0a5daf46",
        "cursor": {
          "ref": "e89d3d83-854b-4925-95e4-5689c99061d3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5271df42-a2e9-4e74-b67b-55dcbcc254a8"
        },
        "item": {
          "id": "4a6d7c54-6cae-4bfc-8ead-dd4f0a5daf46",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2666a842-0c2b-46e8-9e04-e5f1b0c65519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6912e610-f066-4c53-9f05-156a35d2abb8",
        "cursor": {
          "ref": "e50def14-9de0-4bb5-9adf-bc254c86901d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1a10337b-ffc4-436a-9230-47b0cec699a6"
        },
        "item": {
          "id": "6912e610-f066-4c53-9f05-156a35d2abb8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3c359cf7-577e-450f-9a90-34afe0b3a81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2994249-0bea-417f-be35-40e4ee426e20",
        "cursor": {
          "ref": "24d60124-97f3-4aaa-ad5e-8422e299bebf",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ae201b84-ebea-440c-961b-8ed58e3dcd49"
        },
        "item": {
          "id": "b2994249-0bea-417f-be35-40e4ee426e20",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d60b3bda-f9c0-4ec4-924f-34cc607130ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5504907-9d89-45b7-979e-bcf6f185cc51",
        "cursor": {
          "ref": "62e96774-71be-4916-ba9b-a93a4f3c8202",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "56c13365-4ccb-4aef-9e72-ad5764d1c816"
        },
        "item": {
          "id": "e5504907-9d89-45b7-979e-bcf6f185cc51",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5a3bd86e-a9ad-4d6f-99bd-e01729a1e7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60068d9-4c92-4a3a-9c24-4ad9ca3b9775",
        "cursor": {
          "ref": "0d24a469-bf84-42d1-96bf-6b64e02c4eef",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "da724ef9-3a9c-4aef-b43a-f6eceac7acbd"
        },
        "item": {
          "id": "f60068d9-4c92-4a3a-9c24-4ad9ca3b9775",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2f35579a-c975-4c9c-b453-db4525b4df0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44370775-5fe0-49a9-8a44-d420efdfd614",
        "cursor": {
          "ref": "756e48d0-c501-42a4-a4bf-906040971b90",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8fad9dfe-908c-4679-9e46-eba55212e960"
        },
        "item": {
          "id": "44370775-5fe0-49a9-8a44-d420efdfd614",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cf6032f9-6c3f-4257-ad74-229d580e0fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929109a7-68ff-48d7-9e73-28463b537dbc",
        "cursor": {
          "ref": "fd8d5f46-dee9-4268-b291-82993a490873",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c4fdfc5b-2669-46e7-b998-951b6aa0b165"
        },
        "item": {
          "id": "929109a7-68ff-48d7-9e73-28463b537dbc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "19b053ef-61b2-4b57-be89-ff764d63ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc74f52f-ca65-4fec-8b0a-7d6042d23886",
        "cursor": {
          "ref": "9c15569d-0e03-49f9-a20e-a45b6ec697c6",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cdc555e0-1463-41d5-85e9-548b6f72c6e4"
        },
        "item": {
          "id": "fc74f52f-ca65-4fec-8b0a-7d6042d23886",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0952677c-f468-4e8c-9336-667b44d60362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18545985-6d92-4b7f-860d-41ff196f7cd0",
        "cursor": {
          "ref": "c3b1eb0f-5474-48e0-9cf6-fdd6b67cc677",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d019e379-84b1-4665-b0d4-96882d70f3a8"
        },
        "item": {
          "id": "18545985-6d92-4b7f-860d-41ff196f7cd0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e483596b-d576-4aae-9170-e123735e9929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde5f064-01dd-4e6a-8a85-36caef7854cf",
        "cursor": {
          "ref": "a7912c5d-a77b-4f91-b2e4-f1e721234c0d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "08f9afcf-14c4-4edf-b9a0-0a4543af4a63"
        },
        "item": {
          "id": "bde5f064-01dd-4e6a-8a85-36caef7854cf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f9bc742a-197f-4a3e-802e-3a5dcaf00023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93592aa7-41bc-45de-8047-3aa2da64f896",
        "cursor": {
          "ref": "a046de61-7c0f-43eb-be1e-998f90d42b9e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a72a03ee-1e3e-403a-82d2-2d1c95791ec3"
        },
        "item": {
          "id": "93592aa7-41bc-45de-8047-3aa2da64f896",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f72fa35e-7cd0-4c7f-a726-91f48f990592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546e9496-1e72-411a-a33f-2f5612070625",
        "cursor": {
          "ref": "eb040610-cc67-485e-a5d2-011e251d7763",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f92e318f-6e0f-485f-b76a-abc7580bfe9e"
        },
        "item": {
          "id": "546e9496-1e72-411a-a33f-2f5612070625",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "555de0e8-ad58-49ab-9b5e-a45598f9e6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7833b4b-ff51-4c2a-928b-0b1aa599202d",
        "cursor": {
          "ref": "0b1b2116-9255-4d53-bbb0-dfb65b52728c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5d12b3f-9466-46b5-83b3-2e9c7ee5b856"
        },
        "item": {
          "id": "e7833b4b-ff51-4c2a-928b-0b1aa599202d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5642c004-d9d2-41d3-ad6c-28e7a8bfac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48506866-fe98-4408-a332-8dae049347d7",
        "cursor": {
          "ref": "b1731f1c-7de7-4f22-9331-b8077655ce3f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "33154592-ac94-42ef-8fc1-b0016070880f"
        },
        "item": {
          "id": "48506866-fe98-4408-a332-8dae049347d7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a981f02f-6fb5-4917-a5fa-e1ab1f8c383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f05971-7e44-43ff-ad26-558777e6a4d1",
        "cursor": {
          "ref": "51227dc5-7630-4bb3-8cd9-b480e6a575ac",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f7f0d75-03f8-46a2-9f74-6973c1ff34d1"
        },
        "item": {
          "id": "86f05971-7e44-43ff-ad26-558777e6a4d1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7482aa4f-a45b-48d5-aa05-f9865c871379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d821f344-3f01-4470-add3-290abb2bc4b1",
        "cursor": {
          "ref": "7bf2a871-787d-46fb-a74c-3dbb0b20ad47",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6fd40a3a-d6e6-4e45-9a57-20f8411cbae7"
        },
        "item": {
          "id": "d821f344-3f01-4470-add3-290abb2bc4b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7e31dab5-a30d-499a-9d98-26edc315b419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26edbee5-2ced-4c47-8071-e306ad3a933c",
        "cursor": {
          "ref": "3fa8d184-c95e-4386-9e65-4d22ad66f23b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5199ac13-ec9b-41fe-9170-052259cd8557"
        },
        "item": {
          "id": "26edbee5-2ced-4c47-8071-e306ad3a933c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "98a824d6-d3d8-4f7c-bfe9-7836c0c03e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d45fe3-0e00-4d72-b70a-c5acc2669420",
        "cursor": {
          "ref": "dff6646f-6a97-4961-93d4-30e22f81e26a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b06e1185-495a-4730-913c-c04abd4907ae"
        },
        "item": {
          "id": "f3d45fe3-0e00-4d72-b70a-c5acc2669420",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "28e978b8-c4a0-4cca-b6dc-37a29979a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dbc070-6305-4aee-b0f8-83213e04af36",
        "cursor": {
          "ref": "f700f0cc-b5a2-4f84-b843-dafdde77f1df",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6761492c-2eb1-4193-850e-4b9d01922d94"
        },
        "item": {
          "id": "75dbc070-6305-4aee-b0f8-83213e04af36",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "367e1364-dc2f-4021-869d-2317ab150fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4881b9db-8772-4d1d-8ad6-734383ab5830",
        "cursor": {
          "ref": "6930ffbe-ab4a-4f8f-81e3-c6a0c64438c6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "164d88b6-dcb8-46a3-bc63-449735f8252b"
        },
        "item": {
          "id": "4881b9db-8772-4d1d-8ad6-734383ab5830",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d1b656b-aaaa-463a-8ad8-5f82a75b0fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fc5c2d-fd50-45ce-b736-7bb576ad8537",
        "cursor": {
          "ref": "a565bb17-7361-4936-8676-bbbbf2e497ae",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "70a1d70f-0708-4e52-ab1e-4c0a929fcff4"
        },
        "item": {
          "id": "90fc5c2d-fd50-45ce-b736-7bb576ad8537",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e1af3708-2038-4549-8305-06754ab857b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf90c94-3774-4055-826d-f85d4bdb52cb",
        "cursor": {
          "ref": "c5e01793-eddc-48e1-b7ad-db8c8dca7793",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d343db82-99dd-4983-89f7-73d9bbd77654"
        },
        "item": {
          "id": "bdf90c94-3774-4055-826d-f85d4bdb52cb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cf64cf54-2069-41fb-8a88-4fbf490396a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87f3d51-f2cc-4941-bb30-0c6bfa8dca07",
        "cursor": {
          "ref": "2b2431dc-1a2c-4a06-8599-da6b54f0846e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "41d360ca-f354-4e31-afb5-bc366f54adab"
        },
        "item": {
          "id": "c87f3d51-f2cc-4941-bb30-0c6bfa8dca07",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "eea474c0-811d-493b-a1b8-9ee6722a87da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdcb453-d866-46c4-abae-292fd22bef0f",
        "cursor": {
          "ref": "7cc0c92d-4536-4501-82cc-4de60320449e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d4cbd3b0-6ff7-4217-82af-16da98078397"
        },
        "item": {
          "id": "dbdcb453-d866-46c4-abae-292fd22bef0f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "99bb402f-a7aa-49cc-9878-1abf4d485f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a7e0cb-dfe6-479d-9049-2ddedc27bf45",
        "cursor": {
          "ref": "2d9cd616-99b2-4806-9a00-c866671acf48",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4a06a5ff-2a3a-428b-b601-38c0b2de8463"
        },
        "item": {
          "id": "b2a7e0cb-dfe6-479d-9049-2ddedc27bf45",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8d3497db-cdd4-478e-9d50-2d3d89df3ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb54d72-76be-43e7-af61-207285a631d1",
        "cursor": {
          "ref": "f627c915-f5aa-4587-9b59-c4c2fba69629",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6de1a306-be36-4f4d-8ea4-6fc5bdd3387b"
        },
        "item": {
          "id": "7fb54d72-76be-43e7-af61-207285a631d1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bfd7c7ae-2e72-4e88-9243-d4a53a52ba1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f388b35-fd9f-46ce-aaa8-d1d670c60b07",
        "cursor": {
          "ref": "b4bb86c2-312d-4b01-859d-b1e9fc55feb1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "750428ca-32aa-46d6-bcb7-349a22639273"
        },
        "item": {
          "id": "0f388b35-fd9f-46ce-aaa8-d1d670c60b07",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e70cbcc3-74f9-4eb7-8ee8-2ba03d1428c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d535d11-a6cd-4abf-87f4-0d1104a5b3c2",
        "cursor": {
          "ref": "1476afd7-4788-4d6c-beb1-d9d6e1c14d3c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fbbd7c22-271f-476d-a806-d2b0123db578"
        },
        "item": {
          "id": "0d535d11-a6cd-4abf-87f4-0d1104a5b3c2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9eb07302-bb2a-42be-bd74-0338a457b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2c3f18-2c49-45d0-9ca4-644c29b25b4d",
        "cursor": {
          "ref": "981c8085-e767-47ba-96de-61eee18fd590",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d82c6f29-b6e3-4559-89bf-ec0cc8a529db"
        },
        "item": {
          "id": "7a2c3f18-2c49-45d0-9ca4-644c29b25b4d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a7612736-5e19-47a9-9645-3022eb91b0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb8ddc5-8846-4d2d-8de2-0d26e53d8813",
        "cursor": {
          "ref": "544684a0-bc2d-46ac-bf1d-8dcc46c49ae9",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "447c6e60-3b73-4915-a8a2-a10cd8314311"
        },
        "item": {
          "id": "ccb8ddc5-8846-4d2d-8de2-0d26e53d8813",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "68cc2086-db2f-440a-8601-239d21be0c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48c886d-3042-46f7-ab94-72c0cb13e432",
        "cursor": {
          "ref": "f976cf5a-a0ef-4ecc-b604-2d0c6aeea1ac",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e4f51dbc-f38f-4925-b0e7-249301a85ca4"
        },
        "item": {
          "id": "d48c886d-3042-46f7-ab94-72c0cb13e432",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9db99003-62bc-41d2-9f16-8397e32d1b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee618a55-f7b4-44a5-9c6d-b91563fe477b",
        "cursor": {
          "ref": "ef2017d7-cf5c-4b3f-b755-d39292dd7fa6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f1bddfd3-cd05-4b8c-a0a7-231af9020f47"
        },
        "item": {
          "id": "ee618a55-f7b4-44a5-9c6d-b91563fe477b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0ca6ad84-1e86-49d4-83fb-e715fc942a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ac2a80-7b30-4ca0-b95b-8ac1b204dfc7",
        "cursor": {
          "ref": "996423a6-186c-44dd-8ce9-7feec52f53a7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "db3a44fd-7ee1-4e3d-9a3c-fa7569b98c7c"
        },
        "item": {
          "id": "26ac2a80-7b30-4ca0-b95b-8ac1b204dfc7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d6ede1ab-5eb0-4ef0-b155-a5ef5c781331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0015856d-7942-4655-8c71-34fd1d611570",
        "cursor": {
          "ref": "f4d6702a-5063-4c7f-8842-e73f4e37ccec",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d8255870-58f1-45ef-b49a-b53b8562fd2a"
        },
        "item": {
          "id": "0015856d-7942-4655-8c71-34fd1d611570",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "114d34d2-c236-4ee4-a089-2ac957113ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda8b46-13e6-4526-b986-ff37b1026d79",
        "cursor": {
          "ref": "29838b80-7d99-4e62-8528-9b7a936361f3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "df69e2db-9ccf-4136-921b-6f7c53fdd767"
        },
        "item": {
          "id": "ccda8b46-13e6-4526-b986-ff37b1026d79",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d18b4ff0-4db6-4833-9f18-eb1fb1de6c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395dc34e-78c8-45b5-8a60-794d7612f242",
        "cursor": {
          "ref": "76c9da5f-fa20-4ec5-bc0f-dd9ed8672d3e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d4d2e626-0564-449d-bbf5-e321735659f6"
        },
        "item": {
          "id": "395dc34e-78c8-45b5-8a60-794d7612f242",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5c11a654-2f87-4e1c-80e0-66cbf303ddef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc661fe0-e51d-4050-bfde-20f7e929b316",
        "cursor": {
          "ref": "3fa28732-8495-4d44-8695-ee3a0841c7f9",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fcbc9929-b5a9-4419-9852-8b4d3008038e"
        },
        "item": {
          "id": "bc661fe0-e51d-4050-bfde-20f7e929b316",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a32dddfe-7bb0-405c-8cec-82da6d19342f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6747f5-6083-4d58-a17c-e377d792e2d0",
        "cursor": {
          "ref": "2b6e6718-2be9-4b48-be4e-9fe317e83735",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0d57803e-d118-4e57-90f6-649f161fcd20"
        },
        "item": {
          "id": "aa6747f5-6083-4d58-a17c-e377d792e2d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "57a15d69-50a8-4463-b29e-e1b09b80fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42667894-c095-4f20-b663-1ba4e0cd258f",
        "cursor": {
          "ref": "06e48777-6963-4db0-91de-9a666d30ae5e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d12699e1-246b-42f6-a4a9-03bdd93cc832"
        },
        "item": {
          "id": "42667894-c095-4f20-b663-1ba4e0cd258f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fc9e4ea9-4d9f-4a2b-802c-90d3f737f167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e362ca0d-820c-4ec2-8fd0-ac20efa1ccd5",
        "cursor": {
          "ref": "2ed5cb2e-ee11-4a77-a318-d41531ead6f7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c45a92e8-f6cc-48de-bdcf-0f00dc81656a"
        },
        "item": {
          "id": "e362ca0d-820c-4ec2-8fd0-ac20efa1ccd5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "50535fd8-a842-43da-a763-2a03a29f9a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40153cb-86a6-4d1f-9a39-9836822bab5b",
        "cursor": {
          "ref": "e3f1fa39-04a4-4c0e-bda2-df75ff0f7fa8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4c78bb17-ad0d-4b0c-9c44-7a321603d078"
        },
        "item": {
          "id": "d40153cb-86a6-4d1f-9a39-9836822bab5b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "84b130ee-dfee-4560-822a-4fcb69ec383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f63a84-1f9b-4d5c-9482-35d40783d71c",
        "cursor": {
          "ref": "bbc3cf7d-bfbe-4da9-adf4-09b4c07e7139",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c07cec03-aae2-42a0-98ec-2bcac350b55b"
        },
        "item": {
          "id": "a7f63a84-1f9b-4d5c-9482-35d40783d71c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "71dfbabb-247f-4431-9ad6-330a57dcca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2433d031-ef2e-4245-bb45-eb2bebc896d0",
        "cursor": {
          "ref": "6eb70f8a-5a1b-40b8-b60f-812266becf08",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "498043a7-26c1-4bfa-a326-597ce76e0391"
        },
        "item": {
          "id": "2433d031-ef2e-4245-bb45-eb2bebc896d0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8b8efd05-da0d-4783-9008-7e231cfec2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0d55d4-3f99-4e3d-b21f-da6e2b210352",
        "cursor": {
          "ref": "e71b352a-8c1c-4456-accd-62fa198d334b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "201df85b-cacb-4b25-898d-cbc39f59f110"
        },
        "item": {
          "id": "3a0d55d4-3f99-4e3d-b21f-da6e2b210352",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5bf9145b-351f-424f-b0ba-299d1f0b640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe04624-aeb0-431b-a83e-5b1e7cbe0928",
        "cursor": {
          "ref": "e7bdcf63-c0e7-4ae0-b8e8-feddc919e71d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6389b818-0520-4add-907c-d25d1f9d39ad"
        },
        "item": {
          "id": "4fe04624-aeb0-431b-a83e-5b1e7cbe0928",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f9e4083-17d6-4794-8a01-68c7e69a1eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4993af08-5ce2-4869-b02f-ab1a51bf37d6",
        "cursor": {
          "ref": "d8e8bb9d-e36b-43ad-bca5-4c374813fc09",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f1706906-ad62-417f-9da6-67f36a082e4f"
        },
        "item": {
          "id": "4993af08-5ce2-4869-b02f-ab1a51bf37d6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "51ac7b18-a44a-4abe-bc47-c38e281f6ec0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a8f225-181d-4fd3-9446-c13853a2be52",
        "cursor": {
          "ref": "76e338c0-b1b0-4229-95ea-c2178276d1c8",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0b2ae040-2200-41bf-b86e-57955b486487"
        },
        "item": {
          "id": "c1a8f225-181d-4fd3-9446-c13853a2be52",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "076cbdb6-2fb6-4d13-b911-b6eb566ed1ab",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a6330f-aebd-440e-bb5f-15f51931de35",
        "cursor": {
          "ref": "bb76cfd2-e4a9-4f81-97fe-8ce70fcc9958",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ffb508a8-9b09-4d27-9127-c0347d7eb5fd"
        },
        "item": {
          "id": "82a6330f-aebd-440e-bb5f-15f51931de35",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aac78849-389f-4b2e-b68a-bcb6f071a0f2",
          "status": "OK",
          "code": 200,
          "responseTime": 1345,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bae99f-ea35-4384-9388-4df84ff6efc8",
        "cursor": {
          "ref": "1b1e916e-52d4-45cf-9508-3d6a3f5d2404",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ebb3cab4-0295-49bf-bf33-54047005e0de"
        },
        "item": {
          "id": "e2bae99f-ea35-4384-9388-4df84ff6efc8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d9fa675f-9fd1-44cd-a54e-cca01c79fea7",
          "status": "OK",
          "code": 200,
          "responseTime": 1281,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a0c09c-130d-44bb-a5e4-8e164efee10f",
        "cursor": {
          "ref": "674df6aa-f5d7-41cc-8e15-48bdfb6eaf34",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c7b55547-ee74-447b-96eb-94f65f9e3081"
        },
        "item": {
          "id": "05a0c09c-130d-44bb-a5e4-8e164efee10f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e2a24c1-0242-4c10-ae5b-8e7c99b727c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a0c09c-130d-44bb-a5e4-8e164efee10f",
        "cursor": {
          "ref": "674df6aa-f5d7-41cc-8e15-48bdfb6eaf34",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c7b55547-ee74-447b-96eb-94f65f9e3081"
        },
        "item": {
          "id": "05a0c09c-130d-44bb-a5e4-8e164efee10f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e2a24c1-0242-4c10-ae5b-8e7c99b727c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d102db6f-4c60-475a-bae0-8181a18ff4e2",
        "cursor": {
          "ref": "aadabafe-09f0-4919-a9e8-4a854a14909f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2aeb6d24-b895-4ce4-9ae3-44e87510ee57"
        },
        "item": {
          "id": "d102db6f-4c60-475a-bae0-8181a18ff4e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6c21e1d7-2ba0-41bb-a099-847434064820",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706d86c5-e3d1-40cb-8530-f072c5c53f3d",
        "cursor": {
          "ref": "661cee10-5247-41e5-bc53-0c493854b945",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "98bfb7d2-4f59-4bc7-8871-577e921cca08"
        },
        "item": {
          "id": "706d86c5-e3d1-40cb-8530-f072c5c53f3d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8a360024-6bbc-4684-ab94-8c9f9609b62f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}