{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0dd82348-2ce3-4e09-8b77-93d4231a1d91",
        "name": "Clear Cache",
        "item": [
          {
            "id": "12515841-a83d-499c-aa47-5dd59754f89c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b87e9441-4aed-434c-8495-fc0218d84824",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4b7a98ff-827d-4abd-b4a8-606cc5ea64d5"
                }
              }
            ]
          },
          {
            "id": "53437c50-1e11-4a36-a7a8-417aacd17d9b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73c2c53e-fe3c-412d-a46c-a2452be5b58e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "50de1341-9bd1-437a-add3-e5678dbd2aab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b838b08-dd3d-414d-9d3d-f46b4b4dd3b9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5fc695ce-9b9c-4271-8b59-d52e1205c2c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5705c0e3-ff63-4354-b984-0c98830a18d5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6af19899-b84b-42b4-804b-24a35e64b867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67199ea0-b185-4581-a24d-6871983fee93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2365b6a-8e2f-4f9b-8f10-8b54745cfa09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f65ac8f-88f8-486e-ab60-6dd8ed60765d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d131f27-0ddb-4485-b459-8152a3f3f57f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "feee7449-e4a6-413b-bd57-8eef53255349"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0e48596-01f2-4528-8b8c-539334a7c497",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86228664-f149-4264-bd1a-392e3053fcb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "275499f2-5b9d-4668-902e-919b755092d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae1c8666-94bb-4d0a-a7a6-cae88dcdcb0a"
            }
          }
        ]
      },
      {
        "id": "39d0339e-1d46-41f8-8b6c-47ac1d4dab51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b19e553-9256-4fa1-a4f6-da470b8a18ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "251668de-3147-4f2f-8301-d553fc46059f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9eeb5f8a-a778-4eff-a179-48660d28965d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb44afd8-983d-4e02-8d41-e0bd065b9f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44fd7ef4-6570-4cb0-8850-c118a7c95954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b8ab98-4642-40a6-92c3-3731d5671264",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d87e77-aac2-46eb-a171-fc1ddd711e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4ab36f5-def0-4476-8dc9-b8c7262dd36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1ada46-bfb1-4f5f-8ff5-860d1c686297",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e60ec-587c-42a9-b6b4-7d2bebff272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57ef2771-99b2-48e6-a05a-76076520b2d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f411a79-e613-4db2-9b3a-b9b27f33d0d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f01f9580-5aa7-4bbf-967b-0218e5dc96e1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8775203-c7a7-4a5e-8502-bc48b5156c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "426c5da6-3dae-4ebf-9208-bfbae3c064e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804f625c-2afd-4543-81d8-4de4bee062ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66187c32-15ee-4aa3-bcb1-7d6a5026ded5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "73150008-7da5-472f-a636-57e712a361e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9471d95f-db6a-4b86-afc6-8ff34eace0e1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8407973d-a879-417b-8d80-66af940cd764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7724cd50-1e40-4e00-9f67-0a6d533c8cc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11b4b1fc-d3cd-46d9-9f61-51f49c3969e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "53626179-401b-49e8-a676-80ff86507fdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50b69d69-e815-4a51-b400-69c639fe3694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dadb3456-374b-4db8-a0c2-697eed69b6b8"
            }
          }
        ]
      },
      {
        "id": "ab829a09-e8ff-4893-b71e-d82f7658dbf4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "01c906b2-9369-4a99-816c-9772e78afc47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ff6c72d-7c17-473c-b5d0-2e20318f5c31",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "484e7d21-b9d4-43f4-8f15-f0b2e07aa09a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c01800-a63f-490d-b69c-57aa45f11fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514a88e1-978f-4220-9b4a-70a25742964b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492ed6cd-e2c6-43de-905b-d10a7c4a02f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eac35be-3c1e-470b-96e8-00a133622928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630b9d32-ae62-410c-a6e7-8b4d9ff92507",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55b2099-a0ff-475e-bd8c-299cf7ac6007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b5d8df-9e60-493f-8b81-d7b7123eb5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df35a70c-bdb1-4a7f-8a71-c38319cef624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85e6c249-ad86-4a45-99c3-1820a8d2ca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d7563f-6c28-41ce-a72b-0ae43b47eb1b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408ec846-b3c8-4786-add9-c6aa3e3ff366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2349265-5f2d-41b8-a4da-05c3dcd1070d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472ed712-1ec7-4ca0-9a5c-95104a9cd73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98b3026f-977b-4bec-80df-0c3792049c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb426e8-e82f-4a71-9666-03e356dc48b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844aabbf-3060-44ad-850a-d0460af1c1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961d872c-7150-4ed7-8cd2-0eec989e09f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb02d6b7-7638-4ed2-a80c-a2540be37e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1813846-1936-4d61-9771-40de3506f8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8277bf-8eed-4e9c-b3cf-4638e8a83dba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb264fb-2342-4564-be07-247644d0c0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de39e34-72c4-41fa-a4ac-9c6486f1e891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6be845-672c-4515-9537-b062113f8d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd76ebad-2ad7-4d65-8050-fb45d6b52806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359ed109-27b7-445e-8162-f5ac62c453bb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256af4ed-1d13-4080-b105-d256ff996e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2779ea2e-f2fa-453a-bd23-15cfe52ecfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e178c-94a4-4eba-a3b6-4e33ef29b67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6435804-058c-4871-a668-c954332d5763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d642bd-f79f-4d27-9cd7-2011c0c2a639",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffba38f-b766-4af7-9ae6-a23272f86bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca3420f-95f7-4c75-80c5-617d763506b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8cbd99-a5e7-4ba7-bd3e-28aeb6b0e763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3863362-8cf8-4e4d-a7e9-de2af3b83585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578cd60c-a7d6-44b6-b06f-a7c6c8c48764",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f8c619-972e-4a18-b945-bb34ee518299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308b599e-0573-49b4-9013-99d9ad18f2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3192959-d5be-45f5-bb31-22cbe87cd731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d3bb150-a437-48ba-b1ee-38167e5fa3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4c3393-c7f1-4bed-8a11-d82fbe932878",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f71cce-363c-4331-9148-710f52b1749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04865854-dc88-42c0-8531-b8df061e8f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e669ce09-b0df-4f3b-aa72-cf65b61906c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3c4c9d-308d-4d7a-a36a-fdb43b2eea6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9914a585-c5ba-4cfa-a0fd-40c63c15ca05",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da407f1f-5e92-4639-936b-cbb3e2f6c17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaff8b18-b6e0-41c9-85af-0bdd3995b613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b0b4f5-235e-4c5c-be08-139b16aed926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4c5d1cc-37b0-44ba-bbf7-433747e1ac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3871b0-8d91-4a80-9cd4-fee7bbeed94d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dc1e2f-1332-4f6a-8299-545cd3a43350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbab1a52-0f09-4486-b896-0762166c5851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4700a09c-10b8-4360-9fb9-a902d6f8fcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8f706b8-d030-45af-9b5a-7f845f9f81b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3171746d-b999-467d-90d7-59f106dd5841",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1acd5-eb4d-436c-b954-eb27e175f85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721054d4-e6f4-4efc-b984-3c17904bc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07864012-34fe-4691-a0f8-34060caeafeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d1d670-d373-46cd-a07c-4d090701fbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbb16a4-9171-4fd6-8954-a5ffe35c6db0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230fe3f7-4149-44cc-aec7-5c1365957617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dadcd9-9521-4780-8c88-82063ea79e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb00c96-1f20-4cb0-aae1-138b96ce3f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f47b999-01dc-45bd-a600-d0d3741d1349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3704d36-bfa4-4a8c-aca3-8d59fa63a5e4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86c1dce-8ef1-4341-9bcb-00fcd9f24241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219426f9-4481-49a2-b6e2-bb62736c4e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ca3d34-0e69-4501-a712-7f85aca41ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5723eda-4e55-4630-88e4-9e89154f5dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2790e458-aaa1-4f78-8ef9-ea2cec6ee1cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ea58b5-9401-4d13-a790-98c9b287c236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c25da7c-6c24-4a3c-be91-523a6eec674a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fbefdf-d708-4367-8427-17be3879e49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a50e6ca2-6aa3-4994-a203-d8415158c2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9a85f9-3180-4377-a435-6f8648556907",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3403414-01f3-42a2-ace6-6758570eb664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497da49e-606a-487d-9d3e-3d5201fa3500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2352ea9-2ab1-4a26-87f2-a72c9d511ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35699af-ed38-426e-8607-db9ced53352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe3c741-6c3b-4e0a-b7b8-9462a9db7cb5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde1d011-f22f-4faf-b14d-956fe932314b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8182d0-e294-49a0-8d21-2cd9a0a3e74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5be6b4-deaa-4a2f-b50b-3f6911cd934d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98813fda-b5af-4455-a585-0f75c9df1ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d339628-836f-4b1c-a4a8-14078a5d8130",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11693f65-cd10-49fd-9ab6-6a1f4e65b81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cfb677-e895-448c-b3b5-7b3bd4929741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83a93ce-9fd8-45d9-94cd-115c8ab7c20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "742c82c9-752d-4664-8a54-c2122b77fc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01500d3-35a5-44ef-a699-a0df5a82d89f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f72d864-3449-41d5-8d51-84bb1ed36e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b343f4-f1f0-4328-91a1-78be17d9f90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c9ea47-262e-4fa1-9ca8-5f089cdb36f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72de1785-d71f-481e-9516-d7f707d0060c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ce80de-dcb6-425a-9545-91c448b3d72c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b42e1ff-8749-4036-87f1-5d2f080d8836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e7569e-bb48-4e1f-b56a-abe3c10f6a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38428ed8-0259-4264-8376-d751d670338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2757c7-81da-4bc7-b4a2-344481d38977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f657543-dd39-413c-b29e-bfe0dd577b66",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c612569-1a62-4b88-92fe-5d22a8e352b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60812f3c-1bac-4845-a11f-79a71de11865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ee7376-9f5a-4abc-b2d3-ebcac7e47f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff34f11-e369-41c8-9cce-6bd8f53a39d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3ab8d6-ddf9-4a19-bc93-e0ca0b036eb9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cd0982-77d8-45ff-b780-65f1cb7c5ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7450f6c-c4ca-433e-b163-f2ad343aa1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28decb47-8445-4d6e-9f99-7357f1e7f2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d33e2720-b67c-4e8a-91cc-4234d31f5fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19454787-acde-40dc-a1a5-6ced01f2be7d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9ce954-342e-4929-8b48-87b67c914a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d364733b-5105-43cf-93f1-994c73577dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e350e285-9f77-43c1-a917-54dca010d15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa1c5f5-2b74-4eca-86f7-39a8bdcf0de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3084f21-867d-4b01-bd26-f980189edac3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995973ce-b599-48a2-b3fc-b8d92cf938a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffe1f1f-b541-4879-b732-4a4d8dca6b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00f8fce-f4d4-471d-8398-5eff0f73cf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd2d005-7e0e-4f20-adef-dd62ad4a74b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5838e8-f22e-48a5-b5ca-e5c21e8dbb3c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38db9bd9-0bf1-48bd-a2ad-f1bf2107b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bae0e20-7202-4d0c-9280-ae46dac4d900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b07d3db-0501-47b6-9e37-ef36e45c6117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d853bb0-2e2c-418f-9a85-9b1c022a328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16eeb62-6884-4ad2-9df6-1820e34232ef",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ec6d62-8dec-45c6-a546-c8239afdb4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71e62b2-aff0-426c-a770-062d94337953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befb4cb5-ebdf-4599-ab8a-cab9a7ad01f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64966226-466b-4bca-bcd3-4dca827c076d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58f5797-6872-4dbe-a7f7-bfdccb86ce07",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0051eb45-2c81-413f-8487-2ecbff0cf1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0811e8-8cf8-4d2f-a2ba-ccaf95a53257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4962f8cf-cd35-4944-ae2d-7899ef85e5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ddfb0d-f350-469a-bc2a-e75e4287402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1699092f-0a39-4e21-8171-e8ca8efefa30",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd15ee5-7d99-4a20-9a6d-722613862348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374ece6e-d2a0-4197-89f3-a11fd59c1952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a75659-1747-4ba7-82d0-433da0891b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f231d0b-f272-455b-a384-25effa92f2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f2a8fe-fd6e-43a6-8713-a007efe817c4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686b84e0-2b0a-4571-9c6d-a12a601a0689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc5d381-29f3-4047-9c8f-ecf07a32630a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e111884-75ab-4f90-8f84-02cd3a38165b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62909889-7ea4-4459-a67a-3da2d57706cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21762008-5023-4ac1-b23d-9bbcef58b0a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cee5e5-1e44-4b59-8d32-382e5fe2c2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9e01ef-6502-4a2a-96e3-81c376ba7623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d657052-d39f-4c0f-87e4-3f288a9ac08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a20b29-42e2-4270-8c10-369676d9754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d85a2ae-6b33-4a88-a6f3-2ce774b53232",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e05980e-5660-453d-9541-f7b75160d6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e5a763-fa83-4fa5-af5c-be93f0c436be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b56b632-0141-47f7-af94-14e2806810e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba55642-5938-4378-ad0a-2c251ee205cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca195c3-572e-4f81-8836-7939529a8880",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46154a17-4546-4835-94f9-75b97e252d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def83c00-46f1-4f21-818a-ca75d4f3c780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89f8ff0-f960-4a70-8182-7eb5a0beb400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e66d110f-c5e6-4255-acbc-3ebcb13b1ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f43368-df78-4b10-81d0-bf4b81b6a1fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae29c3-9ea7-4979-86b3-c750ec900e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcbe617-a120-4376-a3e2-23440c453c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8734d5c2-5a86-4df5-b5c8-f2f97d1302e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da6cc9e-cd1d-4a52-8133-bdcd0377cbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9200cf9f-2544-4b53-9d41-46966b6a0583",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dce202-2ef4-46a8-83d7-49ecbbc5d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b18c24-3bf5-4f91-9f15-3c57b86219df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7281f4-0eb6-4ca8-858f-0bf2eba351e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09d3afa-b8a2-42a5-8919-c6cf3ce16721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0ea066-a67b-4348-a33a-54c9f076bf12",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637fbebc-c0b6-4538-9454-30cdd7b0e983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d526bb6-6c51-4873-94b0-0d23cc76b840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecb1782-a8db-4aa9-952d-d0fa18cd2e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "34848391-d7e8-42d0-8639-185494caf5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d195ae73-5c05-40d7-b361-16235e2d245f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c54c91-be40-4e18-8ce1-2be96100cd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70961914-7147-487e-a84b-59734d5b13e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c877b86-d862-43dc-900c-40a29829c445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a3283c-f042-41dc-a4bd-b13acdfc8239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286855b6-81aa-4203-af7f-5b81a822c4ea",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cf3e93-8580-47be-902a-54806f01ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6933f3ee-b0b8-4cb4-8436-b8957a61cdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea20cb37-7578-4d85-a412-2664c4a115c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e30970-eeb0-41c1-8d8f-e3c1d938b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf0ff79-0656-4293-887b-988efd2c6e3b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214cc2c2-6730-4835-ac58-dc321e2827bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8becbefe-47e5-45ef-8e6f-582bcd88fea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072c0db3-bc7d-49e5-b58c-abe697a29992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68285595-4800-4fdb-8921-48e6b9866e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09d41de-4e48-4e76-94fe-a42a97ff14de",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98adda8-5f0f-4994-aaba-c003512cdc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ac0f84-0c0f-46e1-809b-ecd84ac8530e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd82e7a9-3852-4365-a5f9-8701fe6dbc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6028c9ee-13c1-4545-97d0-d521e0feacd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1627bb0c-41b5-4262-a347-1c4f8dd4fef2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1018d3bf-8633-43f0-87c5-354b4844aded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08627fa5-c842-4cfb-a929-3aea9448a126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cba669-fc11-4dab-afdc-82ff44527918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0348877-f7ee-4722-b537-441629de2d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34493dcd-9214-4009-9ac5-69c955d0c489",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843960e6-3e3a-4ed4-b549-e454ba5d8218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9204e0-bfbf-45b2-b0f4-438bed331611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955dd080-7a65-48c1-9778-4634eb00da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c743c23-3380-4270-864c-040bf0f3ef03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade73fb-541f-4121-81d6-a59674be92b9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ab80f5-8250-4727-8a29-8f94c8f9fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d22d90-70dc-4af5-8956-9905e53713fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb583e79-8ea0-488d-b669-a077dbe428bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3e29782b-1cac-43e0-885f-7d69b2b6d5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceea63dd-db4f-45e6-a5e0-f07afe6b5082",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f81425-b8dd-414d-a3df-db12563d9d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95511f84-1554-4640-9a93-c9a51f9c0664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bebf25-83e8-460a-b41f-459e9a7238dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "19a69a3e-af2b-4db4-bf13-8955ea487520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94634a41-44b1-4a82-91c6-52cf8819bd8b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6512da99-08aa-4331-ac1d-47c168bb6682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13274535-c694-4667-9f64-a5b98608bcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f69c34-7c6f-42d8-849f-a53a861a969b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "36255e68-c1b9-49d1-97d9-a0b443bc917b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf623da5-9a0b-4fcd-904e-975e5e073424",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf2f91a-3f9c-4629-8553-f2e853eb3c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb10bfc-0f78-43f9-a429-34848d8e9f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899a2f04-5561-43df-a0b0-c4e004cb06bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2521b59-54dc-4e1c-95a6-c534d21a17e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929c7ac0-a698-44fd-9e9c-291ff2ee3c44",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b259560-c626-431e-b7a8-336cbc8e936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f3b2bf-8d40-417d-9139-de0f986185cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6c44da-77ab-410d-be7d-a3bfb373ce17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc75c99-88e7-487a-89fe-df34015d1e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c5d934-5666-402a-a09d-eb5d67a846b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a4e7f9-2fa1-474a-bed0-fece0bd5108b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce7d213-febb-4804-8805-afef8e996211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e871b28e-5c09-4c64-ab4b-b7aff9f124ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07f93cbf-9270-49dd-be0a-3839ba968d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e29b92-1bdc-4dd7-840c-2acee608fad7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8880b31-2358-41f1-92e1-d79352963cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5e3ce8-c3ad-4e98-9792-536c6e2ab4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179d76a-5cc4-4ed6-bf22-f10a5554a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc80675-9e98-4552-b9e5-8972635c01fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb21653-9fcb-4b68-8717-03237fa364c9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ea7479-6ea3-4a27-9d05-147c4c62797c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c7b5e2-c96e-44ff-8103-5884171fc9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d3a461-1ac7-413b-a2ea-55f8e9518282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f93213-61be-437b-96e1-8129c1d14e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269da9cb-00bd-41ad-889c-b2305e089f7d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61211596-36c4-4026-8d33-5808af205e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11afe54b-b6b9-4058-a2ef-f8759eb65719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1b1d15-8b26-42fd-90c1-e5034b0d0138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42f066c1-abfb-40e2-a4c6-c58efac366b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64ecd00-b7d4-427f-aee0-3a456e6d6ef6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fa5ba0-91b7-4f3a-ab22-64f1fe3988d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be91a85-a463-4d71-b9c5-bbb29f9a6b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abec58c-6833-41f2-ab8b-49814a6c0fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ff7cb7-e252-4b69-8c04-53dd4095b81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ce101a-319a-42f4-bd15-d7d1881c6c0a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdf2ca-63b4-4cc1-87b7-31ee34e18ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3012e78-d215-47c4-8c34-eb125fe73b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c54130-e361-4074-8e1b-71f356fe1d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41617c3e-9d16-4758-97a2-9e0876c96045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482bdce3-e156-4885-ab10-c0cddc691779",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b89b825-62f6-41bb-a6a2-bf50149f5796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956ee139-2c2f-472f-abbe-eff686ee5c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eefed54-ba2d-4d12-8f31-c32814056b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6489a30-f82a-4c24-a2af-1b8b05bc1aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc27d2c-ba56-4267-8e02-c676a765856a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cf663-c465-4795-9ef0-ce1204d0fe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4d577a-e880-4960-8910-0c97b20fb60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce9c7d8-78dd-444d-b2f3-b6a100c8e2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a52d2a-7bd0-4a3f-b9d8-4978347664a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abade55-b24d-4ccc-8579-559d879712ee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a669cbb7-7460-4a86-b3ce-e0d8cf7025a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8856363-cbe5-41e0-8496-17827ce20b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed776e7f-3c1d-495d-8ee0-2feafc58ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19d2026c-d65c-4878-a9b0-a049c802db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc066d2-3269-443b-87ac-6bfe92cccd09",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a3c19a-2339-4a58-9f06-1ab49c88d999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30252589-37c8-4ba2-9e31-748528aecf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f45d1c-b4b5-4cc8-9c53-8a9814720df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae9a5d5-5420-40b4-93a0-28bf8c6142c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7904629a-a84b-442b-abb0-6a0ebd0af128",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dd2891-2a11-424a-acdc-6ab66f65d6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec84e90-a30d-4fa0-a685-f669098cf2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4acc97-72a5-4369-a75e-7e49a4e0252f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fec9d4d4-64d0-4edd-88b4-86dec3f25f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df63860-f112-4675-812f-cf7a4eb80f17",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dbd411-1a9c-4378-8224-1cabc481f2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f06a8-b7f2-4b9a-9a7d-df9bb0c72210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febeb908-3476-4db6-8add-3131ae0ed442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29cc3495-a93f-41ac-ad2e-6897a67a63e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6d6a2e-1f12-4cee-a08a-7c8afbc1a058",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473fb2c0-9a39-40c1-847d-35050be82b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2946274e-abbc-4abf-840c-4eb92219dbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12c8f73-ffd5-4dbb-abfa-043b30c5ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9b71fd-a91f-43c4-bf04-3feeceaafe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30b2029-9f98-42a3-974f-69784921038b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428fdabf-26c6-419f-a2e1-d10494863160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e59dc89-8088-48a2-aed8-b17eb3bc5f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de75c0df-7f69-488e-8679-dbe9ccfa28e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f725770b-9797-4462-af20-fc5d6548547e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0532bec1-11f0-4739-8512-13ba2d5c2127",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02d9a11-48ee-4a22-9de3-2145ad0b53da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8f85b8-e12b-455e-90be-a2124d2394f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff182ed4-71c6-48fb-8ef9-a9d9c7e5d620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c432cf75-1b54-432a-a07e-41cc8925b5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3918ad33-8990-4785-8858-5371b5366f7e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c704348d-1d17-4cbc-bb98-f4d91315d752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d23265-be44-4311-aced-fbab466c622c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f58b8e3-5a3a-4ffd-bba4-7a60f09e982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "31db853c-5d71-4c41-88b9-0863f6dd08c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c46516-35a5-4972-9a42-b10b6da8031d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b958d0-130d-47e9-870f-a15a7eb20941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e766f3-fd1e-4c68-ad0d-df524f4856ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4acbcac-d453-407d-b6e2-7e3d0b35bce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b317aa4f-d435-4239-9ee1-16f0bb3892a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fbe312-d034-4177-9bcd-a07042ed4e4d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117b5ac4-48e5-45fd-b977-f7bb7494956c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfea05ca-c4c2-450c-a33c-1ccf41ed3fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63148754-7849-471c-b168-96eb97d1d775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba02c3f6-09f5-4c22-b859-82d9c17e4770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4793b7c-6811-4f0f-9e35-15b2227727dc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12803dfc-b1ad-4ab9-b286-fe1f2e3d112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db656722-0fa2-43c2-8cbe-a31bd1576414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068937c2-5585-4ff5-aa3e-a1e75f0f979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3216fe72-1681-461e-99ab-9347a99de370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72d4cbf-3f25-43ef-8aa3-43518817ac6c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e597af-ad37-42b6-8ab6-9357d6407d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367894e8-d89a-46be-9e8f-b9062c1fa00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14655410-7303-433c-8ed7-61923bac7cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e031e6d7-c6ba-4f28-9bc2-8a91e560c862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003cb646-5f96-444e-8347-539293fff4af",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7949070b-dac9-4146-97c5-5aedc96a4fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298868da-0125-429f-8256-613ebd675db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f78b4-c8c4-4787-ac7f-189faaae76fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7601c2f9-455a-4fd3-98dd-53387dd544be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123ad7c5-cdc3-4845-80b8-4b4131f6dc3b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6880b611-6670-4a2c-9003-177cc772272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7871f9ff-0748-4612-b316-b671fa81d6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563293af-f1de-4444-8518-d666952a2f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "caeeb08b-5566-4b26-b855-1da76f89a1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e164be4d-1f46-4322-abd3-cffa3c0a8ca4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe5c2ac-8ce5-4263-ab5a-348bcfd2fba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31821fff-5f12-4f17-b4a6-6e7410770b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac1a40c-d3f5-446d-bf27-6f089acb0c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c7269a-8760-44c8-b7f0-2b161e3e118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c047494-83a3-4b54-b094-a9246aef4b6e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031c3ae4-86cb-4e69-9d79-f6ad13e28513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a579adeb-c231-4aac-9fb4-2e088ecf1cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e8147f-6b9d-48c9-818f-359792f3e44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e4ea2f-b417-4c00-aee7-3b3428dff8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d845e2b1-5ebe-4a28-bc16-fcd38de10e9e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49a194a-5b00-45c2-9ec3-3c9ecbcc0a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359abd59-7c94-43e9-853a-4e8d0f144119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd07acc-5d60-4851-be41-3dbcfc2a8526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30510107-f579-486c-9ae1-6ada13978f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8839bdb1-15bb-4212-8ccb-46e3443ef5c5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2fab56-0213-40e2-9ac3-98618e128aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9ba166-de2b-4031-9abb-1048445df349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a82a2e-4b52-4d9a-a8c7-a205d5ba3aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64102e8a-5c3c-4a69-be7a-b15a1ddf0f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd51df6-a5b3-4e25-954d-e4d05bd66a3a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3944820c-32f3-4bc6-a721-a39719829f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff64fba-a151-4bb6-a25d-c04625133553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a2176d-397a-4d8d-9380-68e8b97b9238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52cd7e54-cc6d-47e8-83a6-cb98a6be2c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40be4b8-f585-4b57-b0aa-9d1bac96e088",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974186c1-7124-4955-9af7-2e6e4fdeb64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab236aa4-aadc-48c8-bb9f-ac6e18d5bafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2acb1-f44e-4bbb-bf1b-7756736b5c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed208c47-eb93-4da9-b62a-02356d146ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf47f8a-0881-4f92-ad1f-2de866e8f39a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47627a21-3503-48af-8a0f-98be6790abd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e19711-c25c-49dc-9621-2ff558c0986f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b33ed5a-eb6e-4d61-86ef-8e2cf6f489fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7690cd78-0bda-44b4-a8bd-a401d027fe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2c5685-80a0-4979-9e28-a97e18e7a9ea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b8a773-d2b6-4dbc-8082-ca1e5a41a7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e077d3aa-9963-4665-99e8-091edd9224b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8175a2ff-daeb-4c5a-8a4a-8131679eead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f73142b-8618-4da9-ab3a-9ea9fd3f44b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a7808b-8e9a-4969-abaf-711902162ea2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701c1cd3-f6ff-47a3-b45a-17fe7a66ab45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a763e56-3028-4f9b-b679-b01924e0eacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9771811b-f9f5-44ca-92dd-ed612b3ccb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7d1a15-a8fb-4d3b-8110-09f3f52c1bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccffe1d1-b85e-4693-9da2-2024c58ace25",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6108a6-08c7-4dbb-82b3-53eb10e4d5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a2dd92-c4fd-42b9-95ef-8fbbd0d2e17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeff2f4-6eef-4cd8-8770-46551fc6c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eec3c9-2584-4cf0-ad99-7f39c6a845ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16a89cf-4fdd-476f-a338-48c3608ba0b4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b069ca9-81f3-4da4-a182-156f4baa606c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ace61b7-d04c-4c9b-b163-c4aaaea4a681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c200735-0566-46db-8d23-771f06d5ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc9807d-f307-480a-8845-c6e9a3a1c2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a611d1-0c63-4b5b-bda1-8f142d19f9e7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13b7730-dadd-454e-a071-c95ddc926bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ab859d-4eab-476a-8ca3-1df13e4230d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb1220e-6056-4167-815c-797f5caf7451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc2e5c5-d52a-4422-98d9-d51467622cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a9147e-d51f-4b42-a7b7-f322b72dd7de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6e483-b7e6-4de0-a548-38efb114589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78f327b-546b-495e-b1f2-8a12aa37d621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dfe13b-3ed8-4293-a9c3-8ef44e46c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "847cf932-648e-4465-bddf-d88f55fa7d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a90c42-c270-4dd5-b464-001dd82fc591",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30985936-1f3a-4aeb-85d3-71f99f915ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9c4c6b-dcbb-4ba7-95ba-621d7e40dd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9918e3bd-d58a-458d-9596-07176bf6fa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0de6ab-97b3-4120-b014-25cbd5a3b817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8dcd1d-9f8e-453f-9159-f025d138158e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33f5c71-1087-4220-8706-7d94b1262da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e8c44d-2a12-41d5-aa45-b3662c8a7897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3188c039-ada6-4f2a-854e-488d789101e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a637d8-9c86-4c93-95d9-27bc0fb93771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f295f1-1550-42c1-af6b-fe8e39481da1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e802071-ced5-446a-bdce-6dc76716b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9e511e-49fa-4a6b-a971-9772ecca8fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6decdeb0-96e0-44ad-a9c1-f64af23b3a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fa0ced-4988-41b8-b725-f99ce91ad0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caca8ca-5ca7-44ce-965f-49e625412f8a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb732b2d-f4de-4766-845b-ff541a92fa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1654108-48a0-4985-910e-14d254cc14ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe8a85c-af75-4207-93bc-43c9a41f2f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e98868-ecd4-4f6c-bbf6-15924abba107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a16c0e9-d6a6-4e5f-9b7d-7c1629e02d63",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82edbb49-51a4-4c64-bc00-6c6a9fba2150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473ddae3-d22c-4313-9464-0beee949a873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1deeb05-5aa3-4690-bae4-efc20b66229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69fe81e2-14bc-44a7-95d7-943668fb0b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6f141f-e674-416c-9a0b-d7494cb3d580",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86597ca-42ab-4949-8ab0-357ea3e1d92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d0f300-9321-400f-8f3d-8bf4647de321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aec06a-7d05-47f3-bf51-62508b444d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82016827-0baf-4a75-89fe-38ea3d835089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64236294-b5e4-4679-837f-dc129b55fdff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6896c46c-87c3-44bd-a7e0-a042beb6ae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b404c3b-af3b-45d4-a6b7-0cda694b3ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998d6f91-cdcf-41e6-ad46-03d573f18ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "33143c06-dd67-4212-a593-d29846f1f147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900654d6-7f0c-4ed2-a156-077cb0f3f285",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90d3ecc-ef32-40a9-9be8-6f67847d26c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7646fae6-1303-457d-a343-df04dcab5801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed8ae83-6360-4527-9b32-71c71f899aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd58af61-ce43-418c-b6bb-41cc597fde1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed50c2e-79d0-4ab3-a455-f828e2dc876c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb42892-c29f-4c37-9bc2-a3efbe2075c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f271ecf-e129-406e-ac16-c7a27aeeec2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cc5cff-1d5a-441a-86cf-93c5b57bb8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6000482-9a3f-49cd-be0a-c73a38d2dc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a98c397-fa7a-4b50-8145-e3c7177e3ecf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8c6655-e358-4b47-bacf-b87a44ee4b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58a88a2-d219-4997-a05f-59211598f10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dd9a3e-a927-468c-b5c5-0048cd055b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5d1e56-b46e-4c68-a8dc-afc2e3be6e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119adcfa-1dc0-4c46-abe9-c1f306690fef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69868b8-f713-407a-b2b2-04effbe170dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eab2f57b-50a5-47a0-8fed-5be2c8e9180a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09141b8e-b349-493f-92f6-f222b9ae24fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "03227a36-8a73-44c2-8e02-b5c31e7ae987"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ece292f4-7cf4-4977-b89e-c2e7b07a25e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e7d5766-ff40-4306-8492-67882062c813",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed75a19c-d771-46fe-8bed-3d61e03a11db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "463b4b55-6d87-4999-a0f8-bf53c6669769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfd5f8b-7c85-4a25-8c2f-9b660b708be8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "692abe9e-0dff-4038-8589-6d7c77f72b4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c96d40ac-5460-4c76-bed5-cb8056eeddb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85c06c88-4d1c-41e4-9679-ffd86371cdab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dde5ec0-8428-4ed6-b9ab-a79829d4b933",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee6193aa-df79-4947-8d3c-27ad5558fe8a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "448c1d58-3a26-4c0f-8bf0-5a7cceb91657",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4635c449-10ab-45be-b37b-188861c7f56a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "210b79df-bf40-4ea3-9b4d-42f49c0dbf50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29a34548-d3b5-40be-9ebe-c57e1b5c2963"
                }
              }
            ]
          },
          {
            "id": "16cd8acd-0d2d-4751-8aed-59da190269f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "745658db-5c3d-4707-9a05-e2f7f34608db",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "12ad0635-1039-4bc6-8781-8338286a0f63",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb195cf-8fb9-4fab-895c-7c85d3c7dfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "35033af0-4fe4-42d5-bc2f-0e2d49407505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c356f461-c36a-42c3-8441-f063731d07dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ba8a09-b093-4547-b735-e8106d2f078f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "633af27a-68b9-4eb2-aeb2-110abcbc869f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "608166e0-246d-488b-bbe8-fd597a662969",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8fe2f79-4b85-4cbc-8920-2ce76084357a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb760ed9-80fd-4b23-8fbe-72dfea5116d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13a8c44a-9ee0-465e-b3a2-61d71e2e88f6"
                    }
                  }
                ]
              },
              {
                "id": "6d51a353-ba22-4f5c-90b1-8931bbdcce4b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26e63726-13d7-4c23-b49a-a67cfe6616d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c66738eb-8e2b-4c0f-ad2e-879e9d1325a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "717d997d-7e22-46b5-8665-612e43c21f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3c29614-5714-4ef3-a703-790b9f8bc415"
                    }
                  }
                ]
              },
              {
                "id": "cee81059-a27a-4af4-9b0d-780f2d27b64b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1bbca49-0d12-4238-a758-a63f9ee5f5ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b6118dc-1305-471c-bf61-a9329d829ffa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f975fc8-7589-460b-824f-9ede6358bf34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee735f9a-d980-4ac0-b6ff-df8f905c9de8"
                    }
                  }
                ]
              },
              {
                "id": "13d80df0-e9b5-4a8a-baef-0843c04d978b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4198dfb-fdab-4190-b36c-721e6c83198e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e91b70a-2d1b-4454-b5a1-e85ff0bde132"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38796a8f-d95c-4ba5-a3a8-a7af05ab80d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cb17d521-f6fa-4dc9-a68f-c5dbb161bacc"
                    }
                  }
                ]
              },
              {
                "id": "c8ae67b1-e9ca-41c9-8118-e72cd3617baa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d82bad29-02ab-465e-a9dd-b42e8b74970f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fba15075-f447-41fd-833d-18ff373b2675"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "354d2bdc-4d28-4b71-aa7e-d1d08b73d8ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fce353b6-3eac-4088-ad9c-8617aba04eae"
                    }
                  }
                ]
              },
              {
                "id": "d19475a2-e5a0-4712-a95b-00f6b0376c77",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "779632bc-805a-4cf0-b257-918df5071328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4ce25d0-9e63-4069-8dee-5f78fc09e59c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2110cc65-352c-43ba-afb7-3d9af264acda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76799bf4-b888-4467-99e0-70ed58a40658"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "688ba22e-e818-422e-bb74-1f9af3c9f06b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c347862-a0cd-47a0-9439-781feff6b66e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff26c7b1-8c44-4dc2-b0e0-838b3005af85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d610b8d3-b282-4539-9a6c-51fee50cc448"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d7f683b-7ee2-4f6f-977f-f4b048c0b3e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "89419d23-ed30-4260-a369-1399c9786cb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30dd523c-c19e-4939-ab50-a7da5e923687",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94b5de06-9cab-449f-b59d-7748f49fca96"
            }
          }
        ]
      },
      {
        "id": "bd0843ad-ccb9-469b-ba34-a7fa625ccc1f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9da7ad8e-9770-4c29-850a-f863a0daf3d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51aa52f9-2010-4a24-9132-fd44f2994c5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d861b07f-dcd8-4cbd-8f40-c90c6a57a8b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d28b15a-c008-4081-a035-93ea8a5070d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4023e1ed-b71a-4b1e-90f1-ea781d30c776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a268c8-6b34-4795-bacd-716e72cf8a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e15d00-358c-4a31-9da6-8e04e3993493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d02146-1f9b-4166-b238-f0b858536fa4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b66b37-fe7b-46c0-8d5b-761df6d4666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47de3eb1-7381-4178-bace-b2d8af0d9cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282a8beb-8525-48ff-8a37-47b7166d717d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19921651-c717-48d6-98ef-117ce0dededd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0048d15b-7088-43f4-95c9-5ef0e27fa624",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b3dccc-d8e3-4774-9ebb-3d2222d9fd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210283e8-8e30-4dcd-9fbd-9b08e3b8eaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd84db73-f991-4e74-89fc-85ff3bfac90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad32d06-b502-4c35-89cb-c18bf1502e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a9a144-260f-4494-9e5f-2eb792a479e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b8c65b-da4e-4225-a8bb-7f9ecfa5c3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12769733-df83-4208-9f42-0dfcd723f7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb49a3-ccf5-48b6-a0fa-59d1ffa48e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8e97ef-f311-49bc-b6d7-7f9694309ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e7299f-49c6-46bd-9ceb-58979afd7191",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe6648-7c5f-4562-9f47-62f7ebf6cc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf21badf-ebbf-4a37-9a04-a585eb1902c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97ea42a-2277-4767-83b7-229ce784a7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db22149-d872-4d78-be96-92aa5d0813ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6778b458-08ac-4cd8-b84e-185bd7879120",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a4edb5-c575-4c78-890d-f93575a7f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6a2739-7c07-41df-bfa3-e1d8f1f62779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfd5b8f-d9e8-4b6b-807f-82df7c8b0741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b0491f-9c5a-4cac-a2a6-7efad8e1ad4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f537ab7-6e12-4c4c-87e4-6e5248ec330e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8938a821-1b0d-46df-86f1-1cf13b8b12ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcbc3be-c2ff-43c9-bc15-4ad20b45e1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff7f1ec-d19c-4013-8c6f-fb105c9b893e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be56e631-37aa-4d01-8844-ca8127a4186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9ae33d-1754-46f3-add1-454864eb07b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6649620a-3bfe-4467-9496-64f2c00a94eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea957f3-5c8b-4db1-8d62-561db52a17b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec1ae39-aa0b-4a7e-90dd-bb793345df2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5641c089-13ab-4ce8-b858-75f001e1f92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903409a4-ac4d-4e0c-a462-7a31858fefa2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7536c5f9-892b-4fc6-b657-0096b711a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a60d3f6-2a8c-40cb-a6b0-566020cc8e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2b2f58-d783-4743-bf25-bfcd29bbb75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16dcc69a-f5c3-42a9-bc03-eb5c38858125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaec063-38cc-4c70-ac57-6b884d421f54",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a62da1-a870-4258-8631-2b72468813e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700d56d5-38d7-4dbf-aa23-6d318186b75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50981908-844f-47fc-b0b2-f7a30f19efaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b1d8b2-9390-4cc1-b643-e20e9590bc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab0e944-1191-4989-8b60-8f8ab584ea0a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf7e7d3-3755-4b82-8927-8e837248556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ea9d28-0a90-4c7c-be7e-35a62a4d6d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcb33f0-b468-4846-9e59-a3863393bd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1df08f6f-5cd4-4bee-bb43-9d22337d2345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c00476-5ec7-451b-af4d-3c7efe19a832",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610eeff7-b01b-4eea-88a7-34fce524e7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d71274-b660-44df-8407-76e4b33d354d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4746fe4-2dd6-4de7-9ac6-7ed8bfa6d61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d93b715-9ee3-4b44-96cd-3577b3ce5c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e79b97-ce7b-4780-9c57-9312ee0e7de8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed518743-d610-49fa-860b-f23649567329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61c709d-7e15-4998-9f0d-b97b220b32b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a735cc-6f4e-4b5d-b507-340252de2fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ff3021-572b-4579-bce0-062165d3c5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456cd7c8-3b67-46db-8d42-70196db3f540",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5137fa1-13f3-4eb2-b6e6-f09afa68daa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d65d58-fb90-40dc-a805-5245df426f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ac1c8-75a9-4931-aaa6-6315dc52bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "af83bc12-f8de-43c3-851c-cc96c0b6dae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ce9b17-60d2-49a7-80d5-2c50f79f5c7a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cd88e1-2c5a-40f0-806b-105b47bba16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd114b6-3ede-4d8c-9bff-3af1352d8ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f436d58f-0f11-4337-863a-362cc973c49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b57d762-de3e-4df3-827b-51143d6f0761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0bcc6-c698-426f-b895-e1ff877e24ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4c03d1-4f0f-4b95-a28f-317e1ea1be8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f21560-7e05-4d5e-867f-552420772f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a648978c-2f39-4a3b-9a18-3d98859bb570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8529d4b2-96db-4b49-a715-8e1a16f0238b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4f41b1-03f8-4be5-bc8c-94c96d74de76",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c884208-1c4b-4ee5-a43e-cc921e72fe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f01df8a-60bd-48e8-aa97-e77b35715230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b095ff-efc3-46f7-a5dd-02d58b4995a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f2879a-cc2c-4ba6-a0c4-2ef396b191d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e580af74-77e3-4848-b756-8c2700f6bd3d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7783ca81-3600-402a-b02f-c5ea9dbd0b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0248a853-c3d9-4b26-90a0-aefe3715421f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab88c521-7cea-40bd-a755-3da0311e7654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7599f9-d0e8-4b8b-89f0-9a712563fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad562d88-267d-42eb-9882-0c4b06133cf5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a517bc02-35ad-4361-aff0-dfee2e2aa021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b3ba8f-2788-43d8-becf-acad1a43754a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae057ba4-ae7d-4311-ad8a-20be5b0746d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbe87a4-9d67-4ea1-9480-f2cd40f52f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e34c5a-4009-4cf7-ba16-d3c533f23ee2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12366a29-8a25-4782-a3c6-238f4f344aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c12d0a-89d3-44d1-9cd0-ebf1394af682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25b2ef-839e-48b3-9002-29edd1841077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45cdf26-e420-46c5-a441-b7cbe4855c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf66f6f2-5602-4bc5-8966-f38b5a314fcf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb604f27-65eb-4bc0-85c9-7782ca503832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a845e7b3-f51a-49ee-a816-2b0d24711c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263d604f-81ca-491d-bad6-2f9812153ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b70c23a-c2f3-480b-9bc0-c6640f35f656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc02b510-4181-4dac-b4cf-a90c92f216f8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413afbe3-3704-4a54-8746-1c46a8eba30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f9cf32-74e0-4f3b-9e93-4c28c41a3b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a988212a-ce96-4c24-a57c-fb1dbb7a9ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71d3322-dd1e-4021-bc6a-af387ca4deae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2585996-54db-4bb1-87c4-7c7b340f6705",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa93c5b-a934-416c-88e3-3525a61c9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344693c3-efb7-4903-afc3-ef9b0f8f79c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06576da0-5032-4647-98b2-d7948796b33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85364c4b-04b9-42a9-a723-5a7348da3276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3291c1d4-0300-4491-8184-4c9cb2ca1499",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac81784-59d0-4a9b-9206-71879a9fcd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98dc3e7-d3ea-4e76-898d-ce3dd0a30e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2730d687-6c67-43ea-98f7-0674925df766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0691f00-2ab4-42f2-9fe4-27f0c8960793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea53e71-d86f-4634-a3a6-28ad31ae2485",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca48d1-ebd6-4ad3-8777-b59608212d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d14abd5-1ee8-45a9-a595-2a49e3fee871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c90c542-1da6-49d2-a594-da2881c80678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0950e6f2-d6d9-4a85-891e-88dd76c95fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b4200-be03-4406-8741-d53f575e9be7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee977b0-a912-45fc-82b4-1473819a08bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0febc581-cbc9-400c-af3b-614a858b674a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54f6aca-5190-4473-845d-a97803a0dc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c67988b-ebca-4e16-a8a8-b2a553cd9ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9f27a0-070d-44df-bd44-2e8d08fdfee7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c40b6e-cc04-47a3-87f0-8903187184e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84234c0f-c001-4dfd-b4f9-65a5e75f00bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6877a119-b0c7-4744-9725-c6131f34d43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae75db3f-c614-4e00-b978-9782768a6ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99110a6-e0c7-418c-9759-acb5cfe2e88f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7489c6b-3783-4d84-8c9f-5d2b1e6c993e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fb9ad0-6c78-48a7-8a17-6ad4d3321180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4e16d7-54c7-42b3-9e78-c33dadef6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd7b0c0-4927-4fc5-8bd0-193dce2bf67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a1b514-d8fb-414f-a47b-7984a886ed16",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8c27bd-ace9-4e43-bfbd-6100e4a7cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e0b36e-c75f-421e-ace0-d94b3b3a7195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfce911-e2fc-4518-890a-284d0eaa76b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "591cff74-11ea-47ca-9363-bf51f2aefd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a983ea-9b4e-4107-9259-7344d4fe288e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e993dd-1bc9-40eb-be61-f08eca34449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e995e9b-9786-4fe2-b803-00bbac3426df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46008d7e-df86-4c5d-85c9-cbd94f1c151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69a8693-313c-47e8-89db-011f44c9d2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f417c260-3e6a-41f7-a3e0-bbad646bf247",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83740392-1b23-4e46-9fdf-7ecef25871e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180ad587-d69a-4ed7-8fbf-f57b47013c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09729af1-9d65-445a-a035-9eba297aa544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671aaf4e-521d-4521-bd2e-30c57bfa3ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5a6c46-e077-4276-b1bb-1c9d6dfa7d14",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d380f6-9e7d-4117-b00e-f8e96a6a5ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec810a3-fdf1-47ba-9a76-e66b2b264455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0bdb71-1f9e-466d-9408-ea6a34c429bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ec8272-1ae5-4e1c-ae83-418b195f6e87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f56eb92-9213-4511-9556-7af967c514c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "552f383a-b257-4527-92d3-740aecc0b4fe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b85a710-cffa-4dd5-a4e5-e3a15d3e5f3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "22e909ee-4b1c-4a76-a65b-ab7ce5104bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5203189f-972f-4f99-ae15-7d678771a677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfd4b7c5-e85b-496e-89c7-7e2c750b07c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c4d2aa-84f7-40da-9ae8-f40297ad2c00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f86de3a-8542-423a-9b2b-a744066de43b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcd3f6ca-83ff-4eb4-ae48-65c4f37b87ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66279ef3-e308-4fc7-a547-f6c8111c6131"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0910cbe-3a84-4c81-b584-fd0d43cc0b13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1cd81ec4-4128-46ef-8034-4b2409da065c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca837e2e-a9f2-48c4-a2ea-964589166fb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "860b8479-b14f-45f5-b91f-118242a58676"
            }
          }
        ]
      },
      {
        "id": "b3003392-de1b-4e04-b017-13ee25eee2da",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e3ace653-f646-454b-a36f-edd0bc1b8f1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b61c480a-01a0-48a6-b0d8-0287a411c24b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e162f1d3-2385-4ad7-9a36-635e66ddcccc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b98891-bcfc-496f-a6b5-24d2832426a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a60130-8f9b-4001-95b0-07eeafa50874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a58da6-111c-41c9-b4b3-3fb4dfc45032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f081815-09e6-447d-9c8d-84480835a0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb484107-4728-4ac9-9832-9fce39ee099b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e6c523-0255-4592-9886-55ce9c758c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b82ffb-2b90-48ae-9301-989d15d9d1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1213b6-edd7-4225-95dc-58fdc4e2479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02dcd82-79dc-4895-852d-4c1b5c3331ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4d9f46-9f49-4f4e-9555-a803c481f408",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beef318-ef27-423c-bcfb-8dad73cda2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5ca532-b3c5-441d-90e4-d541ea5d7586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5ec267-6e6a-4fb4-9999-ccce9ad02e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b403060-51c1-48a8-bc59-af7fb72bf455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4b8b53-b58a-413c-9417-33b58c620af1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016b154a-3853-4bbb-aa4c-f38f16169340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbb88ab-150d-47ca-9a93-ddfaea72eba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72d4fd3-de21-498a-8975-b049a930548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f60190-d66b-4ca6-b220-e8010b8925f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc43746-59c0-4625-bbc9-ac29fde1f3a1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26c59db-34c0-41c2-8a7b-977e949d529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9bb402-4e7e-411d-bb75-5e31b21ba14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8724128f-6610-4a3a-9abb-b4f549ea6782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3decf26-b223-4fae-9847-d166591338ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac7083-71eb-4478-b844-8633212e3dbc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f07132-fc63-46a3-b9cf-8e3665b1ae5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd28c93-d6c8-407b-991a-c8f10d3ce16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3334d866-2e4a-4564-b6f3-a4a8e093af4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba82824-8abe-4483-a7f4-fe056d8b24a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c813831d-01ff-46e2-9d81-195468d23e0c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38995bea-eb72-47af-aa1b-18384cac5501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f1b68c-9079-40b0-8280-33d60380abd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0964a0ff-9ff0-4a95-b0fd-eb959f9563d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97974fb6-ea26-4909-8d44-cc47ad5d63f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d150c0d2-bd60-41a9-9d8e-2b4aa7a6fe7a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b586c9bc-d010-4437-bc30-a162fb0d76bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a9127b-705c-491f-b68d-4b929b47697c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73569646-152b-4c0a-b1a8-ad91a57caaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccefdde-217d-434e-bd2a-423da1119ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df344ef3-794e-4185-ac14-e38055611246",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b926351-dcb5-444a-b23f-41b2c224bd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b497741-4aa9-4411-9a6f-7eb11f360279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575798c8-36b0-4fb1-bc34-b4cfcdd14a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b4d943-4ae2-4356-a203-04a3add70e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304fd33-a011-4408-8439-16c079f6c630",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f0bd60-9cbc-48ac-924a-f3d32cb7fae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58273435-e495-41f1-8cff-c342303dccf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d338d7-a8f6-4364-a350-328b6d28d008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3d17fb-ff31-4084-9b14-7a7afcd97bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b090072e-d107-4e66-9439-e8e1dad0621c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d91f33-9dc0-4812-8e09-815c6a96d267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef2d75e-3047-429a-b428-c9b4773b6fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6bcd25-e504-4b02-9b43-45bbe3143960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f28d0fa2-040d-400d-ad95-c29652c0527f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa1c13c-a8eb-4ee5-b270-031ec1b255fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eefa580-ff0d-486f-a831-c10287e58570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517da46a-b46a-4889-bc05-321b1db3aafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3635027a-c52e-4735-8acd-d22aeedecd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "590c047d-343a-4855-8d3d-34492c1cca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6172ed71-c04b-4235-aff9-3cbd869bbab3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa4d2a7-1796-444e-9b57-bd07886a6b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34500389-75a4-4ae2-b667-86d9dbe63ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab986d85-fe56-4794-b90e-5da4ac1f564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70834986-e91d-4fc6-ab7e-45fb1765cfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9e87b4-2505-44a4-9347-fd306c6b603f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4192d1-95da-46c1-a65c-67d922bcc2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9e8f17-358b-42a6-b025-eb6520ec6172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b69c1b-2a0c-4922-981e-c026ea5e318b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fb8aa1-2ab7-4f2d-9a2f-78bb4ab91a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9a1675-3f73-403c-bd73-8f1ddd070f33",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b16338-0b60-4345-9acd-a058016c3852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7f2de2-82e7-4a0a-81b6-92b5df1b589d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d629b-c613-4fcd-acac-dbb37015a155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4091a54a-3892-4c26-9576-2e01a539406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfe9a1b-7273-4ade-b0a1-3c8c194a0430",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea307758-3e6b-4394-bf2a-f178fa1b6b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525a1094-9b53-44ee-a659-57c85776eb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5041b6-6c1c-4cbd-9779-03e1e6ebe549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b46f00-796b-4280-ae49-da3569f66a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e3ff55-60c8-4fb3-8e7d-494c7cc521fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af360c0-f553-4cd5-9e4c-6cd1a309aef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db7ea9f-1d2b-43d5-8b79-fe65f4d581aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64949bf4-df9b-469a-871d-0898a6231713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc758d88-447c-4773-acaf-075471836857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a18358-8974-42eb-9151-ad2da8dcfd7f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4659334-1b60-499e-94c3-75142d39db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f5e710-a742-4a8f-8e8a-635efdfe9ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11df4e2-8e94-473b-a1c0-ec9e85491504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d692afdd-5dae-4157-9610-e5cc55098c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8386fe-d8cd-43d8-ac59-46015ad9cfc8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3e2a14-c66a-4f21-afeb-fffb04ac294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0366aeed-bc54-4fe7-9fab-7a8bab82f5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58051ab-d16d-4f48-ae89-77a94deececf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6319b4b3-2475-49dc-8a86-463c3a155a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b999dd-fb91-40be-ba99-f5f5ea113cc6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1697de-5560-4090-be86-4cb15bf147e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952bf573-3d02-462b-99dc-6acc68dbb0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3456ede0-7074-41a2-a43b-1393565bd25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d126ee-c759-4306-a80e-b5c79092d51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0570ec37-204e-4dc7-a408-f24d127492c6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244f6dc-835b-48fc-bf5c-cac43ac081a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2cbd6d-be88-423a-addf-4e1e2640b181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79607f0-29c4-4bf2-8e84-9c7c9a3f62f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba06f75-1fac-44a0-9368-54b47658d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125d4933-1c54-498c-99a4-6cbbb343e0d0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0977366b-8c38-4146-9a00-2443b6d42c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a72809-a823-428a-8ef0-b0fd147eba8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db44011e-babc-4319-9f71-afb6690e07be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a49407-4b0d-4286-8334-94438083ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4d57ab-9da6-4136-adb3-af7a5e6e3b79",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19893173-d0d2-4c97-b77b-d354071dda40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c8eeec-a3d1-49ba-b9a7-8ac750ad1672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e1cd1-8495-4de5-8c50-2936c93ef3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25040337-a07c-464e-96c5-48e057bce3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c511fe7-9c85-465d-b2bb-0be5359c9b86",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83583ab2-c56c-4b92-bbca-f00ad0a1caca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8a7554-c373-4a64-88fb-908a7c3b3ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b0da9-b876-4ae0-97a3-7c8be3295b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53839c9-1f8c-4de1-9e04-0a2f791f55e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfecd92-4252-4edd-9724-b903f78eb3f2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807b80a3-5b99-4d1a-986f-8cb0dc6aea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415c0b73-1f8d-4912-8ce7-260716785bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc40f574-e9c1-492e-b9e0-6246f78d5308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1109a1b3-b0ca-498c-85d5-345b262541d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfa3f2f-2b11-43e0-8580-210be41d9f5e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fec644-20bb-4085-b3c3-6b5ee9815a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f34393e-16bc-4c75-9bf2-1c1d44487d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbb2479-24e3-420d-8669-0796169a6d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb605c7-aa22-4f17-8d57-6aca637e0ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18082d2d-bbe2-43ee-8196-d8320e4f520d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae18ce2-e018-48a3-b8b1-da6877c29989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b22d6a1-3caa-4a84-9d71-fc2f5c7f0684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c73e44-ae05-4bac-b3a7-18af4d6fe0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79e98073-4495-4f9b-a1db-c73e190c8c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f927e5a1-64b9-43c7-90c6-6a13a7aae70b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b6cf5d-20ef-4396-9eff-a44ea56f2882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c25f5d-d4d6-4e24-bc0e-036667d6119a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1553dd-2d6a-4b23-a21e-829215932a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e7e755-3333-4f55-9482-2855a4ab8ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c9671-7535-4bf1-8aa2-272a9555056a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a3926-ffa2-4db9-9324-8e49d8a43f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea72533e-d6c6-41c1-b6ee-6ca6dbce3e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35857ae6-e535-4981-ab6b-ff6698c6e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dbe2ab-76a9-4c3d-9f41-d1b456ca21ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d5bbc7-d85a-4f2f-97a2-8471d36a0411",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bcf732-275f-4a13-97c3-a2bcc478c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9609f38c-b8ca-4367-bc60-f44fb72550d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823b89f5-42f4-41c5-ad9d-9074cd4d3c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a669a0-d206-4b81-bd56-3bce3f7f738f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdec496-fe23-49d7-bc8f-009ad7886ae7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f6d858-0b2e-4450-b0a4-65ece5cc59d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2158b0d6-772f-47f8-9906-6712b67834ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd032e30-5f1b-4bfe-a216-0aa8cfee4e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b1f9b3-9906-44b1-8653-a0cc33ec28b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c19d68-99d0-4400-98b6-519f10c486c6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2363720a-3271-4b81-bb44-cb1c5246df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ff4ec3-c7e8-4532-9b9f-9f3a32fca3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f153435a-cd57-44fd-9f54-e018cf76d75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "827f75d8-51f9-4476-933b-7606a04b624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12898f82-6c6e-43e3-9757-c029997a1986",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b775ab99-c6c3-4aa3-b10e-ffe14c61bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1b1f64-410b-4d2e-af8b-4f32ff5953fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6571d359-aa80-4700-8661-62618352051a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd081a2-b4e1-4209-824c-8689bd6e3414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a49f8b-b29b-4076-81be-aa19a4cefffd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ad3cf9-ce4f-456f-9e24-8025253ae157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f151d6-1012-423b-ab24-1ea89288ea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cb0ac-9cd5-4134-94fb-7952b732dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4556de49-4939-4798-9350-69a6e09b59a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a18b8d3-f501-4613-8838-0e953f4c86f2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd01d023-9cd9-4f49-abf0-a71afd9e0db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1fec20-61da-4576-a6ed-7423e2ea25a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3121e422-4351-4f10-afce-12b1f0be8d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd81367-184d-462c-9447-2dbb5b71a0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0cc220-7a59-4e25-a758-8707967ebed5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f0c70-f83c-4134-ad5a-2dbd40abe27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc84372-4ff6-4a4b-9c0f-37b91d568554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b9c5db-606e-4a2c-9bdd-4ec8267238b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7624cf04-e0fe-4399-bcc9-33c13c369efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13097c79-4463-4de9-ba7b-289c3d913c8e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6014040c-e91a-47ae-b6f6-e2cde963e315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec51b74b-2c79-4534-b0a6-053453f61ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8871068d-fb61-4d33-ba3c-176696e118b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39043303-af12-4784-b5e3-1d9db7764c23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a00dddb-8878-4577-a2d8-ef98f0a0ba8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13a80e0a-9be2-4b64-b305-4b67e68e01f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d946ed5e-e001-4545-ac00-b2a23889b6a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5198a24b-5654-471b-b490-0b5330178e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f650cb81-2231-4545-a87e-6b92e8ce27d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cd9de99-0fe2-4ccf-9381-4a0f4099e0de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b55ebaed-0911-4742-a72c-21c291205a15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67f37422-cc0a-4abf-96e6-d3f0a9203f9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15088998-aabf-4f3a-b979-e0eedaed6e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d42adbc-a89a-48f0-9184-1e13c8ef4968"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f782247-1c3b-477d-9b46-6aae7ba4fd4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95c3ce00-638d-4462-9254-89ead30ceb48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b17627cd-7366-47fd-b9d2-8d113e24474e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dee94332-fff8-459a-a0b7-d9a575ceb1fe"
            }
          }
        ]
      },
      {
        "id": "4bdf4f69-00c6-47f4-bbf8-a8b1b736cada",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "970c1c72-bc22-419b-8087-a79f56469897",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bd202c5-59f2-4702-86a6-b064da8eaff3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68cefabf-6ebb-458c-953a-c7102144d66e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11e7870-7854-4ab3-8f2f-ed95be696170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37cc777-515c-49bd-9247-718d14c0e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b2c101-58ef-40d9-94a2-e035765ceaea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae57f8d-9964-43c6-946f-ebeb2e33268d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31009590-8536-4962-a137-5a0666d14c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d17f92-2dc1-4005-9559-efaf0b53697a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517d5a34-d889-4f3a-bdae-952fc7504aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28358ec-3995-433e-862f-b0d98020a7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2090e5b-aab5-4ff1-a409-fd77217b92de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3b47b2-ce8b-4a61-a353-b19af09bdda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e5be1f-48bd-4828-9689-6b516bf1c35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee79698-03d1-4ce9-85d5-c81fa793d09e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bb76a7-ef4e-4422-bc32-91ac10f47c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc29372-26b3-48d4-80a2-13b331fc0807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1de3d33-6c55-4c28-88a9-a504748b18d6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a0cc19-163f-4ba0-9e16-04b30117ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbeb610-a8c4-454f-b5bf-649259ddb1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee174b8-5757-413a-b642-921862f8ed80",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0607f950-21ab-439a-a9f7-d2cf0f7b514c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd637ddd-0494-4b00-9262-0371e19d785e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f61fd-4686-4869-8f79-b1dd2bd563d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078bebff-eb6d-42c8-8280-468c470f5601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3de4ce-5c72-4f60-8609-cd0e117e19cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d901da4-0484-470c-86e2-68a876a8942f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1651ebb-184a-439a-a253-7708f5918492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845df76a-67fb-4f5b-a7b8-168352b826a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3380e7c0-8b81-4d3d-bd3a-6c90f0a62ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16038dc0-1266-4359-accc-15fe45c0107d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b615ada-e917-4c05-8b61-4f08c3f05e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c38acc3-5b4a-4fcd-b621-2fafb3ef0362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2884fe63-dceb-4fac-83c1-38c91ada13e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0819e222-dd16-4889-a896-d8dbcb1353c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb9d37b-abd5-4729-a422-407b33b0e42c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f2bad-ed59-4a04-a5d5-05fec8f5e74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bc4053-bab9-47a3-918e-3464150b3bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24020383-effe-421e-942f-9a121ebbbe6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a736e99f-cb08-4524-9cce-5fe5dd6a47f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2128c4c8-1926-47de-874a-e572af27304b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fe6ad8-4321-4489-94ac-a4bcabc26f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9502bde7-327c-4339-9bdc-fb914b45f660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126d996b-1a4d-45c4-8735-ea41e3ab0ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4388e933-df32-4a42-a0e4-ac124f171a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fc645a-fd4a-4d6c-a6ea-eeed36956426",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8895a342-5925-4ff2-8229-ebdedf6603eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde4f02c-9ed7-40c9-87d7-d713a0a0e74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea79d8d-eff0-4c49-8abd-1b5c72f564f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2e109f-e36d-427b-92c1-558fc4d689ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5e9ba9-1435-41dd-aa66-46375cd0a39f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ceb4a7-3c29-4cff-aeea-e6509b3e122a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28221521-4632-4fcf-b253-b12a1039d93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8fb760-a100-45ee-88ac-b8c647f8b2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6d0ddf-a9ee-42ee-9ba6-35ba228db10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b801005d-d815-4846-be09-6203114d30f0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba5d0a0-0953-4463-8461-6bde21ae1826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "571e285a-1835-4769-b6de-2cc33098fce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7071e0c8-8012-4391-9a9d-38d7e2f4a3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d46a56d-9758-4e18-9e68-ed954af333ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9010d182-a3e4-41b9-a4b0-8af7f172f6a0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103b29f8-05ec-4f6f-bb19-1aa2c809ed62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306e3802-1e46-4651-b570-4c2bae4ccc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840dfd96-9b00-4ab6-9c9c-1a4f1014d3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d43e00-be7b-4689-8818-867c64825d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6707a7a0-d242-4851-a06b-a02f64472043",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fa99d5-1751-4157-8364-75a2d91b9a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2214d4-1b10-44aa-b517-96bdce7838e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c3c5d4-4ff5-4b6e-9ec5-fb4fe87c5eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76956274-3b3d-4c64-91b1-abf69e41e33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba772208-da88-43e4-86a9-e825c13d1cc5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4542a646-2924-445a-8954-c0379e22d947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a546944-ecc4-4170-baa3-a509a861818d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae79f4-2a99-4d7c-80ae-f691c68ca1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f88fc5c-0e20-4a6a-ad5f-d0e907cc7223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493331ca-576b-4272-8064-4e98d3557ab2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bd5d1c-d3ab-46f9-af1e-a24f967fbeb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bb2369-01d8-4ed3-96bd-d6410247e85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bafbcd3-730d-4799-bf97-9b4fdf210dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67c8395-7210-4498-9de0-e90f4ea9a185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66c3dc3-f3cb-4a59-9124-1e8e76df7ecd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcf6078-494a-45fb-b519-527327635cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5034374d-4349-498a-a07c-22d85d48f9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec1d8f1-d60f-4ca2-8d39-2460f7279471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa72ee48-5101-4c00-b8eb-bdf9ae1f2a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3c6af-1025-4738-b174-bf8bf7d22dec",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f519ce3-9fdf-4b00-9c13-8c8bccab2c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993c3e1e-a8d6-40af-94c3-2a153d2a8479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3558e3ee-a28d-4de2-b033-8f7803c1d318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93969d0-222b-48cb-80b3-ae343c37b5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c92088-4cd7-4392-8962-dcd8912d8e05",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f16a9d4-b295-45a6-91a1-b20b075119f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f252a3-12a0-4174-bc1e-c6d9f3ceeb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c795fb7b-82a9-4351-8f61-2c7dd4a9f26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b249256-d46d-472f-ae5d-cfcdb5a329ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a69a21-1f86-4cc5-9430-2b76a4fbe6d9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e9805f-8645-41b0-9f1e-bf5fa64ab3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d51bc09-9db8-414f-aab5-ce153ddd5d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe61d79-748e-4286-8377-48110b2784b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7988a1c-2e6c-4291-886b-d46ef2ed79c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb7bd46-b678-489f-9337-698f241e2ae8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ca75b1-009c-41cf-adc7-8664012f75c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906fb438-28d3-4832-9ac2-2b13c5e88be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ae38ed-0b9d-46ed-b138-cf13bc5224c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc75ad81-45e2-4bc3-922b-d831f07dd5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07993320-816a-4744-9d37-1b0fbf1349c4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c283fe71-c3a9-4c8e-81cb-1287425d6f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323b3ff6-5cf8-4df4-9fa1-fc54dd8572e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a98219-810e-4de9-b816-ae348942675a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de026374-b58d-4895-be60-9d29afaddf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed122c3-c158-4742-a06b-b7b357a36658",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167db3a2-11c4-4dd9-adca-14c533e17a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a3bb4c-d8a9-4e0e-9c18-e02132145893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d609f772-7bb7-42c1-9a3a-c40f50ecad6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a25454-7ac3-47b3-badc-abbeb0b0a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd25de59-6f1d-4c89-bdb7-1a72997f718e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d273aab-9d69-4d19-8692-9162b32f9eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1daff01a-11cf-4d34-b98f-1418739d1333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93df9e2-5497-425b-9b44-84b1295e0859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977215ad-5d1a-4161-97ac-1972033e0eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e353149-5cee-4ab4-afec-d6d012c23e7d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c8f97a-663b-4d35-a9cf-0ee40f5c8ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d25fc49-d632-428a-8ca2-3205cd51c72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879b968e-7141-4974-89c4-6dd4e14ec555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d61441-8986-4efd-a30d-a629196addc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9f00c0-7735-4992-84a2-b431a74ed93c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ae696c-8f07-4b65-9689-6dd85bb484ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba75154-cff0-4420-8a5d-9f13b7d3b9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba959ea-a22a-467a-a3f1-8118a617e85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c461d5cc-e475-46e2-b453-23b9d11d179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33071f69-6fdc-4d4b-a887-47f3352abfd9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523ca0bf-e200-4ce0-8880-166517eb2314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebae304f-7a02-46a6-badd-81377eecfdbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0e0648-2400-41ff-8c79-6d19cfa69864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f727e07f-22f5-44ac-940b-9b6b0122003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cc037f-a42d-4af5-9107-a2d3f9bf2ef6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70303149-e173-46c5-b03a-1fcb703f8bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f6affd-6740-4375-8edb-5dac40103b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530cd1b2-9260-4ee8-a486-a8cd26c42d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b566b7a-3499-4ca3-8d5d-8e7346503016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f29a5e8-890f-4f72-8963-1b1ce56fe547",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e8e19d-9abd-4074-b46a-c6621dd20bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfb9d25-69c9-45ac-a6e3-a59759c980b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba48870-dc5d-46a8-a3ff-74288737670c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5c7b5a-7910-43a0-b03a-ce3d6db2903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3041c02a-27c3-4527-9e22-d21dcc7dbb3b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2887af-98ae-4c88-8b05-a4e7e2e3beb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3723d5a0-1b2b-4604-bd8d-4ecd41531a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b88139-809c-40a4-90d8-60b15fb250b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a2f6b0-6d5e-48e9-8899-9c3cce281a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f5e90b-1840-434a-9912-89e6187d0c27",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2c6f72-3c34-4562-ba56-4fb08ce02d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6394ee-73d6-4327-91d5-14e0b5bf3c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb3b8d-683d-4150-868f-0ae89749f1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870cca24-bca1-4c18-af08-d374f39aa9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a1cb3a-50c8-4094-b8ed-b4babae9ab3f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a89e51-26e4-46c8-a779-34a0a40d164a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c16d00b1-ccdf-485d-ac7d-d13e62e65c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3052c4d4-7822-4dc5-94d4-4eeae6ba2d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff036901-8700-45d6-8b63-2b06ef43e559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ef5f07-527a-4b6b-b073-6e7e1478c5dc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0baaf9-536f-4af3-b509-f3513ba140b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c0bb79-3e0d-4496-9605-337c2a4dd2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c24d4-e074-4b11-93d6-aa4e06628188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea333ec9-d917-49ce-a8b8-b4c5b6df7868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3368ec-94df-4cd6-b354-b6e083b45245",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cf74ab-96c9-4c8b-90a8-5ce9da5b34e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693f5691-3ef5-4c20-b8d6-f7c9d141b2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0153a8-a456-43a6-aa93-0c66d79cfad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825fd7c9-7c36-43dd-9d58-162b35143fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae971c5-c23e-4cfc-a0df-9019d745435c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aead81f-3dee-4304-9ea3-0537e128136f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ac0c46-9b8c-41e0-b3b1-64bf1a0e1473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f3a1d-9e16-412c-9fdb-aa666730ec89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbb9ee1-e96d-468b-8c6d-b5ed729d70dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6454e0-5893-4afe-8d7b-705f6956fde1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4192d61-94b0-43a3-ac97-6feabaf8c957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6579fb54-f899-4396-89c3-9bf6b2f44d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7920b8-0a39-4326-adfa-5683ab5a81f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e16fdd8-e923-4a23-b988-1712355a8dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f98740-c52b-427b-a027-e934a8f33d7e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eca8695-6771-450f-9157-be30a4220c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5da2a9-e14b-4288-a662-adfcbff4d9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934d8c34-39ab-4477-a152-d8f7e353dece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f7ad35-1429-494e-b6e3-2c0d86953ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f4b818-eec8-40f0-a7cb-8316527da1e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b357889-807a-4edd-96cf-184a60699d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407df644-e8e1-4326-bfe8-79e4db0ad206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cd3fb5-3269-4a21-a2a0-ec85fc8aee50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31bc5a3-4f4d-4160-9e4d-de614f8e0801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bf4ab4-da8a-4a81-b6bc-901eb3583cf6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd1dc8c-5bca-49c3-9a2b-1885cb3dd360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29522b1-4e28-4857-a9ce-9eecba79d2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1377af2-c5f3-47fe-a34e-519d1deca84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e87742-eaca-49c1-8253-294277bb20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36533d9e-a4f4-4111-8579-4745e5e4a6bb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fccae-617f-495e-8301-6b1f91fe0ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2612141d-148c-4663-8a86-ef678d89b78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca861144-d499-40b9-ab13-a38823d20317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b00a72f-3405-4a35-ae8b-0463cf58744e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03772bc-514c-453a-8326-deb7507d4e72",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8eebbb-0790-4efb-93fd-6fcca87ef11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f2850d-9eda-4926-8d19-7aa5528a11d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5787e8-dcfc-41fa-909d-842922e3213f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23bf5fc-0551-4b7f-825d-0591b6db40cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa130088-a475-4e1d-95f6-63269cec6636",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b18d6-624c-4b29-ae3b-7bddc179c77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b88351b-3e0a-4aa1-8e5e-c293b145481d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0dfa41-ea55-4b7c-a791-732dba94724f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ac04e1-b848-49dc-84ab-59bbf03773af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1c6fa2-8591-40a8-b3ae-58f6a82f99d2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14e5ff4-1cc6-453a-917b-d4fc26b5c9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f651e4c-c0b3-4fb3-b10b-3f9cdd4ac512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd24a8a-4f60-44e4-a50c-e9cd0f1354a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5136030-3318-4621-bfcb-e62295c929a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6f39b4-f5e2-4cff-9862-c4e20bb53844",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb6444d-c5a5-4bfa-bdf3-8a4cc36a0581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907ca852-08d1-4b99-a42e-f1830d7e68b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043456d9-67f4-40fd-a042-ef602d0d5e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096b4849-7a3e-4e2e-9143-726e6176c3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3290319e-8ca6-43ae-8ff5-66e6130d5f58",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55a65b9-5d17-44ce-ad42-ff3e41bbb04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f649fd-26f0-46db-96ea-8c736b5ab0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b635dea9-89cd-4b49-91d3-0bbda1bc09cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7ee362-b772-4492-8c21-fd5bd382662b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77a1b7c-405b-45d3-aada-87998bccf9fb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9a7065-9b30-42c8-8b7d-5ee478f865b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27882f5a-f255-41a8-b85c-2caff833baa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a5c8ef-a6a0-448a-988d-7108d769fa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b57591-0729-412d-b9ed-5024d1e43a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db71fd4-f68f-4cde-a2d0-df9faba32111",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fb5413-f277-4ba7-a002-5ba103c8ead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da025f3-40bf-4286-8d1a-1b05afa19b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bca786-043f-48dd-96fd-2ce76e85f3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db8f8eb-37b0-43fe-9c33-a84bb4e16bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e02087f-6117-4a6c-a81d-9d8cad37de98",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849ca947-b278-4f5a-bcb0-c0ac9f6d1ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd298c57-1cc9-41ba-b0e3-fcfa547daece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a0355e-2d15-489f-8da0-e4040c9dd540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6efd48c-7360-4dcc-83f7-e2d0f5d697d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82affac8-79b2-41f6-8ca8-47109c304820",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aba3ef5-f086-4e96-acbf-9e3dd5a9b928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c83faa0-be46-4f80-8c07-9194d8c17748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2aa21f-8e26-4bef-b726-ab0029ea0c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5822c0-e302-4d36-ba12-0023397f0bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbf80cd-447f-494e-a769-7138f6e5890e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92de109b-0a22-43a7-9f88-e1222ef8c202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cb3276-3121-4e6b-9ac2-b2c8229b7ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc42ba49-2b99-4b66-b566-6f1f23704124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e712d425-9957-4eda-a13f-9939e8276fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9131b7df-9a46-49b8-887c-01c0bdcccf4b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5db383-655f-4c79-bb5e-1e49284eabdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95440f93-cf04-45da-8a84-c6172e1cfe94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da8bc0-598d-41a6-8956-397b9a5b9ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192ab900-03ab-4146-8fd2-131d8cf0ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4535e234-c491-47e8-9e02-f46aabce0d51",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c587d668-bbf1-4ec9-953f-496f9b6090ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e3ff40-4f90-434a-ac85-17ad8a80b689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03734a2-3575-4621-b8ac-6d0786d736f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e57163-832b-4bee-9d1f-fd4b27d1a8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1568774-9f7e-467e-9ab4-1f758fc2999b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555f139c-4eaa-491d-9742-a9e727a72996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788f28e1-c418-4658-a663-800854443d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48ba7d6-fbdb-4af0-bd5b-977fbb415223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4138879-a112-4256-adfd-5e166f6cf40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40795610-6ab8-4129-af3f-71535715297f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e10985-afb2-4b0e-a33e-0db592d72667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae825539-143d-4ee6-b903-7f258d757be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be47c8b-8b9b-41f5-a8d6-905727f174e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d74e07-75b9-428b-9953-57a1d42db150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b01691-5f1a-4292-bb76-b0a34c9e5340",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33385cca-b1f0-42f5-9f01-b0b2f8b936eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8289e3-5286-41a9-9cb3-8a6fcf09a760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a28c28-13e6-4b63-b147-60a8cfc9be8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f361d628-9d03-4c7b-812f-2d203237238c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d32e64-d469-4102-b982-e1d3b9ac8901",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48be156-a852-46c9-871c-80e91cc8a580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2da6258-de69-43fe-a81d-5af6e1384a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580b2a87-51c0-481d-a6b1-5bebd744c4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906ea207-a2fe-4e9d-ac9a-bf6f341c16f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0445eb12-3f48-4bc0-91e9-7da0989ab4ae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2523c5b-0db1-45f1-b68e-bae3dcf13ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9719eded-0029-4e04-9008-ab226e9f260c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c3b28-392c-4084-99c3-5ed563c7c291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9111252-91d2-439b-a2b3-65d739800642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748abaaa-f3ff-41ea-a602-e476a79f10fd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76016ec7-1304-432d-92ca-c56e80108971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dbf2ca-d300-4bd8-bf53-af9777fcc2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2ff68c-a0fe-4d8d-b3bc-787fb73eb84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce1f6a8-d37e-4dee-9700-1945f7296e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfb7dd1-8ffb-4be6-8c3b-a36686e4b44e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b890b15-54cd-439a-9ec8-b98c4eaedd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7498065c-9562-473b-b1be-510f036ede51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112f263a-ec0e-4ef0-862e-a7a2d915dc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dadcaff-2afa-4e4b-a212-9e5b259d6f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c5c4d0-6526-47be-bb5f-552e72622046",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfed479-8770-4918-b3e4-bbc1f0153eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786c6328-dae5-401a-87dc-dfb4e80ba561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23caf8ff-2764-4d3c-a51f-d4a8e472dec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3616fe6-3ed9-422d-9cfd-3d5f288868ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27ee72d-e464-4e19-a1f3-e0305974be7b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3cf0a9-df04-4fc5-aef2-e848e957ce24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e05fc27-0f3c-44d1-9e4e-2ac32bab85fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6eaf3d-9738-4f90-8e62-5d92cbe1e8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa5f268-05be-4e3d-8972-15777c416c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc594959-7266-49b5-b64d-a517065d981d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ce0839-c175-40c2-9977-80077cf7143b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c1f770-a8bd-4a7d-9b45-04eb06238a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd728c1-bdb4-4896-8f94-0106d8d593fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0972e7d9-2dc1-49bd-8807-f2918113b72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4a191a-61ca-472d-8efb-dabb2645aa9a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b40a70f-90a5-4215-b51d-fb14f7e3c140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ece1584-6319-443a-9111-24713b995d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f26edb6-216e-4ae6-90d3-f5fda0c89359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cbcdd2-6bfc-43bc-919d-406573b67894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13478f8-35f4-40e2-912b-775d4156ab0b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce23c86e-b517-44e6-b07d-aec5e8cc994d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ece8e44-b4ad-456a-9c9c-03a717e1cc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7d8ac4-aedc-4e25-95e3-fc13edea6d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4197b76-0c93-4f63-a540-c71052414973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39454bfc-6333-4371-8031-5309a8c52cd0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6786b67e-8c29-46e1-89e5-a95074725543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787bcc22-b446-4eb8-92fa-f1de0f567053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8ef33a-541a-4455-a9df-522ff0bddfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9c158c-de61-4f0b-8723-4c12ee49c568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b351d2-3cca-49d6-a537-c15fc259ec2a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c239e5-a817-4362-bc48-90ba4a75d46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e674a7ab-334b-46d7-b717-f9c24cbe4661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236500a0-3965-46c3-804c-ac60d0f41202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ce6cbe-c83c-4de5-9477-f6996dc5f7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0e640c-312d-4e06-9691-0d50ee3d0597",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3fc2b0-a736-4971-a491-c63f9332043e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1f2953-81cf-4572-a9b8-152a651b09d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc8d528-3da5-4011-b6ca-40522f43f654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68216695-f5e8-42a7-acbe-e013490d168f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b1a2d7-b4ef-4dbf-ba16-a15602727936",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a089c2-e854-4078-82d0-c1176e898907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f4a0a2-9ec5-475a-86e1-82a8523e29ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71d7702-6ece-43e0-8444-ffa4c61fc9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0077e507-5ecf-412e-bef7-da170150312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90ae9e-ec55-430d-9a97-7a94302ee138",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b955df8-3382-4829-8ec9-1b774d0494c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23abcd06-60f3-45ad-b7e6-bd8caff84bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90b93b3-9cb4-4309-a644-d375e6c53c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82fc20c-8693-4231-8bd0-5f623e44e90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229f682e-6f2e-4d35-964a-7958d5069cc9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e70b0f-8ce5-4738-ab93-43b2c4f926c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7799d1e-1862-4e56-a248-2e94c8cc51aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3db059-3483-4e70-ad29-a7c9f9b0a232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b3a271-a6a2-4186-a0d1-d1898b5ed8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b99403f-6d8a-4aac-a2ef-209a432ab069",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e10e26-8024-4e24-af06-4dbea24f1e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7719263b-1758-460f-8630-d36d379eb11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66b0f16-54ef-45a6-83af-fe1f632f9af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97901729-c7e4-416c-b610-3359a805549f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f870ef3e-3c6a-44ab-99d4-b52f8f659d8b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f001d8-98f0-4bcb-8a45-16f5401b74b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb3c02e-cd6b-4ded-817b-be1b5596f85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7611a5-a3c0-4ace-9f27-bc1f7dec8977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b4ce2f-ee63-47fd-bba7-160aa0e5ceb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b76812f-f147-4761-a4aa-ac092330d962",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cee752-9e33-4f37-9919-790b070d8e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4065fec6-da92-4d82-88f6-e79a8f845d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae128b28-5555-45ca-9ce1-bc5af52ec28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2394289-88dd-482c-8902-cdca392ebeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e334dc-6774-4723-8051-055273911b2b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d85d60c-2fc1-4aa8-b730-6940a50d1d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7263ff-4b4a-497a-9af5-ebf4d306fa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb97046-6dc6-4a39-ab86-da0e721f64ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740581b4-9273-48be-9f16-783de570d567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b0c65a-c13c-4466-bac7-43f38d0d713a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86c31bc-4769-470e-b3fb-33cf3aa68076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebab6b6f-a22a-4cc8-bd8c-42cfb6ed8fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86c268e-19ed-416e-82b5-079ded266700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea96ac7-f525-4945-a47d-126cc2b07b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602fe63a-d08e-4c69-9dc5-2208ffd63e9b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f87eb65-a4dd-49a8-8d1c-64b8794ca290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de0cbc5-9908-4171-a34c-9e52ceb05d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce0b3de-b114-429d-99ba-f220eed2ae97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713b8d81-738a-4b52-ba4e-2905baf6878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb82993a-48d9-46a7-baaa-7363a58dd533",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c323c04e-08db-4e14-8670-c906130312fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67b23ba-eae4-414d-97e7-6a60aba54415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466fa214-79f6-4a74-a27b-3b4bf0de4207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71beab9d-8e7c-4bba-b1cf-3e41b3cdd3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8b25f1-2fc0-4c8c-8aa3-c50ec2a967a5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c68c671-30b8-42de-ae22-e5f5c82e55d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291ba793-5293-41dc-b651-c663baecf130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760521ed-ee5b-431c-a51d-d84be4998c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2bd23e-3d29-4d6e-99b1-e3123e3a0cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd502d76-2851-462b-81fe-34f04a7184ec",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5873e7-c957-453b-9589-a218b6b947a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d2cf6c-523f-4030-b6f8-330c5f00a733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fcf7d9-8904-418b-93e4-bae06ada23a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294e1262-ce2a-4941-b25d-4c187bd22974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d7bbd9-a28d-4e95-96fa-c863c94397d1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c4299a-518c-4e80-9ecd-983c7fc26c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8db6bfb-ed5f-47ef-a52b-9d011b514378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29965e20-8c8b-4e31-8bdb-cfd5b67b459f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825c37bf-1804-4aff-8c35-44621131ed32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796b2c6b-d5a1-4ba8-acef-f76de043d928",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3772dae5-5751-4ef2-8d04-70154c91b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0917453-3b40-4aee-ad76-97bba3c80094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f1bdd2-4c8f-45c6-9295-147c7b68ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27da197c-d5d8-4b7d-b6cc-7cd67567d1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ccf1e0-501c-4f77-87a7-4341f514be2c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8524e7-5677-4cae-bcf6-2d1ea4569159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a704ee06-90ad-4390-adf4-f1095113fc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85b7910-58b2-4706-b6cb-e160563bbe7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95780be-20b8-4174-a85d-c4a7b8324fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a113dfec-679d-426a-b1e3-0902043846cd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45612a7d-04eb-4543-a904-476019dace14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07b492a-b613-4b31-994e-3f0f0d7435c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77f2b01-c7c3-4bcb-a62e-a4eb6195f201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fa302d-dd4c-498c-bcf0-488a43f45a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f844af67-f59c-4222-afe5-4e853ff6f2b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d609d7-978a-4709-95bb-9381e140782d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3073f165-84a3-4a53-87db-c8fd24266aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7684dd-bcef-4c47-b33b-12c1fb91ba6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c5f630-9472-491e-a17c-809883fc19b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80489e-b198-4520-b55b-d3be146c2557",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e0c697-6448-4ac4-8bd8-550d517e0ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7281b8-de65-499a-a43b-acbc529bb9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594cc428-5a9b-45bf-a7b7-abb7cf9e5840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dded2000-4e3d-4915-868a-5aebd127bfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f50a14b-51ce-4b92-ae16-cbc36a9f4a11",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7486d7-c651-4654-b70f-89bf24547123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72afe7a8-7938-4c7d-ace5-4fc424025d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef20d09f-2614-4cff-b773-e45813ca1cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c829b8-1da9-4d3f-8532-7964f6b22ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbda705a-905f-49c4-bd12-50a964bfcf0d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb3448b-b7e6-467c-8e12-5595e559e707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49cf0cf3-9129-4a23-b397-43fbd8f67069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d3b1af-540e-4059-a287-837051b565ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3525c5ef-23be-4a65-872c-360752bff615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72607f-a6d5-44b1-9495-3fe58e69bdea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2977259-c76e-460c-ac45-da8d0e2415bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3a3b97-9e3b-457e-8856-22a3f602ae92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47afcc80-74ac-4453-94f5-cd8899bf3afb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59ba101-b3ea-4f9b-b69c-d8f92a3930c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396d8760-5517-4e61-a15d-8d79e2b2b938",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec11ffd-998d-4743-9e3c-036062ae3350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2afae23-797e-4a65-8712-79f0649e16fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e5dfd5-e25a-4176-867b-f50209b0fe03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf66249-59a5-4346-b565-563f1cdd672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15326bbd-66ca-4f97-8be8-3d56092a1158",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddacf50c-37d2-48d7-86c4-9d58565e0596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6b95575-4048-404a-858e-712ffc9fa2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038f827b-54fb-4040-919d-cc269e6bb7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5c63f7-0aa9-4a21-8a5c-b36f7902f9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df8af28-87bc-4a6f-aef3-cbb7d99ffd7f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0208d9a-066f-4380-b213-1d8ca21f0edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6d4376-1c2f-4c7a-aed1-5e35f9cc894d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6592207-724b-4b6e-875e-43495aea0a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bb4391-b662-45e6-a2a7-746e6a398ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f573a9b4-9d04-4b76-add3-6a5596d9f227",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2203218-ea57-4bdb-9473-0d584555d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce813a7-d5ee-43e7-937a-48593ee94d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad3acc5-d8ed-4f53-be76-488ed75ca671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22555581-b8c2-47c7-8406-ec8daca05b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f615115-2036-4b54-8df9-5777daf6ae42",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bd066e-6bb4-4f8d-a044-d993ca83f962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ab448c-48ad-4b99-ace3-c67b08f8122d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5755b0f5-39f7-4d48-8beb-781c32f5c607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192f552a-7798-4a81-aff9-7aaf1a3a1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e97bac7-7b25-4160-a479-e0f94b1af420",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cbea25-7c32-4dba-a72b-767112b30fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3099013-e8c3-4ff3-9974-a6f020617f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4df4db6-cd81-4499-a0ff-bfcdb5d29391",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe85fec-06e5-469c-94ca-5589fc4e62e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcaa4f2-c70c-4016-9428-52d979fcacad",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c138302-dadc-47d4-9563-55859ac059fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42520104-0966-4850-9285-c6188824e145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a3510c-fba0-4287-9d96-7b99a15b1565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2206c29f-c1b0-4b1a-b76b-59a4901b05a3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "311a4744-7255-4686-99b4-0142d02983d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "294a81bf-2645-4421-9b92-e43bfc90c766"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fcb6c36-4228-45bb-8171-e2b4ef23dac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8ef0ed2-d853-4c7c-a701-b3569b32dd28"
                    }
                  }
                ]
              },
              {
                "id": "6f735e19-78eb-4c5d-91fc-0ab3f7430b25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75d5ff42-18b3-488c-804d-55f17920ec28",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c357efe1-af69-4026-be14-03498e673c2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4f4d93c1-a269-48b6-923c-c9d2a5818b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ac0c91-bb02-4c39-b4a6-a084f0d93bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37e99bf7-0581-44dc-b73a-6eabd426b485"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3d28a66-4784-486d-b54d-a78cae5b12ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40994159-b94e-4f3a-a5b6-fca43ac4fe26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c5ad34c-9d16-403c-a7eb-dcba3726fa21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec4938a7-bea2-4fa6-bd79-41997bd5cf56"
                    }
                  }
                ]
              },
              {
                "id": "eafa4e75-881a-4e0a-9ac4-437ae2d21cf8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fe7d3da3-d5ae-4084-a6d3-091b7562ce18",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbd6802-17c2-405a-bb4a-5c9c6cb77767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "769d6db8-2fa5-4808-9696-b925cd066fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90509701-51bb-4959-b044-7961ee939b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a81d29-680c-47e6-8fb3-003db2b675e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d87f0d2-6d22-430c-8b1e-920b5d2306cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6674ea9-0958-4db6-b0a5-2776d059efd4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1056b23a-aa73-4921-9faa-d89656d75e67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cfdd92f6-a1cd-4016-a11f-ebc164a889a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe5f61ab-d1f6-4756-b4bc-c25de1d714d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66c31d6a-491b-4b9f-be6a-4fd15d5c22e4"
                    }
                  }
                ]
              },
              {
                "id": "9faa1c49-3f20-41a2-8a44-06c7f5672f6e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "145b4ccf-305e-4051-957a-a8256e49620d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f3001d04-fdbd-4a44-8469-f0044178bb2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a67af63a-04af-4f6f-b869-6076fef876f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a1c2ff3-a591-4cb3-b771-46664b62567a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d619fbba-320b-413b-bf6c-0b7ab299d8f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a52707e-a37a-401c-aeaf-1ef029ae1d54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0525968-f686-488d-958a-385caae012c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "497888fd-db2c-4052-b603-859a975f2ade"
            }
          }
        ]
      },
      {
        "id": "93c39b66-f27f-4839-b6e2-0b5423d67dbf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5912262e-dfbf-4048-b9ee-e5bc66cc150c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b445516d-254c-4498-b764-8e6be0c6ca80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7c118ae-ac5e-4884-a407-1af0454ed012",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3d5068-a27b-47cc-bf86-88bc7d453bad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8726da30-5a79-4344-a442-b019bc5bd59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2a30be-d789-408d-b9ff-e265ed426871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb803075-05c2-47c3-b137-b93d0ae6b3c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd3d2ffa-5642-4943-be23-65ee46966ee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef8fbacf-ad6a-450b-b5b8-8e2589c6ecd2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72c528ab-67f8-48e2-9c05-cf90e9eeb084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62640d60-dd30-4fa4-856a-e7b2a07cfae8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "495c2072-edfe-48a7-b602-55bf4971b25a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "42c09231-356a-4681-b615-e8726280f811"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e554c3a7-f1ab-4d2c-8c2e-c0b91ac733c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7df6e6fd-950a-4090-90ca-e3a16ac8b817"
            }
          }
        ]
      },
      {
        "id": "89c8070b-a19b-4df7-8cb0-641573fbceb7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a4e21850-08e8-4874-ba05-962890ee08f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "200b3466-ceb7-4ad5-9b9f-6e5ebfd3aa0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5a388b5-c26e-4419-b110-ef29989e8fb4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87347e9a-d061-4e61-80ec-d33bb7f4bd8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcd4a55d-2057-411c-94ec-412091ac5b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab41bbe-5dff-4fc3-a513-a562add14690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b1f8f06-7a9d-4f3c-bfe8-260cbbf62e9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "749f7b85-21d2-4b75-8a29-d23245d21408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2f99de8-8f44-4732-b9f8-06fcb203554d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31b7c5b5-5383-49bb-8664-90d4a4bc13e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "092eca68-d653-4b2f-8366-7414bac553dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34b552fc-5df6-4838-92e0-bf2ab9ddbde2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f96c44d-f1af-4133-b9b2-68482fb873c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc844742-2d3b-41ca-9012-41fc36e5e25a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc637d78-443f-4026-916b-23f6cd25f31b"
            }
          }
        ]
      },
      {
        "id": "b6178908-1e6f-437c-a445-e4266c848b2b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e0058ed3-c5a0-49d3-829b-c23d8570616c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96109033-9a2e-4df4-9222-ac0a1a78b8e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0635d1e-fd0a-4dd2-bf40-cdbf04ed3f48",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690bdc4b-6351-4fab-933b-3020e56cc6fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dc3a82b-eed0-4151-8cf7-6a97521bf046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9336a3-2905-4706-b20b-6d65678f100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32e8032f-e9ea-4db9-9767-e1b3f2499da0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846e487b-fc7e-4eaa-998b-4bc0df9780a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d96127-2412-4d45-a5fe-a2be952197e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a39d805-4928-454d-b603-c7cfdf9a1ebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bde38213-85c0-439b-8129-1cd05ffea724"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f158569e-efe0-49d3-8f1c-acc02d3b0b89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "500e11a1-a0af-4268-a27a-8e66f82d4502"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57025a53-7630-447d-afda-8342bb09445c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "393951ed-1d4b-48c7-8f09-db33bad2d262"
            }
          }
        ]
      },
      {
        "id": "7e543e9d-fd89-4922-916d-c1b059c21964",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b643d639-8a2d-452d-9db2-e4f9663c80e6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b17a055-8758-4ada-918c-e0d4be8e28b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e97ba029-ca40-480d-b7a2-c60456316f80",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce0eda4f-0524-4583-a9d8-1e01244e5210",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba3af8e7-ee98-4e13-80d7-0338a9b663f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.642105263157896,
      "responseMin": 5,
      "responseMax": 216,
      "responseSd": 19.96694590820538,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704501328224,
      "completed": 1704501340527
    },
    "executions": [
      {
        "id": "12515841-a83d-499c-aa47-5dd59754f89c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7d8d952f-aa35-47b4-9dec-8d1192318d8c",
          "httpRequestId": "0b1f6d15-d964-4e9d-a635-3cfea1851942"
        },
        "item": {
          "id": "12515841-a83d-499c-aa47-5dd59754f89c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dd900a64-c928-438e-a2e6-44a98e0355a1",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "53437c50-1e11-4a36-a7a8-417aacd17d9b",
        "cursor": {
          "ref": "ef8a8dbd-73ad-406c-874e-d0484423893f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "09a5d59b-4a2d-4477-a09d-589813e0ef41"
        },
        "item": {
          "id": "53437c50-1e11-4a36-a7a8-417aacd17d9b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f9967e23-f4e6-44c1-9160-77891371ad0f",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "5705c0e3-ff63-4354-b984-0c98830a18d5",
        "cursor": {
          "ref": "68f6fcb2-1609-448b-a665-66c75bd66832",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fc737bb2-a85c-473b-8f12-db5d0dbbb7cb"
        },
        "item": {
          "id": "5705c0e3-ff63-4354-b984-0c98830a18d5",
          "name": "did_json"
        },
        "response": {
          "id": "6f8df200-df2b-4c6e-af35-8cd5046265ed",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeb5f8a-a778-4eff-a179-48660d28965d",
        "cursor": {
          "ref": "7f9e4daf-8907-4bf5-98b2-87b4ace79c0c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "45b7b2f2-cbf6-4862-93fb-e8540a6f3a7d"
        },
        "item": {
          "id": "9eeb5f8a-a778-4eff-a179-48660d28965d",
          "name": "did:invalid"
        },
        "response": {
          "id": "07d3e674-1e22-4d97-8792-44d72bd48794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeb5f8a-a778-4eff-a179-48660d28965d",
        "cursor": {
          "ref": "7f9e4daf-8907-4bf5-98b2-87b4ace79c0c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "45b7b2f2-cbf6-4862-93fb-e8540a6f3a7d"
        },
        "item": {
          "id": "9eeb5f8a-a778-4eff-a179-48660d28965d",
          "name": "did:invalid"
        },
        "response": {
          "id": "07d3e674-1e22-4d97-8792-44d72bd48794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b8ab98-4642-40a6-92c3-3731d5671264",
        "cursor": {
          "ref": "d676075d-7bab-471b-9b5b-b2981e72a95a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bfc8e668-572c-4bee-9799-d5bf2af819c9"
        },
        "item": {
          "id": "53b8ab98-4642-40a6-92c3-3731d5671264",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "94e9a2ed-4176-4491-ab89-2a436b086bd4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1ada46-bfb1-4f5f-8ff5-860d1c686297",
        "cursor": {
          "ref": "ba4f5fd2-b2d0-4496-b619-0978ccbf111d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b1bc05d3-8969-4ffe-a595-bca2f503188c"
        },
        "item": {
          "id": "3b1ada46-bfb1-4f5f-8ff5-860d1c686297",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "816295ea-a33d-40df-a76f-f7f7af227698",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01f9580-5aa7-4bbf-967b-0218e5dc96e1",
        "cursor": {
          "ref": "2c986855-1f84-4267-a108-be50df750905",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7eecc397-09e8-422c-b039-7c4fa4e6026e"
        },
        "item": {
          "id": "f01f9580-5aa7-4bbf-967b-0218e5dc96e1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1f969a28-5a93-45dd-b107-c3b0eb86020c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9471d95f-db6a-4b86-afc6-8ff34eace0e1",
        "cursor": {
          "ref": "6cf91b45-fcc6-489f-b67a-86fea42cc47e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83bba18b-6b7b-4f1c-a701-d6b3b4c51f1b"
        },
        "item": {
          "id": "9471d95f-db6a-4b86-afc6-8ff34eace0e1",
          "name": "identifiers"
        },
        "response": {
          "id": "784352ad-e0f5-4276-a911-bae6720f8eea",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484e7d21-b9d4-43f4-8f15-f0b2e07aa09a",
        "cursor": {
          "ref": "2a1c4690-ee70-4e20-985c-8d9cec1e4935",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "92737ce8-a41d-4542-807b-ab1ec2fb709b"
        },
        "item": {
          "id": "484e7d21-b9d4-43f4-8f15-f0b2e07aa09a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ac816b85-5cfa-4d04-bcfb-22561c34d3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b9d32-ae62-410c-a6e7-8b4d9ff92507",
        "cursor": {
          "ref": "97edb5e5-293a-4f63-92b3-712c87de50e7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35be2c97-d912-409c-acbf-8cfc98d53ce6"
        },
        "item": {
          "id": "630b9d32-ae62-410c-a6e7-8b4d9ff92507",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "391facbe-963f-4db9-a885-4a1f0e986aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d7563f-6c28-41ce-a72b-0ae43b47eb1b",
        "cursor": {
          "ref": "7b06fc5b-cabe-4c4e-8885-c2097c0596ee",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "32e7b5cb-29aa-4822-ad0a-72a236b04e1b"
        },
        "item": {
          "id": "e5d7563f-6c28-41ce-a72b-0ae43b47eb1b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6cf53b8a-422e-4da6-aae1-21c5ae8d46ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb426e8-e82f-4a71-9666-03e356dc48b4",
        "cursor": {
          "ref": "3522dc52-0f70-459d-9962-7e44464d7567",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f8726aa7-09cd-4855-b19f-347ea2b459ed"
        },
        "item": {
          "id": "fdb426e8-e82f-4a71-9666-03e356dc48b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7409acef-49dc-4377-88c4-f3d56aaac582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8277bf-8eed-4e9c-b3cf-4638e8a83dba",
        "cursor": {
          "ref": "02b3a3bb-3350-4ab2-8172-b100fdd1f0c4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f548c8a3-21b5-4f81-bfea-1bf806886848"
        },
        "item": {
          "id": "0e8277bf-8eed-4e9c-b3cf-4638e8a83dba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a1d4eb57-516b-419a-94bf-568fe238dac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ed109-27b7-445e-8162-f5ac62c453bb",
        "cursor": {
          "ref": "f8ca623b-273a-4984-a882-561ccb019df0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c592daf-5b19-48d8-a6fd-84a1bec2e1d2"
        },
        "item": {
          "id": "359ed109-27b7-445e-8162-f5ac62c453bb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "299d3dad-02bf-4f13-93f9-1b9cbb0245e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d642bd-f79f-4d27-9cd7-2011c0c2a639",
        "cursor": {
          "ref": "fb8e698b-bf47-43dc-bc10-42836cfbd7c0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ec50aae1-d75c-4fd1-b166-a6e8002316c7"
        },
        "item": {
          "id": "74d642bd-f79f-4d27-9cd7-2011c0c2a639",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4357e253-8b90-4561-aae9-576cf5b84b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578cd60c-a7d6-44b6-b06f-a7c6c8c48764",
        "cursor": {
          "ref": "618dd9a0-4f54-4fd3-94df-b0a3f82b7fd5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "91e13660-8a9b-429a-8fa5-b811c15e843a"
        },
        "item": {
          "id": "578cd60c-a7d6-44b6-b06f-a7c6c8c48764",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f5a67bc7-78bc-42e7-a76c-fcc747c0ed6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4c3393-c7f1-4bed-8a11-d82fbe932878",
        "cursor": {
          "ref": "a20b958d-8f0a-4e59-920c-fb2d92a9f278",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8846655c-b10d-4789-b215-c2173bcd1c9b"
        },
        "item": {
          "id": "ee4c3393-c7f1-4bed-8a11-d82fbe932878",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6cc7f199-7204-4900-aef1-60fc8ce77360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9914a585-c5ba-4cfa-a0fd-40c63c15ca05",
        "cursor": {
          "ref": "05522b51-2455-4b87-8f5f-84e7ac987a1e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a1fc417f-9209-45ff-8823-66d9eb955320"
        },
        "item": {
          "id": "9914a585-c5ba-4cfa-a0fd-40c63c15ca05",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f82cdb3b-de0b-43a7-9947-390fbe0f351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3871b0-8d91-4a80-9cd4-fee7bbeed94d",
        "cursor": {
          "ref": "dea00d41-a549-48d1-92e3-b2c4f0fd8217",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da3ee2ff-72c7-45db-8dd4-157a460f2689"
        },
        "item": {
          "id": "ee3871b0-8d91-4a80-9cd4-fee7bbeed94d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d97f2a2b-f21c-4c07-8c65-19fd57904825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3171746d-b999-467d-90d7-59f106dd5841",
        "cursor": {
          "ref": "43108035-87fc-401d-9900-5b59aa332cd9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b908f0f-db02-48dd-a86f-959fe655183a"
        },
        "item": {
          "id": "3171746d-b999-467d-90d7-59f106dd5841",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "430ef7da-5a01-4475-9821-390247226e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb16a4-9171-4fd6-8954-a5ffe35c6db0",
        "cursor": {
          "ref": "b622f8f8-41e5-4afe-9bb1-f42d76bb48e7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "786412a9-867e-47c1-94d8-3e2fc4d24c6c"
        },
        "item": {
          "id": "1bbb16a4-9171-4fd6-8954-a5ffe35c6db0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9cc3c067-f27f-4ff9-bacf-04d1fe0988e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3704d36-bfa4-4a8c-aca3-8d59fa63a5e4",
        "cursor": {
          "ref": "dbf9596f-77bc-4de9-92ab-e4abcf66c694",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "57b346ad-4ee1-4834-bd6e-d453dfaa713c"
        },
        "item": {
          "id": "b3704d36-bfa4-4a8c-aca3-8d59fa63a5e4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3cf32573-592a-439c-ad35-cefce48c7011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2790e458-aaa1-4f78-8ef9-ea2cec6ee1cb",
        "cursor": {
          "ref": "5257c27a-233d-46bc-9d8a-0e12e03a8a48",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "66a337f8-b1b1-4276-a17f-e63412748c74"
        },
        "item": {
          "id": "2790e458-aaa1-4f78-8ef9-ea2cec6ee1cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ded85e32-b1fd-44e5-a13c-fa650e98386e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9a85f9-3180-4377-a435-6f8648556907",
        "cursor": {
          "ref": "59038de1-6a64-4cc1-ad15-51a2192ed6ab",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e2dbf7f-6ee1-4382-b8b1-7d0a2151d8ef"
        },
        "item": {
          "id": "9d9a85f9-3180-4377-a435-6f8648556907",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2e515174-cefe-4a1c-b1c8-4a4d9676422e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe3c741-6c3b-4e0a-b7b8-9462a9db7cb5",
        "cursor": {
          "ref": "64f36b72-a683-45e0-a315-217c55ae6c08",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2624a2bb-3e28-4887-a646-965dfef39067"
        },
        "item": {
          "id": "abe3c741-6c3b-4e0a-b7b8-9462a9db7cb5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e3ffe21f-e98b-4be4-9ef5-e6d509bd03a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d339628-836f-4b1c-a4a8-14078a5d8130",
        "cursor": {
          "ref": "4fdbeeb7-75f5-48eb-924f-b18e3a2cab94",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0744bb2d-764f-42f0-8bdb-368e4f536b1f"
        },
        "item": {
          "id": "2d339628-836f-4b1c-a4a8-14078a5d8130",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "32ec9132-b395-408e-adf8-477a562792f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01500d3-35a5-44ef-a699-a0df5a82d89f",
        "cursor": {
          "ref": "a36f92c4-b701-46fe-b303-3a45704c4b33",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "624b3199-352d-4c65-a5ef-71369641e1f5"
        },
        "item": {
          "id": "a01500d3-35a5-44ef-a699-a0df5a82d89f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8d4d0137-1f0e-4c8c-bf85-f93c13b7253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ce80de-dcb6-425a-9545-91c448b3d72c",
        "cursor": {
          "ref": "a263c12b-c5af-4d08-8f92-e7403ce33d52",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "88ebd4b6-92a7-41ce-91fe-5d5dbe236420"
        },
        "item": {
          "id": "a4ce80de-dcb6-425a-9545-91c448b3d72c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6703aa0a-a047-4495-af43-079d0a060164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f657543-dd39-413c-b29e-bfe0dd577b66",
        "cursor": {
          "ref": "b20dcbcb-319b-4ea9-8ccf-cc042a5d9455",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "365187c3-acb5-418e-baad-45a2d959036c"
        },
        "item": {
          "id": "7f657543-dd39-413c-b29e-bfe0dd577b66",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "877d53db-14aa-4cb5-9f3c-b72efbacf352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3ab8d6-ddf9-4a19-bc93-e0ca0b036eb9",
        "cursor": {
          "ref": "282d48e8-c975-4f96-9a76-7bcb825a8d5b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c413ad44-1fc8-4382-9fdd-fce16ce3cd7a"
        },
        "item": {
          "id": "9f3ab8d6-ddf9-4a19-bc93-e0ca0b036eb9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4dbaab7b-fdad-448d-80a6-17fad1c2ffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19454787-acde-40dc-a1a5-6ced01f2be7d",
        "cursor": {
          "ref": "a3993abe-0095-4d97-bb99-6551a2fa93f3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "63b1d545-d00d-47e4-881a-35adfdf776dc"
        },
        "item": {
          "id": "19454787-acde-40dc-a1a5-6ced01f2be7d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "730c3384-a03f-4627-a6e0-80a3c39e5dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3084f21-867d-4b01-bd26-f980189edac3",
        "cursor": {
          "ref": "5457bbce-774b-4836-933b-f40cd5c195ec",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "21d48ac9-c9f1-430d-a9df-35190b7541c9"
        },
        "item": {
          "id": "d3084f21-867d-4b01-bd26-f980189edac3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2104dddd-7de4-4a61-97d6-14f7bca77cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5838e8-f22e-48a5-b5ca-e5c21e8dbb3c",
        "cursor": {
          "ref": "6f2a706c-1e62-416c-9778-571c017b4c6f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d51f432-85cf-4ae3-9f9f-e100daf7ad66"
        },
        "item": {
          "id": "4e5838e8-f22e-48a5-b5ca-e5c21e8dbb3c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "83a07fd1-44d2-44f7-816f-5e87f130e66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16eeb62-6884-4ad2-9df6-1820e34232ef",
        "cursor": {
          "ref": "2cb6f76b-85a4-4bab-8d3f-276a06d4f5a5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d5ef16a7-08f1-49a6-add2-4200115e3d34"
        },
        "item": {
          "id": "f16eeb62-6884-4ad2-9df6-1820e34232ef",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b9db64a3-96de-4873-8259-ebf31186f40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58f5797-6872-4dbe-a7f7-bfdccb86ce07",
        "cursor": {
          "ref": "db5688c3-4cc0-4e1d-9868-751e13b0f9dd",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d2d0eadb-b8b9-41a2-a012-4cb668c33518"
        },
        "item": {
          "id": "d58f5797-6872-4dbe-a7f7-bfdccb86ce07",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b773e3b2-e7de-42c7-9faa-c28e1af07143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1699092f-0a39-4e21-8171-e8ca8efefa30",
        "cursor": {
          "ref": "cba765ef-2a71-4d95-9fcb-32e1101412b7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6194b676-8492-47e4-ac77-8760c2ea321c"
        },
        "item": {
          "id": "1699092f-0a39-4e21-8171-e8ca8efefa30",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f42168f3-a768-42f1-8116-f7dc8d9e007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f2a8fe-fd6e-43a6-8713-a007efe817c4",
        "cursor": {
          "ref": "cce584d5-fe61-42f9-99ce-4d713a4ab709",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2a4f4662-c58a-47e2-a485-d54567f4faff"
        },
        "item": {
          "id": "b0f2a8fe-fd6e-43a6-8713-a007efe817c4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0b90ffd9-d0e4-4692-a5aa-f1123a0f3a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21762008-5023-4ac1-b23d-9bbcef58b0a2",
        "cursor": {
          "ref": "3c2a9de5-c5d0-42a5-83e0-8e6cccb7d5bc",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fabba58d-fbb4-4034-a622-a029f6e14638"
        },
        "item": {
          "id": "21762008-5023-4ac1-b23d-9bbcef58b0a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b7c73408-6329-440d-bc52-cff591de1914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d85a2ae-6b33-4a88-a6f3-2ce774b53232",
        "cursor": {
          "ref": "7b23b09a-5634-4c04-9e23-6ef236c8066c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ce9f4f1e-29bf-48f1-8062-21d60ecc61d0"
        },
        "item": {
          "id": "7d85a2ae-6b33-4a88-a6f3-2ce774b53232",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3a17eac6-bc59-4d92-8a34-a6d0b1ad74fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca195c3-572e-4f81-8836-7939529a8880",
        "cursor": {
          "ref": "956819e5-8825-439b-b987-b5ae83360664",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "62ef25b4-6c4a-4819-8f2f-4b5f49aec77e"
        },
        "item": {
          "id": "2ca195c3-572e-4f81-8836-7939529a8880",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "369f52a7-54f4-411c-9f97-18aa86f7da6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f43368-df78-4b10-81d0-bf4b81b6a1fe",
        "cursor": {
          "ref": "fd53557c-fdbc-45e9-bd9a-dcde1dda07f5",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "be7f52ed-07a1-4fd3-a9f3-d9c6a3152ded"
        },
        "item": {
          "id": "76f43368-df78-4b10-81d0-bf4b81b6a1fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3a9cf4a7-926a-401a-b2e2-701567798500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9200cf9f-2544-4b53-9d41-46966b6a0583",
        "cursor": {
          "ref": "f196a9c7-865a-48ad-bae3-2ccbbac23c49",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4173464f-3227-4f1c-bc00-5308c4686e5d"
        },
        "item": {
          "id": "9200cf9f-2544-4b53-9d41-46966b6a0583",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b3a0a5be-8eab-4e12-82ca-eec2426ad554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0ea066-a67b-4348-a33a-54c9f076bf12",
        "cursor": {
          "ref": "b7719d05-ba4a-44a9-866f-d11ce0673463",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ebd71b19-df41-46fc-8678-a9aecfd63988"
        },
        "item": {
          "id": "be0ea066-a67b-4348-a33a-54c9f076bf12",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b8f249e9-0eae-4ed0-b966-e1e7641ae07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d195ae73-5c05-40d7-b361-16235e2d245f",
        "cursor": {
          "ref": "635691f4-09d1-42ef-b959-7e027490d3ee",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7de0e1a8-dc14-49e8-9a88-5bc5491b287f"
        },
        "item": {
          "id": "d195ae73-5c05-40d7-b361-16235e2d245f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1d0ba787-99a4-4785-8a4c-bc9e418aaadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286855b6-81aa-4203-af7f-5b81a822c4ea",
        "cursor": {
          "ref": "fad8f533-ee77-41f1-8ee5-d7c037186f6e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5ddfc67b-c5b2-4d62-9881-e17db1c2e681"
        },
        "item": {
          "id": "286855b6-81aa-4203-af7f-5b81a822c4ea",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6144774a-d4e5-421c-85ab-6035b24b049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf0ff79-0656-4293-887b-988efd2c6e3b",
        "cursor": {
          "ref": "a62ba54c-6d16-44a7-9198-34b4abe3cdca",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0de6761-2e96-4e0c-b7f5-d55cf47711a8"
        },
        "item": {
          "id": "fbf0ff79-0656-4293-887b-988efd2c6e3b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1dfec8d6-6e29-4f09-bce1-2afad91df517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09d41de-4e48-4e76-94fe-a42a97ff14de",
        "cursor": {
          "ref": "9cf40f31-3988-4510-bdca-e7ea117dc68c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1aaf1106-3315-4c65-b471-2f3e9e371546"
        },
        "item": {
          "id": "a09d41de-4e48-4e76-94fe-a42a97ff14de",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3fae7d83-219f-4f15-9a52-0a879c2a6a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1627bb0c-41b5-4262-a347-1c4f8dd4fef2",
        "cursor": {
          "ref": "e786d134-bb2d-47d0-b1e8-981ca903ccd5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ae837ecc-ec94-415e-af52-eda9f546a68a"
        },
        "item": {
          "id": "1627bb0c-41b5-4262-a347-1c4f8dd4fef2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2376f6e1-6b6a-4823-b2da-94a73bed2c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34493dcd-9214-4009-9ac5-69c955d0c489",
        "cursor": {
          "ref": "68e21eb4-7cea-42ea-b339-c51f6ac083a0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "14c6e81d-214c-4f16-be9a-a4d328efd9ea"
        },
        "item": {
          "id": "34493dcd-9214-4009-9ac5-69c955d0c489",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6283e469-08ac-44f6-ae78-3b7af2cc0c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade73fb-541f-4121-81d6-a59674be92b9",
        "cursor": {
          "ref": "05c75a22-7698-4666-adab-8e15debf4c84",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "93d36644-d02a-4ac9-a96d-52d58ddd5a62"
        },
        "item": {
          "id": "7ade73fb-541f-4121-81d6-a59674be92b9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c7e9866f-4f0d-4dca-ba26-f94bc3bb5c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceea63dd-db4f-45e6-a5e0-f07afe6b5082",
        "cursor": {
          "ref": "56371ff6-97c2-4b61-8801-9183a298869c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "691240ea-7205-4ce4-9579-e0827d61f69f"
        },
        "item": {
          "id": "ceea63dd-db4f-45e6-a5e0-f07afe6b5082",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f30ea4b3-dbf8-4627-adfc-148ce93f3711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94634a41-44b1-4a82-91c6-52cf8819bd8b",
        "cursor": {
          "ref": "f594ff7b-b172-4037-8a82-4924788bb83a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "53f2bb44-3aaf-4031-8064-44a11a62043e"
        },
        "item": {
          "id": "94634a41-44b1-4a82-91c6-52cf8819bd8b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a853b574-a3f3-4e18-b088-e86a7fae2932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf623da5-9a0b-4fcd-904e-975e5e073424",
        "cursor": {
          "ref": "bdd2160a-25e0-4683-ae3d-bd96468479ef",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "008c9f0c-fe8f-47ee-a029-49097ac5166b"
        },
        "item": {
          "id": "bf623da5-9a0b-4fcd-904e-975e5e073424",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e3cb37a7-3be1-46db-9926-e6f98a49af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929c7ac0-a698-44fd-9e9c-291ff2ee3c44",
        "cursor": {
          "ref": "53c1387b-d48a-43b5-8351-87a77bc16de8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "efc91b86-83c4-49e6-94dc-c62f6f577289"
        },
        "item": {
          "id": "929c7ac0-a698-44fd-9e9c-291ff2ee3c44",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e25ee426-4501-47e6-9d29-63dc9e87c6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c5d934-5666-402a-a09d-eb5d67a846b4",
        "cursor": {
          "ref": "bf133253-db8b-4cde-9fa1-d95a8df19631",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "35a9c0a8-e644-400e-ab9d-e44e0c6c7e88"
        },
        "item": {
          "id": "d2c5d934-5666-402a-a09d-eb5d67a846b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "26b84d96-9c3e-4275-ba1b-66d8b0a68b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e29b92-1bdc-4dd7-840c-2acee608fad7",
        "cursor": {
          "ref": "a02ea489-ff11-49fe-96c5-3cef47457378",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "516b27f4-4b2c-49e3-9116-9172aaa71684"
        },
        "item": {
          "id": "54e29b92-1bdc-4dd7-840c-2acee608fad7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "689d046a-0315-4c8f-b0cf-842ed421b803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb21653-9fcb-4b68-8717-03237fa364c9",
        "cursor": {
          "ref": "d909b727-c3d0-4dd4-9cbe-9685bdd78059",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8bbdb2b2-ecba-4e6e-a66c-7b08d4aee0ce"
        },
        "item": {
          "id": "fcb21653-9fcb-4b68-8717-03237fa364c9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eb7e7964-26b0-457c-8b6d-d0fa6815d754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269da9cb-00bd-41ad-889c-b2305e089f7d",
        "cursor": {
          "ref": "b2598520-b773-4e95-99bc-50eea63f7254",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "27f79369-95dc-4d81-bded-b727d67f8562"
        },
        "item": {
          "id": "269da9cb-00bd-41ad-889c-b2305e089f7d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "18f63832-ce90-4885-8bd5-cc023dfe6ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ecd00-b7d4-427f-aee0-3a456e6d6ef6",
        "cursor": {
          "ref": "e5b54745-6447-4923-ae1a-83dd01507b27",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "63acf79c-029a-4c5c-ae33-811a803b47b6"
        },
        "item": {
          "id": "c64ecd00-b7d4-427f-aee0-3a456e6d6ef6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2686814f-9550-4fe2-aea6-2e136c1966e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ce101a-319a-42f4-bd15-d7d1881c6c0a",
        "cursor": {
          "ref": "4398f239-92ac-4d29-8373-2d711c2b910e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fe0a8c66-ee89-487b-ab07-d2d04447abf2"
        },
        "item": {
          "id": "06ce101a-319a-42f4-bd15-d7d1881c6c0a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cc01e132-051c-459d-aa18-ca8385d580d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482bdce3-e156-4885-ab10-c0cddc691779",
        "cursor": {
          "ref": "ee7c5183-5663-42ef-a08e-aaf53f16ae04",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "585ae759-943c-432b-901d-21bcbbdbcfa7"
        },
        "item": {
          "id": "482bdce3-e156-4885-ab10-c0cddc691779",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "869e2daa-d58d-4b70-8d70-4eba99337600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc27d2c-ba56-4267-8e02-c676a765856a",
        "cursor": {
          "ref": "d521efc4-6362-454b-90b7-3f78bda9bfdc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3e2c40a7-6c0f-4420-bda7-3def41b0d8c4"
        },
        "item": {
          "id": "2cc27d2c-ba56-4267-8e02-c676a765856a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "763df79e-bd77-4c3d-b5b4-b313fa412c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abade55-b24d-4ccc-8579-559d879712ee",
        "cursor": {
          "ref": "8ab1006d-db8e-4a51-b216-13a12290c0be",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fd37def5-d8d9-4677-a4f4-d935ef7bdeba"
        },
        "item": {
          "id": "8abade55-b24d-4ccc-8579-559d879712ee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3c82dfe0-0213-4a7c-89cf-33a3d851b40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc066d2-3269-443b-87ac-6bfe92cccd09",
        "cursor": {
          "ref": "40407024-6f48-4c62-bea8-25400ab043a9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbd810f6-82c2-467c-9e09-12d4309f6d62"
        },
        "item": {
          "id": "4dc066d2-3269-443b-87ac-6bfe92cccd09",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e8c1e129-31af-45aa-8587-c26f6b5c5688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7904629a-a84b-442b-abb0-6a0ebd0af128",
        "cursor": {
          "ref": "b474f821-4b05-4c48-9cff-125046330cb3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af6705fc-0931-4424-9083-c257e898c212"
        },
        "item": {
          "id": "7904629a-a84b-442b-abb0-6a0ebd0af128",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e1f5f98d-7e0e-4e43-b5e8-c90fde844d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df63860-f112-4675-812f-cf7a4eb80f17",
        "cursor": {
          "ref": "c987a6e9-36d8-4a0e-bd62-3cfd6ba6abf0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "413f505e-ecd2-4a6f-b3b1-7617a8c63602"
        },
        "item": {
          "id": "1df63860-f112-4675-812f-cf7a4eb80f17",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aaf19f73-a52c-437f-90e9-7f576a3163ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6d6a2e-1f12-4cee-a08a-7c8afbc1a058",
        "cursor": {
          "ref": "860769b3-3e0b-4656-8299-908a9d01013f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "93a2a96c-5ecf-403a-a871-339a267d627b"
        },
        "item": {
          "id": "4c6d6a2e-1f12-4cee-a08a-7c8afbc1a058",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b4678d25-ed3f-43a5-ade1-3e2aa5c8114b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30b2029-9f98-42a3-974f-69784921038b",
        "cursor": {
          "ref": "f9453976-be05-49ac-81df-fc3b8a41cf1d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "03eabe70-a1f8-48ac-91a6-f06540822850"
        },
        "item": {
          "id": "a30b2029-9f98-42a3-974f-69784921038b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "abd42027-5114-4409-82dd-c863061767e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0532bec1-11f0-4739-8512-13ba2d5c2127",
        "cursor": {
          "ref": "655cbd8a-c02d-470b-bc81-6decd681cda2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "29ae769a-2904-4639-9fec-521625481d5e"
        },
        "item": {
          "id": "0532bec1-11f0-4739-8512-13ba2d5c2127",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "58bdb948-ff9d-4260-932f-1daadb824fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3918ad33-8990-4785-8858-5371b5366f7e",
        "cursor": {
          "ref": "50ad419f-6966-4bdd-b0e0-c66c12622cff",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e3f9e79-8f37-4799-b519-69eb88b2d545"
        },
        "item": {
          "id": "3918ad33-8990-4785-8858-5371b5366f7e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a0e4e14e-f211-4062-bf37-bff2c807a1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c46516-35a5-4972-9a42-b10b6da8031d",
        "cursor": {
          "ref": "212360fb-df3a-4e95-9d39-e5a9cc521481",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "86b68fdf-d03a-484e-8b91-fb36f6bbee51"
        },
        "item": {
          "id": "a3c46516-35a5-4972-9a42-b10b6da8031d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e419908f-2fbc-4a70-b93b-70d27bd14e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fbe312-d034-4177-9bcd-a07042ed4e4d",
        "cursor": {
          "ref": "1b2e539b-05fc-4662-b023-52fbff397d33",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1765083a-3f52-47da-9aae-36ef55f47a05"
        },
        "item": {
          "id": "97fbe312-d034-4177-9bcd-a07042ed4e4d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "48f219f3-289e-4ce2-bf88-93a01c4c0850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4793b7c-6811-4f0f-9e35-15b2227727dc",
        "cursor": {
          "ref": "134d188f-4e38-4296-a87e-45a04f37f3db",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "253572ad-28b5-4450-8a10-5a03bdeaa6d7"
        },
        "item": {
          "id": "d4793b7c-6811-4f0f-9e35-15b2227727dc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5a137b1f-ee5d-4c81-9e2b-01f7e687a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72d4cbf-3f25-43ef-8aa3-43518817ac6c",
        "cursor": {
          "ref": "f27d6482-15a5-46d5-9fbe-487de37cb092",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8ae6f150-24b6-4632-bb3f-eabbb4f7ab96"
        },
        "item": {
          "id": "f72d4cbf-3f25-43ef-8aa3-43518817ac6c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "817f5d73-b738-4718-bed1-4c025baa84a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003cb646-5f96-444e-8347-539293fff4af",
        "cursor": {
          "ref": "e222a059-2337-41e3-a2ae-712e69db2280",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6f45eafe-716b-4f7c-b710-95f17381c1e4"
        },
        "item": {
          "id": "003cb646-5f96-444e-8347-539293fff4af",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f5d63afe-860d-48b8-a3ee-32a0d9288ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123ad7c5-cdc3-4845-80b8-4b4131f6dc3b",
        "cursor": {
          "ref": "eda62a0c-5d87-4501-9e5d-3e87d7788a70",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "00bfb7e5-1baa-4706-94d3-697af092fd05"
        },
        "item": {
          "id": "123ad7c5-cdc3-4845-80b8-4b4131f6dc3b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "111f2a6d-db27-4e48-93f0-46a86317fdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e164be4d-1f46-4322-abd3-cffa3c0a8ca4",
        "cursor": {
          "ref": "c9bd43fa-608b-4f65-b5bd-f69c3673f634",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "91061956-7f93-43bd-8571-d444e7bf121a"
        },
        "item": {
          "id": "e164be4d-1f46-4322-abd3-cffa3c0a8ca4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ebce37d7-b97e-42aa-a662-0626b450ed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c047494-83a3-4b54-b094-a9246aef4b6e",
        "cursor": {
          "ref": "b8fcc07b-2f1d-4416-a5b8-d6375fad0760",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "10479fb0-4486-4382-9a86-0f8592cc7be7"
        },
        "item": {
          "id": "9c047494-83a3-4b54-b094-a9246aef4b6e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6f0075d-3469-4a2c-a908-cfea5d314f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d845e2b1-5ebe-4a28-bc16-fcd38de10e9e",
        "cursor": {
          "ref": "18d5357b-5d58-4df9-bf87-4ae697820f63",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb85b6ef-8d11-4494-b930-cdb174bda6b1"
        },
        "item": {
          "id": "d845e2b1-5ebe-4a28-bc16-fcd38de10e9e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "802dab90-1bed-4d01-a188-a199d215a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8839bdb1-15bb-4212-8ccb-46e3443ef5c5",
        "cursor": {
          "ref": "c7c54dee-57d8-4b29-b27e-0840a83960e9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "770a90ba-3c67-4510-bcac-561ea1fa0589"
        },
        "item": {
          "id": "8839bdb1-15bb-4212-8ccb-46e3443ef5c5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2d354c63-110f-483e-b4f1-644ee96bff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd51df6-a5b3-4e25-954d-e4d05bd66a3a",
        "cursor": {
          "ref": "9c5db49a-26d6-495c-9071-413c9395cdf2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e2f9597b-767d-4da8-8a52-44720646a0ad"
        },
        "item": {
          "id": "ffd51df6-a5b3-4e25-954d-e4d05bd66a3a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a2b0cc81-6a03-4bae-b0ec-682ceb579423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40be4b8-f585-4b57-b0aa-9d1bac96e088",
        "cursor": {
          "ref": "c1470f7c-5c52-4b45-bfb9-a726ddbd3e6f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a9565ee2-4a9c-4d42-a14b-4d06f73f8082"
        },
        "item": {
          "id": "d40be4b8-f585-4b57-b0aa-9d1bac96e088",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c6327dff-b00d-464b-8100-7f2fb95c72c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf47f8a-0881-4f92-ad1f-2de866e8f39a",
        "cursor": {
          "ref": "34ec7e1d-10f0-4806-a980-3bafb7259b99",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8b58cfd5-5444-44bb-aa2b-0cfe825dae56"
        },
        "item": {
          "id": "aaf47f8a-0881-4f92-ad1f-2de866e8f39a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cb3bc14b-ceb3-4e4d-a426-9bf51232be7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2c5685-80a0-4979-9e28-a97e18e7a9ea",
        "cursor": {
          "ref": "3e226d86-6f1a-4804-af18-5ad6d7b2c27d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a3689c62-806b-4909-964b-d04ca07ff596"
        },
        "item": {
          "id": "ab2c5685-80a0-4979-9e28-a97e18e7a9ea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4ea25242-5d17-4f12-8d37-53f696003fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a7808b-8e9a-4969-abaf-711902162ea2",
        "cursor": {
          "ref": "a8748ce7-a90e-43e9-b606-17a8ce3c3dd1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "23b62135-4904-4cca-88a9-9d667827ea63"
        },
        "item": {
          "id": "f2a7808b-8e9a-4969-abaf-711902162ea2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cb18c829-93eb-4fd1-944a-fe2f65ab1821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccffe1d1-b85e-4693-9da2-2024c58ace25",
        "cursor": {
          "ref": "a5a63860-d219-4d66-bc02-eb5e29b20de2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d76bd53d-21b2-438f-b9c4-8c3f7a408de1"
        },
        "item": {
          "id": "ccffe1d1-b85e-4693-9da2-2024c58ace25",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f8c62ddb-28eb-42db-b907-3dadd52e413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16a89cf-4fdd-476f-a338-48c3608ba0b4",
        "cursor": {
          "ref": "bf60eb10-3e88-4b84-ab57-b6b45f16f50f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1871b9b4-b6ba-491b-8909-d3698884472c"
        },
        "item": {
          "id": "c16a89cf-4fdd-476f-a338-48c3608ba0b4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "646a4cfc-3671-416e-acee-a40c1e7bd92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a611d1-0c63-4b5b-bda1-8f142d19f9e7",
        "cursor": {
          "ref": "bdb5f5b1-628e-4642-b35e-8ca2d0f20824",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64ed8ec9-4722-48bd-8f41-ca8d518e8624"
        },
        "item": {
          "id": "a1a611d1-0c63-4b5b-bda1-8f142d19f9e7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2fcc741a-ad03-4ff3-aed4-a0762dcd8c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a9147e-d51f-4b42-a7b7-f322b72dd7de",
        "cursor": {
          "ref": "125d9b76-488a-49a1-b9db-46eb9f628209",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "67159c02-148f-471d-8a11-24a2720d59fa"
        },
        "item": {
          "id": "b8a9147e-d51f-4b42-a7b7-f322b72dd7de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "09fba7b9-e03c-4336-ba21-dfec836f3afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a90c42-c270-4dd5-b464-001dd82fc591",
        "cursor": {
          "ref": "73a0d0c7-2814-4a6a-a8a4-6682fe790e8d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c83a9437-f1bd-4a92-8d82-43854fa9b462"
        },
        "item": {
          "id": "91a90c42-c270-4dd5-b464-001dd82fc591",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5476e9a7-90c1-43d7-9558-d08468bd5067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8dcd1d-9f8e-453f-9159-f025d138158e",
        "cursor": {
          "ref": "992dfcee-627f-4b3b-990c-6ea224986b0f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "87fadd81-0b51-41bf-ab54-582b7cba6659"
        },
        "item": {
          "id": "5c8dcd1d-9f8e-453f-9159-f025d138158e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "68e0dbab-1bdd-4f63-b169-a97689f801c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f295f1-1550-42c1-af6b-fe8e39481da1",
        "cursor": {
          "ref": "b26c38bc-0a58-4a57-895b-65d082298229",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "472ac5d3-e970-4e69-98ca-c8b7248c650e"
        },
        "item": {
          "id": "a8f295f1-1550-42c1-af6b-fe8e39481da1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "253a8aa0-68f8-4318-b127-6136527b399a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caca8ca-5ca7-44ce-965f-49e625412f8a",
        "cursor": {
          "ref": "c2a6e6f0-6469-4b22-8bb7-68fea2fc48cd",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "85de9aa3-ebb9-4dd1-8e8f-330f57182643"
        },
        "item": {
          "id": "9caca8ca-5ca7-44ce-965f-49e625412f8a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c531e98e-05e4-4791-8bfe-7fbad34c84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a16c0e9-d6a6-4e5f-9b7d-7c1629e02d63",
        "cursor": {
          "ref": "61b11f16-00b9-438b-a400-b3760da0fff6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aa260723-cf8d-460c-8131-0511b3e9e031"
        },
        "item": {
          "id": "5a16c0e9-d6a6-4e5f-9b7d-7c1629e02d63",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3bb7c15c-366b-463f-945c-fe9fb5a0e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6f141f-e674-416c-9a0b-d7494cb3d580",
        "cursor": {
          "ref": "9b75faa6-b12a-45df-9d6e-982e6c860397",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9af890d0-6da5-4ac6-9322-1562be7b4428"
        },
        "item": {
          "id": "3a6f141f-e674-416c-9a0b-d7494cb3d580",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cc820362-a255-45e1-858a-efc3f334ba15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64236294-b5e4-4679-837f-dc129b55fdff",
        "cursor": {
          "ref": "f53ef519-7758-4e23-9e86-21a0251d865b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7d75c795-0f28-4a6b-a4e2-8ea73c0f2473"
        },
        "item": {
          "id": "64236294-b5e4-4679-837f-dc129b55fdff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "385ca6b4-8811-4046-937b-d0995ea03860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900654d6-7f0c-4ed2-a156-077cb0f3f285",
        "cursor": {
          "ref": "60d40495-baf6-4ea2-acb0-b4f92368376d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d388240c-c6eb-4d7b-a4a8-7885647f6a45"
        },
        "item": {
          "id": "900654d6-7f0c-4ed2-a156-077cb0f3f285",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "43a5ee6e-c835-4a77-8c58-1ee354036cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed50c2e-79d0-4ab3-a455-f828e2dc876c",
        "cursor": {
          "ref": "c8ef5e38-0f8b-4525-abec-524cbe76e89d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "832c636a-d5fb-46b1-b63c-c89b34ff3db4"
        },
        "item": {
          "id": "bed50c2e-79d0-4ab3-a455-f828e2dc876c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6cc17241-c014-4eb9-8145-f057f8dc2ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a98c397-fa7a-4b50-8145-e3c7177e3ecf",
        "cursor": {
          "ref": "0d1820af-69ff-4691-b333-d6ce6d274283",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "30d7932f-3d3b-433a-803b-1b5e28c795eb"
        },
        "item": {
          "id": "5a98c397-fa7a-4b50-8145-e3c7177e3ecf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1d8f44ba-19d3-4db1-9821-ee4f0ac100e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119adcfa-1dc0-4c46-abe9-c1f306690fef",
        "cursor": {
          "ref": "b384a3ea-0339-4b48-986a-c42880e21295",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ac803438-c4ca-408b-a50a-f24ff6c3521f"
        },
        "item": {
          "id": "119adcfa-1dc0-4c46-abe9-c1f306690fef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "720acff6-5d67-4974-8a7f-f7ab0dc65963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7d5766-ff40-4306-8492-67882062c813",
        "cursor": {
          "ref": "e8e33d13-daac-464c-a7ee-1fc003f5136f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "457a873a-6396-4576-b9d2-7bb6a5a03895"
        },
        "item": {
          "id": "4e7d5766-ff40-4306-8492-67882062c813",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "87fc6036-ebd1-4312-9853-bc08a8edc371",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad0635-1039-4bc6-8781-8338286a0f63",
        "cursor": {
          "ref": "3f367097-3053-4fcb-bc82-158474882d0f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e8e781eb-57ae-49b3-be87-2f704dc774e0"
        },
        "item": {
          "id": "12ad0635-1039-4bc6-8781-8338286a0f63",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1eb343ee-29fe-4d0d-826b-3b3f49c8bf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "633af27a-68b9-4eb2-aeb2-110abcbc869f",
        "cursor": {
          "ref": "b4718991-1f67-40c7-8240-3988343b1867",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7dd462a2-a378-484d-a783-2f7862aa27d3"
        },
        "item": {
          "id": "633af27a-68b9-4eb2-aeb2-110abcbc869f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4057d8d2-a530-4e8c-bb9b-539e0e9cd2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6d51a353-ba22-4f5c-90b1-8931bbdcce4b",
        "cursor": {
          "ref": "98c6239f-263b-4005-978e-6588713c6e5f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f391be8c-fd5a-426e-a20f-e8978fa94704"
        },
        "item": {
          "id": "6d51a353-ba22-4f5c-90b1-8931bbdcce4b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ea415cb4-e371-4c25-a8d8-cc5d3decdb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cee81059-a27a-4af4-9b0d-780f2d27b64b",
        "cursor": {
          "ref": "5c11491a-4dcc-4f37-b766-0d48759659c3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e0e229e2-eada-4596-86b4-e77fb97c0cfe"
        },
        "item": {
          "id": "cee81059-a27a-4af4-9b0d-780f2d27b64b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc7cb03e-0325-4b75-85f4-844bc3b2cc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "13d80df0-e9b5-4a8a-baef-0843c04d978b",
        "cursor": {
          "ref": "26800e26-19da-4f3d-a128-c851da5aa14f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "11901441-f9bc-453a-a2bd-791060f99730"
        },
        "item": {
          "id": "13d80df0-e9b5-4a8a-baef-0843c04d978b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ef91057b-dea0-4583-9654-aa0c3abf651c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c8ae67b1-e9ca-41c9-8118-e72cd3617baa",
        "cursor": {
          "ref": "c0431988-3784-43c0-903b-b3fbfd350c12",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aa5d77c3-0117-4465-9f04-4264757f62f6"
        },
        "item": {
          "id": "c8ae67b1-e9ca-41c9-8118-e72cd3617baa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aeb08fb4-d014-4ebb-866b-471ac2eb48af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d19475a2-e5a0-4712-a95b-00f6b0376c77",
        "cursor": {
          "ref": "a26c3173-1253-4f2b-b834-8bd60e2bdd45",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e367a1ee-feae-4b34-870c-24acf51d0b8d"
        },
        "item": {
          "id": "d19475a2-e5a0-4712-a95b-00f6b0376c77",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c72a60dc-eebc-4bb1-a469-a1b8020f8a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d861b07f-dcd8-4cbd-8f40-c90c6a57a8b5",
        "cursor": {
          "ref": "0c25e595-1210-4381-9a6f-5ed0f072a8c5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aba2aa4d-3302-462a-8a92-30d390562379"
        },
        "item": {
          "id": "d861b07f-dcd8-4cbd-8f40-c90c6a57a8b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aca91c12-fa1b-42f3-a2b7-776dc4b8e8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d02146-1f9b-4166-b238-f0b858536fa4",
        "cursor": {
          "ref": "0b29ee82-f1a6-4d37-92b2-4198f99d4282",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cb3a9a3f-11db-4541-b26c-873ccbab7392"
        },
        "item": {
          "id": "e9d02146-1f9b-4166-b238-f0b858536fa4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "af8ce52e-a986-4e11-b176-1810f7cb98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0048d15b-7088-43f4-95c9-5ef0e27fa624",
        "cursor": {
          "ref": "5fcb71b2-ef06-425e-9fa2-4465ca393f8d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f1f134ed-cbc1-4241-a31f-f414c2bf9b24"
        },
        "item": {
          "id": "0048d15b-7088-43f4-95c9-5ef0e27fa624",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ce7cea8-3f9b-45c2-8e4d-9c69f6c5c09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a9a144-260f-4494-9e5f-2eb792a479e1",
        "cursor": {
          "ref": "e2aaba92-044b-4cd8-b30f-28adeceba481",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6bd2557e-cc6d-45d3-8625-b83cdfa821f7"
        },
        "item": {
          "id": "85a9a144-260f-4494-9e5f-2eb792a479e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c2f138d0-daf3-4f7e-a375-e03a7479f9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e7299f-49c6-46bd-9ceb-58979afd7191",
        "cursor": {
          "ref": "d0bc6702-0f2c-48af-a947-1935c3c3d175",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e920a683-5e40-4d38-a844-4f7d2a4ee978"
        },
        "item": {
          "id": "37e7299f-49c6-46bd-9ceb-58979afd7191",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "138a36d5-8df6-4e0d-8603-851a5d410ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6778b458-08ac-4cd8-b84e-185bd7879120",
        "cursor": {
          "ref": "fdddb2ca-42fc-415a-89ea-498ed10981c3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d67d0dc4-48d5-4ed7-a82b-0f3807a1ce05"
        },
        "item": {
          "id": "6778b458-08ac-4cd8-b84e-185bd7879120",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c85fbe2f-d08c-4fe0-a7e9-0bf7686c6c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f537ab7-6e12-4c4c-87e4-6e5248ec330e",
        "cursor": {
          "ref": "e0f8cab5-ce54-4c0a-a85f-c197e325bade",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ba403e2a-660e-470d-bb07-dce2f0294205"
        },
        "item": {
          "id": "2f537ab7-6e12-4c4c-87e4-6e5248ec330e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bd1208c5-2433-4a52-b6bf-4a11d28a70f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ae33d-1754-46f3-add1-454864eb07b4",
        "cursor": {
          "ref": "76bbc962-bf58-4bcc-abfc-7e7c2a9e2d20",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a317823-a44b-47ed-84af-5abd343a4b05"
        },
        "item": {
          "id": "ba9ae33d-1754-46f3-add1-454864eb07b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e751d895-53b5-4951-a70c-90f0532a6ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903409a4-ac4d-4e0c-a462-7a31858fefa2",
        "cursor": {
          "ref": "83e048e2-9399-4164-a948-84ff7e6607fe",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "adb72d07-f173-469c-8118-4bd692628376"
        },
        "item": {
          "id": "903409a4-ac4d-4e0c-a462-7a31858fefa2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "caa7aad1-60d9-47ae-9927-aedc37e0a5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaec063-38cc-4c70-ac57-6b884d421f54",
        "cursor": {
          "ref": "8e2e5750-8d4f-4679-8e1c-27f1e0cd609b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bc5e18a4-39ba-4715-a506-b01afb280840"
        },
        "item": {
          "id": "afaec063-38cc-4c70-ac57-6b884d421f54",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "242dda69-cc19-456f-931a-f9222a531090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab0e944-1191-4989-8b60-8f8ab584ea0a",
        "cursor": {
          "ref": "20f05afa-4844-4b15-b553-ea282dd5675f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f8a78e65-89d5-483a-8c08-0608aace5763"
        },
        "item": {
          "id": "2ab0e944-1191-4989-8b60-8f8ab584ea0a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "187e84ec-ae7e-49fb-b55a-ec131db60095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c00476-5ec7-451b-af4d-3c7efe19a832",
        "cursor": {
          "ref": "8b9eda6f-726b-4867-b4bd-96196e1bfae7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "88065919-0854-4e6c-bbc6-61ec59d02378"
        },
        "item": {
          "id": "19c00476-5ec7-451b-af4d-3c7efe19a832",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93c1c9b6-5aef-47bb-8bee-1246a809fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e79b97-ce7b-4780-9c57-9312ee0e7de8",
        "cursor": {
          "ref": "d4bacab8-1e6e-4538-92e3-8e9704f1664d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d3441ad0-54ed-4087-9b3e-6461d6171d0a"
        },
        "item": {
          "id": "38e79b97-ce7b-4780-9c57-9312ee0e7de8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "355249bd-8cc5-40de-ab14-dcb6502217ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456cd7c8-3b67-46db-8d42-70196db3f540",
        "cursor": {
          "ref": "5a3005fa-4e13-42b3-83a5-6bc807d2b562",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "381efb69-3516-4dab-96b7-452207930336"
        },
        "item": {
          "id": "456cd7c8-3b67-46db-8d42-70196db3f540",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8520a85f-c0c1-4084-88c2-de6aeb8ad22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ce9b17-60d2-49a7-80d5-2c50f79f5c7a",
        "cursor": {
          "ref": "1d8655aa-dda7-414f-b8a2-37852d8a6c1c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4baa70d1-f6e8-421f-8638-ffd265cff07b"
        },
        "item": {
          "id": "11ce9b17-60d2-49a7-80d5-2c50f79f5c7a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bb319ff6-d2eb-4703-b623-08fa67858d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0bcc6-c698-426f-b895-e1ff877e24ac",
        "cursor": {
          "ref": "6df9a5ed-0798-4fd3-83f3-0741e4bfc9d7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f87190e0-b26c-4d0f-b2a6-84018c7b1f1f"
        },
        "item": {
          "id": "4df0bcc6-c698-426f-b895-e1ff877e24ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fb01d582-ad8d-491a-a59d-ffa65c2b727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f41b1-03f8-4be5-bc8c-94c96d74de76",
        "cursor": {
          "ref": "80a0d8c8-6afb-4e08-829a-0b8c9edcb33a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7cb85748-168c-4739-b766-b26e0b94c0df"
        },
        "item": {
          "id": "2b4f41b1-03f8-4be5-bc8c-94c96d74de76",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7f0494ba-1e78-41c8-9362-1038182ba950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e580af74-77e3-4848-b756-8c2700f6bd3d",
        "cursor": {
          "ref": "5cd34db5-20a8-4f68-aa33-0e56abacfa39",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "396e3041-1dc9-457c-8b69-7a37be6d9bd1"
        },
        "item": {
          "id": "e580af74-77e3-4848-b756-8c2700f6bd3d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a66c9d20-e8f7-4194-a7fd-9fadbf50a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad562d88-267d-42eb-9882-0c4b06133cf5",
        "cursor": {
          "ref": "b373acfc-cf85-4c02-a80d-ad1d6afd916a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7e555c8e-f26a-462a-8ab6-846bc13b0223"
        },
        "item": {
          "id": "ad562d88-267d-42eb-9882-0c4b06133cf5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "636ca158-725f-4728-ab47-7588b796f957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e34c5a-4009-4cf7-ba16-d3c533f23ee2",
        "cursor": {
          "ref": "3cd4c8e8-9212-4ccd-ac98-8385c797c47f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "53756e88-6513-4871-93eb-a28d60e2ba2c"
        },
        "item": {
          "id": "a0e34c5a-4009-4cf7-ba16-d3c533f23ee2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74c86081-4870-4421-bae8-ce3618f6fad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf66f6f2-5602-4bc5-8966-f38b5a314fcf",
        "cursor": {
          "ref": "bcb9fb9e-c5c5-41ed-9f71-44217a46cfe2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0b8e9c8-033f-4533-ba11-2d31fe8ef682"
        },
        "item": {
          "id": "cf66f6f2-5602-4bc5-8966-f38b5a314fcf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3180c5a6-7ff2-4549-984f-3f5bdf3e8579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc02b510-4181-4dac-b4cf-a90c92f216f8",
        "cursor": {
          "ref": "9fe8fbba-ba49-426f-9c38-8e240302e6df",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d63ca59d-0d60-4601-9221-0d8ae9034d16"
        },
        "item": {
          "id": "fc02b510-4181-4dac-b4cf-a90c92f216f8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b77cf4d-c596-4f6b-ae76-272e6f9b4f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2585996-54db-4bb1-87c4-7c7b340f6705",
        "cursor": {
          "ref": "9363c881-8d32-49c4-b297-8e9bcad432ec",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d2ec5304-5ab8-4daf-86eb-a01a8e71be64"
        },
        "item": {
          "id": "f2585996-54db-4bb1-87c4-7c7b340f6705",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6e90b131-835b-491e-a990-12e0477f9536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3291c1d4-0300-4491-8184-4c9cb2ca1499",
        "cursor": {
          "ref": "a8f47be7-f2c0-445e-88b1-cf4f3bc3bcb0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e85f8bcd-c7b1-4cb4-ae60-1ff9c309001f"
        },
        "item": {
          "id": "3291c1d4-0300-4491-8184-4c9cb2ca1499",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8e5b258d-2ae9-45d7-9fa1-a4abf9ef3b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea53e71-d86f-4634-a3a6-28ad31ae2485",
        "cursor": {
          "ref": "53bb218b-43f1-408d-b561-c053e26bca25",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "89593024-1371-4b20-a4ae-e58e17259615"
        },
        "item": {
          "id": "eea53e71-d86f-4634-a3a6-28ad31ae2485",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bffc7cc4-b926-40d8-abd7-83e7609de6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b4200-be03-4406-8741-d53f575e9be7",
        "cursor": {
          "ref": "f13f30d4-415c-4f43-82e1-400a79864e9f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a935cea9-656d-4471-93f2-944f8452b835"
        },
        "item": {
          "id": "223b4200-be03-4406-8741-d53f575e9be7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "836dbcf3-c170-4f11-abbf-7c18720ba468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9f27a0-070d-44df-bd44-2e8d08fdfee7",
        "cursor": {
          "ref": "1563d2f8-f5ba-47e8-adb9-dcb7a36b50b5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7c08020b-2a0b-4988-87f2-a80c467ad259"
        },
        "item": {
          "id": "fb9f27a0-070d-44df-bd44-2e8d08fdfee7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6957673-169e-41c9-905d-d353699a9bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99110a6-e0c7-418c-9759-acb5cfe2e88f",
        "cursor": {
          "ref": "e4cbc022-4cc8-4d6c-ba74-3cebf0e231d2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "28f874d7-8669-4da6-aed6-d11e65b61deb"
        },
        "item": {
          "id": "a99110a6-e0c7-418c-9759-acb5cfe2e88f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e51fce9-c2c9-4b9f-a367-b26f0e6ac31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a1b514-d8fb-414f-a47b-7984a886ed16",
        "cursor": {
          "ref": "f62df0c2-074a-4df3-aefd-170a9592195f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a118f36f-7aea-479f-a165-230b5d171521"
        },
        "item": {
          "id": "31a1b514-d8fb-414f-a47b-7984a886ed16",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a017926-8159-43d2-ae6d-659be6540eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a983ea-9b4e-4107-9259-7344d4fe288e",
        "cursor": {
          "ref": "fcd7791c-4541-4df1-8462-70da0321f9d2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ac3953f5-2ea7-4fbe-b549-51993fc51bab"
        },
        "item": {
          "id": "b4a983ea-9b4e-4107-9259-7344d4fe288e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87807ec4-85f5-4beb-b0c9-924f3cce511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f417c260-3e6a-41f7-a3e0-bbad646bf247",
        "cursor": {
          "ref": "517cf9de-3a41-42b7-a43e-785732d4051a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d18271a2-c11f-4cbf-97d8-3ef48b12b1b7"
        },
        "item": {
          "id": "f417c260-3e6a-41f7-a3e0-bbad646bf247",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "17c09de3-9049-4c9f-a266-be633b991674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5a6c46-e077-4276-b1bb-1c9d6dfa7d14",
        "cursor": {
          "ref": "a34b8e14-7714-4e36-9b2b-bc744f50473f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "26772615-7a2a-4a4d-81e4-326c3a80f206"
        },
        "item": {
          "id": "fe5a6c46-e077-4276-b1bb-1c9d6dfa7d14",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4ba95ade-4c29-4d22-beb5-480a29683072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552f383a-b257-4527-92d3-740aecc0b4fe",
        "cursor": {
          "ref": "d949b6d6-d2fd-451b-8a6e-5e6ad52a4671",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "09bc5644-7b32-408f-8ff1-f8506a0b79c8"
        },
        "item": {
          "id": "552f383a-b257-4527-92d3-740aecc0b4fe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cbb47da4-02aa-449f-938e-b9049e445fd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e162f1d3-2385-4ad7-9a36-635e66ddcccc",
        "cursor": {
          "ref": "5e6361d6-4c06-4b65-8e2c-a8619faf46fe",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f5d60912-e5a8-4a58-b699-5a26a3b8bcea"
        },
        "item": {
          "id": "e162f1d3-2385-4ad7-9a36-635e66ddcccc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95f7471c-2900-4fdf-ab15-262d9f91134a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb484107-4728-4ac9-9832-9fce39ee099b",
        "cursor": {
          "ref": "4a19d5b9-3a06-4166-b2af-033c27f5fc7c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0df952c2-f739-41e9-820d-97fb5f0f7d43"
        },
        "item": {
          "id": "fb484107-4728-4ac9-9832-9fce39ee099b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "099f9dfe-9bb2-4286-a9d1-386c72db124b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4d9f46-9f49-4f4e-9555-a803c481f408",
        "cursor": {
          "ref": "dfd5b2d4-7986-4cb8-a9ab-9fd8f96d74a4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8bdaa0bd-91ed-4fad-b7d1-1189b89391d4"
        },
        "item": {
          "id": "4c4d9f46-9f49-4f4e-9555-a803c481f408",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eda75af7-bbbf-45dd-9ab8-ddaa5b02424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4b8b53-b58a-413c-9417-33b58c620af1",
        "cursor": {
          "ref": "c4eb0087-fb2c-4d8b-9ae1-728af6f6693c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f9bce5a3-4667-4f2d-977f-e0c9d1ba7e3b"
        },
        "item": {
          "id": "5f4b8b53-b58a-413c-9417-33b58c620af1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5e7569ec-b34b-4773-b4d4-09a7f5b7a500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc43746-59c0-4625-bbc9-ac29fde1f3a1",
        "cursor": {
          "ref": "01956fb1-644c-49f7-a414-23b2ab9ad821",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c93f0d16-e588-4226-bcce-a93cfeae7df0"
        },
        "item": {
          "id": "edc43746-59c0-4625-bbc9-ac29fde1f3a1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9899eb9b-d621-459e-8d4c-e38409dcd640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac7083-71eb-4478-b844-8633212e3dbc",
        "cursor": {
          "ref": "9a9dff6b-c160-4a82-90f2-be114034e457",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d8c0e48-e71b-42b4-a731-91160d7f9dc3"
        },
        "item": {
          "id": "acac7083-71eb-4478-b844-8633212e3dbc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6889831f-f560-4df1-a58f-e016391729c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c813831d-01ff-46e2-9d81-195468d23e0c",
        "cursor": {
          "ref": "a6edf8f7-d59c-4221-aa1b-0507813bf930",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b2e78f43-fad2-4fe4-b166-39d6daaa8c84"
        },
        "item": {
          "id": "c813831d-01ff-46e2-9d81-195468d23e0c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e97f4e6a-16a1-4b70-9b1d-7af9f4cca691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d150c0d2-bd60-41a9-9d8e-2b4aa7a6fe7a",
        "cursor": {
          "ref": "b7b4f4eb-e83d-4fee-8711-8a263ded2b99",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "27deb990-21e2-4491-a0ce-e871c266210b"
        },
        "item": {
          "id": "d150c0d2-bd60-41a9-9d8e-2b4aa7a6fe7a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5fc501d5-774f-401e-9baf-498578c54603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df344ef3-794e-4185-ac14-e38055611246",
        "cursor": {
          "ref": "4749bc16-be5d-4d10-b4c4-19205801662d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "37eb9edb-2574-4ebd-8e14-f5e89e44e40a"
        },
        "item": {
          "id": "df344ef3-794e-4185-ac14-e38055611246",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ca402129-ef6f-451e-85f6-1e26b4d83f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304fd33-a011-4408-8439-16c079f6c630",
        "cursor": {
          "ref": "8dd2e81f-cf8f-4762-a708-db97202460f2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "da039650-e693-4060-9907-7e62d56e572c"
        },
        "item": {
          "id": "7304fd33-a011-4408-8439-16c079f6c630",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c9b2e5d7-13e7-4228-881c-366c6b398c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b090072e-d107-4e66-9439-e8e1dad0621c",
        "cursor": {
          "ref": "ae7b6e16-350b-4272-b571-efdd7f2b4513",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f09b1bf4-9fd4-48d3-89ec-531b340c7842"
        },
        "item": {
          "id": "b090072e-d107-4e66-9439-e8e1dad0621c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0d84fc31-3988-4740-9151-9f4ca8734041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa1c13c-a8eb-4ee5-b270-031ec1b255fc",
        "cursor": {
          "ref": "283b11b7-e656-4647-bba1-bf017b550492",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ef2ec78-8572-4a2e-b91b-896d9331deed"
        },
        "item": {
          "id": "8fa1c13c-a8eb-4ee5-b270-031ec1b255fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a8f3d26f-616b-41c5-ba74-14258192dfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6172ed71-c04b-4235-aff9-3cbd869bbab3",
        "cursor": {
          "ref": "09d4fb5f-527f-4003-8bdf-6f47928b7ef6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "515012c3-3023-49c8-bc09-c8c8fabb1053"
        },
        "item": {
          "id": "6172ed71-c04b-4235-aff9-3cbd869bbab3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "739240c2-a841-4918-ac5d-91b239c44ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9e87b4-2505-44a4-9347-fd306c6b603f",
        "cursor": {
          "ref": "1cdb5842-c6b9-4274-b681-2e8cb78577d2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b63b08b1-3b13-420b-b1dd-788b57a0dbf2"
        },
        "item": {
          "id": "8a9e87b4-2505-44a4-9347-fd306c6b603f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fc5f18b-64f6-4ed6-8f1b-7ddade0451f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9a1675-3f73-403c-bd73-8f1ddd070f33",
        "cursor": {
          "ref": "20b52cbf-e709-4cec-a9e0-3ae45d358943",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5b35fbac-90c5-4e5f-a589-3c66ebb7ef5b"
        },
        "item": {
          "id": "1a9a1675-3f73-403c-bd73-8f1ddd070f33",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f040eb56-404c-4b51-b8f4-5ee4d6385b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfe9a1b-7273-4ade-b0a1-3c8c194a0430",
        "cursor": {
          "ref": "e98198f6-a0d1-4d54-b69c-7b247e78f494",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "758ffc0e-d252-4f56-a5e3-92fb66ac74b4"
        },
        "item": {
          "id": "ebfe9a1b-7273-4ade-b0a1-3c8c194a0430",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1a3b20ed-cd6d-4a34-b7f0-3af6473255aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e3ff55-60c8-4fb3-8e7d-494c7cc521fb",
        "cursor": {
          "ref": "e2b884c5-39bf-49c4-b80b-11a17f99971b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "18e830fd-7809-44c7-a7d7-1efb54ee2650"
        },
        "item": {
          "id": "94e3ff55-60c8-4fb3-8e7d-494c7cc521fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "67b44756-67fa-4687-8da9-65d5a4506e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a18358-8974-42eb-9151-ad2da8dcfd7f",
        "cursor": {
          "ref": "16b1d14b-57cf-4861-b590-e1384266fb86",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9efe3caa-b2bb-406f-b3c7-d30d71ac4979"
        },
        "item": {
          "id": "f2a18358-8974-42eb-9151-ad2da8dcfd7f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d9339db1-bc95-4742-842a-da4d1bad0c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8386fe-d8cd-43d8-ac59-46015ad9cfc8",
        "cursor": {
          "ref": "d6dc7c92-a125-4732-a4ed-ffa0a11ef7c3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c11fa18d-3531-481d-9e4a-2dc4ae44d538"
        },
        "item": {
          "id": "5a8386fe-d8cd-43d8-ac59-46015ad9cfc8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "478a1333-8bf5-42a6-b088-19b489b2cce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b999dd-fb91-40be-ba99-f5f5ea113cc6",
        "cursor": {
          "ref": "33c767dd-4557-41bf-beb8-feea05836798",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fd2c54d7-c833-46eb-b70f-a090eab02dc8"
        },
        "item": {
          "id": "48b999dd-fb91-40be-ba99-f5f5ea113cc6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "42d2cb45-2408-4e57-be34-cd8ef7e8d87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0570ec37-204e-4dc7-a408-f24d127492c6",
        "cursor": {
          "ref": "c52fb66d-b09b-45b5-ac98-96911c7b184c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "75eec6a7-878d-49d8-b2ab-2260347e96ce"
        },
        "item": {
          "id": "0570ec37-204e-4dc7-a408-f24d127492c6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b187fa97-4130-407e-ac82-04483024fd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125d4933-1c54-498c-99a4-6cbbb343e0d0",
        "cursor": {
          "ref": "bf9d05c2-8775-463c-a153-9bbfaa068ab9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c889a3a-f29c-479d-b218-edbf26270ca3"
        },
        "item": {
          "id": "125d4933-1c54-498c-99a4-6cbbb343e0d0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12647dc2-b50e-4618-a2e9-7b0824823d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d57ab-9da6-4136-adb3-af7a5e6e3b79",
        "cursor": {
          "ref": "884b21be-7340-4f2c-812a-44031fe01f26",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58941126-71c7-4ae4-a9e9-40cf646ac98b"
        },
        "item": {
          "id": "bd4d57ab-9da6-4136-adb3-af7a5e6e3b79",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5f80060f-d237-49a5-a497-1873064f20ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c511fe7-9c85-465d-b2bb-0be5359c9b86",
        "cursor": {
          "ref": "157677ec-704a-4727-90cf-b35e71239b38",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a823f283-b8bc-4290-aec5-032e5692e9e5"
        },
        "item": {
          "id": "0c511fe7-9c85-465d-b2bb-0be5359c9b86",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f4fe7eb-8f93-4d65-963c-7c4286e6615a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfecd92-4252-4edd-9724-b903f78eb3f2",
        "cursor": {
          "ref": "5fa2509f-a393-4b92-bfa2-ee20e472a3c9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c5c38f6d-5d76-4012-8bb5-f13b3a974484"
        },
        "item": {
          "id": "5bfecd92-4252-4edd-9724-b903f78eb3f2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "225d6a78-039a-44cd-a8df-31222976ddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfa3f2f-2b11-43e0-8580-210be41d9f5e",
        "cursor": {
          "ref": "41f651e3-33f6-4a08-8e45-18aca551dc62",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b0960a6b-cd05-4b73-8e0a-362f9075b4af"
        },
        "item": {
          "id": "0bfa3f2f-2b11-43e0-8580-210be41d9f5e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "32791172-dbe8-4b61-ad90-c627a7c073e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18082d2d-bbe2-43ee-8196-d8320e4f520d",
        "cursor": {
          "ref": "94191204-1595-4644-b6a3-ac3cdd59c383",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2ce3a74-1194-4a06-a82d-567afa00debb"
        },
        "item": {
          "id": "18082d2d-bbe2-43ee-8196-d8320e4f520d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "02a1d17f-c4dd-4f2b-b3f8-9c7860524840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f927e5a1-64b9-43c7-90c6-6a13a7aae70b",
        "cursor": {
          "ref": "dcdfb12a-1f8e-43fb-a4f7-a75d031399ba",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "51ed2ba2-bfaf-4fda-a0b6-2f4d7b58bd96"
        },
        "item": {
          "id": "f927e5a1-64b9-43c7-90c6-6a13a7aae70b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "49029f8b-0e2e-4a7d-a435-1fa4d3ae4d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c9671-7535-4bf1-8aa2-272a9555056a",
        "cursor": {
          "ref": "a40c82c3-2cea-4957-a9d5-027cc0c92eee",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f78d5d85-81a8-4e03-8879-fa2181317164"
        },
        "item": {
          "id": "6d2c9671-7535-4bf1-8aa2-272a9555056a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f8e2a1d8-e9b2-4b75-aefb-3598e969096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d5bbc7-d85a-4f2f-97a2-8471d36a0411",
        "cursor": {
          "ref": "0639f184-14af-4080-9424-4644be09ea2d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "32e4c6bf-2bbd-4616-a668-382059843bbc"
        },
        "item": {
          "id": "71d5bbc7-d85a-4f2f-97a2-8471d36a0411",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "02824a9a-acc1-434d-9569-ba95572d43a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdec496-fe23-49d7-bc8f-009ad7886ae7",
        "cursor": {
          "ref": "f9477566-5146-4d29-b282-30758d917bec",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e927c612-5f9e-4fca-9738-2e38a346e4e3"
        },
        "item": {
          "id": "8bdec496-fe23-49d7-bc8f-009ad7886ae7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "18bf894e-ffea-4834-b4ad-4fe8d20c019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c19d68-99d0-4400-98b6-519f10c486c6",
        "cursor": {
          "ref": "dacc99a0-68e2-4443-9029-9407f2375179",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "14a6c5ef-ce5a-4e80-92f3-fe8ef3c37fc4"
        },
        "item": {
          "id": "36c19d68-99d0-4400-98b6-519f10c486c6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "72aff05a-655e-4f9c-9910-1d4d920346fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12898f82-6c6e-43e3-9757-c029997a1986",
        "cursor": {
          "ref": "7afdb308-9199-4d92-8e04-ae9fabe0f522",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8005cdf0-193a-4474-9bad-7c3824e13668"
        },
        "item": {
          "id": "12898f82-6c6e-43e3-9757-c029997a1986",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "65bd5e80-cacf-48d4-83d8-1d698e00159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a49f8b-b29b-4076-81be-aa19a4cefffd",
        "cursor": {
          "ref": "4dfc617a-e34e-4410-8bee-b57b943c572c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "af1b6553-c4f9-4f10-a9c0-51e45d1e1a79"
        },
        "item": {
          "id": "57a49f8b-b29b-4076-81be-aa19a4cefffd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a7fc2cfb-d92a-4805-9987-7446bb3112b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a18b8d3-f501-4613-8838-0e953f4c86f2",
        "cursor": {
          "ref": "852f8cd5-aa22-4c7b-9a05-a785690c51cd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8858345b-f566-4634-9084-48c17469c49f"
        },
        "item": {
          "id": "7a18b8d3-f501-4613-8838-0e953f4c86f2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "188f3c50-b264-4c78-9793-9301b4c3e888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0cc220-7a59-4e25-a758-8707967ebed5",
        "cursor": {
          "ref": "f9706d84-a2b1-489e-99c3-035f150326b5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "490b9075-0d08-4250-9e03-0ded290f37b0"
        },
        "item": {
          "id": "4c0cc220-7a59-4e25-a758-8707967ebed5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8227661b-f066-4baa-b1c5-0bafb3056054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13097c79-4463-4de9-ba7b-289c3d913c8e",
        "cursor": {
          "ref": "cfef93e1-2b43-4494-a9ee-2caff11d30fb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "53c56b5d-2fbf-4618-b31d-47b8a52dbb11"
        },
        "item": {
          "id": "13097c79-4463-4de9-ba7b-289c3d913c8e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bbcf17e8-a224-49d8-9117-e147e318022e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a80e0a-9be2-4b64-b305-4b67e68e01f2",
        "cursor": {
          "ref": "fc04666c-f725-46ce-9629-bff3cbb58516",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9873dcb8-52cf-47f3-9f52-86c95f4f8f86"
        },
        "item": {
          "id": "13a80e0a-9be2-4b64-b305-4b67e68e01f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1f36f511-9a15-4eb7-ac56-a44803bfc8ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cefabf-6ebb-458c-953a-c7102144d66e",
        "cursor": {
          "ref": "55459c3f-b632-4771-af73-032cd1f36817",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "30f658f0-c971-44ba-9596-14ae3b10f519"
        },
        "item": {
          "id": "68cefabf-6ebb-458c-953a-c7102144d66e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b1711c06-d90a-4e10-a13a-212fc636dde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b2c101-58ef-40d9-94a2-e035765ceaea",
        "cursor": {
          "ref": "5210bd66-8a63-4d47-9a9a-ae6b2ce89f33",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acf028f8-3937-4fa9-b388-e5565761d995"
        },
        "item": {
          "id": "f7b2c101-58ef-40d9-94a2-e035765ceaea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b977025a-4bb1-4ce7-adb2-e01c3e092953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d17f92-2dc1-4005-9559-efaf0b53697a",
        "cursor": {
          "ref": "73d36d14-57d5-4e80-9993-efb9d80e0fb6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e2899775-2f14-49b7-9060-12e933c06ecc"
        },
        "item": {
          "id": "19d17f92-2dc1-4005-9559-efaf0b53697a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9297a4c9-bbaf-4613-9490-f78d74079e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2090e5b-aab5-4ff1-a409-fd77217b92de",
        "cursor": {
          "ref": "3ae3ca9e-f7e5-49c2-ad2d-afc8cd5b4479",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "be47aa35-223d-4da0-b1d8-6f100d8f64d8"
        },
        "item": {
          "id": "a2090e5b-aab5-4ff1-a409-fd77217b92de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "72213836-4e83-4da7-8d5b-89af714a09f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee79698-03d1-4ce9-85d5-c81fa793d09e",
        "cursor": {
          "ref": "eef17ea3-c4e9-45a1-aeda-878081f83823",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c7ea23ee-4c65-4a3e-a9f0-b5975c4f5ede"
        },
        "item": {
          "id": "0ee79698-03d1-4ce9-85d5-c81fa793d09e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6797b3c4-e002-4026-9b4a-3707e6858d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1de3d33-6c55-4c28-88a9-a504748b18d6",
        "cursor": {
          "ref": "ded427a1-ee0a-41d5-9a59-c7dd61a461bc",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ce924c0-bf96-4274-8cfa-0ff86b9027a0"
        },
        "item": {
          "id": "f1de3d33-6c55-4c28-88a9-a504748b18d6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e95d1e7c-9094-419a-a9e6-309ee25fdb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee174b8-5757-413a-b642-921862f8ed80",
        "cursor": {
          "ref": "e4393c2e-2492-4be5-ad56-1f3e5dc69ffb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "211868e6-c8a0-4b3b-aeeb-2b9e20dd671a"
        },
        "item": {
          "id": "fee174b8-5757-413a-b642-921862f8ed80",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d864596e-41be-4e87-88de-75b264a939da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3de4ce-5c72-4f60-8609-cd0e117e19cb",
        "cursor": {
          "ref": "63e76f5f-fd2d-48b8-a7ec-9aec509d53f1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f82cf498-e362-468e-b7d7-565b0bb807cc"
        },
        "item": {
          "id": "fc3de4ce-5c72-4f60-8609-cd0e117e19cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1b6994de-b6bb-47fd-8e70-245883f2068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16038dc0-1266-4359-accc-15fe45c0107d",
        "cursor": {
          "ref": "64800f59-b91c-4a89-9d02-e3ee94679b1d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "00c13bfe-0809-4ce6-a431-6531b9698ac7"
        },
        "item": {
          "id": "16038dc0-1266-4359-accc-15fe45c0107d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9e7d044a-25a2-43ee-8489-896ea851d344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb9d37b-abd5-4729-a422-407b33b0e42c",
        "cursor": {
          "ref": "3672b678-bcec-4eef-9d7a-b4299f73cab8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1e2ccd54-1c31-476f-98c8-367e70126e7b"
        },
        "item": {
          "id": "ceb9d37b-abd5-4729-a422-407b33b0e42c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "63032151-bb3f-4bbf-883d-215337fc992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128c4c8-1926-47de-874a-e572af27304b",
        "cursor": {
          "ref": "58a9b4d3-9128-4dd9-92dd-5bfcccaddf47",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce9dcab8-1259-469f-8a00-a30784d8d37e"
        },
        "item": {
          "id": "2128c4c8-1926-47de-874a-e572af27304b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5b2f2d94-15ef-44ec-bbba-e4943e5ffe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fc645a-fd4a-4d6c-a6ea-eeed36956426",
        "cursor": {
          "ref": "acd2c44c-2851-4cf8-96ee-2fdca11db9ab",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cce7cc62-626f-4424-ba8c-7cd6eb1c71d1"
        },
        "item": {
          "id": "92fc645a-fd4a-4d6c-a6ea-eeed36956426",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31e3ac2e-5b78-42aa-ab8a-9013088cde03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5e9ba9-1435-41dd-aa66-46375cd0a39f",
        "cursor": {
          "ref": "acb2c4c6-8ebd-4fac-816b-7bbee7dfa0b5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40c3d2d4-2279-4495-994d-93b649f6f1bb"
        },
        "item": {
          "id": "cf5e9ba9-1435-41dd-aa66-46375cd0a39f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3a6a84cb-7b81-49ba-9bef-1ebe8f3a4fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b801005d-d815-4846-be09-6203114d30f0",
        "cursor": {
          "ref": "520b7b8f-c5cc-4a40-9ef7-122f380460b2",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1ad3ec96-51f8-4d22-bb45-d27004d5fd52"
        },
        "item": {
          "id": "b801005d-d815-4846-be09-6203114d30f0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "904ea0dc-cab4-4496-9aed-5e3fa49a10c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9010d182-a3e4-41b9-a4b0-8af7f172f6a0",
        "cursor": {
          "ref": "339499b4-c768-4c89-bb4e-79280fe0babd",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cdaa9d1a-9b9d-4289-b868-5b7ed2e6e4fd"
        },
        "item": {
          "id": "9010d182-a3e4-41b9-a4b0-8af7f172f6a0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d40008f5-6309-42df-958f-cf7ff7a0bfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6707a7a0-d242-4851-a06b-a02f64472043",
        "cursor": {
          "ref": "e6a92ff9-6c6b-47b0-a4e0-578280490342",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c2a976de-e2b7-4a8a-ab31-03960e16f5c4"
        },
        "item": {
          "id": "6707a7a0-d242-4851-a06b-a02f64472043",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cb6e4cdf-e6e5-4773-a3e2-aeeb9a4a884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba772208-da88-43e4-86a9-e825c13d1cc5",
        "cursor": {
          "ref": "9c661bf9-89aa-4c26-b2e5-4217f12192c5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e9df966e-9063-4947-b910-3bd368bad4d6"
        },
        "item": {
          "id": "ba772208-da88-43e4-86a9-e825c13d1cc5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a3ddf87c-5247-40fc-93b4-737d6564d389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493331ca-576b-4272-8064-4e98d3557ab2",
        "cursor": {
          "ref": "7df09f11-7bba-4e0a-8922-e949d885f509",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ce1c339-1fe7-48a0-bb4e-50d2d3f667b3"
        },
        "item": {
          "id": "493331ca-576b-4272-8064-4e98d3557ab2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e4782b6b-75a8-4c2b-a73c-eda227d73e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66c3dc3-f3cb-4a59-9124-1e8e76df7ecd",
        "cursor": {
          "ref": "ed04a828-9b7a-4509-8722-df821f2b026e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dc093ea3-4b2b-4ad0-8fc8-b8ba43294ae2"
        },
        "item": {
          "id": "a66c3dc3-f3cb-4a59-9124-1e8e76df7ecd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "06f175fd-3d92-41cb-bcb9-fd14fe4ca3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3c6af-1025-4738-b174-bf8bf7d22dec",
        "cursor": {
          "ref": "12806107-0b8f-4c30-b738-76da688a0bd8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "90fed36a-f044-4d2a-8e46-30fa78cff9b1"
        },
        "item": {
          "id": "78f3c6af-1025-4738-b174-bf8bf7d22dec",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "266fb0f7-d88a-4d0a-a6e0-d9ba0dd40018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c92088-4cd7-4392-8962-dcd8912d8e05",
        "cursor": {
          "ref": "22fdf645-9e18-42b3-bfd7-69cef82e8f0c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ee7b7a0-4114-4098-b828-b81cad2925ca"
        },
        "item": {
          "id": "14c92088-4cd7-4392-8962-dcd8912d8e05",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ff1788a1-2c1b-479b-81a9-05bf6bb38c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a69a21-1f86-4cc5-9430-2b76a4fbe6d9",
        "cursor": {
          "ref": "6d5bccf0-028e-47e4-9075-6614dead7d66",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "754336c3-8e56-4010-9dfa-3e606961aef7"
        },
        "item": {
          "id": "62a69a21-1f86-4cc5-9430-2b76a4fbe6d9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "87813277-b442-47d8-8309-99ad59f65cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb7bd46-b678-489f-9337-698f241e2ae8",
        "cursor": {
          "ref": "c81776fd-d84e-49b1-8b03-a731325b77e1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4bab1d26-0f40-4118-b816-db40abb36541"
        },
        "item": {
          "id": "fcb7bd46-b678-489f-9337-698f241e2ae8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9dd48780-b7f7-4b0e-9f19-e8ec3af656ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07993320-816a-4744-9d37-1b0fbf1349c4",
        "cursor": {
          "ref": "14319c15-fcc8-4d2e-a847-b33797e9137f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "893551ec-60af-448c-a385-2c1aefba52f1"
        },
        "item": {
          "id": "07993320-816a-4744-9d37-1b0fbf1349c4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b1e7cbf0-98ce-4899-9ca1-b13386998768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed122c3-c158-4742-a06b-b7b357a36658",
        "cursor": {
          "ref": "546c6b5d-9d46-4b5b-a409-36d941f3fafe",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "236652ac-6f88-45b2-85a2-578b56b8b458"
        },
        "item": {
          "id": "6ed122c3-c158-4742-a06b-b7b357a36658",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a8679dd7-f656-40d9-b672-901fcfdb5573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd25de59-6f1d-4c89-bdb7-1a72997f718e",
        "cursor": {
          "ref": "e535b162-695e-496c-a8e7-517ff51acfe7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "566bd004-9379-4539-878d-c3b6d8544f71"
        },
        "item": {
          "id": "cd25de59-6f1d-4c89-bdb7-1a72997f718e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7abeac0b-d970-4977-ab1d-aa6918bf32b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e353149-5cee-4ab4-afec-d6d012c23e7d",
        "cursor": {
          "ref": "6e69690b-2cac-4a1f-8f34-18956836c119",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "93e5f080-acda-41e5-929c-34eab4065210"
        },
        "item": {
          "id": "2e353149-5cee-4ab4-afec-d6d012c23e7d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "18c8be5c-6696-45ec-b16d-c5afeb3a25e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9f00c0-7735-4992-84a2-b431a74ed93c",
        "cursor": {
          "ref": "26feffcb-a155-4e5f-8f7c-feeb3cbab548",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2009a8af-ff28-4bde-8e19-bb3b7f7c9247"
        },
        "item": {
          "id": "4e9f00c0-7735-4992-84a2-b431a74ed93c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "727be4d4-2031-4d39-b17a-19d172eecaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33071f69-6fdc-4d4b-a887-47f3352abfd9",
        "cursor": {
          "ref": "b066be9c-3cdf-470a-af7a-3a04c431ac62",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6903eb7f-1c9d-42dd-9a12-71d42ac7fd54"
        },
        "item": {
          "id": "33071f69-6fdc-4d4b-a887-47f3352abfd9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d8108da7-fd48-4348-9519-42d80b18988a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cc037f-a42d-4af5-9107-a2d3f9bf2ef6",
        "cursor": {
          "ref": "19c1e9cd-0a8c-4784-b91f-e04a26acd16d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "85b71ce8-bddf-444a-a15d-590ccbf3fbad"
        },
        "item": {
          "id": "26cc037f-a42d-4af5-9107-a2d3f9bf2ef6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7d6a09e2-fa8a-4c6e-a26e-689d26d35818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f29a5e8-890f-4f72-8963-1b1ce56fe547",
        "cursor": {
          "ref": "30da9e8a-69a1-46af-9f89-e4e93e67c986",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0b7f3446-e0d9-42ba-9e7d-e804c2606f22"
        },
        "item": {
          "id": "9f29a5e8-890f-4f72-8963-1b1ce56fe547",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9aeac70f-6670-4ae0-b542-0ef6f78aee86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3041c02a-27c3-4527-9e22-d21dcc7dbb3b",
        "cursor": {
          "ref": "41d59261-52bf-4336-a381-205748a44cbc",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "52c9e9a3-d6f5-48de-b5f6-ecf3702928db"
        },
        "item": {
          "id": "3041c02a-27c3-4527-9e22-d21dcc7dbb3b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c35174b4-12b9-400d-8ed5-b71545663dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f5e90b-1840-434a-9912-89e6187d0c27",
        "cursor": {
          "ref": "571cf7df-317c-45a4-87fb-d02374445b59",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7f1845e6-b242-4e0d-957e-1fe3616773fc"
        },
        "item": {
          "id": "39f5e90b-1840-434a-9912-89e6187d0c27",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d5139676-9bde-45c1-86dd-e296f00cadce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a1cb3a-50c8-4094-b8ed-b4babae9ab3f",
        "cursor": {
          "ref": "17974778-ff01-48c1-83b3-4a5f41ef2b25",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "784344fd-8e19-462b-a571-acc321e94d3e"
        },
        "item": {
          "id": "16a1cb3a-50c8-4094-b8ed-b4babae9ab3f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f1898ec7-b129-4f4e-bda0-07b80e48b29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ef5f07-527a-4b6b-b073-6e7e1478c5dc",
        "cursor": {
          "ref": "de2d134f-8a71-4de5-b5e2-7f7e73422755",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cfe9c38a-9592-4095-96da-f4606636a82a"
        },
        "item": {
          "id": "94ef5f07-527a-4b6b-b073-6e7e1478c5dc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec614d62-3dd8-4e1b-876d-ff4e1a329e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3368ec-94df-4cd6-b354-b6e083b45245",
        "cursor": {
          "ref": "2240a93c-47c0-4043-b926-a609bbb1a95c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "69b4616a-564a-4530-8c97-a1331324b7da"
        },
        "item": {
          "id": "ee3368ec-94df-4cd6-b354-b6e083b45245",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8e3881d5-717e-43e0-add6-06a2a3ba5423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae971c5-c23e-4cfc-a0df-9019d745435c",
        "cursor": {
          "ref": "16e512a0-67b3-4e71-9280-011346e77751",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5fca40af-2d10-4756-8a33-c6f7dd3b0b9f"
        },
        "item": {
          "id": "1ae971c5-c23e-4cfc-a0df-9019d745435c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "da5a4f43-6c3e-498c-9107-40e3b686e67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6454e0-5893-4afe-8d7b-705f6956fde1",
        "cursor": {
          "ref": "f7a6ccdc-2655-487c-87a7-4ebbd15a75e7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "86e63497-bfca-4a32-b74f-08b291427445"
        },
        "item": {
          "id": "0e6454e0-5893-4afe-8d7b-705f6956fde1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b8ed6a7f-1516-4cf0-b6f0-e0e555343a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f98740-c52b-427b-a027-e934a8f33d7e",
        "cursor": {
          "ref": "7a0cbbcc-019c-4ff9-9ad4-742db6c62c71",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7cc6b2ac-fe61-43b6-a600-6b39de8eaf07"
        },
        "item": {
          "id": "49f98740-c52b-427b-a027-e934a8f33d7e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ba997334-335b-42bf-979c-e2f5ec3c74cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f4b818-eec8-40f0-a7cb-8316527da1e4",
        "cursor": {
          "ref": "85267a20-b2db-4da9-bfd4-d151de2f4674",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc1e3dfe-aee5-41bb-93c9-1fc4775a52f4"
        },
        "item": {
          "id": "30f4b818-eec8-40f0-a7cb-8316527da1e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "99ddaf5d-60c4-4387-82b8-8eb3eacf3dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bf4ab4-da8a-4a81-b6bc-901eb3583cf6",
        "cursor": {
          "ref": "af912f2f-1280-403a-b866-2d38974ddac0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d2b58ee-add3-4a37-bf60-369862de2b9c"
        },
        "item": {
          "id": "88bf4ab4-da8a-4a81-b6bc-901eb3583cf6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e1437f7-7a76-43bd-b677-3d9ca89d5b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36533d9e-a4f4-4111-8579-4745e5e4a6bb",
        "cursor": {
          "ref": "0d464bb9-d697-4fd3-aba9-2003cbf0e001",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1233884b-a9f3-4ac6-a1b4-2146084d6578"
        },
        "item": {
          "id": "36533d9e-a4f4-4111-8579-4745e5e4a6bb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a2738642-d599-42f3-b767-b89cac4dad58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03772bc-514c-453a-8326-deb7507d4e72",
        "cursor": {
          "ref": "2f38836c-12fe-479a-87d0-9e2314212173",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c9c1b949-1638-42d4-8e87-8ce1fda40f78"
        },
        "item": {
          "id": "f03772bc-514c-453a-8326-deb7507d4e72",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1b95a176-14ba-4be7-9951-9843cc7ebe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa130088-a475-4e1d-95f6-63269cec6636",
        "cursor": {
          "ref": "52452739-10da-4865-b18f-bb5163903a42",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7c44bceb-9d91-4af8-a783-465cfeef0f93"
        },
        "item": {
          "id": "fa130088-a475-4e1d-95f6-63269cec6636",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7ca32ce1-b002-4fba-968f-083e4e854669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1c6fa2-8591-40a8-b3ae-58f6a82f99d2",
        "cursor": {
          "ref": "76c953ca-af02-448e-9532-e004f9344212",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe86b695-0b30-4662-bfc7-377979c6d31d"
        },
        "item": {
          "id": "cf1c6fa2-8591-40a8-b3ae-58f6a82f99d2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d91b9886-4ad0-4f86-bda0-85b191b8ea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6f39b4-f5e2-4cff-9862-c4e20bb53844",
        "cursor": {
          "ref": "ae772177-2a73-402c-ae5b-caeffd844cdb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "81454734-02f4-47f9-84b3-86ae14c35cfc"
        },
        "item": {
          "id": "1e6f39b4-f5e2-4cff-9862-c4e20bb53844",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "26d6c869-0bfd-4218-be7d-20e967ea27e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3290319e-8ca6-43ae-8ff5-66e6130d5f58",
        "cursor": {
          "ref": "99fac122-c66f-4f5a-b192-c98252dd963f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "812610e9-7986-45be-b2c6-19dbfeeb9c36"
        },
        "item": {
          "id": "3290319e-8ca6-43ae-8ff5-66e6130d5f58",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "13d8bf79-df09-4026-90b5-20426d6635a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77a1b7c-405b-45d3-aada-87998bccf9fb",
        "cursor": {
          "ref": "291482e6-14d0-41e7-951b-bc6f00f656e0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cafbdbb3-a29d-4c82-832c-67f70c463148"
        },
        "item": {
          "id": "e77a1b7c-405b-45d3-aada-87998bccf9fb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5b022ed9-0e25-4abf-b6b9-f19a84cf5dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db71fd4-f68f-4cde-a2d0-df9faba32111",
        "cursor": {
          "ref": "9f101c22-6b76-4d53-a639-08cf3ff34392",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ed1a7112-e295-44a5-9593-f23b42eb804c"
        },
        "item": {
          "id": "0db71fd4-f68f-4cde-a2d0-df9faba32111",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f59e7f65-7ade-40d7-a5f8-3686d5cbfcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e02087f-6117-4a6c-a81d-9d8cad37de98",
        "cursor": {
          "ref": "95455692-f36b-43b0-b153-b3c123f52d1d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8c44c3d4-add7-457f-8a4e-2cf84e8a4178"
        },
        "item": {
          "id": "1e02087f-6117-4a6c-a81d-9d8cad37de98",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7bcfda5e-4555-4064-90f3-8214a70e61d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82affac8-79b2-41f6-8ca8-47109c304820",
        "cursor": {
          "ref": "7905ba76-cf1f-47bb-b59e-18c0050c3564",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "71e95773-17dc-4ff3-a9e5-0f896f68428a"
        },
        "item": {
          "id": "82affac8-79b2-41f6-8ca8-47109c304820",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ad0b3d30-5301-4f93-9532-19ee3c6aea57",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "7fbf80cd-447f-494e-a769-7138f6e5890e",
        "cursor": {
          "ref": "dbcb8fd6-ce36-4b34-a788-6a4a2874b674",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a25d621e-b1fe-4628-b885-c60c80e6724d"
        },
        "item": {
          "id": "7fbf80cd-447f-494e-a769-7138f6e5890e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a59874f-a96d-4b89-9c26-0dda7ff07742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9131b7df-9a46-49b8-887c-01c0bdcccf4b",
        "cursor": {
          "ref": "cf871952-1e92-4a33-adc2-3035e69cfdad",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e6a2f403-3ee4-4594-893a-14254d2e16e3"
        },
        "item": {
          "id": "9131b7df-9a46-49b8-887c-01c0bdcccf4b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eda2e9c4-5803-4bb2-961c-3f3319c3c577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4535e234-c491-47e8-9e02-f46aabce0d51",
        "cursor": {
          "ref": "1d19bcd4-5375-496a-a88e-e0daec4d17c7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2d255176-af29-4b03-b0d4-21669fa53d34"
        },
        "item": {
          "id": "4535e234-c491-47e8-9e02-f46aabce0d51",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "135a547e-ffdd-4492-a9ee-67ab7128e64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1568774-9f7e-467e-9ab4-1f758fc2999b",
        "cursor": {
          "ref": "ccd3f341-7ce0-4254-a974-ac38ef6058fa",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d2ab1ee2-2844-4799-9579-32a337930632"
        },
        "item": {
          "id": "f1568774-9f7e-467e-9ab4-1f758fc2999b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d59112e6-d62f-4721-ae47-3fab38f998bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40795610-6ab8-4129-af3f-71535715297f",
        "cursor": {
          "ref": "0b67e55a-e511-4fd2-ab3a-f7fd9505d1f5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bce5c9d8-c6ce-4795-bc5f-33ee006a0f92"
        },
        "item": {
          "id": "40795610-6ab8-4129-af3f-71535715297f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fbdb0c9d-6940-461b-97b8-dabe13c0e15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b01691-5f1a-4292-bb76-b0a34c9e5340",
        "cursor": {
          "ref": "9af83240-41c7-474c-8a53-f37415754215",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb3fd509-d63a-40a3-9904-a4a3da3d8c45"
        },
        "item": {
          "id": "78b01691-5f1a-4292-bb76-b0a34c9e5340",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d263843-c010-4c04-8f80-218b94ef9a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d32e64-d469-4102-b982-e1d3b9ac8901",
        "cursor": {
          "ref": "57b137f3-cebe-4387-8aad-16a76ce3b355",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1d0169fd-3bfc-477f-a0c7-080b554c34ca"
        },
        "item": {
          "id": "d0d32e64-d469-4102-b982-e1d3b9ac8901",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "226fa6bd-390c-4bf5-9420-2775fbf3201d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0445eb12-3f48-4bc0-91e9-7da0989ab4ae",
        "cursor": {
          "ref": "3e5779e9-2cba-4e62-81b5-aeec9882ecae",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "feffa068-8132-4750-9a0f-6b246af780da"
        },
        "item": {
          "id": "0445eb12-3f48-4bc0-91e9-7da0989ab4ae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f64762a1-f46f-4936-81e3-b7f2b986d60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748abaaa-f3ff-41ea-a602-e476a79f10fd",
        "cursor": {
          "ref": "dd1c6430-e78c-4ceb-9aa0-0f20f5ea0619",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "65031272-2ebd-4e30-aa43-450efa0958f6"
        },
        "item": {
          "id": "748abaaa-f3ff-41ea-a602-e476a79f10fd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f9c022d9-6e78-4a7f-bc55-4901369cda28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfb7dd1-8ffb-4be6-8c3b-a36686e4b44e",
        "cursor": {
          "ref": "a2d6b38f-c16a-4f33-ab09-1b2af584a5e8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "da71a018-a106-48e0-b91c-b06bd9a19c65"
        },
        "item": {
          "id": "0cfb7dd1-8ffb-4be6-8c3b-a36686e4b44e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c822bdad-e43b-4a6f-84b4-9155a9d0d0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c5c4d0-6526-47be-bb5f-552e72622046",
        "cursor": {
          "ref": "f5e5489d-7750-40bc-9ef4-52f30a7f4833",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4c81d5e5-b444-46d9-8e27-459090dd81d6"
        },
        "item": {
          "id": "63c5c4d0-6526-47be-bb5f-552e72622046",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d5265a9c-918c-4dd3-8ecd-8f310b612928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27ee72d-e464-4e19-a1f3-e0305974be7b",
        "cursor": {
          "ref": "8aa72bde-89d6-4738-bf1c-0853a429b344",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e85250b9-96d2-476d-afc0-74e5ebbb8c5b"
        },
        "item": {
          "id": "b27ee72d-e464-4e19-a1f3-e0305974be7b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "216348a4-cb95-4206-a8a7-c446652ec2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc594959-7266-49b5-b64d-a517065d981d",
        "cursor": {
          "ref": "2256f8bf-c35d-4f04-88c8-f8db4485f778",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3c9c6ee7-ef6a-48c7-9e25-c8b0b50aa115"
        },
        "item": {
          "id": "cc594959-7266-49b5-b64d-a517065d981d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d07e9279-9b66-4def-ac3a-a6458eebeda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4a191a-61ca-472d-8efb-dabb2645aa9a",
        "cursor": {
          "ref": "1a2371d8-d28e-4177-8e56-91d7c1366e89",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "20eb152c-ae4e-494b-b88a-a72d71b3aa19"
        },
        "item": {
          "id": "3c4a191a-61ca-472d-8efb-dabb2645aa9a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "45280289-4b84-42eb-8cbe-12d6538fc2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13478f8-35f4-40e2-912b-775d4156ab0b",
        "cursor": {
          "ref": "35564c43-6b39-49bb-9c01-3784882d29d6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6cffab2e-7a3c-46e6-b57c-453fb4e45cf0"
        },
        "item": {
          "id": "b13478f8-35f4-40e2-912b-775d4156ab0b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "39ccea43-72db-4ce5-80fe-9b2a242fc06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39454bfc-6333-4371-8031-5309a8c52cd0",
        "cursor": {
          "ref": "027c8b81-9b50-49cb-b319-976a874fad9c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b9cf34fd-4090-41e8-aed0-b6f78e9ed98a"
        },
        "item": {
          "id": "39454bfc-6333-4371-8031-5309a8c52cd0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a874da80-074c-4895-a647-5b722ef7e480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b351d2-3cca-49d6-a537-c15fc259ec2a",
        "cursor": {
          "ref": "25426fb8-7604-40c2-b413-67ac9eb2019e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0d4f8d75-5bb9-4eb0-8ae6-37d4736e75ab"
        },
        "item": {
          "id": "59b351d2-3cca-49d6-a537-c15fc259ec2a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0f0e04e7-0b73-47b3-a526-65765e890b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0e640c-312d-4e06-9691-0d50ee3d0597",
        "cursor": {
          "ref": "2f722d6d-8664-4d70-97a6-4a450acc2967",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b4ac67b5-edc4-4363-b13e-932519ed6b48"
        },
        "item": {
          "id": "4e0e640c-312d-4e06-9691-0d50ee3d0597",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2534b5c9-2bc0-4e1f-a071-cbbc8a7e5ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b1a2d7-b4ef-4dbf-ba16-a15602727936",
        "cursor": {
          "ref": "09ec80b3-3fd2-4e97-b7a1-85c21975b86b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68fb09e8-2d30-4995-a856-855c5c3e93e6"
        },
        "item": {
          "id": "90b1a2d7-b4ef-4dbf-ba16-a15602727936",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6915335f-c9bb-4870-8ec2-9cb434306923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90ae9e-ec55-430d-9a97-7a94302ee138",
        "cursor": {
          "ref": "0849060d-34cd-4128-ae9d-3038818cc47a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a1d6b0d-2a9f-45da-906d-5b9d49f1a64a"
        },
        "item": {
          "id": "3f90ae9e-ec55-430d-9a97-7a94302ee138",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "55f590f8-5ac2-410e-ab43-396845939159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229f682e-6f2e-4d35-964a-7958d5069cc9",
        "cursor": {
          "ref": "69caa9ce-8465-4bde-9b92-a6916940bca8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3344519-ca08-43fc-a003-7eacbab408f6"
        },
        "item": {
          "id": "229f682e-6f2e-4d35-964a-7958d5069cc9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3341ad4a-87e1-49a1-8efc-97053ede575e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b99403f-6d8a-4aac-a2ef-209a432ab069",
        "cursor": {
          "ref": "ee37c7e6-ba76-4609-bedb-5dcc2799cf06",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2ab21b1d-1cef-46f7-b458-af6210484472"
        },
        "item": {
          "id": "3b99403f-6d8a-4aac-a2ef-209a432ab069",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a58c771c-9e06-475c-bb7e-18b32189e7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f870ef3e-3c6a-44ab-99d4-b52f8f659d8b",
        "cursor": {
          "ref": "c636fddc-75f4-45fb-846b-4c1309f515a2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8959c6ad-5d29-4459-a991-050c0aa6a9cd"
        },
        "item": {
          "id": "f870ef3e-3c6a-44ab-99d4-b52f8f659d8b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b7349d73-a5a2-43ad-be81-08c3361c2224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b76812f-f147-4761-a4aa-ac092330d962",
        "cursor": {
          "ref": "d8af10aa-bb9a-40b6-a0cb-58f4255cceba",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c10cd461-3a7a-4d0d-9bcb-f68331ff15f4"
        },
        "item": {
          "id": "2b76812f-f147-4761-a4aa-ac092330d962",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ae81f84f-3e73-4585-a8bd-dabe40dd59d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e334dc-6774-4723-8051-055273911b2b",
        "cursor": {
          "ref": "6761ed5e-8151-4a2f-8807-de3109320d1f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9712cb88-0a7f-4792-9acb-95d7388cf0e2"
        },
        "item": {
          "id": "b7e334dc-6774-4723-8051-055273911b2b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0469f7ed-14a6-46f2-bb1a-796410037adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b0c65a-c13c-4466-bac7-43f38d0d713a",
        "cursor": {
          "ref": "55dcdc10-23b1-4f0f-9711-89495f67fc42",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bd2549c8-2a02-4b00-99f9-70cca3e2a963"
        },
        "item": {
          "id": "72b0c65a-c13c-4466-bac7-43f38d0d713a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "89474a65-0693-453c-8488-92c4c175d379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602fe63a-d08e-4c69-9dc5-2208ffd63e9b",
        "cursor": {
          "ref": "25c0157c-2a95-4af8-bd54-d34c5ead5ac3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "686c962e-f521-43b2-9157-81a725706e3e"
        },
        "item": {
          "id": "602fe63a-d08e-4c69-9dc5-2208ffd63e9b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d2621504-d73e-472d-a712-af847a3cacfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb82993a-48d9-46a7-baaa-7363a58dd533",
        "cursor": {
          "ref": "f8fd6aa4-af00-4095-8ca7-997fda6d4557",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3252731d-61b0-4b99-99b0-75423d58a271"
        },
        "item": {
          "id": "bb82993a-48d9-46a7-baaa-7363a58dd533",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b8c474e4-06b7-40e1-9d64-63d86cec30e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8b25f1-2fc0-4c8c-8aa3-c50ec2a967a5",
        "cursor": {
          "ref": "5a7933dd-0097-467c-a5c2-4d6144495856",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4cecb702-6ce2-4474-8858-2e887f07314b"
        },
        "item": {
          "id": "2e8b25f1-2fc0-4c8c-8aa3-c50ec2a967a5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8a07c4d9-911c-4b94-ad5a-3d2fa2e0b6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd502d76-2851-462b-81fe-34f04a7184ec",
        "cursor": {
          "ref": "5a1c1dfb-3dc8-4508-9dfa-c9d61e01d4f0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4ab6b137-75f8-497b-8abc-ba1575634e5f"
        },
        "item": {
          "id": "fd502d76-2851-462b-81fe-34f04a7184ec",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7d160edb-66fc-48f2-b077-04efe300c87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d7bbd9-a28d-4e95-96fa-c863c94397d1",
        "cursor": {
          "ref": "5a26ba7f-991f-483e-b223-472f10c65f71",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a71d35c5-fe78-4e13-993c-91a3322a4c6c"
        },
        "item": {
          "id": "88d7bbd9-a28d-4e95-96fa-c863c94397d1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "45451d05-aab0-4a22-9378-a864ce3b6376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796b2c6b-d5a1-4ba8-acef-f76de043d928",
        "cursor": {
          "ref": "204b6d49-5ed7-49ff-a5f4-62107e218ea3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "00f5e20e-b304-4e5b-ae21-48db884cc8b7"
        },
        "item": {
          "id": "796b2c6b-d5a1-4ba8-acef-f76de043d928",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ee984079-9cc2-4cbd-9cfc-dc6a71ba65dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ccf1e0-501c-4f77-87a7-4341f514be2c",
        "cursor": {
          "ref": "c189518f-d495-4242-9ab9-e78a1a26f163",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "dacaf042-b877-4557-8501-8ec2f963a67c"
        },
        "item": {
          "id": "55ccf1e0-501c-4f77-87a7-4341f514be2c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "53f493d5-3dcc-44da-932a-ad9ed7e1f6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a113dfec-679d-426a-b1e3-0902043846cd",
        "cursor": {
          "ref": "cecae457-eeee-4c10-8726-f2b643d76894",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4cacdcf9-343f-4045-98a4-e72475816300"
        },
        "item": {
          "id": "a113dfec-679d-426a-b1e3-0902043846cd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "757ffd02-d54e-4429-8278-af9e019f0a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f844af67-f59c-4222-afe5-4e853ff6f2b7",
        "cursor": {
          "ref": "1273ff41-3e88-4acc-b758-2e93d7c50dcf",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1eb6b245-444b-42f6-a8a5-a9573744d0db"
        },
        "item": {
          "id": "f844af67-f59c-4222-afe5-4e853ff6f2b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "370a3c76-ff9c-4384-b8b5-ebda8fe9e8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80489e-b198-4520-b55b-d3be146c2557",
        "cursor": {
          "ref": "f3995cdd-d10c-41b0-b3d3-4efaad8e4abe",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8b1a723d-92e1-4290-a0a3-9a2790f4ba9c"
        },
        "item": {
          "id": "eb80489e-b198-4520-b55b-d3be146c2557",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c8734b4a-129b-43d6-9d3c-e1a77347498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f50a14b-51ce-4b92-ae16-cbc36a9f4a11",
        "cursor": {
          "ref": "e52694aa-d8af-4b87-8501-3403a8fea6ec",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ff8d255d-d70d-41fc-b1c9-0a6d9ccfb7be"
        },
        "item": {
          "id": "4f50a14b-51ce-4b92-ae16-cbc36a9f4a11",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "57767798-851a-48e2-917c-9d29688e0983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbda705a-905f-49c4-bd12-50a964bfcf0d",
        "cursor": {
          "ref": "0af612c7-d19d-4488-a270-f55d8745c353",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6522c99d-1cf8-44d4-b71b-631c99a128b7"
        },
        "item": {
          "id": "dbda705a-905f-49c4-bd12-50a964bfcf0d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4d5b1be6-567c-47d5-9b94-006d759d3eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72607f-a6d5-44b1-9495-3fe58e69bdea",
        "cursor": {
          "ref": "7f180242-5251-4d70-9174-d79ba8f506b0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5b30b6ab-528e-4334-a09d-83261582feb4"
        },
        "item": {
          "id": "ad72607f-a6d5-44b1-9495-3fe58e69bdea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "28df1b8a-9068-44af-a826-923b84790161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396d8760-5517-4e61-a15d-8d79e2b2b938",
        "cursor": {
          "ref": "7260c08c-275d-443f-be16-9cf2ba2eff88",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c45df089-dc42-4802-b9eb-4f0c73d5bca8"
        },
        "item": {
          "id": "396d8760-5517-4e61-a15d-8d79e2b2b938",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b1e0497b-a3ba-4a8e-a4ab-2575594e6367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15326bbd-66ca-4f97-8be8-3d56092a1158",
        "cursor": {
          "ref": "2a8ed580-3485-4509-87ce-488edaf839bd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "983530bd-a792-46d7-8415-3452fae278e1"
        },
        "item": {
          "id": "15326bbd-66ca-4f97-8be8-3d56092a1158",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "37dcf6a1-7ba4-43c4-a82b-455c32033571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df8af28-87bc-4a6f-aef3-cbb7d99ffd7f",
        "cursor": {
          "ref": "4487e4bb-8885-4aff-8cc4-99dd3125952f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1c82c2dd-47b4-406c-8253-69f5f42cb639"
        },
        "item": {
          "id": "6df8af28-87bc-4a6f-aef3-cbb7d99ffd7f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f31fd083-1d0d-431f-bb9a-2870a18fab4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f573a9b4-9d04-4b76-add3-6a5596d9f227",
        "cursor": {
          "ref": "1db4200c-e3a4-4d4d-aa45-2e6c8136be0d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ec4fd4fa-47eb-4df4-9fc2-3264f71fdb47"
        },
        "item": {
          "id": "f573a9b4-9d04-4b76-add3-6a5596d9f227",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b3eb19f8-e768-4481-9b2c-a41e0ccc9c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f615115-2036-4b54-8df9-5777daf6ae42",
        "cursor": {
          "ref": "58a67df8-cbdc-4b23-9cc9-49b40d8f6e5e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4ec92ad3-4c2a-4cd8-878e-79a6d45f4ef2"
        },
        "item": {
          "id": "8f615115-2036-4b54-8df9-5777daf6ae42",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a4a02bfe-d3b9-426b-9eb5-f518376807b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e97bac7-7b25-4160-a479-e0f94b1af420",
        "cursor": {
          "ref": "3e0ec105-a468-43d7-908f-4c574137ff1e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1fab9c86-998d-4959-b898-aa8594deee4f"
        },
        "item": {
          "id": "2e97bac7-7b25-4160-a479-e0f94b1af420",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "654fc125-4362-41ae-9fec-3802ae4ff0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcaa4f2-c70c-4016-9428-52d979fcacad",
        "cursor": {
          "ref": "ae9a906d-6a2a-4518-aa2e-a82f8ebc532a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bd969808-630d-4f28-9f86-abe27fc50917"
        },
        "item": {
          "id": "ffcaa4f2-c70c-4016-9428-52d979fcacad",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10911f0b-d726-431d-bf06-65c956178728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d5ff42-18b3-488c-804d-55f17920ec28",
        "cursor": {
          "ref": "c8fe1a87-f0d3-4508-b878-f401c7edc8d4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "78eeb427-496c-47c6-986e-7d553539add2"
        },
        "item": {
          "id": "75d5ff42-18b3-488c-804d-55f17920ec28",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7f7c4b21-4483-45c8-8859-93be1df671db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7d3da3-d5ae-4084-a6d3-091b7562ce18",
        "cursor": {
          "ref": "e99ffe0f-a3b3-4229-b3c6-b38179c13bad",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b7be15a1-3b16-4edd-825d-1b39b4bd1a7f"
        },
        "item": {
          "id": "fe7d3da3-d5ae-4084-a6d3-091b7562ce18",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "77165785-ace7-424c-9bf3-4574652eb901",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6674ea9-0958-4db6-b0a5-2776d059efd4",
        "cursor": {
          "ref": "00b5c570-18e8-4342-9e8e-9e935065056a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bb66ffbf-cf0b-4034-a519-dad1900942f1"
        },
        "item": {
          "id": "f6674ea9-0958-4db6-b0a5-2776d059efd4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1fe31a3e-9efe-4f1e-aaea-d20aa237e9d6",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faa1c49-3f20-41a2-8a44-06c7f5672f6e",
        "cursor": {
          "ref": "94cc7d22-3323-4495-90b3-e6b844a336ca",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "be64e69d-8c60-4ed1-a987-973e05115c73"
        },
        "item": {
          "id": "9faa1c49-3f20-41a2-8a44-06c7f5672f6e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ccc11be1-4707-4afa-a9ab-25461903516a",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c118ae-ac5e-4884-a407-1af0454ed012",
        "cursor": {
          "ref": "61ac78d1-673d-466a-8b41-8d8317094cee",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "31e233e4-3691-4d09-8470-2c4c50b3c3c9"
        },
        "item": {
          "id": "a7c118ae-ac5e-4884-a407-1af0454ed012",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8c930a6-be20-45f5-b01b-6c5a72a9190e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c118ae-ac5e-4884-a407-1af0454ed012",
        "cursor": {
          "ref": "61ac78d1-673d-466a-8b41-8d8317094cee",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "31e233e4-3691-4d09-8470-2c4c50b3c3c9"
        },
        "item": {
          "id": "a7c118ae-ac5e-4884-a407-1af0454ed012",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8c930a6-be20-45f5-b01b-6c5a72a9190e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a388b5-c26e-4419-b110-ef29989e8fb4",
        "cursor": {
          "ref": "03600a35-3fb8-4218-ba6b-882a02673ea5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f4a99d0e-a791-42e0-bbc9-fd35c94d920c"
        },
        "item": {
          "id": "e5a388b5-c26e-4419-b110-ef29989e8fb4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4217fdb1-d8b7-4aa7-85a7-eb3846eb94e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0635d1e-fd0a-4dd2-bf40-cdbf04ed3f48",
        "cursor": {
          "ref": "00da0d2a-788a-4c99-ae24-d4599993d29b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "98547291-b8c5-432e-b345-f882fec7209c"
        },
        "item": {
          "id": "e0635d1e-fd0a-4dd2-bf40-cdbf04ed3f48",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5a6e261-6de7-4995-adb3-2c2f86afa8d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}