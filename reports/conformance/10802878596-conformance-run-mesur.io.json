{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6098080c-e91f-47b9-84db-0241d5b0fcdb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b6759aa4-01f1-4bb3-b05a-c7f9408d8e89",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d356c6ea-2c08-46fa-b2d5-5da3dc3c8746",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "04ddc072-b8f1-4ad4-83e2-200bd550f8ed"
                }
              }
            ]
          },
          {
            "id": "18afcc78-3e46-477a-91ed-67bdbcabe67a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfd90c6d-7c8f-4341-8261-ccef998f0c81",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab64e89c-f016-473b-97ac-ca3cb648e410"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d2068d57-c020-410b-8fbe-01673270a7b4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c4f683e8-2d96-4b27-b5f4-7b4262bc2d03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5cdcac2-a4e6-49fa-926d-0d031f3476d2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f40b1c69-bff6-45c2-aee2-a2a4011e0102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dceeebb-5f93-427e-937e-1a680bdb45b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed892a61-cf93-4e77-9030-7b38492c531d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ef4871c-5d05-4d45-ab55-94fb534b541f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1983937-89c0-4bdf-9a49-1a8c7854b4f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e46721c-5f00-4b2b-82fc-93d5bfef4c15"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "325f989c-fefa-4aa9-9799-bbb319e1af96",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a9a3b4e2-801c-4da0-beee-39ce435dc344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67b0d2ab-fa08-4dc1-a735-bf0be170db82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c655f49-5133-4f59-91d0-199968e80332"
            }
          }
        ]
      },
      {
        "id": "e8172a5e-3e5e-48a4-b3d8-ed1e8367522b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b23d32c4-851a-442b-b5ea-168114a106a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10411462-f39c-4a83-a2cf-7159d4c08845",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71f25b30-c57b-4f61-a97d-f6f65b62bddb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e33da3-1adb-4812-911d-b1da6c7cdc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63cf4c4a-2d42-4ee1-a881-4d5e765410ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150966cc-289d-497b-be3a-be12ef7237f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905ac0a7-dca7-42d4-ad80-be63a99f7efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3e5f061-c261-46ab-b302-2bf1d6f4eafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331a09bb-0ab4-4291-9c7b-d35bad96296c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e075f6-2138-4be0-9139-3ae9504488b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e07653d-ae95-41de-9b21-ae1a22e09501"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74221a73-6926-40a7-8b0a-80e3c778697b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff21cb92-294e-403c-8194-576c592ab6ea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c4cbe4-3103-4246-98f6-546a771c148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a356d9ef-7d2d-4edb-bbd9-ad825f8e298b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954903c4-40f2-415f-8fd2-9de071385617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bc5d69-3a99-477d-befc-60f613cc6db9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "225ba5c6-37e9-48cf-aa7b-d5cf35ed1d3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7daf2254-8bad-4f87-a293-4c2d5d53a0d6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ca02984-ffd8-415e-ba2a-411d8df4d28a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "360e093b-0d98-4dab-b8f6-0a7b9a74f972"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1d083e5-d8a4-4aa6-908b-e8c1f8e04b30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "76b4956a-738e-4289-b43a-acfe71162bb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e1b7539-edc4-4006-a01b-7829231815a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2672cf5e-7d2e-47b8-91ed-d2af4ed806c6"
            }
          }
        ]
      },
      {
        "id": "045233da-073d-4bc3-bc05-0d3e8c30058f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "85601106-87ce-47ed-b367-94f34bfbdf17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2f64b1e-31c9-4130-a563-859916321839",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "315b0f47-3565-4133-bb76-5f1b2e811dec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f7ada7-3f79-4268-af41-42e2de03676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7902747-5bc3-4805-a044-2b0aee1fdc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d8c08-0448-4ffa-ad92-5c17fc99ddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d97cd4a-fd2e-408d-a5fb-6282d719232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ac497a-f64a-422c-858f-2c1ba9355697",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ae12ff-901d-4766-ae9e-3fec000f9f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2eef846-6dd7-44f0-9c42-83172b267f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869412b-290b-4cab-921e-7281b4948ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ca556ee-9c20-4657-b7b8-787de5a4bd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105f00c3-19de-40ea-9492-dcdf0f1d0245",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67c9db7-6c7f-44d8-9cf1-f4806dd4beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4163f72c-82b7-41f0-bd35-95b24ac955bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd34998-0109-4091-9218-0bf665ce1467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96789210-2bb3-4f4c-bd35-60ea48fc3eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849545d9-d157-44fe-af99-60e047c74684",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295df1b8-5ba1-4589-9e05-aa7b7032f03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b33385-ea5d-4e18-bfe6-006aa0457649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23adc67e-ae93-43cb-a5d5-e7e1a51f4c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e926860b-9163-453e-a232-0d2fe785316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1e269e-9a98-4c88-9f33-cd4e8bdde66e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944bd903-31d2-4062-a37e-675ff24c5f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26292d0c-fe11-4033-ac4b-e76bf5d221da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d79cc8-58df-4fa9-8c1d-08483188907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a6887b9-6bae-4036-aeb3-3492e184a7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c731ca18-711d-4516-a811-24ea629a879e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2606fa8a-ef09-4172-83b9-23e5505d08b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4eb1fc-1abb-4e02-b4e4-65e5b406586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321c126b-d3a3-47b3-9e85-c4d463420219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "287dce56-d2a8-4918-984c-3dc834f63a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276355a9-3933-4472-a499-bde219cbe40a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d36378-05c9-47d3-a585-4f02bbe243bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ee8991-db73-4c98-b442-12a60ce7179a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e94586-3256-45de-b9fa-2ed15b7490c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b08fb245-8a7c-45ec-980d-3479a0a8b4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522143a0-233e-4e35-8a8c-fabe91e2d4fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1091742-bf34-4525-b821-af75b0a7a085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dae5b21-c4e7-4f12-8a68-07f4a4ee7ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e857e090-1b20-42eb-ba82-96e796263241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b536e1a8-a0b0-44a0-a94c-7f923166e085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf23d0c-10b7-4ec3-bcc7-8b00102e2b37",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c57322-3c5a-4d61-84d1-e242293cb030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e02ee8-ed13-4197-9e4e-0f46a2b3c6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2d6730-22d7-41dd-a6c5-38ae94d176b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "009a17ae-7b4d-4037-b8f8-d0e620b1394d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8184646a-da28-4170-a08a-e6fce2efb755",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aead2beb-b21e-4a18-a8e5-c769110814e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa64b711-84eb-4633-8748-3247a42d4c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0301ddf-8ddc-47d6-aa3b-3759ca6f2258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607a2355-9ce8-4733-9f16-8cbec8d3b9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8487301b-ab79-4499-b656-be00cd4ab9ff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d842c464-deeb-4968-af76-2ad6361a1cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448c3f09-504b-4d45-8aa7-315370f15bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486627b5-ebdd-45c9-8f5a-1346fb12002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07e8b4a1-607a-445e-a12f-a154a860a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ac95f7-d8c7-4208-b180-c5364a3af3bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a1c5ec-2e5c-470d-9638-974d7659d26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e069764a-6c01-492a-8d35-c8b69b2faf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed1bec-3a8b-4699-a7c1-5a2b83e65310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b76796b1-325c-4ea0-bc54-fc64508001b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffbab23-7c40-4e8d-86ea-9175dac9fa9b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfe1f74-8793-4ca8-bcc0-7edbde652c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e866aa-5187-4ed6-915b-49030c2bc9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eac10d2-2ca7-488b-8616-b13f84764c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24e3d9f1-d190-4fdf-8a1a-52580bd8a4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3d907d-3a8f-4c6e-81bb-50ef605dcb2a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474d3089-c0bb-43c7-98f1-a873d088146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4849f9-e310-4f11-89ab-dfcda15fc798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751d29a-f5c0-4a53-b1c6-970d79c182ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a3dac59-441f-4a12-8746-88364521b5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d10eaea-fc9c-4b43-8748-fcf37378fcda",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb457a15-8c91-45e5-be0e-d67a8e3f29e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33dbb57-034b-436b-9058-0a575d051fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b3dab-0ccb-4304-8331-382d63b2d0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf4502fd-3efd-42dd-a15c-528250cf143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e152a4a1-5d9c-45de-842c-8e3b88f33ad4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b951d101-7363-47c6-aa30-55fec1e259df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fc17e0-e429-463c-8976-1a3dbdcc2797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46198a2-a5c8-489c-ba82-9a47c3176fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fe3e265-1637-40c3-af4f-587c8050f9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0132fba-53cf-4a88-8334-441795143443",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6507e2-8be1-43bb-afca-4c7f710c8653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffac494-1661-42cb-8f2e-175712da40c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba640c68-699b-4c96-90e8-46eccbb51275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5868fb74-ff9d-498d-952d-9fbede2ec149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9370194d-f947-4837-a286-25dbfba7e9a9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168ba67f-7d00-48ab-be9c-0a6cc5b85ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b7b12f-1543-4d80-acdc-ec90bbae705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8c9fde-6fce-4218-8290-29452917205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e015efd6-b743-44a6-a6b2-a8d3f298789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923b2ada-72c9-4a92-8fe3-f9c7f26350f3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9d4faf-b553-4d0c-8f2a-cb9cc327c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7e6eef-1ab1-4052-a1ca-7a47b81f5993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4828ed74-35e1-4601-ad22-8cb0c142aa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab33ace-a232-4e6d-90d1-a02e889daff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7238407e-1bc1-430c-9944-ce986d802847",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd5354d-9785-49c0-92d5-0bad130ac72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344f8413-fc80-4337-8956-e875a8e88f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb161e0-b0c3-4bc8-9fea-752ecdc3a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f93ef6b-db18-4a15-a76d-38307b141adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a50b8d8-e85d-4c54-9256-4267f654ee01",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ce00eb-7cc8-4d74-b749-01d83953c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2988974-cba6-4e9d-b15a-dffabf9b0f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b856cfd8-c752-4f51-90bc-db51fb8294ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55eeda00-f367-45a3-b91e-e2c816cdb7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2741af-213a-4923-958c-5340409c4225",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe16868-3ec1-4765-ab5e-502528ebe10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9f1c44-e650-4d24-a27c-baadf442c7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c419940c-34b2-49b3-a3a8-78d5ae34e9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2914306-140b-4edf-b52c-b6479383294b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d734c0-3996-40a3-9250-e91d2a75e98d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66773e7-4136-46e1-a977-318a3d30f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ff7220-8257-4b4d-b4b8-93c79baa9aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5417507-56f4-4b52-a39a-10930a935914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28b8eab8-6236-4d45-a465-567fed2783c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db79a250-a4bb-41ca-b519-729394efc3d8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91f8388-7776-4d34-bc2a-08df85cc5e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0a54ad-3dbc-4115-ad7d-7aedcba0979d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce25353e-cb0b-4b2c-8505-ab2fb8697eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b35afec6-e629-4049-aa3c-0e5497d58352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37f93d5-f1de-46c0-b33a-cae416c9598f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04934139-ed24-4702-b579-80384a73f8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f77750-3fc4-49af-8c4c-6cae0559ef5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1722d048-2904-4e6f-aed1-0ab499c4c868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b963918-f4a4-4e48-a064-96c7b76dc4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88d3710-19c1-428f-85b2-042e2c0e5f44",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abbd7c6-6955-45d1-a96b-52d20c2800b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6b8584-b231-4a4a-ac93-fb0a445e652c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3fcaf0-54a0-44dd-b467-d89aeb26d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e05bcc4-1f75-4817-87fb-c21d9efbafba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc814c-a565-42a6-b67c-d920f492e7a4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a6df43-a36c-45c7-950f-bc8dcb434325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3832e8-f528-410c-93ae-31345498d358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b4b08-b55a-4530-a4cc-aced4efe8c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e304367-1ec2-4728-9a7e-db839f50022f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df01fab7-7025-4e01-9dd6-fc499f890051",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de62a19-877f-4377-9d15-c87dddb1c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f4acef-e8c7-4204-90b4-df4caf26e202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a56cc0-f81f-4de0-9a53-32f0a3e6e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1bdbc1-9919-4333-a21f-ec371a09ba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7dd449-6049-4b1f-acca-a21b30b767da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a710717c-329c-427d-88a6-ac7b27ede9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965e026f-c7c7-49c1-9995-35cd5e4da38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7383de-6690-4ef4-b6e7-be8ff68786fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "091b72b9-daa5-4872-9255-0a9510b11039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6384d5a6-98f7-4d12-a31b-51e0b09bce7c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a94898-5825-49b1-a7b3-b098bdf9b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19405b64-8987-4805-9a1c-e84f1bb76ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68ded81-d191-4d26-8642-2c3f354a0fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "770a40b6-068c-49aa-a344-dee13013ed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6141af8-669c-40d9-ad73-83b331f3c4a2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c07ac9-3722-4d92-af19-d7da81e0fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a918ad9-215c-4d72-b59c-63445db78fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081679c8-b1c8-4616-a9c8-14baff3b203a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8f33d0-f0c8-4042-963e-7db3bdff709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eff5a7-8d7f-4a79-9197-c41f5add10e1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d10761-943d-4cc3-8115-5878e8e1b8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b914ba68-3ba8-4a4e-95dd-c2dc03bcde63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28458db3-5fbd-4189-9575-b9cccb85dde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6673eeb-5288-4afc-833d-6c480f854c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038cca1f-82ac-4e3e-b7ac-d05d11d38b85",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dbc623-5e22-47bf-bb39-a0bf63771ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec60e320-9be0-4df8-8cf4-f9a7b8bf65d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bff643-0670-4824-915d-748de45575a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e02d05-6202-433f-9407-bbaafb458c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af76edfd-1239-44e4-a563-a5edf5a27f45",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61ef682-e620-48a0-b8da-b5611f089fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892b4787-be3c-4808-9ddc-5342934601cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bce7e3-e4d5-4de0-936d-41d4b0b8fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c519ce8-ce60-406b-bc21-4b8d4cb51b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b4c6b7-5529-4e1b-b048-82c115b85067",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73c7bcf-a03a-442c-801f-d6f139142bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfec039-555c-4660-89ec-d0830c5a4f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82970425-6b82-4c75-9661-6243bb2ba64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdbebb5-a297-4300-929a-49c38ad02d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda5bf72-e3a1-4209-b8a2-debf059a6827",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf6db35-dd16-4153-877a-82e0a4e1dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83dc20e2-a010-4332-b883-d1eb2c509f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684d2bef-0b01-41aa-a0db-243a6a056347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f758b08e-dfb2-4612-8bbf-4e6e6e3c2522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32267dbf-e11d-44ef-98a6-121ed94190af",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9c77e7-8aa6-4453-8244-26df437b73de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e770c45a-5d85-4d4a-8920-785e57e70c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6a36f-1b84-4bce-91e6-7261e54994db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d53fbd2-86a9-4a8d-a457-214aa1721000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf499f7-b007-4fb4-94ba-a7d002337e03",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6f51bf-015e-470c-a2c6-517740558bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc5ded4-6c9d-435b-8c08-bc1af44f25a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eebf1c6-0999-42b4-8a00-e2f51e1ff975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c33ba0c0-0808-4121-afa5-e7be4ed6c921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df85b8f-a58e-4369-9dfa-f9ac4ca6b1cf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466d068b-9339-48be-b95c-562860740ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57315b4-62c6-4e6e-9c9c-f42deb810fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5aa5af-78d7-4ff3-a828-ed5cdbfff177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f36c5-bb10-4d39-90b6-9f568b78408c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922cfe89-c98a-4a8f-8344-4e693fc0693a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90e5dcc-4680-42f9-a886-ea531ec80c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fe3ebc-4c7e-497e-a2cb-5b24f97d18a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c17441-cfb2-4ed8-b956-618387d41207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf79756-5b00-4e22-ad2f-f37945a856b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2737373f-5ed6-4fb6-aa12-7439e78ad9e0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f7c3e-6d03-43f8-9459-cece2ab50890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6f1b3a-1c4e-439a-9787-40dbf088b3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4e861a-cd7c-42b9-a98d-27099c1a3557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e17b10ea-2c5e-46cb-b9a7-2a2d92e62c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a17cb47-6b88-47a1-9fc1-337b0a14e1fc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc8407d-8bd9-47d7-a36f-af9539f5630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cbb1e3-83e8-4ae8-b03a-d723ee644023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682f6739-e6df-426a-a068-c734e08a7b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "86fa58e2-2f78-4415-b5c2-84f91c4d59d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120254d2-f424-4c84-a9e1-c31993def990",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55962d6-6472-44cd-adfc-0afb3b752218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6558563d-2f45-49a9-8bd9-7fd04f9b8da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6b33f5-d2a2-4ebc-9370-957d56c3cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7270e46-afea-45c8-9525-74baa3542bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23449ec0-ff91-4dbc-8da8-e5d33b53c596",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bb238e-6b79-4de2-b940-addfcfd70a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1980db3c-818e-40e2-a1d6-0f6b22ba162b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af52d8a1-bd16-49c8-aadd-ee14efbcb59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd0134a-cf87-46db-965d-855fb6b15d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1120eb2a-5a19-4e30-af03-b8600638933d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2993d48f-e0fd-4c82-b11c-622633bb62e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c29334-715c-4ba4-930a-5fdd98039614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663bee30-2ff7-4ea0-89a7-f1214ac8efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc0da8f-6622-427a-93ac-3ad733e697f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6350e29-0dff-4ea6-a539-b41756e9d9ee",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66b01f0-1ce0-4915-91c4-ca243b97fd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd9603e-226d-4822-9c45-21c0296c424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aee2d7-f227-40c6-a080-f4fac91a5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a77065-1a45-4535-8ffd-0acd757042db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1573e2-7390-4c84-9912-f21e71feae35",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d91b4a-ce57-4d22-9e2b-205b195cdc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fd0401-b4fb-4b6a-b08d-0efe10816d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52863af7-608c-47d9-82ff-d34f7744716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa5c22b-eada-49d6-948b-9ac518d86484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17d7de7-9959-4a40-9842-8230a5591622",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593a2653-0d8e-4671-aa67-b13b5abdeb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a01f53b-a616-421f-9736-3b05aa8cdd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9218f460-a628-40c1-811c-cd9dffa81a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b956bc-28ce-4280-bc81-a6df89a967af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4931a4-6954-4b4e-8710-e7b26968ebc4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c606815b-50d1-4a1d-aff8-19c360c1d442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f8c865-8d68-4bee-bbdc-97d48d0c8943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2ec1bc-02e5-4e95-b079-c2f851f62a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3041a6-b493-4e8f-a6bd-cc1514ed212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e99fe6-f376-40ab-9245-55b019629645",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af392fd3-ec4f-43c6-a077-5d864ccbfb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1c2602-8883-43e8-a8a0-ca682b23b806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa7e3a6-be91-4e92-876c-6198a564ed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f79b4e59-9035-4d4b-93fd-fbb63510224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f0ff0-8ee3-4c55-8c9a-0921f39ea63d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a49e15-2a03-4005-96a8-fa0ab635081f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcffc42-90f0-450b-a6ef-9c726b26e6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e815b8-9c60-49ce-8cd6-76c519dfdbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6acb60bb-7564-4207-9972-04a034a0ba53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77b9272-32b7-46b1-978b-fe37a5ee9e5c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca065cd-ba92-459a-bba6-371d71004174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c820f4e-5a4c-4f1f-bc43-f77067913071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6b1d55-a4d0-4df1-af2e-41d96c1d675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b2eb09-870e-45a8-b35d-676f2d549617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b770ec0-9c3d-47b5-9059-d35ab746ad51",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9075e9e6-bb97-4079-b0db-aff9311d9ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e277e4a6-94da-4541-a387-28ad3e559234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf3a93d-2607-420d-9893-47e32b977f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bdcacd-ef6e-4c4f-b1d9-37b40b2a2961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82871dd5-3ce5-4de4-b40b-280a68ed6000",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01601875-b378-48d2-996e-09bb524158e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071fb1f5-ee7e-4d8d-ba63-89cf2e2930e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cea93f9-a7bf-4930-9e14-082e1bb7e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9b262c-1f02-41ee-bb71-7c8d775232ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0051265a-ebf4-4248-823f-06b8250a79d1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddf0019-3d48-4607-86a6-6417a6f67de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64605da1-2e51-486f-946c-04f9f8b6f4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf7f4d-4e92-4665-ac5c-379866cfc091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab03ef8-8895-472a-94c3-b067439520c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a325c-4dc0-4a59-b33f-ffa105a3168e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2ba484-b135-47e0-85e2-716289e26f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1901c292-b82f-4a6e-afb7-8e0ad5bcf096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd14559-2b7d-47f4-9f79-5cf1e95af20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "370bb83f-dff7-4132-ae50-96ab35d706cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a70763-c43e-47af-9726-11cb160bd297",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d41457b-486b-4410-84e3-fd683385c21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad9c4e2-a1ea-4711-ac9e-8ae186c1267b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb5bdc9-ff75-4844-a89c-6ced148bf18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24b8928f-2339-4cbb-bdac-85eaa84139c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88bddaa-3630-49cf-8a79-8baa4adc016c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f850e4fd-435e-43f9-8d17-9037cb13c0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce74a94-9a53-46c4-83ce-c45e2812b522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa155cf-0321-4f89-ba86-29b926467ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "080bdf3a-6f3a-4bee-9c08-19658a749c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5493c8e-81e6-49b5-abda-d754caa02694",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4e5f89-291c-485b-8d8a-c92386913b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1b278e-004e-4e6c-965a-ab26960684de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52141a6-e494-424e-9b29-434ba69c65de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e83af352-fdf1-43b5-badb-1cc55b10ad17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a0264c-734e-4590-8852-b1adee262458",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720954a2-38b2-4d35-bc89-53f27a9f96af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85369cf7-f9bd-4468-8626-7e1242782cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfca4cf-cba7-4486-ac4b-29b766ad2889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4056d6d9-aff6-4a6d-bc8e-6b74c0a269cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c477f472-0ec0-4293-8d72-531dfa8be302",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabcd66c-c7cd-438d-ac9f-1366d16766c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333b09c5-2695-482a-8ac1-f45fd257cc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2093fa1-83d5-46ac-b027-0a83036405d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12913324-8738-4c60-a77f-20e3d4396c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d83bc0-e139-4702-ac86-5ca5426cb215",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45a5576-8c0c-4db1-a8cb-c365898b391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fd9f5a-6f6d-48d6-921f-0fd34c111bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdafddb3-d457-4963-9e8e-ae0e2c00925e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad01d91-9ab2-40a4-8555-789efb071b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a848715-8c8a-480b-bada-f4f7c66e1c32",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d411165-fb2e-4972-9c59-3ec1c3c86541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd3579d-0d41-4cc7-a876-2e54720d0d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ab1067-9e6d-4e91-937a-60c8be0e517b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "941d780e-d551-4e4d-b234-605bccdb5af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1600dda-31ac-4397-aa6d-8cf65b179e36",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d08b570-8113-42f0-be71-71f5b5489e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4f7c82-b46d-48e5-8517-329e2be43702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e586f83-94aa-4787-b8cd-077ee63db8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab83987-c16b-4cb8-81d3-4e88348ff3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a11902-2db4-4663-bf2c-78fd4ce45d4f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faf0fc8-7ffd-47ce-bf30-12941649d5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1a7c5f-3cdc-4176-9a71-b15b82945b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e8fe22-306c-412f-8d34-123d90f123e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56a3dc6-ef40-4e3e-ba54-c5f49c3dd56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55b7e4c-21e8-4469-9d11-2c6cd89225d8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538896b0-fdd6-4c82-8b8e-f7b32dbc19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df3c2e6-c648-4bf2-8850-ada68a049715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757efa81-2347-4ddf-ac96-3cba48eb8d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7701c5ca-4697-4523-ab79-47799eb8af2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8acfa8c-9c5b-429e-9a7e-542fe3ece8b6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb59959-930f-4311-bbf3-3207a6807823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2630225c-8fba-497e-9e26-10b28d42c0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0b52a0-5b57-432f-997b-b4462f1ee79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96218705-74a8-4922-bbe6-85c2a2fbd799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258685cc-5dc9-4ccd-abb8-255de5981fbb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5e3001-45d5-4025-8034-9724e2735ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ea262-f5e2-42ea-935f-77eb13dd93a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69a2e79-7859-4e04-bf9f-9cc52a35de71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8f2f44-79f6-428d-9b60-29b57c0baa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd702010-8558-4ffa-abb7-15725146e99f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af351310-e388-470d-ad97-c1e2cea0a846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7798a34-09cb-4c68-bc51-0d28b58dd35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30bb323-9a59-4982-a140-134af2fcf043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54932f3-b9dd-4474-b20c-c34312445494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291da57f-1c2d-4d63-912e-44ffc3364f7f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea18c30-6850-4558-8b2f-cb7fbfca4148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47830740-2408-455a-b3cf-baf67fb6598c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab50850-142e-41a1-91ce-4202b7502a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c01b6e-9d61-4dd5-b08b-8a7dff012e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78e7ac5-9e1d-48d7-9d26-549be08e2ff3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5883b0-7fdc-41ca-af4d-31dc367c69fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072a9efc-2447-4832-8448-3278b0ba2391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40c0dd9-ac33-4ff1-b1de-4feaa94aee15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "812e36bd-b973-4e70-a9b9-9fb5e41aa019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da521c2-f294-4f48-9a8e-36600522a35c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c64b19-f6d6-43f3-8cf2-970e97c7ad80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1387fa0d-48ef-4019-9cf6-5e42340023ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2865b14-4808-4617-952a-7735ed3142da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c367c5-2b4f-4e9c-b702-1b5a1e683cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946b8b6-2b6b-456e-8fb4-74ddd429325e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c2aa1-5865-4fa0-8045-fe2b0331fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15900c0-740d-4ad1-ac6f-7cf07f4d20c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1d055b-cb0e-4498-a3cf-f0de901e7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc85a590-9aaf-41bd-ba6a-cb5d504a4dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceca8c60-b678-4813-896d-f121a21d75bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5bf3f1-04a6-42cb-9d74-79d994a3b5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75664444-a29b-4f75-97b6-63e33b5f8ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e844d8c2-b642-42a2-a622-0f44f7170a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d542f9-0ca9-43f2-90c6-a0d78ddaba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdffd5cc-a151-4488-8a3f-93983d2e741d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8a6b91-d964-4c41-9908-e850a33ea49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1504e47a-be64-4470-ba5f-e5bfb5fd89f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05553a0f-4de7-41be-8928-fe3041ce52a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "573d198d-4010-4207-aed0-f4786231401f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824e991b-b50f-4136-a5c5-b52032ab2834",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfb723e-f363-4fc9-8725-af8b328ab983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cca946b-afe3-4a82-9482-e5a0ae6ec16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f63fe5-dc46-4593-8717-03c8046ff326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dccff53-90ee-4c89-abc4-e4e14a080450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d2105f-ba01-4871-8038-9677d721e6ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f929603-27c0-4efe-b282-dfb6a822e97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b7a260-71df-43af-8536-a1dc713407ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240901ac-f94c-4ab3-a7a1-3285df9878ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8fb448-9183-46e3-bf08-16c897b4634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9708a1c-7d82-4849-acbe-280a2062a302",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4bc7e8-73c6-4854-bd24-c570c178ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4f2029-3df9-4b75-8d29-74b7c69bc490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a516a7b4-90e5-4b3a-ace8-c795c1951c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f3c798-833c-4f9d-8fe8-d9301fa3da3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fae2b0-efe5-4f7e-8e15-c0fd646576b3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd6d953-7aaa-4049-953c-95dffaaa1615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3904ba35-bdd0-4e8c-9bc6-637758218dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8677b5c-11d6-40bd-b6ec-31614b930009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6316187f-d645-40a7-a383-a0760a53f013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e5306e-6e09-40bc-bb74-0d22162ca135",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbce319d-4269-45c3-80ff-7c1fa71703ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f18ba2-495e-4c10-9dbf-4ddf2a81ca35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262f1ff1-724a-4655-96b0-189041c5fc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb997f39-d54c-497f-a0e0-85e495e863d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94271d2-c3cf-40af-8d48-a0cfc49d8de7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03096e1-d6ee-4079-9971-0375999c2fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dbe558-be2c-4ff4-aa8f-614c6c831714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042886a1-4689-45c1-aa3f-d9f0b16302bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b644fc19-0162-4a98-a220-fcab1a8f8d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1395ccbd-9d30-4388-8ee6-3f2c6d33132f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaf6f4f-cbfa-4359-85b7-4774f76c3fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ea8e06-3c07-4d2b-becd-80c665f6cf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85429de4-532b-463d-bd10-4edd9afe8602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ed7e15-2ed5-49ee-8e0d-773be3e9fb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d309c3-fc1f-4301-8388-ebcaa47b6cd2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d084e4-49a9-460f-afcd-34ff910759d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b66b69-8919-4672-a09f-4ae8c635a45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656fb98e-d1b8-4234-98e1-d1a7cbecbaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc18191f-ed4e-42ba-ae26-6e1ad57650df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0978ed76-fd6b-4168-811f-69ad94d58e21",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7d8e04-080b-409a-b35c-f7e055afb2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6f5028-e4c3-4a53-97dc-aa3f86da31b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1c80a0-ab22-442b-9f49-e0b94bc0c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80fb547e-5547-4ac0-a7db-ed0434473e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4feb8cf-f3d3-4351-8038-0912a91cd5c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63471e51-57f9-4888-9ee3-8e5fa59de1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9842291-5b7e-4b31-9585-63d3986bb791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a815fc9-fc46-4768-9962-431be80ce456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e98416d2-5fe1-4aa8-9755-910001e1ef63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9c765e-e79b-489a-98ea-c9e857629802",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8ebcc6-efac-472b-a6cf-1bb45634cfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191c9a8a-7b5c-47e7-a8bb-dba2355f5402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafa6ffc-19bd-401d-86bb-f1128108e817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd311aaa-d607-46af-911a-a1d197c85504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cbb48a-ff47-41d4-8a2f-0ef8cad33c79",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfe1801-fdd9-49a0-af87-a4458360566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d949a5f5-cac2-410f-9bee-27cd6b84ee0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4de2bb-a80c-4c20-88e9-4e586a359cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0ac914-ec8e-4aa0-ba76-ff27755564d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d81643-b476-4e89-b064-cafd6c5cc7d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d040c493-a076-4532-abcf-854d54033b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ddd840-2d84-4e3a-b0e2-584751774329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff64c9b9-594f-428f-8f1a-e53e13611629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeb8bad-37c0-4a18-8569-aaa7b74d7e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bb1ec8-6051-4b9c-8052-352c2b50f3b0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e63c0f-d366-4486-817b-66f4037f20e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febcd69d-9d1a-4ab2-ba18-545eeb3d6a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52358b5-0e15-4c74-a4c8-e06a48e8ccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4352a7f-1091-4180-8d28-fb411fe8db57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741a277-8618-47a3-aa22-9e2d725ecc81",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b3b934-1b50-46dc-8d08-24f51b959b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f815693d-94f2-4d68-b0b9-6838a83aa0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7955a9f3-8646-45f0-ac06-012b957a572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d382794a-7b5d-409f-a2a6-30f64f2735e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454d3468-dad6-4f82-8134-a7138082e91f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619181bd-5136-4c59-bf17-74194c6ba058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdb4eb0-766b-4a86-b154-5ec651881f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654f974d-2c9f-465a-a144-d53712913fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8de4df-8855-46e2-8a84-ac462345cf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d416bf-8293-4b41-99f3-20c0952d297b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba8796-a442-4ad7-a0de-523efde95ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "657e8b65-10c8-4869-91c1-00a462ddc2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfb7172-5109-4eac-9d8c-c64d8e55dcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7483b554-6660-4189-9c43-7a85fee4603f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cacfe1b3-89bb-414a-86cc-a50e2bc4aa90",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4e6c027-e4e8-46b8-9040-a7ee2ac9db96",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be1d7e1-35e9-436e-ad1c-f104bf4506a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d04df7b8-8ade-4d30-90de-24454af2c18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a974077a-35e5-4270-87b6-6a04a43a2696",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c93d4656-f69c-4309-8974-2c0984adca53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6a9314a-e498-474b-899d-32f4a52af57b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a7a3ae4-cc10-4d94-950c-8c41873bd2c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f117ab2d-4e90-421e-860f-8f20627f9a22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02036a3-c0c4-4901-8416-fcc1f6095a52"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e5367f8-20d0-401e-b5c9-dbf807d857c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1cb35cc-5ba5-4926-8776-bdfc886a9bdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7817cb9e-5da9-4ef0-90b9-52330728d971",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1688ce9a-0a3b-4f96-8d81-a43bcddd8b58"
                }
              }
            ]
          },
          {
            "id": "199ca514-54ef-4669-b49c-063f31ebc37c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9c384c9-5b8a-4ae7-864e-4e9785e9d1d9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a26c977a-d016-4fe1-9738-f9149f2e560f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14582949-9d38-48be-8efe-e55bb819d4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3fbbf26e-4bfd-45ef-ad02-bc4d16f67781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb88dc9-749d-4b55-864a-cf916d7f36a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bcbeb4-5f83-45fb-85c1-0dc847c0cbb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bd83b33-a167-4ea3-8254-8977ceb1dbf2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d10a4523-2138-4f64-b9c9-08d7641f4ea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a9046a9-d583-4ddf-8bca-b1bd100e9242"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34e8492e-ccde-4d7e-b422-2d7114c44434",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d2924025-c27d-4882-b6bd-0eb59da52161"
                    }
                  }
                ]
              },
              {
                "id": "4190d50b-d5d8-4716-a783-9609070ad3bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96854435-ca2e-42b2-ab0a-2bfe0fcba721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a632731-81c7-469c-9381-bc1b0f62547a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8166b6d-d433-44b0-b44c-44e1d7493fa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25b66a91-8094-48e8-8009-eae9b0e48bba"
                    }
                  }
                ]
              },
              {
                "id": "2957b6de-7e53-4f5d-a1e2-3e7dcbea713e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa47c070-7ebc-4501-a0fa-bab806201fd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d47a1ef-d805-4978-b84a-83582128b122"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39df05a8-c0c9-4d8f-88ff-870b3e50e2d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a082e17-3eb0-43e4-9741-a7c564d4f942"
                    }
                  }
                ]
              },
              {
                "id": "d1d89154-9aef-4e43-a4f4-45f61f629c17",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb22b918-86b4-453b-b8be-a66dc010d13c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c8161ee-3b48-4835-a123-cd109332ed87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "285ba8f2-071c-481c-9070-ce664ba741a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "13bf212c-882a-4c47-8984-e03030c32a65"
                    }
                  }
                ]
              },
              {
                "id": "328128c9-b07a-42fd-816a-08bb2f504e87",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72bd10ee-2341-4f37-97b4-155668378d25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dec8d9f-e285-4752-8040-4f52beb499db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e7dd98d-438e-4a25-829a-f2471630cfc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "456ed97d-360e-43b6-9182-aa7734d5fc96"
                    }
                  }
                ]
              },
              {
                "id": "47003f13-8b35-49b1-a571-744906caf3ab",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39656cf0-3930-44ec-9d09-84db15ee31dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "415e6033-8819-4e5e-b7ea-212664d487ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c839f769-f563-4bec-9646-ca96428c3917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56c3610a-9656-4d52-945d-5de6e21252f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8241afa4-4ca8-4c66-93b0-54e09d1f017e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11951029-3c41-432f-bfea-b06ffc8c277b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de7f9f56-62bd-4304-8e27-39f3951061ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1736b677-74ea-4c10-9e8a-6043f17f59b0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e511d9bc-cb77-4392-94e9-d6fe5ad7c7e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f9cb1550-41b5-431a-b89a-2029e2ab3d85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cf11084-41c8-4645-b839-628401223aa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5117d3ec-b745-4446-83f4-40228f2c9a8d"
            }
          }
        ]
      },
      {
        "id": "7e7ee66a-efc1-431c-aad1-eca65280298e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9168438-ed07-4e99-8c76-ccace2f5d95e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3377c779-a5d8-4791-a1fd-4df3a12bf9ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7497ed5-8b2f-4b14-a8b7-ae2a3e04a3f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d2db3b-5756-4446-8629-64a932fb806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ffc7ec-44b4-4672-9a17-4b6e61c2483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d938bd0-e7db-4b00-a464-a256c9fa8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdafe4a-0498-4d5c-a1d1-68e42b25ea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d135e0-4991-4c6b-98fe-a864bb9a5781",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e214499-6d90-4f3a-803f-b05ceb3f3557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd3070c-4d8e-4eaf-af56-59d36cd68927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df22e26c-43c1-4dd4-aa60-cdaa7da242cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0a32b6-5f4d-4511-b1cb-07c3899d0eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e877bb6c-d19e-4f5a-9821-908359cbe268",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd62f12a-2368-4a73-8596-bb16bc26a76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa88f1ae-f163-4877-ac07-5283646604aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4687f484-d5b5-418f-a498-2106d2a7c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ecf5d4-0060-4389-8a64-1e9dcab30256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172bdd85-7b02-4891-9026-e89390b1d25f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023570de-3463-4907-bb1e-49ccfc2185a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c52ba2-6649-49ca-93c8-6d513b466391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f304b6d-0775-4c53-9c60-3701f3e7ab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10727724-d7d1-4c79-a729-9c8c45b6537c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853b480d-6aac-458d-a9eb-2396adf51359",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ee200b-334f-4f49-88e0-76b127a249ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7ec57b-ca5a-4087-885e-1ecac537e334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6980bfb-c62c-46e9-a4f5-c3b627740198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bd76a8-13a1-4458-8b37-40e153003f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff102f9-544c-4a02-8c9b-8526c65fa320",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab33c37-cb21-4682-9999-93966a230fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5fd89c-2fcb-446b-8d96-ac9464c471e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6863d8-9ece-4b93-8cbf-51af3a467de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e71790-9269-4928-b764-ed72addba472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1245824-a8fb-42d2-956b-0e9533e064f4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81efc973-affe-42f7-964d-ec8afee0d5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f14aa5c-d48c-466b-b30e-c7ddab9c3343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f83af35-7be8-4095-8e68-0dbe93fe97c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7469168d-d7ca-4c8b-ab68-c4102a8d18c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514cc164-438b-48f8-b686-a98a4116478a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb415128-daa1-4174-8d71-111f5a0e2028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5703cb75-19ac-477b-ab46-965b97e2c062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13778ca7-1be3-4682-b1e6-8a3473125585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44934b7a-dd91-444d-b7eb-fdd8c8ed7c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c77ccf-c347-4f17-935b-9295697bc73f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8958171-c1d5-4090-a937-c1c8b71aa624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4118aa11-ffc9-4938-b77d-1dc4c2ffbd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98e996e-996c-4754-a544-5020f3b0964e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79a7b965-8cea-41eb-8085-9cb219dc30dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01feff7-1f07-4fcd-a9b2-3e707b3bc292",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90696b5c-3ea4-4ed8-b4d2-2fefeadff005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc12f771-3f1e-47b3-8c23-d326f1e89a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f1ebf1-40ca-4143-b96b-2b4b90fc2657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99209be4-ab56-43d5-873a-498f4a8133c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc429243-c123-4a53-99fd-1c19cf6c59aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d456cc-ed8e-4cd3-ad49-4f08466a1441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e3226f-f1d7-4947-b948-26e48287c28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b413a3-0b9b-4f42-b1bc-43a71cc722d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0454328b-e890-46f8-864a-24963300b3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2ef4a5-05cf-4a35-ae70-23a01c5f960f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44697e28-f9ba-4e12-82e7-bfa9b32a5960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d106c81b-ca6c-4c44-98a5-0d0723c683af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396f13a2-2509-4d32-ba6e-8f69ab69061c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b29c10e3-372b-40c9-be27-36447d68e42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86866191-c07e-478a-b4b1-00e01cf0d7ed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ca01c-3c07-4fa4-acdb-b7e8de22fec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491a0117-7e56-4cf6-989b-3ff79a7cab9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a26d77-fb06-4000-aa9c-f9a6ea606b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a085d070-1a41-49c7-9d78-df6ee510da08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a43215-31ab-4e23-8c6b-74faf195dba1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050516dd-2c1c-4764-8bec-68186177e49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81851819-f4b7-4dde-b87f-c679e11ced32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74abb9fe-a40d-446d-a371-3364c1e79453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc921f3d-ee2d-49bd-bef1-0df48a4e4920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6821b25-b271-4b93-897c-6fbc646a58e9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887645b3-cf29-47b0-8a27-7a760c14fca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8412d3-a361-45e9-b95a-35ab310426eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612d64f8-d4be-471f-9c39-16c310a48558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b7c249-7fef-41e6-8bf1-b64ba0eb7b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d3d897-79cc-4d3e-9960-7a2b77b14884",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d4c1b-2de5-4d77-a3bd-56f304b437c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d57f116-c834-4efd-ba8a-fa00bc2ff292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994e8454-ec6e-4cb7-9463-710630218bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6c829e-be01-4040-b6cd-8b078a00de37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79662b-b7a7-45cf-8685-5a5893d3c799",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4803a9-6e3d-41ff-aaa3-309ecbc76a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f93650-0a02-4d22-a8f3-7147d8c9eca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e075b84-1ea7-4f74-8c69-fb5476e487ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "481b656e-7bf4-47fb-b556-9b5451a0d302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5801f73b-b617-4ef9-b8e8-73743f373139",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e58430-86e9-47f1-be49-4efe7b4df1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12933aa-6ca7-4571-a669-f410ac39a5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782059da-332a-4be9-943a-8f31b94fd49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "719ac644-7413-42dc-8f13-d06aa3458834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50118e9d-1193-44f0-a447-e3d7c79b9768",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed919ed9-89be-4256-bffe-091aeb7a32ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6a9d53-91ea-4695-b2ab-20eee9886d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40356c73-8ee9-4496-9068-3f82dac40ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1c2158-b614-4fea-8ae1-3869f0e47dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fe4051-f885-4909-8c29-8c1fe768595e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f275b8c4-7835-4385-8526-cd42c1ee2de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed7a739-b139-437e-a20f-21fb653ed4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca931c42-7062-4cfe-b779-fd4c18d65456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9174f0c9-702f-4b79-b830-046d43fad60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163a873b-c843-4279-a581-27d869478b95",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8466c35a-a602-4cb6-92d8-42ea1ce8d9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48023206-3a1f-48dc-a6a3-2b756bdb2783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad243c7-6f06-46eb-b458-d42b4f3b8b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5e3b1d-6f93-4720-b4a9-8b2b64affb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf52959-731e-4f3d-8a09-65cd5d038e96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954e5ed5-1291-49e2-937f-a017551d0c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a57734a-5b45-46c0-9d57-48e78cc6c273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c54110c-979c-4681-b456-08987f4448d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdaedce-4a6f-437b-9d5c-1e4b1883354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5458737-ef96-4bbb-ba74-4a2723e7678e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cd7c02-849f-4a2d-899d-ffd38324fcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a000dc8c-73b5-479e-a26b-0251e07077e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129a2562-1bbc-4620-8c8e-e63c5143a156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a9474e-d70a-43cd-bbf7-a681d79a2d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705ef2b3-67be-47da-bf77-5fd4e4e1a342",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ccddd-6658-46d7-8b3a-84dbede2bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b208e88e-60cd-4e30-9501-fda267b9f7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e6c317-0110-4804-96fd-80d91e80f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab99d35-65af-4209-894d-1ed76414d20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae252e-b494-4cbf-9567-f7a0f40d99b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e913de1-9e4c-4030-9fe0-26c2e7f9abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb88ef0-c139-48c7-8520-ad715ee08115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f15e161-c242-4ebf-8444-5b0fe0d2a296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "141f4be3-4984-40f8-a93d-a3b472dad9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3045fa0a-924f-4574-b6d5-0e7f6a60e80d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b8345c-c3aa-4081-ae93-6c6db99bda14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c4bf67-de81-46ff-82a5-04cce21e4651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c667f749-971a-482b-8d08-b8e51c283c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b65aaa3-be24-40e3-9cb1-cd92bb955cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a74a37-f885-4d7d-8559-08269615f61f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ac90ad-cb3b-416e-976e-3e35235bffbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfbf775-2c73-4e42-a84d-910d5ba3536b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7e0c36-6cbe-4872-916f-124920df98af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09c39eb-ef86-4b47-a07d-1d78591bb419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9792431c-ad1d-4d72-9f33-1b3315bb045b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902f7580-1796-4f36-b1be-46247ef88e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde99060-f775-423e-a90a-a3e894c3b1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c89d3aa-acf3-423c-892e-bb0a39ec0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ae6c0a-f237-4a2b-9587-bfaca038827b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa80cd00-ce89-412a-b8d0-67e3803f8156",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b20db-7bc8-4dcf-bc4f-77bc63f1e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7caa13-d7d5-42d7-9513-fc84bd8ceb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85031bd0-ce7e-4358-a816-73a8afbc3624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c09e11b-0018-4aad-9322-97e1e1fb3b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea442a6a-ade6-4148-a48b-ae6bc4b59c5c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e494c74-461f-41a0-98fb-6f16451a933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180e2934-418c-4061-9c22-2d6ffb18c82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf01caa7-22b2-4352-8ddd-b7a6fcdcaf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bec7b83-ee30-473c-8e05-2228ab0986fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9791e46-0302-4b1f-8845-a8baa303a9e0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af08170f-36e3-4d63-b9b2-095d2c8e6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8367be50-5bb8-425c-9069-ba501a76fc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0520046-6152-4d3f-963c-436968427046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "760f238d-5b7d-40e9-be4f-62962cd6f943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2999e322-71c1-46ea-85fb-4dfb26e4d141",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb599aee-356a-4ec3-a2a6-f885d4f72df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4682707-b9c7-4357-a6b5-e239ece9df12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752809bc-4fb2-4193-b000-72de12faa73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "444e4042-7a71-449d-b95f-fbaea23c5adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9360a6-0956-4273-958d-155fb5722f96",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e9fe9b-bb39-4662-a0a5-cb723a2b6d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97bd6b1-c562-4fac-970b-e51e6f44a8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8483ba2d-533e-41cd-a09d-182224c7ee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93007ad1-ba1a-4ecb-ad90-573b70ea6455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d0df13-27b5-44e2-8f38-275dca1c27a6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9064c2-cab5-4a51-a5ad-092428144e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec3fbc7-c911-4cde-b28d-c3232ef77c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7bbb79-64fa-48b4-b648-694fe97e5a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f77c2c9-dac4-4ec7-a729-5f1d3ecf169e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a01e57-1afd-419f-9019-854a5c5b096a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981074a6-e9ab-4fe0-9c6c-90ba45c69480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8c72b2-1933-4e98-9b5b-f223829b9715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545685e1-259b-4e3e-abef-7c5ab53fe5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98534374-a446-4f3b-b1e8-e4d4f640edec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46bc9e4-f3f5-479c-9307-df253ac66867",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51731f70-3922-43b0-8cc1-71e245826dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92924d4e-7094-48f7-a28e-e0a4f8d9d2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5640ab4f-0704-4550-81b8-849eeafd8536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbc729d-68e6-43bb-a0d0-da77153b7d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdc83dc-1977-4de5-a143-439a1de191e6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d9b31f-c5e6-4be0-94c7-9e666f2d1d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a358c415-30a1-473e-bccc-10055b36ad6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d91299-09e7-40db-9d76-705018370656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f7fc7b-4eca-417b-90b7-e983b87f2668"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8addb67-871d-458a-9d78-34d9d93a76f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6512761c-c0f0-445a-8975-6ea745e5baf5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4debd1e2-4eea-41f0-bad3-58f36c7ef414",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8d4cbd-617b-4bfd-ac31-0878e4d2cd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec6b36-bce5-4953-8b32-76e4069bcaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fd43fbe-3fa3-4e6d-9406-b90def0acdd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9393a4fd-8b0b-4443-a7e2-538578079dbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53c7b06d-5ef6-4ad3-845f-bce93a7b3dfd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95aabe81-2c0b-4bee-ac0d-1d394ecacdab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ca863bb-4f95-4ba7-82f5-c400022c1e1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b4097ee-cf8e-417b-9391-a5a5179326d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01b72ba3-ebee-4add-8eaa-92aec7bf72ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53a30b42-6acb-4f74-900d-dcb7e96ab003",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49f01d47-7e92-44b6-8fa5-820fc41fdabb"
            }
          }
        ]
      },
      {
        "id": "2903d07b-3dba-490f-a9bc-c3f0129e2d08",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2d57352c-fa1a-4465-b705-bda39cdcdbaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9b2b508-1a58-4830-9cff-8dcc10f192b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18d4e2bd-5048-4598-a47b-b2ade32814d4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcf7bb2-d3e6-407f-887c-311880f8d962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfec57a-1324-4a70-82d0-0830a5e7b14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ba1227-79b3-426e-a4c0-05964aa86458",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90721cf6-4eb5-4bdb-ad55-307850894003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762c6548-4c0e-42c0-92b4-ce14a11e86bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d15d6e-23dc-4fae-b50e-196124c6534e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d82070d-9639-4382-9d83-73174c45d5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46dca580-8042-4601-8808-19e8f9994360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24044b6-7d58-430e-8199-1b04c24b6d9d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced4f200-b8af-4624-a56f-817d36a8de2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8b130d-8190-446f-abf5-291e9a87d3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8676f0-753d-4d62-8871-c6f895911124",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c342795-0d83-42c5-b8d1-42f9c7760776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4f06ef-d90b-477c-97f3-372045bd3040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe8f307-8ab9-4147-b41f-eef73148c651",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47af2b69-e45d-465a-97c8-4d7fa29a6feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eba3500-984e-4888-8510-5bf6d0ace56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4488a9e3-3215-4e49-8cb7-69835359dd78",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4876c2-a4b7-4f71-a052-de0ab1f6de01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50b9abd-397b-446a-9776-8e1f9975fe8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49228728-bf87-44fd-a981-3a798d4297af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88d480d-3247-48d5-ac37-5920af8bf06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0413e34a-64ff-426e-911c-cf7d5897848a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e68afd-8ea0-4b7a-8887-df31c7804196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96fb321d-e1e4-4a41-ba9b-40f9c578d468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecd5303-cae7-4155-aa37-3e8593956237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0d9d11-f339-420b-9a37-49b0000ba680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40c1bad-5b0b-4774-ab45-eebed6e5757d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c3cf7d-b53a-4700-bdce-956ff0076ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a12862c-f16f-4a84-aba1-cccfcbf1c9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39aea20-9fea-4d6e-a17e-8c704fc0d225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ddbb97-d9d9-4138-8d92-5bd9e6488a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38f322d-904a-436d-810d-f9432cf1a198",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6be2ecc-a606-45ee-8728-4c911e0c012c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b837b9cc-ddfc-4cd1-8571-46d1b50fff17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c3a936-deb4-4930-b60f-d729c48ce97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8b3b55-4997-4125-b588-a4c82e279c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf0ded-bbe3-47ad-a88c-6565ad946c38",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc44bed-3dd2-4e1d-91a4-83e8ed03e465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01840bc8-470a-493e-8b36-58a9aa565aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebd74d6-826f-4bc1-9cb2-bc25626d07af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6009ac3f-662a-4bac-8af9-31df7998ce86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d246ed-d888-46cc-8ee8-f780aaa85e66",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7572e95a-385c-4fbd-96f3-2d7e447a6142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3001404-562a-416f-abb5-feb9eef77ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cd8ace-6770-4f6a-96d6-68bcc6cbecdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23abf15-f596-4d1b-a38e-12ad545c7e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f179dda4-4949-46ed-a436-b52b08753813",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5a4a7b-41dd-46f4-8dc6-4519e036a534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6264ca3-2e2c-46a7-a17c-45f64f908ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ab9a87-f1ff-4271-93c7-5df4f4817046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6492bcb4-1d9a-4687-abdc-043cb5597f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91669cfb-ce10-47ad-a269-7a3955dd5da9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff931fa7-16bf-4e01-bde1-f365d1ecea74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9047b76-7dca-426d-b7a4-f4f2158db28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df662369-db08-4b1d-ac43-2bf4a2734919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4513c1-dab3-4546-aadf-7c5d110e4814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cc201f-c2ee-4528-8930-f25f04a2fa80",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f4b9bb-58ea-4159-a552-b1df0bec1d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0c965b-dc20-4478-a9e7-311691f36842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fc835a-fb00-4f86-a8ea-89f258533f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424dc6cc-d645-4278-b528-e3c62492673d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28e7321-cd6c-4bca-9ea4-ba7e9d4cf0d8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837a61ba-8798-461d-9a43-79098dc1483d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af2fd4fb-ed57-445b-9a7a-ce5a8aa3502a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226e44df-dbac-49d5-b3fc-01babd9e039c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3660cc7-d793-4bd2-9f6e-fba5554c21a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705d3ba6-20c2-4f37-bcca-00e63b427d81",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6eadfeb-8f5e-4b78-b25a-430ff8b029a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3c0ec9-f671-4ab4-b7f8-492b69c8ad0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b48517-6622-46f0-b133-f2dd99f0640b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ddcdd4-7da2-435a-befd-25b8824cd657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e701e9b3-e6dc-4bdb-9251-1c3cd8a76d91",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1d1ec6-59c7-4db1-8b4e-7a182e1ca8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004b3d71-e49c-4fb5-9f22-eed080a7f2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2266b6-7957-48c2-95d9-031bdaf9e1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edd46c3-52ab-4ac0-88fa-9631e4ea0325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219588b8-e8ed-482f-9ffa-a4827807e096",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c65bf-8f8e-48e7-a5dd-857ffe648348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcca0ac-9e9b-4de0-b17b-9f543e2e942d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a51f1-a238-47c8-9bac-044b6bac73ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c87753-d0fd-4d64-9454-342fcaebe336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed33e54-5460-4103-8cba-2d19275ec355",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e719252-9303-4184-a97a-6c50f4aeecbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4da33b8-6fd7-4444-bd66-cf0f201727a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41991458-e7b3-47ce-8b36-cd26a943381c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a145c0-ff0f-4140-be8c-f84905a54dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90764c34-a6ca-4fb5-8bcc-9da2603e119c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2935db-f822-4419-90b5-b9bee08c1cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9ceefa-0eaa-475b-8152-013e317cbccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a35df-deba-4cd6-b874-4618f7382d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb085386-af5c-44c1-8c31-f34c6a7dcdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d375c3-8d9b-4f7d-baee-c2776c5d3796",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e65753-ba55-483a-a0b4-f63c3643afe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d48513c-1c69-4306-9c9c-d09bdb55bc2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ad37c-c323-4f84-824c-eea4c3f5ad6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa93586-aff9-435f-8e6d-28892ef4363b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0746dcf9-d347-4d67-9c20-302aa1bdd26b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc79839c-5bc4-4d00-88a4-0ceb86b0e1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ad9f50-436a-4849-acc9-4241166bbaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9f552d-70ea-47c7-b0f2-8d8b863f11ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99ec6da-09da-41a5-a99e-5edade76fb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4139c08f-6763-4bdb-a823-ceef5ea331cf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3518a4-0ac6-4cdc-b2e2-44eff6eeb3e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563f6a0e-1fc1-45ce-8501-8a2212a46937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4a03b9-3a0c-41cf-8db3-1baf1ba08f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5947ff-7201-4e97-a7e0-9f0a9b73435c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712564b2-5cca-4b73-83d1-38a676db802b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf76b35-fa5f-4e71-8c5a-dbca30c5b743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a018bfc-5e92-4535-9b4a-a67f720a7d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606aa52-565a-4958-b5b7-d898790d36b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f897f502-13d3-4ba1-bd29-4cc37bcdcb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970b9e5f-5352-4204-89cd-25a652c9e9c3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bf0040-64f8-4198-a889-a98b65891bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f0fa57-88e7-4ec1-85c2-1907b2d2555d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b343ed-a9ad-4d17-ad18-b9c223394366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd8aca4-e668-41ab-8a89-cc6c8cacafac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68f1402-ffaf-4e73-81e4-7438ec29e3d0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fe734a-6c4b-4643-9258-c9dd639dd103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9cf896f-9b1b-4e9f-a0c7-e02452489808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54ad403-2bde-47da-9c9e-fef5900f1f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92227cf-539e-4cd6-adb5-08bf8634e877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1be138-b8e7-4738-8fa3-078d2e9222c5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97883c6-6c7b-4cdc-ab46-73a6f7d9e374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6fd0e9-9a9e-4923-bef0-cd7683d62aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d581f62-c18d-4497-81ec-8b21a486594f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6353798e-9a6a-4572-9a64-f9100bedd8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d2d9ab-c841-4c21-8057-3cc49afa2f31",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c640b1ec-051e-4b46-842d-947a237f1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d92c27-cd75-499c-88ae-ff71457f84af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f94a58-f7a8-4d6c-951b-ea204b508974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f867592-5487-4e6b-8496-9136f0d0536d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e6101d-5a86-4323-89c0-596ec0b5a113",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1786fbac-ed85-496d-8dd7-57e1b0945f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e89d03-16ce-4b0e-8a16-e9b1df273660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ead51a-174c-4eda-a2d8-8218dbc8fded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec48023-5044-4eb2-bc2e-b7fc202962a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61b440b-12e0-45cf-bbf6-445913ae3253",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438555dc-8430-4e61-b790-f0701ffe0ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c1f40e-56c2-4b31-8d77-15f3973f0416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d68cfc-97c7-4c47-98a9-cb6ffa19f49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7915f1c0-a569-48c8-9591-9d66ab858e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687ee56f-c2e6-4ebc-a5bd-725d823db651",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dc10de-71f7-4113-96dd-b5cfc18963b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e6de36-0341-4661-865f-dcf6d9032e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668aee54-93c5-41b8-bbaa-4ad77e28a6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5558d1-4607-4d13-8018-8e2ab7228fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1f97a0-5da2-42c6-b4c2-18a7688bff1e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e30f4b1-5a0e-464d-ac66-7494d36df0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c362d89-a94d-48d6-9b26-bd68d8bedaf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f36d54-953e-4424-8e5c-0edbc8c144d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78117d8-b8dc-460a-b84a-ac09b31f4e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae84cc31-538c-450f-a756-07234a2ae588",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077e8704-c4f7-4174-b6df-961fd2e1d8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb764d5-99e7-4f3f-b6f6-e03d9a508448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e072929c-7f35-42d8-b02f-f403a931502f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ca3331-1ce4-4f7a-86d0-c84cfcd79c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ae761-d4c8-446c-9847-bb592772fcfd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6662dd02-e0b7-4a9e-8f63-9c0e22366eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577cebd4-246d-4728-a048-75e17c15965c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e52cb1-5892-4015-9ce8-8215cbe6f3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec74728a-91d2-4e1c-be5f-917f0093f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf0c4ca-1f9f-43c1-9e92-82dcfd01206a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ae7333-5857-488e-adfa-300bfb51544d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9ff5a5-854a-4314-9ff2-5f72b136afb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ab8f48-d922-42dd-a1af-3743aa97a521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163cceca-af06-4efc-8071-7dda686d60ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace4d41b-e718-45d7-b2ad-ab7204189409",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7943a393-47e7-46c7-bcff-48fbd6b3c770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb7a344-a209-471b-a8b0-daba3d58df9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8974e1f7-73f6-4f86-80d8-aed9b1e06cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29575d89-abe5-4c9d-87cb-f05660d38ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180570e5-a461-44bd-9235-249b72dcf2bb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d755522-baca-495c-b6d2-c199c6288d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5968dac-6891-4a4b-8d13-ab3937566f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b3c4de-7871-42aa-958c-2f2d20a42041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b24de65-5ac4-40b4-8946-364b3e394a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597cbe62-bd4e-4274-a9fc-9202137074c8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6adb01-844b-4240-b2a0-f2fe004903c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe35576-6a3f-4a86-8b4d-5ca46ed889bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9949b12b-1862-4165-802a-8367dc2a98e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2b7f73-330e-4a81-b6ea-585d1ad29e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79230865-b00e-49c5-a977-423e11a280ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f397e2eb-99ef-472a-b0f5-9ab2b2b922a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2d0e6e-c592-48ac-b3c6-8b8568059db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6281daba-6fd3-423d-8298-de96cf1bde45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d87a73a-4d02-4fba-8a75-cdd88ff72d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35784572-00fe-454a-9c4c-a73ecbb131cf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80c268d-4a67-4e7c-ad39-41265d3732eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4b47b0-443c-4936-8abd-e9104740f18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d492a72-668d-4f63-88a2-09b2afb1e5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c198c1ff-2579-4a1f-87d1-cb9dfc65f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac56fb00-c0df-4154-a1a2-b4706cceb5b1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b2e1e8-540b-486d-a156-7634613a2cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c59e29-170a-49d5-afeb-ecfcb030d064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb12875-64b2-44be-8701-f5d7e8929072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24887fb-2daa-4fb3-8436-b51745f86667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb60725b-4b79-4c09-91d7-b6d31abec5ce",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debaf75d-4b3f-4220-acb7-22cc5270c3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9196b8-3627-4983-88f4-614d4f61b1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4aaefb-c23a-4d10-b1eb-7aba5b063f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e8e4c1-ef9f-4347-a8e4-da85a3157172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1645c8b5-4ff9-4e76-a4c1-a95e3e7b09c6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ffbf8c-3c37-4707-959e-d3650cee0d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438e5c86-ef3e-4c38-84a3-097d33cb3ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5777535d-cd92-4bca-acf5-713344f32f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98820483-419f-4625-951a-2da97683c3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e01e288-0811-4e13-8455-c02ef989cc6a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0723de8-c403-4305-b4ea-34d63e52a812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28fb3f6-951d-4e86-83cc-930df0d00d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a581eb8d-85d2-4ed6-8870-e755eca3567b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227e9c52-93b8-4368-9512-43bec5a1bf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2734cb-3f0d-46a6-bcc4-9d689355c682",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4943d7af-e92f-462d-8297-89475f362ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70773072-3ad6-424f-82e6-852ca2b7c344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713a47b0-6fca-4793-a904-1e3a53b20947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbbe196-3bf6-4d78-96e9-5c32a4272dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e6350-0862-474a-be62-27c3f7a9f5dc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ee2010-04ad-4be5-ada9-31ec304b3833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9011be69-356e-424b-b95d-8d2c5f65c6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a4784-81ee-47c4-a028-a5f86e759e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24355ed4-e2fc-4d14-b879-de25f03f9bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff43f8d-1e53-4708-9e28-c19ec5167393",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2f978e-8849-4012-b339-c1a85e38b5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b2f4c2-d03c-4b36-ac80-024a9f9f62e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8809bd9-3464-4607-b8ad-0643d36dd5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62ba6b6-c840-4e2d-83fe-3d2b25c6f488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b630f400-df4c-4a44-a2a6-e9bf66ccc523",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac936f84-b105-4b66-a79c-0dcaa54cfd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dddefb-0a61-4b57-89f1-2db8bf00d8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d3ee88-9ca5-40a0-83be-5c4d3e889f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcb5875-693c-4ae0-ae8e-767ec34d660f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0ca17-a328-4918-b286-3928d931ce1c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a0a240-2759-40e6-a43e-4f36339909be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad85762-7e9b-44eb-9299-8f812432e03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a481a590-dd94-43ae-b861-6f75f4a3c160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9aad8eb-5767-47d7-91fd-7201cf84b2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b80a5b-ee9c-471f-9685-ab7afea31913",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7755e6a2-53d3-43c4-8ff6-3ee71af8fa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5a59f6-76a7-487b-a3b1-e6fce4bd98e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a29be4d-2c64-41e3-8b26-4d9dd2e534f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1b824d-56bd-46ba-9192-b054127fac0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8b9a6c-eaad-4828-8a94-5cc03600fecb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc727768-43fa-4419-a3cb-415d275cd173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630260dc-49d7-4ba2-86df-5ffb50a6cf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eefeb5-8b7c-40d4-a920-ca5269f0920e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a73364-2549-4e51-8eaa-4f6098dc0665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46920ecc-d1e8-4429-b79d-0747b63ad10e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399f8297-cd5f-4cd2-9e9e-ca1d1d654d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845d3387-2fd1-4468-b171-4287ba53530d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01945c0f-d318-4069-8005-e49a17354800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54d5e61-fab2-4648-88a2-5c551d667c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf8c58c-3482-4d77-b93e-e51618f9335c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad948e-fabc-49ce-9dd1-9e8a328f81fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0235b63-eea6-43ad-8556-d144ac2c3b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7b25f7-c35f-46f4-b673-fb535b2bb16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2db0823-c2fd-4002-9e34-a073cd7eb2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16a731e-c1d8-463a-a46d-2b45ac3f0aab",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb697ea-62f7-4234-b5dd-56575f477d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259a1a3d-1814-47dc-b1df-92feaa646823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50389156-d1cb-4512-b5e6-a046ddb9c973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da977dd-a5af-489d-8090-6a6102e1c692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c523453a-bd1c-4003-adef-5d9b79840e4b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86abe853-5285-48b9-acc9-5f62d1c5f101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b645bf73-9a1c-4bb7-ad95-7699eb915c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46386943-0b1f-4d0e-9918-90cf5c910c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443901df-c468-4b70-a4ab-24371aa00063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e349f69c-339e-4b62-9aaa-6eeb4ebfe683",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0b281d-0185-470e-982d-7bbb797c926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c0b8dc-5f4c-4682-97c8-9e9240a23b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d1d858-4a1f-4663-a267-f2db4220e95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17998fc-a6e0-4dc6-9e52-776bf2952d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cdbea1-81e9-48d1-a551-9da9229b3ca8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d44107-6ef1-4c14-9ec0-a90579558bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acd7f4f-b063-4181-b327-a7028bf07221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23f5a97-8404-4e1f-ba7c-b936f7b39c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014f5552-1dab-492b-b6a4-6969ae146220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d75626c-3338-4a35-a925-17db52e35cc4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc64470c-f1df-4915-baa1-cca047341a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51948a4-0227-4a92-813c-a21119689940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1314ac7a-9b22-4183-86e3-334936df53df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4570e73-c0e2-4c96-8390-bf4d6fe2cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0c3cb8-933b-4e3c-aafd-600cde80b14a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18173789-e42a-4bd3-a2b3-6c1654d839be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e999334-368a-4ab4-9d63-34f1d8ba6463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfa033c-2656-414c-8e5a-9965d15383e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd1fc67-13ff-4988-9984-25944a5815c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e351503b-99dc-478b-bb36-531f203bee1b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc0583f-798f-471a-becd-34fd7fc6b02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874dd32d-9711-4d36-b149-5585f23b5ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4ad58a-20a4-49bd-9b6b-593a5f54025e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2c0295-ef40-437d-94d1-ac6b3337a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c23df93-56ba-4f66-a247-ecd7f54dfaa7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6def8eae-f463-42d2-ab0d-543144307457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde63a7e-e9ad-4d39-a470-198ad610e1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426d5961-6dd9-4113-ac0d-463b26460cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb325810-5967-4a07-891f-2a86b0217d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8bdf0f-52ed-4e37-b42e-587d043c7229",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2964c1d5-3b27-4818-91fa-1c4b0aeae422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f503e66c-8125-4c07-ad61-9ba1b6996e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b4f4db-c39c-4a37-a2e1-fc743cd9ebbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf4f129-cd14-486e-a669-3bb75f364f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232e6fd0-54ba-4785-99a1-5ef090302ef6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e19d15-8bae-484e-8851-a76766432f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cc1861-e3af-4958-9556-1ddd19ae0bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b7ddc5-40cb-47bd-a8e7-91f44f6684b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05a08d5-f7a0-4ab7-a142-f97b08733df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186da065-20d7-47f0-a082-8f42f8693714",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee14be-37e0-4dc4-9ab1-962ce2391060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4760d7-1333-43c4-90a6-5f8faf71e106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618b6cc7-83b8-4b68-a423-c7b28f8cfa56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2be7cd1-ee8e-4a49-b90f-50109610a318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cf12a5-c198-447d-be22-7ab4017e2372",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245572bd-6a65-4ccc-85e4-f75738fd4aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda1bfa3-9d06-433e-bf2d-9b0a852faac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45530be-80e2-471a-a4e7-f4cde4b7c2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505deb72-4481-40b2-8cd8-8d7d66c66114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633e574f-f6fa-41ea-804e-91849ed5c87c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb61f34-47e2-4833-8f00-1294781467dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c60ffa-7c0a-4769-b883-057678b8fd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfa261d-2812-4b77-9b08-83d448070e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0b1dbf-eaa7-4dfe-94e9-b70c06f8592c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fda1b87-a031-48d1-9c99-823fc6443577",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38df7d75-3b75-41ec-86a4-1dfcabbffd9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b0f329-9b38-4336-834a-4cc7e1b9cdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c921b910-df38-4631-b6f4-8f8cd663554c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624e96b8-923b-4a75-92a3-79cb13d9fdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16571835-aaa4-43e0-bb4e-b5a1fa94d72e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3cd67f-6a99-4051-b4d5-050f12ab8c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b8d5653-981d-4db3-8196-66c5bc33265b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bce643-590b-4907-ab6c-4a6f04829054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20022aa-5c6b-4834-ace9-03bec64e40a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d574c79-df37-407a-9fa3-e062b63d22e5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060f6a4e-791e-407d-bf4a-ecb566e7912d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c093d1ab-c80b-4a3b-a76a-8b2aa93d9e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12181ed1-d361-4f66-92f8-1c38025859f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cab5910-fd5b-4ffc-8ad9-589c3b297745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65553037-3f52-44e8-8dd3-7533d9d52bdf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa2198b-7608-4e4a-8529-2d0a82fe71fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "330bb26b-1021-4061-9edd-40d46ed75d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ba5524-c124-49d6-8742-c0784e8f1e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43168dc6-935e-4d08-8508-b7bb962dda66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac38ad73-63d0-42d1-8e94-6b812a3d52e4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d1e381-d499-4792-8d72-b5e73d889512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f563989-03d3-41f5-9209-ae13a75b5ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43c0b51-01d7-4e05-ae42-09b9ff7443e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8054c354-32f7-41c2-a682-dcaf5261fc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d42846-9d0b-4a02-abf4-7fa74aea2f57",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5671c0-d4e8-416f-965c-b5e646f4d3c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e4447a-7b64-476e-8812-7867cea47431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaedb9a-0164-4056-8c43-11d1b9b302ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1d20aa-229c-4cd9-ba65-b962cf789a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b484a7c2-568f-429b-a799-8e4243a7a742",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220e7b8f-480a-4b1f-97a0-01d11a4fb43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b30c68-b6ea-429f-bb39-31e5638d1f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e657e1-bc1f-48a6-bdf9-4b3178ac47a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29226203-ff14-4c57-99b0-22f1ab7bef07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8606715-feef-4027-9b49-83efb0dc9353",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe56402a-5439-4952-ac30-f693bade6a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5776623d-b7f3-4719-9aab-7ba40450ce94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9078c2-3937-421d-959e-644daab962c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1291a9ac-051d-4669-a931-1a2f3b1bd7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d06408a-f3cf-4ed9-a8a2-81b7a50375e9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c38d87-401e-4db6-a103-9d1f4cbc4930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9e9715-abd4-4d98-88fa-185b0ca84f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82531b40-b0d4-4318-8905-20ad247a94e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de14469-40a6-4163-bacc-37f2cfe62827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc6b667-bf7e-41e1-b750-ef762ea3a55f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f89723-f6a6-4b32-b6e0-1a8c098dc381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fcdb81-c054-4420-8505-6cb194958968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cca8c5-3e29-4c0e-b81a-7af291297df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916b95a8-8dd7-4fec-8f10-20b95b80bc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2afb479-3392-4d6d-b72d-8fe0ddd014f6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a4bf7f-8eef-4c70-bccf-70eedfd58e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abfcfee-ecd1-4f7e-9343-9753a23d58bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12df9aac-2ca5-4c5a-ae72-666f0ed02e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b6839e-2e7f-44f7-b1a6-dfa121da7120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e58866e-4e8c-4a78-a666-cbbd4ffa5be0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f342d549-be96-4a3a-b687-6fbb50f091d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5d7342-7a1f-4774-b551-efc6a458d314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea933b7-86a5-4728-ad65-e7a2fdac6519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59484c1-0644-4c04-a090-85329b149433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f43eb17-4df0-4b62-b34b-3423009856ee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9640c0cc-e78e-4519-8ef9-a9a4a63eae4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf06d04d-8e70-4af8-8d97-fd8d77150504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2e4c74-303f-40e3-8b14-7639e7e4f75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ed2633-b25c-40e0-8694-97b02e9c2d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcb22a5-ee6a-4999-a768-271fbc003b9e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87acfc7c-a4fe-4d12-97bc-25b66edc4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7e231a-b4dc-4f98-bcb1-305db29b1225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b415d-4d34-4f1d-ac49-6e163c3c25b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ac2c98-0690-44b6-84dc-6f5c3005c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f73de2-53a4-421f-8663-660afd7339d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72799732-d219-4e89-bca6-c885c935b349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cfda61-79eb-4026-afb1-338a3decf959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eac46bd-0ccb-4ff4-825a-2ed9d6df8178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0809012e-4ef5-47bb-b666-24e57e4cecc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262e63f5-c754-4620-af25-6d362a18c1f7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9848e697-0490-4ef0-a35e-836f7a73c2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd10366-4f77-4442-96a4-ba2aafaa552c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21e37d7-a799-4d64-bbcd-16032724d6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4ccca4-c620-4c41-8eb3-ec9016605023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0142e73a-8942-43d3-84bb-69a189b36a23",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821b909f-d974-4ee5-8228-c038f58aa262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb3aa9e-5e64-45a4-ad87-d08aacb7cb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f6fccf-e8f4-4509-9184-378c9b929c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea2605e-0188-47ce-8405-fc1b43368551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b68e4f5-0290-45a9-9f90-43b591c5b04d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af03f5bc-48af-4461-8d94-545a2e9a32cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70c8de3-fb3d-46d2-8070-cfdf2e2b544d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9aac1f-9052-4ddc-8b5a-ebaf66ebefa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e739b8e2-d63f-47a6-93c1-07ef6a05822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfe2c2e-cbf2-4b45-b757-37c640a52472",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6808e5ed-b6ce-4d90-bb8e-d307f8260641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205aace9-53da-4817-bd65-5c1d27dea5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb667784-085a-42e0-bd06-c2e3a3c31fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d00bd52-2b64-40fe-9e31-8735854e9109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aa09de-ae92-4ffb-8053-a78c78fe306d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e98968-08ae-46c3-b041-82fa5f5014b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a20fb6-4847-42ea-a960-77e47b213316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676d77e0-305e-4948-8079-fe68690a5daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10e2ef4-4e75-4c27-911a-c30256e5ae95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df8eb70-86f3-4fe6-be29-3ace861dd76c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba818ee-ad15-471f-94c8-53d89c17d926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81796e1-f566-4777-9391-31f895b7db57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cab90ca-48a2-4c5d-b986-2038f82fc145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3815a4-6f6f-4b58-a174-e0d05c8bdbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2ea93b-0b53-47bd-a273-4a77cff6589a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735136e9-79c9-4f54-b0ea-06566c2c2c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e645a20-81ca-4dff-84d5-d443cf5b0afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b5e8f3-ecc9-48e5-a2a6-509a75f325a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea8166b-a402-4a05-8dd1-3b8d038d4d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a791a52-2f76-4617-8e21-e9d41f96c358",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3728fa38-983c-4722-aa74-edcbb5a0b10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1b5456-d2a8-46a1-8b11-a0dbdf24dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ea107f-5f93-4d3f-ab56-321aefa248a2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a897c614-1686-4c69-94ba-02faef3b7fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ee2f0e-3f91-4bf0-a6b1-80462fe3909a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2371bd0b-b150-4a89-9b53-1b9f779da1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2695430-fa65-43be-8463-c9083b936013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a24213a-2b2b-4f66-9cd8-55ff6d7a019b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241018a4-57ca-45e6-9aa4-40eeb89cc644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d13be3b-31e0-46b7-a3fa-49098e2713ea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9065b9-574b-4ced-911e-6393c8b40a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f18e390-b2f0-45bf-8e3e-8dc3f1e2a801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61b8994-e4b1-4021-b4fb-6e4d557e9b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceaaf04-4a92-4417-acf1-9738d19086dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc7eb9-1630-483f-bae1-86542547b3bd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df4546-cf19-4891-bab9-483b0425cca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc22f87-7823-4672-ba6a-6dadfbbfbec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dd9481-b5e2-467a-a701-8e0994e96f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45d7638-bed0-4ccf-b6d1-5dfdf35bdf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3191446-f0a1-45be-973d-94e74d5890fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8563194-057c-4b97-8fc1-4b439418abe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846a915c-2823-47f4-ac14-38305a0acc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d68a26-001a-4f88-b446-71d87d742aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541602ef-6c1f-41a9-92ca-c40d987de734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac047e9a-9b9b-459f-9810-16243239e748",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bfce35-6550-45ac-a29c-9f1de6e98e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcadfb6e-1ade-4e20-a074-a745d0990050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3308bcfb-f58e-47e3-bfc9-b3481a4be1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ea28a0-2244-4882-afcf-9ac9f7f5c3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0856825b-2caf-44ff-b520-32b3037ee74e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2791272d-c36d-4491-96e2-c8c034af6af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d2709f-8030-47ae-b05e-6db9089d4846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b40c3-5bd8-4408-a421-17e37eb06b44",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ceffbdf-867f-4b60-84b7-3e933fc99ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7958d3-4a8e-4c2e-8a45-e9e446928825",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71b64c6-3752-4821-a0f8-6a274002a312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd0f55d-53b5-42be-bf20-50b68fe65995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64ec056-c32c-4be1-8d5d-c892a9cff055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4915f30c-1c56-4eb9-8fbb-e1a4dd031cbb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76506490-5c46-4b2f-8d27-99ab67692a9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af79a10a-4007-4097-ad1c-99cfae576186"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dbde4ac-46f2-4db6-8444-35c06bc10611",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52504fda-fe27-46b3-9c65-dc815b85aeaa"
                    }
                  }
                ]
              },
              {
                "id": "ce87d3a1-d0ca-4573-825e-daf134b5489e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d1cd7a3-ba3d-4467-b515-8fe39ad35692",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6db55d8-c0c4-4e91-a5e4-71576c8919e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1dbc3192-a110-4a12-b9fb-84cfe85e3206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b66cac-5f6e-4b23-aa79-602f294a72b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adebc841-d07f-4b8c-a49b-56f89ddfb603"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f8bd780-aadc-4427-a185-a097c6ad20cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fd45956-178d-472c-862e-e72841c197e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b8a1647-2239-4be5-9042-2bbf6bce1757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28a90c86-2b34-4eea-bdef-2ce789f03980"
                    }
                  }
                ]
              },
              {
                "id": "d93dbea7-8d23-4cef-bb67-f8d09dbd8f36",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "db98aa19-00f4-434d-bc23-75bcf969c572",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1511cc-36eb-49e3-93cf-4b485dfa3180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1f94e6a8-120b-46ff-ae79-ad8702f1bd3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887f4e2b-8bac-43e4-94ab-a220e52e4d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803688ec-f87f-4620-878d-a823390ad70d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f7ae117d-031f-4f08-9ec0-08bb42ae0d36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5fb60d53-94f1-4a78-a363-23ce486e8058",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a8112a4-e09c-45a1-8299-dcee597629c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d880132-8051-4eda-94a5-164f165ebd1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5888491-31aa-4f6a-bf6a-4104524cddda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60bc0ebb-ab85-44a7-9cbd-83e6549d7e49"
                    }
                  }
                ]
              },
              {
                "id": "37c5b6da-507f-4521-b724-854960b7b13b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a1be40a-3cd8-4872-9a92-4ed7124ce2c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96c51282-b05b-4f22-aa4f-fc077cba6535"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc7e318f-f060-4005-87c3-9557c45eb950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeb5e125-4b3a-4916-b711-26dc6b6e877d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01b9569b-6747-463b-8605-6d3b8eca1769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68a9a834-4e86-4610-a2cc-4b5ea4d3fb4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "995d9bbd-764c-4c1f-9813-73ad800a3fe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04ce93a7-e365-4a20-a6f6-9665211dc1a4"
            }
          }
        ]
      },
      {
        "id": "8e3b7a90-ffa4-4ef9-a3a4-e24a7a020dc6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a3de2d5e-2f90-4a6e-b2ee-883afb54659a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e046b868-757c-4129-9f7f-285495482d76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a4f19d4-7068-47b1-9223-ee088d74e607",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9946e5e-2ce0-49d1-8895-9b4610325cc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08aa35cf-ca09-4489-b67b-302cfcc0bb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba5fef4-4535-47f8-8495-2b62d4945622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "985956e6-32e1-4ce7-9e1e-1cf7fe2f0a3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdfbc898-88f8-4e6a-9a7c-502f430801e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc672da-9890-4f7c-87aa-a2b4f103f2d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c617c64-c5d9-46c0-aaef-57f2417714d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4df0041a-6c22-4534-92de-108939a7e600"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd025458-2306-48c2-b672-7d36ffb4a71d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "342fd86a-4ceb-46d3-afa5-48b0ddb02934"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7da5e5c-7852-489d-862d-b63694c7b38f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2629541-611e-4c09-9a3d-834768b37937"
            }
          }
        ]
      },
      {
        "id": "2c6a21c3-4e93-403c-9bdd-f63fbe44fff1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b2b775e8-2e68-416a-bc8b-8a1e86d87b16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd35685b-35fd-4355-b1ca-a23eb8c48905",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2e19bff-2f89-4ff3-9fc2-d16358f6a02c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09dde8c-13a9-41e2-9719-4ab23f8e96b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e331f8-f124-47ca-bc67-dc71ca111535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702b5341-fc40-41b9-9db3-c794bb26abff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97f3f3a7-dcea-4a84-989a-4f2ca2a37302"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6f58d89-ff85-4379-970e-1ee0fa00c210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91a4650b-5dee-4cdc-89a4-4f7638eac266"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0074b70-b91b-4ab9-88cb-802d3b145572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "935fdb4d-f71e-4171-a455-6db4bfe72d89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf66c02a-2bea-433d-94fd-e11640836051",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1be311a-7fc9-4a99-8673-f4e786365bcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8af7492d-6ce6-40ad-8e64-2d4abd6aaad1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3bf6625-652f-4d41-bcb8-2feb53850d1d"
            }
          }
        ]
      },
      {
        "id": "e1461416-3263-4675-aa6f-1f0d1eece43c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1a15f234-f755-4b9d-a3b5-060975db65e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8f73621-8234-4567-8dda-f8bd6da51165",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42bea90d-40a4-4d36-a970-f761934ad85f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f27a09-73a5-4947-a89f-3f9762f8f34e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f2bafbb-ab33-43db-8cc2-5fd27c92d5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76061acc-3c89-4fb6-b5ac-278de013ba63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f379ba29-0d1f-4ba9-9466-fcd7b33838cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e2a306d-fc21-4c5e-9438-1dbce847689a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aba0a25-776c-437f-973a-dacf7c0fa3c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e7effe-5549-4b49-a9b9-742804bbcb16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c731ac1-035a-42fb-b6c5-e8938741e4d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c54e39d-4ab3-48f8-ade3-ea996a3afeb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5f29647-0a26-44d1-a7a4-83af0a48b09a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f56481c-873e-475f-a2cd-28e382e54e21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d4487aa-3335-4615-a477-2faaafbe9f5a"
            }
          }
        ]
      },
      {
        "id": "77ca925f-8ac8-4965-b04c-23971960cc26",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f88c768b-dbf8-46c8-befc-33c6aadd7a07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a4d3115-d14f-426c-a483-3909f76b4647",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "630af428-ee25-458c-833a-168a8ebc120d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e062de89-aa46-4b5b-bdbd-fbf55d5eaa5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13099e48-5df3-4fb0-9c71-c8b49596bbf9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.944444444444436,
      "responseMin": 9,
      "responseMax": 775,
      "responseSd": 50.47061152657023,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726015368268,
      "completed": 1726015385583
    },
    "executions": [
      {
        "id": "b6759aa4-01f1-4bb3-b05a-c7f9408d8e89",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f5171241-3a41-49e9-8b67-cc1a94aff988",
          "httpRequestId": "7fe1adeb-2293-4ac5-80a5-3d5300f9eabc"
        },
        "item": {
          "id": "b6759aa4-01f1-4bb3-b05a-c7f9408d8e89",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "faf2603c-f8d5-4259-8175-266387018ca9",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "18afcc78-3e46-477a-91ed-67bdbcabe67a",
        "cursor": {
          "ref": "de21bb6e-853d-4043-abd7-daadb3874285",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5567248e-e4f7-4b4c-a5e1-3f1b440ccb97"
        },
        "item": {
          "id": "18afcc78-3e46-477a-91ed-67bdbcabe67a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "291246b7-3556-4fea-9207-fde45e269543",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "f5cdcac2-a4e6-49fa-926d-0d031f3476d2",
        "cursor": {
          "ref": "2138fce8-6144-4100-ac03-1be2e729f439",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5b24ba6c-3dde-4cb2-8a63-8a6d57852dd3"
        },
        "item": {
          "id": "f5cdcac2-a4e6-49fa-926d-0d031f3476d2",
          "name": "did_json"
        },
        "response": {
          "id": "33a5863f-87fd-4b13-86ae-55c104b76202",
          "status": "OK",
          "code": 200,
          "responseTime": 278,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f25b30-c57b-4f61-a97d-f6f65b62bddb",
        "cursor": {
          "ref": "494b99d6-641f-4c7e-98f3-0f30ab8d04cf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8e67949-a85b-48ef-87a2-69378db8219d"
        },
        "item": {
          "id": "71f25b30-c57b-4f61-a97d-f6f65b62bddb",
          "name": "did:invalid"
        },
        "response": {
          "id": "71f95a6c-5888-4bb0-972f-3963d6c8bcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f25b30-c57b-4f61-a97d-f6f65b62bddb",
        "cursor": {
          "ref": "494b99d6-641f-4c7e-98f3-0f30ab8d04cf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8e67949-a85b-48ef-87a2-69378db8219d"
        },
        "item": {
          "id": "71f25b30-c57b-4f61-a97d-f6f65b62bddb",
          "name": "did:invalid"
        },
        "response": {
          "id": "71f95a6c-5888-4bb0-972f-3963d6c8bcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150966cc-289d-497b-be3a-be12ef7237f3",
        "cursor": {
          "ref": "5b96f891-2e2a-45d9-96d2-621d80f1ecec",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "48f19d59-e139-4627-87a0-39f33f47be8c"
        },
        "item": {
          "id": "150966cc-289d-497b-be3a-be12ef7237f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "86bc3357-2b32-448e-b48b-c9a267a7d6a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331a09bb-0ab4-4291-9c7b-d35bad96296c",
        "cursor": {
          "ref": "efbe9d1f-5865-4770-9d39-ef7c5eb1420e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b3e10d57-6291-4a82-a984-ae292c90539a"
        },
        "item": {
          "id": "331a09bb-0ab4-4291-9c7b-d35bad96296c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4e9aa4e6-33d8-4231-893d-285146fd6cf9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff21cb92-294e-403c-8194-576c592ab6ea",
        "cursor": {
          "ref": "3a79edf5-2764-48ee-8e89-823f1825c7e3",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ca019d9c-2ddd-4296-8a67-f5cba8e5e104"
        },
        "item": {
          "id": "ff21cb92-294e-403c-8194-576c592ab6ea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a42c789c-94ab-494a-ad21-4066c76acbeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daf2254-8bad-4f87-a293-4c2d5d53a0d6",
        "cursor": {
          "ref": "28e89034-189b-4f3f-a8ec-560a5706ba1f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "94a9eb08-c777-446f-9381-5cb087233a79"
        },
        "item": {
          "id": "7daf2254-8bad-4f87-a293-4c2d5d53a0d6",
          "name": "identifiers"
        },
        "response": {
          "id": "6c9a85aa-3e4f-4634-abc0-6be15ff73883",
          "status": "OK",
          "code": 200,
          "responseTime": 193,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315b0f47-3565-4133-bb76-5f1b2e811dec",
        "cursor": {
          "ref": "e973986c-b88d-4a21-a39e-6a86bfe43823",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "90f985dd-bac2-4d3e-bc8e-4994a041023c"
        },
        "item": {
          "id": "315b0f47-3565-4133-bb76-5f1b2e811dec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5850faf6-c03b-4024-8e81-15c868fce084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ac497a-f64a-422c-858f-2c1ba9355697",
        "cursor": {
          "ref": "e379d7ab-f8f2-4dc1-b757-bf22f3cc2ec3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3904fd98-45ec-457a-bd40-10f0b304ad0f"
        },
        "item": {
          "id": "89ac497a-f64a-422c-858f-2c1ba9355697",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a4e59978-1e18-498e-865f-01e21198782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105f00c3-19de-40ea-9492-dcdf0f1d0245",
        "cursor": {
          "ref": "70369510-e728-4439-b496-191dcc075522",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cacf44a2-59f9-40fb-a10f-7b37c1d75644"
        },
        "item": {
          "id": "105f00c3-19de-40ea-9492-dcdf0f1d0245",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c34fe01c-d185-4920-bccc-c5d7f9ffba51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849545d9-d157-44fe-af99-60e047c74684",
        "cursor": {
          "ref": "c6c7d912-3f94-4933-ac30-58ebf938cbcb",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "57a350ea-fa04-43de-b70c-774bc51f4a11"
        },
        "item": {
          "id": "849545d9-d157-44fe-af99-60e047c74684",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "72e9608d-3d4d-4f98-bc43-21838abc1adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1e269e-9a98-4c88-9f33-cd4e8bdde66e",
        "cursor": {
          "ref": "58dc966c-d692-40cb-9965-0a99a0f9bf97",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dc7c6b03-f957-4fcd-b41e-8b291782d795"
        },
        "item": {
          "id": "3a1e269e-9a98-4c88-9f33-cd4e8bdde66e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8f2b475d-c8bb-4bab-b61a-630e4d71a802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c731ca18-711d-4516-a811-24ea629a879e",
        "cursor": {
          "ref": "df17808d-ab6a-42be-8679-20cdcdeed11b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7472edb0-f39b-4384-9cb1-56031858e1e3"
        },
        "item": {
          "id": "c731ca18-711d-4516-a811-24ea629a879e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4891c3ee-e20e-4f57-a074-8aa4f120b00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276355a9-3933-4472-a499-bde219cbe40a",
        "cursor": {
          "ref": "5593aae6-9f8a-4bef-85ec-05a537c9f43d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "af17d8bf-22aa-4f7b-ad9e-a3ba04c58e80"
        },
        "item": {
          "id": "276355a9-3933-4472-a499-bde219cbe40a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9ee54447-021e-40e2-baca-29d80dc01906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522143a0-233e-4e35-8a8c-fabe91e2d4fe",
        "cursor": {
          "ref": "38260dba-f39b-42c1-8913-6f8c99609881",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "18bf03b0-be0a-48b9-8cb9-e5da039201dd"
        },
        "item": {
          "id": "522143a0-233e-4e35-8a8c-fabe91e2d4fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "46dd939b-ab5a-4f6f-901c-421541fc1886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf23d0c-10b7-4ec3-bcc7-8b00102e2b37",
        "cursor": {
          "ref": "29a55f33-b168-4e88-81f8-e72cc034d8bd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f5ca927e-f1f0-4fb1-a536-674c2ddc019b"
        },
        "item": {
          "id": "aaf23d0c-10b7-4ec3-bcc7-8b00102e2b37",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "31a7c6dd-2724-4f22-9b92-57d3827823f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8184646a-da28-4170-a08a-e6fce2efb755",
        "cursor": {
          "ref": "d238b54e-6f31-4103-afb1-0c7215409389",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d9b80771-829e-4342-a18d-bd39dc0e6e5d"
        },
        "item": {
          "id": "8184646a-da28-4170-a08a-e6fce2efb755",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e8a6311d-1d96-4057-9456-535f68dcb8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8487301b-ab79-4499-b656-be00cd4ab9ff",
        "cursor": {
          "ref": "a717715d-8c16-459d-bd04-51e1f806217b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55153c17-c961-4f51-a5a2-fb399aa8c944"
        },
        "item": {
          "id": "8487301b-ab79-4499-b656-be00cd4ab9ff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8a8a1b65-a9ca-46e5-952a-c93c680b02d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ac95f7-d8c7-4208-b180-c5364a3af3bc",
        "cursor": {
          "ref": "d35111e9-9200-4614-bbe1-2b1cdb565410",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a2a0c3d8-0942-41df-a7b5-b84971b10bbb"
        },
        "item": {
          "id": "28ac95f7-d8c7-4208-b180-c5364a3af3bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8b011d03-f495-41c2-b837-33b598676e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffbab23-7c40-4e8d-86ea-9175dac9fa9b",
        "cursor": {
          "ref": "eb51e33c-21a3-4e90-8d3a-f62ee8fa2f67",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9b9c3f49-a257-4786-8d5c-c4f5f18a3980"
        },
        "item": {
          "id": "4ffbab23-7c40-4e8d-86ea-9175dac9fa9b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "21183f1f-085a-4f55-8d7e-11aef8e9ec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3d907d-3a8f-4c6e-81bb-50ef605dcb2a",
        "cursor": {
          "ref": "040356ce-3f4c-4efa-9899-4dc6451c373c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e5b60089-5799-41d5-b4cb-69d61f7e6847"
        },
        "item": {
          "id": "0d3d907d-3a8f-4c6e-81bb-50ef605dcb2a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a54ae1e2-d995-4f3f-8fe5-1bd9518f83c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d10eaea-fc9c-4b43-8748-fcf37378fcda",
        "cursor": {
          "ref": "fb57ad7c-45eb-4fc7-89d5-147e3c8ae51b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a56d8f4c-8e60-4734-b82f-74665e137974"
        },
        "item": {
          "id": "4d10eaea-fc9c-4b43-8748-fcf37378fcda",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a15cd987-3323-49ad-a09a-faed4517b3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e152a4a1-5d9c-45de-842c-8e3b88f33ad4",
        "cursor": {
          "ref": "129961c4-e6f4-4d66-8bb8-8a335455939f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7d1810f-7951-4526-ad65-a66bf10c6643"
        },
        "item": {
          "id": "e152a4a1-5d9c-45de-842c-8e3b88f33ad4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c37a26fe-6901-4397-a6b1-2c5762e58e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0132fba-53cf-4a88-8334-441795143443",
        "cursor": {
          "ref": "88929c4e-439e-4353-a0ca-b1910b2c36f5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44cbaaf3-c759-438a-9f46-8f77c1228e5f"
        },
        "item": {
          "id": "a0132fba-53cf-4a88-8334-441795143443",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8abc390b-bd32-45ab-b333-4582e9d4ef0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9370194d-f947-4837-a286-25dbfba7e9a9",
        "cursor": {
          "ref": "0b94f0c7-7b00-4688-9189-70cf3575aeec",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "030b0fa0-042a-4098-892f-1500c6f9b1a0"
        },
        "item": {
          "id": "9370194d-f947-4837-a286-25dbfba7e9a9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "49851088-fbae-4621-b1a0-cf6c897017b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923b2ada-72c9-4a92-8fe3-f9c7f26350f3",
        "cursor": {
          "ref": "b5837896-0390-4406-9ea7-ca887bf87ac0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "663f60d0-12b2-468a-bc4d-d31c51b0add8"
        },
        "item": {
          "id": "923b2ada-72c9-4a92-8fe3-f9c7f26350f3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6056c098-8547-4339-abbe-b676375c87e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7238407e-1bc1-430c-9944-ce986d802847",
        "cursor": {
          "ref": "7dc459f8-f96a-4ad5-9a6d-3aa7ec9ae0f1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "39117a30-28b1-460c-9246-e275d3133ad6"
        },
        "item": {
          "id": "7238407e-1bc1-430c-9944-ce986d802847",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f8d961a0-7ac7-41c2-927a-88bb6320796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a50b8d8-e85d-4c54-9256-4267f654ee01",
        "cursor": {
          "ref": "a7d66959-71cb-4c4a-8dbf-22f12deb48ff",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b7d7d2a7-df7f-4659-8ac6-b4992c08da37"
        },
        "item": {
          "id": "8a50b8d8-e85d-4c54-9256-4267f654ee01",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "84a55a6c-2e77-4c57-ac8c-de2fa33e56ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2741af-213a-4923-958c-5340409c4225",
        "cursor": {
          "ref": "8c04582b-fc80-41e9-bc98-fd9dbfdf53b9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bc4c2618-289b-4799-9bba-364e53948b46"
        },
        "item": {
          "id": "2e2741af-213a-4923-958c-5340409c4225",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65100009-9219-4dba-b52a-2927a46b9df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d734c0-3996-40a3-9250-e91d2a75e98d",
        "cursor": {
          "ref": "1a790224-59e1-49f4-be2c-c434a9dfd76b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ba6c1075-26f7-497b-b06c-0bc2bacc1651"
        },
        "item": {
          "id": "43d734c0-3996-40a3-9250-e91d2a75e98d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8a516f9f-c5bf-4376-87ad-2ecf4d701f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db79a250-a4bb-41ca-b519-729394efc3d8",
        "cursor": {
          "ref": "5bbcaed4-bb10-4460-9f4c-1a4e5f6b6d46",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8710bad7-0cd3-48d0-9074-2336ba61e0aa"
        },
        "item": {
          "id": "db79a250-a4bb-41ca-b519-729394efc3d8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "378749a3-17e4-42e8-8e55-f40585021be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37f93d5-f1de-46c0-b33a-cae416c9598f",
        "cursor": {
          "ref": "8ec984b7-e87c-4fd2-9dcb-b77c62e02087",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "14e2f415-4459-4560-82f4-9dc65bbfa50e"
        },
        "item": {
          "id": "f37f93d5-f1de-46c0-b33a-cae416c9598f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7264a250-11a4-4638-be83-59fd3ef9b516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88d3710-19c1-428f-85b2-042e2c0e5f44",
        "cursor": {
          "ref": "eee5f512-c874-447d-95c1-bb9dbf8e2307",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe314478-2918-42a9-80df-3026f38a1f9a"
        },
        "item": {
          "id": "f88d3710-19c1-428f-85b2-042e2c0e5f44",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "02b2f978-e458-4dfc-9066-7f17fb3fd1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc814c-a565-42a6-b67c-d920f492e7a4",
        "cursor": {
          "ref": "1dae13e9-c8ae-4b34-a47b-67c98551ae4e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "92ae9f67-a130-4d67-94c0-ae15d64b53ae"
        },
        "item": {
          "id": "c7bc814c-a565-42a6-b67c-d920f492e7a4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5d64b045-0c5d-4204-9381-ba763fd91075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df01fab7-7025-4e01-9dd6-fc499f890051",
        "cursor": {
          "ref": "e22097a8-21f7-491e-a18c-54e902ce4445",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "efaf8efe-019d-4c7e-9c50-0c72d761fb58"
        },
        "item": {
          "id": "df01fab7-7025-4e01-9dd6-fc499f890051",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "166c2a4b-4285-43d8-b6da-a510c13152e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7dd449-6049-4b1f-acca-a21b30b767da",
        "cursor": {
          "ref": "fcd5d044-64b3-48f1-8446-b3505a9f0469",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1e9128c2-8b1b-4862-85db-6c8fb8925564"
        },
        "item": {
          "id": "de7dd449-6049-4b1f-acca-a21b30b767da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "95ab6ec7-e4e3-43ea-a22b-14acabcc971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6384d5a6-98f7-4d12-a31b-51e0b09bce7c",
        "cursor": {
          "ref": "2a031aaf-bdb7-45d1-82ec-3ece16fd36a7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2f89b268-2fcc-4354-95f3-746da4eca62c"
        },
        "item": {
          "id": "6384d5a6-98f7-4d12-a31b-51e0b09bce7c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f16001ae-5c97-485c-910b-49f1f22dd016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6141af8-669c-40d9-ad73-83b331f3c4a2",
        "cursor": {
          "ref": "2bf018f6-9eca-4b5c-82e9-99bbbced79f8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b365e29-cd69-4db5-ac11-102d07cf7324"
        },
        "item": {
          "id": "b6141af8-669c-40d9-ad73-83b331f3c4a2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aaa6e58e-c71b-49c8-8b72-a7ac0efa4143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eff5a7-8d7f-4a79-9197-c41f5add10e1",
        "cursor": {
          "ref": "ee385931-7c82-4931-b4bd-4a3a0dc09faf",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8f76d3db-110d-4a24-b056-025a9eb54907"
        },
        "item": {
          "id": "25eff5a7-8d7f-4a79-9197-c41f5add10e1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3b526188-f689-49e0-b0f7-6301aec5e67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038cca1f-82ac-4e3e-b7ac-d05d11d38b85",
        "cursor": {
          "ref": "a6a54c72-fe62-4541-88b1-6691e287fbcf",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bd0f8478-9261-47e6-8647-35fd653b259d"
        },
        "item": {
          "id": "038cca1f-82ac-4e3e-b7ac-d05d11d38b85",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4f0d964b-f26d-4d01-b073-59998a84742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af76edfd-1239-44e4-a563-a5edf5a27f45",
        "cursor": {
          "ref": "38ec0e4b-a082-4315-8638-53b0f16ab9e3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "95bd9fda-881f-4880-9e76-423c620bba6c"
        },
        "item": {
          "id": "af76edfd-1239-44e4-a563-a5edf5a27f45",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "64af0027-7bd1-4567-ab39-b19b882e999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b4c6b7-5529-4e1b-b048-82c115b85067",
        "cursor": {
          "ref": "00ba3919-dce1-4720-bb6d-548ae4f63d5a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b52c542d-c5b5-41c9-8266-33b316263f00"
        },
        "item": {
          "id": "77b4c6b7-5529-4e1b-b048-82c115b85067",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "afa7c277-531e-4f53-8782-e0d2055ddd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda5bf72-e3a1-4209-b8a2-debf059a6827",
        "cursor": {
          "ref": "666671df-afbc-4248-9c38-a3c4c63f4df6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4988d8df-7915-4843-bd4d-07dd28e7956b"
        },
        "item": {
          "id": "bda5bf72-e3a1-4209-b8a2-debf059a6827",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0cd06b6-552e-4909-87e6-b6584c048851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32267dbf-e11d-44ef-98a6-121ed94190af",
        "cursor": {
          "ref": "4af918d2-d251-4ae5-b565-ee768682b833",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "19886bf0-9d2e-461b-8f4b-b5e27feb17fd"
        },
        "item": {
          "id": "32267dbf-e11d-44ef-98a6-121ed94190af",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7f95e497-71ce-4485-b25b-86c1612ba2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf499f7-b007-4fb4-94ba-a7d002337e03",
        "cursor": {
          "ref": "aa08e281-04d0-4230-8794-7865052e11f5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7a70dfbd-42c4-4b2f-b54c-d3bd70f17fab"
        },
        "item": {
          "id": "faf499f7-b007-4fb4-94ba-a7d002337e03",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0da070f4-2a06-447e-baec-93f415e9aff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df85b8f-a58e-4369-9dfa-f9ac4ca6b1cf",
        "cursor": {
          "ref": "967366e4-e93d-4ec0-8e16-0eefd78e0d38",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "150d6358-c079-4a3a-8610-cc5e398a8384"
        },
        "item": {
          "id": "8df85b8f-a58e-4369-9dfa-f9ac4ca6b1cf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "06ac7b2d-68d0-4667-a897-6d8a4c96b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922cfe89-c98a-4a8f-8344-4e693fc0693a",
        "cursor": {
          "ref": "ad08d43b-ade6-4614-8696-7213d9c6c53d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c2f8d8cb-1c73-4848-988e-f232e2767698"
        },
        "item": {
          "id": "922cfe89-c98a-4a8f-8344-4e693fc0693a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "df7e96cf-484b-4bcb-9bda-0b3a51907402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2737373f-5ed6-4fb6-aa12-7439e78ad9e0",
        "cursor": {
          "ref": "0f9df4b6-a03a-4411-a57f-dec551c19522",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "96a56836-d37f-49b8-9729-630bcf79df1e"
        },
        "item": {
          "id": "2737373f-5ed6-4fb6-aa12-7439e78ad9e0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f1f49369-ca1e-45cf-8237-313f7cefd3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a17cb47-6b88-47a1-9fc1-337b0a14e1fc",
        "cursor": {
          "ref": "01346f68-ddc7-49e2-b448-f11bfff7c904",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "20cbac47-2b02-4a58-90dd-3c8de32bb835"
        },
        "item": {
          "id": "3a17cb47-6b88-47a1-9fc1-337b0a14e1fc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2c7364b7-63cd-4b19-adc0-99e3b1068f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120254d2-f424-4c84-a9e1-c31993def990",
        "cursor": {
          "ref": "3cc23013-2012-47d7-b3dd-7fabfb1b863b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "53d92205-b1a9-4a81-806c-6ba9ea2fe1c4"
        },
        "item": {
          "id": "120254d2-f424-4c84-a9e1-c31993def990",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d5e79713-8091-4c08-a9ab-88f692a0e96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23449ec0-ff91-4dbc-8da8-e5d33b53c596",
        "cursor": {
          "ref": "67945a07-af4a-4a2b-bd33-1bed319bbb24",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "627cdfe4-3521-4b8e-8454-4628710572e7"
        },
        "item": {
          "id": "23449ec0-ff91-4dbc-8da8-e5d33b53c596",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c1de91bd-3db2-4eaf-a798-51202b61521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1120eb2a-5a19-4e30-af03-b8600638933d",
        "cursor": {
          "ref": "fd75aba9-83e7-4e4b-ad34-3d85e9c00543",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9906ff48-204b-44a3-9b56-cd4129814fb6"
        },
        "item": {
          "id": "1120eb2a-5a19-4e30-af03-b8600638933d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7b69c42e-7040-47d4-bbeb-d9e26208be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6350e29-0dff-4ea6-a539-b41756e9d9ee",
        "cursor": {
          "ref": "69308ed3-84af-4cb2-8d04-32043724c432",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "069385fd-f082-48f7-b4b6-580c7d81b9f1"
        },
        "item": {
          "id": "d6350e29-0dff-4ea6-a539-b41756e9d9ee",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a161836b-f4e6-484b-a863-52cb737fa450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1573e2-7390-4c84-9912-f21e71feae35",
        "cursor": {
          "ref": "f0b4a171-99c9-437e-980d-4c334b105df4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "766f6f2e-9ddf-4805-824e-dd4bbe13db19"
        },
        "item": {
          "id": "9f1573e2-7390-4c84-9912-f21e71feae35",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b74883db-a2f5-411d-9fe8-845791e25fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d7de7-9959-4a40-9842-8230a5591622",
        "cursor": {
          "ref": "859a56e8-8056-4f5a-98bb-958ff1127354",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9bbd2e3a-ea28-430f-90ef-b0d0c63215d4"
        },
        "item": {
          "id": "f17d7de7-9959-4a40-9842-8230a5591622",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "49e1006b-b4ad-4f6d-ae92-a031d863150d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4931a4-6954-4b4e-8710-e7b26968ebc4",
        "cursor": {
          "ref": "0b5ec0a6-d950-47d4-aaf9-2cac493443c7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7bee6ac8-0cf0-4abd-8f9a-4f808a37022b"
        },
        "item": {
          "id": "7b4931a4-6954-4b4e-8710-e7b26968ebc4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3f6f002b-4e56-4790-89ba-5e1528f4d55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e99fe6-f376-40ab-9245-55b019629645",
        "cursor": {
          "ref": "5b9e560b-4785-4d22-8337-016eeb6a9a64",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cb019fa4-2001-4790-8617-939b1c873d7a"
        },
        "item": {
          "id": "81e99fe6-f376-40ab-9245-55b019629645",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4673367f-ab3f-4e5f-b6f6-1cdb9239577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f0ff0-8ee3-4c55-8c9a-0921f39ea63d",
        "cursor": {
          "ref": "e8a32e36-44f5-48bc-a1c0-bfaa7d99cb13",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a6216257-2bae-4060-b3a3-e497493778c0"
        },
        "item": {
          "id": "ef4f0ff0-8ee3-4c55-8c9a-0921f39ea63d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d3622db0-4f86-4a2b-94f5-39cd7c4afc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77b9272-32b7-46b1-978b-fe37a5ee9e5c",
        "cursor": {
          "ref": "cd208863-fba5-494d-b6f6-5e46f0d4a4bb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0b9ad70f-c3bc-40b7-8390-165375272c2a"
        },
        "item": {
          "id": "a77b9272-32b7-46b1-978b-fe37a5ee9e5c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e929a34c-166a-4bc5-8772-62f09a4abe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b770ec0-9c3d-47b5-9059-d35ab746ad51",
        "cursor": {
          "ref": "b83704e9-8ee2-418e-8353-1dfeba361aa4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a34471d6-c507-45e9-b79c-b50c51024aea"
        },
        "item": {
          "id": "9b770ec0-9c3d-47b5-9059-d35ab746ad51",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "98f3c034-14c6-4a53-9c32-5bd4270493af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82871dd5-3ce5-4de4-b40b-280a68ed6000",
        "cursor": {
          "ref": "797b86a5-f6cc-4a53-9f17-bfef5b843265",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1252a860-310c-4320-9691-004023e691a0"
        },
        "item": {
          "id": "82871dd5-3ce5-4de4-b40b-280a68ed6000",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "031b3166-9459-40fa-afc1-076b841d635c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0051265a-ebf4-4248-823f-06b8250a79d1",
        "cursor": {
          "ref": "c108d31e-9632-419e-a98b-bfd1faa10b1e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f5124021-0b0a-4cb5-855f-8c983808d88a"
        },
        "item": {
          "id": "0051265a-ebf4-4248-823f-06b8250a79d1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4e15e586-dcd6-4ab6-8ddc-2727847281f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a325c-4dc0-4a59-b33f-ffa105a3168e",
        "cursor": {
          "ref": "0771abaa-973d-4f4f-a2f2-e546b1568614",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c3837a97-aee7-4c09-9463-92c8044cda61"
        },
        "item": {
          "id": "015a325c-4dc0-4a59-b33f-ffa105a3168e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef3124c2-f836-43d4-8d45-c7afb827dca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a70763-c43e-47af-9726-11cb160bd297",
        "cursor": {
          "ref": "69466a19-7746-4f61-9d4d-df93d9c077cf",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "142b6109-fd76-4b00-a03c-101e57724229"
        },
        "item": {
          "id": "d4a70763-c43e-47af-9726-11cb160bd297",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "93178b2e-c8be-4d29-9696-bae0e7185c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88bddaa-3630-49cf-8a79-8baa4adc016c",
        "cursor": {
          "ref": "8deae123-7082-48e5-b836-364db805852d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2087a658-8bff-4585-9ac3-264fa3168253"
        },
        "item": {
          "id": "b88bddaa-3630-49cf-8a79-8baa4adc016c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a3de2669-2030-4806-970b-c68b331ea3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5493c8e-81e6-49b5-abda-d754caa02694",
        "cursor": {
          "ref": "1387e2a8-e031-4055-b776-2918e89f9366",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6e5c41f5-7760-4d3d-9e07-8f0aa2d838da"
        },
        "item": {
          "id": "f5493c8e-81e6-49b5-abda-d754caa02694",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4f6b2c76-a29b-4e22-8e85-ac64afb3a8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0264c-734e-4590-8852-b1adee262458",
        "cursor": {
          "ref": "371e69f5-b686-46d7-a176-bd4ed5019f47",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5b89cada-3a55-4747-964e-ac0589923cad"
        },
        "item": {
          "id": "34a0264c-734e-4590-8852-b1adee262458",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "72811866-7200-4c84-bc0c-2d2cb1864fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c477f472-0ec0-4293-8d72-531dfa8be302",
        "cursor": {
          "ref": "3a072ff8-99c5-4b68-b526-9d7cbb7d6d26",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c0b4a95e-fb20-43cb-b854-3d3b41b7bd6c"
        },
        "item": {
          "id": "c477f472-0ec0-4293-8d72-531dfa8be302",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "54c52493-1841-4573-9b0d-3bbbb8ce4c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d83bc0-e139-4702-ac86-5ca5426cb215",
        "cursor": {
          "ref": "821c0819-ab57-438c-b594-acf95282062f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "026ec6c8-926a-41fe-a22c-f1215608da50"
        },
        "item": {
          "id": "c1d83bc0-e139-4702-ac86-5ca5426cb215",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "297bc234-7e44-4aa0-be91-cc71bdc67a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a848715-8c8a-480b-bada-f4f7c66e1c32",
        "cursor": {
          "ref": "67a1bc90-3227-46c2-b6ee-88764647321c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26ebe22f-e5b0-4921-95ea-eb9b3818030f"
        },
        "item": {
          "id": "5a848715-8c8a-480b-bada-f4f7c66e1c32",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "39125dfe-5eb1-4358-af1f-b7ca77a5aa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1600dda-31ac-4397-aa6d-8cf65b179e36",
        "cursor": {
          "ref": "46be387d-3067-4a06-ba15-177b4c7ccae5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "541e5020-a835-41b4-b29b-8f9724a13c6c"
        },
        "item": {
          "id": "e1600dda-31ac-4397-aa6d-8cf65b179e36",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "23ec2f56-a169-40f6-896f-7b70c31a6a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a11902-2db4-4663-bf2c-78fd4ce45d4f",
        "cursor": {
          "ref": "35b7b428-da09-4c90-a9ac-78b8dea69ebb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ada62571-8a62-4355-af2c-d1303f5e6806"
        },
        "item": {
          "id": "40a11902-2db4-4663-bf2c-78fd4ce45d4f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1bd8cb45-3630-4349-af3e-cbad3737f2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55b7e4c-21e8-4469-9d11-2c6cd89225d8",
        "cursor": {
          "ref": "a292e26b-28b4-4785-8441-ade93427b770",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97f11d25-eed5-4710-bc65-9cf8f5888800"
        },
        "item": {
          "id": "d55b7e4c-21e8-4469-9d11-2c6cd89225d8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bafd4b66-4107-4a6b-bbcd-070f69fc0ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8acfa8c-9c5b-429e-9a7e-542fe3ece8b6",
        "cursor": {
          "ref": "19281655-045a-46a6-aa69-b644e6650d9b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "294518a3-3979-46c5-b28a-91ea563815c2"
        },
        "item": {
          "id": "e8acfa8c-9c5b-429e-9a7e-542fe3ece8b6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "51f74b30-f59c-432e-bafa-304b15113f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258685cc-5dc9-4ccd-abb8-255de5981fbb",
        "cursor": {
          "ref": "72c7dc54-714b-45ae-871d-d97eeb3c91d8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "84395ea0-c746-4f83-ac76-0a1e58b479d5"
        },
        "item": {
          "id": "258685cc-5dc9-4ccd-abb8-255de5981fbb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3fe3296e-936e-4a55-b81b-51f509d2785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd702010-8558-4ffa-abb7-15725146e99f",
        "cursor": {
          "ref": "979a8fb4-b463-415b-9903-8be18e3981e5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "be22fb20-d2c8-42a7-b69e-b2b1cc1f0dda"
        },
        "item": {
          "id": "dd702010-8558-4ffa-abb7-15725146e99f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "565c3b34-b2d2-4f3e-91bf-421990f3fe92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291da57f-1c2d-4d63-912e-44ffc3364f7f",
        "cursor": {
          "ref": "896399e1-2d16-499f-83a5-71c415e4a854",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3421b9b5-e95c-48a3-8538-35d74649c727"
        },
        "item": {
          "id": "291da57f-1c2d-4d63-912e-44ffc3364f7f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9db9d4b7-6dbd-462b-a3fd-126666872225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78e7ac5-9e1d-48d7-9d26-549be08e2ff3",
        "cursor": {
          "ref": "5c345166-06aa-471a-9537-438e3d2de34b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b35814fe-1e1a-4c90-b0d5-12bc37b43e21"
        },
        "item": {
          "id": "f78e7ac5-9e1d-48d7-9d26-549be08e2ff3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "df1b381d-9615-4360-ac7e-5ccb3e284be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da521c2-f294-4f48-9a8e-36600522a35c",
        "cursor": {
          "ref": "88899845-d4b8-4f04-bc60-fc4f20789e2e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4842b7e8-8cc3-4f4c-b53c-4628344c9b27"
        },
        "item": {
          "id": "9da521c2-f294-4f48-9a8e-36600522a35c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4f168c6a-4c99-4f12-8828-43b776ead905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946b8b6-2b6b-456e-8fb4-74ddd429325e",
        "cursor": {
          "ref": "add5f8bd-0e69-4de8-bd66-14bad11b34a7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a37edde4-226f-4243-87de-9bd60f5df3b5"
        },
        "item": {
          "id": "8946b8b6-2b6b-456e-8fb4-74ddd429325e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1a944439-1f94-410c-8e6a-2ed7253e6633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceca8c60-b678-4813-896d-f121a21d75bb",
        "cursor": {
          "ref": "b92f3a10-b572-4d46-97ee-dbb3f0b70535",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9e7bb3de-3883-4ca8-bc36-2914925453f4"
        },
        "item": {
          "id": "ceca8c60-b678-4813-896d-f121a21d75bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a4ff26f1-53ec-4966-ac96-1156dc14fd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdffd5cc-a151-4488-8a3f-93983d2e741d",
        "cursor": {
          "ref": "0ba367d9-e6ef-4cbc-8d85-b55e87e98957",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c31b3bba-cf22-49f7-9b29-b1fcdfc6d680"
        },
        "item": {
          "id": "fdffd5cc-a151-4488-8a3f-93983d2e741d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1caa2352-47dc-47ed-b86e-0dc8b4c478be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824e991b-b50f-4136-a5c5-b52032ab2834",
        "cursor": {
          "ref": "a69a72ad-84d2-42d4-b63f-2db3a90e7887",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "015b41a8-29e7-49c6-b65e-cdaaf92fece1"
        },
        "item": {
          "id": "824e991b-b50f-4136-a5c5-b52032ab2834",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "973b5585-ec0f-4b16-8240-3a9d6a408c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d2105f-ba01-4871-8038-9677d721e6ac",
        "cursor": {
          "ref": "ea7f7bda-484e-488a-8113-c0eb02754011",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f4543258-c711-4d04-8aa7-dec34261d901"
        },
        "item": {
          "id": "e6d2105f-ba01-4871-8038-9677d721e6ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b5752a93-c7b5-48a4-9be9-c375407d0191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9708a1c-7d82-4849-acbe-280a2062a302",
        "cursor": {
          "ref": "2f22315d-0cff-4eac-8b3d-a824e3b0dbb0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "723bb036-4ff1-42ed-9ad2-6c0256b88450"
        },
        "item": {
          "id": "a9708a1c-7d82-4849-acbe-280a2062a302",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b091dbd2-4561-4622-acde-5597137d77a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fae2b0-efe5-4f7e-8e15-c0fd646576b3",
        "cursor": {
          "ref": "04771013-18e5-43fb-a265-9915f7963499",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "64361382-3eb5-4dc4-a495-48b249f2a7ad"
        },
        "item": {
          "id": "60fae2b0-efe5-4f7e-8e15-c0fd646576b3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e253aa20-25f5-46fd-8f4c-c3c6c00b92ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e5306e-6e09-40bc-bb74-0d22162ca135",
        "cursor": {
          "ref": "e2cb2b6a-c681-4ea3-ac82-aea55cf22760",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d5f6482-888c-42b9-8bf0-3c12dce436b2"
        },
        "item": {
          "id": "e7e5306e-6e09-40bc-bb74-0d22162ca135",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "841dc55d-056a-4141-9f6a-c0e5cab36dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94271d2-c3cf-40af-8d48-a0cfc49d8de7",
        "cursor": {
          "ref": "acbb7c91-6024-4d8d-b5eb-038f2f01f440",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "88d4c25f-feb6-4b90-9e8b-f4d4b80b940a"
        },
        "item": {
          "id": "f94271d2-c3cf-40af-8d48-a0cfc49d8de7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4f74e6e6-8549-4efd-9628-e6d242d3884f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1395ccbd-9d30-4388-8ee6-3f2c6d33132f",
        "cursor": {
          "ref": "09707f4d-3af6-47c7-8f50-783b75bc6715",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "570e71de-28f4-4a1f-9d3d-1094a2137bcc"
        },
        "item": {
          "id": "1395ccbd-9d30-4388-8ee6-3f2c6d33132f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e81d193-0c82-434a-b222-ff787741a687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d309c3-fc1f-4301-8388-ebcaa47b6cd2",
        "cursor": {
          "ref": "ba329ee5-11d1-44a8-aac6-c17e954e38b9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5f330748-7bd1-42c6-b239-cc2cd7b03e60"
        },
        "item": {
          "id": "d1d309c3-fc1f-4301-8388-ebcaa47b6cd2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6eb95e16-2c3d-4143-b7d1-9cbc9fd58c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0978ed76-fd6b-4168-811f-69ad94d58e21",
        "cursor": {
          "ref": "83859724-a2da-4276-8326-2c848b86deac",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d2aee9ef-4f24-4e1b-b0eb-de71484c64de"
        },
        "item": {
          "id": "0978ed76-fd6b-4168-811f-69ad94d58e21",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a58da70a-49df-4fef-aa17-72769b2f20ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4feb8cf-f3d3-4351-8038-0912a91cd5c2",
        "cursor": {
          "ref": "df4f62d7-6aac-4d4d-8889-6d3fa49eed06",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "70a88453-7eda-4192-9017-e4abeacaa003"
        },
        "item": {
          "id": "b4feb8cf-f3d3-4351-8038-0912a91cd5c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "836a8c5f-bc35-4b7c-8901-2f598574e8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9c765e-e79b-489a-98ea-c9e857629802",
        "cursor": {
          "ref": "fa42bb2e-cc25-4f8d-8608-a40ac96269bf",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9a84ac04-95a1-4ad9-91e3-2c720bea24eb"
        },
        "item": {
          "id": "da9c765e-e79b-489a-98ea-c9e857629802",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "08402a80-986e-4b0e-b306-02e289f72642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cbb48a-ff47-41d4-8a2f-0ef8cad33c79",
        "cursor": {
          "ref": "95fbb68c-2a04-48a6-8352-5f3eda5dec4f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3976a28e-b29b-4cf0-9303-b0cc8921c16e"
        },
        "item": {
          "id": "c7cbb48a-ff47-41d4-8a2f-0ef8cad33c79",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6d68408e-8511-4768-b005-d86386997cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d81643-b476-4e89-b064-cafd6c5cc7d8",
        "cursor": {
          "ref": "fbca2863-3cea-46fb-ae36-7248451a7fef",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "73432b53-08e2-4e0e-bdf0-43125d0e9eb6"
        },
        "item": {
          "id": "89d81643-b476-4e89-b064-cafd6c5cc7d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0cd0ff89-7fdd-46ba-803c-edb22754180f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bb1ec8-6051-4b9c-8052-352c2b50f3b0",
        "cursor": {
          "ref": "251cfa20-80ec-472e-9fc4-caffa159cb57",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6dc85c2b-cd8f-4cd5-9a29-3ea649e5baee"
        },
        "item": {
          "id": "34bb1ec8-6051-4b9c-8052-352c2b50f3b0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "43acabd5-83ff-4962-9dd3-351adb03e2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741a277-8618-47a3-aa22-9e2d725ecc81",
        "cursor": {
          "ref": "7998d5a3-2d76-486e-b14f-79f36dcc8f10",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "409b1fef-1ead-49a2-853a-b41bdb318d7c"
        },
        "item": {
          "id": "5741a277-8618-47a3-aa22-9e2d725ecc81",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2e550d22-0717-4525-87cc-fbfa2c3cfc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454d3468-dad6-4f82-8134-a7138082e91f",
        "cursor": {
          "ref": "94a59f6e-a1d9-407e-82c9-223f5b91357f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76bd253f-2c17-4a50-9d5c-a576fbd45fa2"
        },
        "item": {
          "id": "454d3468-dad6-4f82-8134-a7138082e91f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd161a25-d44e-420d-bb53-0a8059c21e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d416bf-8293-4b41-99f3-20c0952d297b",
        "cursor": {
          "ref": "820db855-a557-4801-ab65-d9d89c63be0f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4890335d-eef5-421c-bfc3-8834d9725a27"
        },
        "item": {
          "id": "a7d416bf-8293-4b41-99f3-20c0952d297b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5f7693da-5c33-4937-9c81-4cbb5cb9d572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e6c027-e4e8-46b8-9040-a7ee2ac9db96",
        "cursor": {
          "ref": "d615a8cb-b221-40c4-9e9f-4b433470c1cb",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0ca84f79-4855-4bbf-a8b5-21030e190f08"
        },
        "item": {
          "id": "b4e6c027-e4e8-46b8-9040-a7ee2ac9db96",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6aa78a95-7269-4323-b5a8-949f61d3790c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26c977a-d016-4fe1-9738-f9149f2e560f",
        "cursor": {
          "ref": "292ff73d-236a-4689-a03b-968658094245",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6f2d0c8d-0996-4f50-b6ca-8ab6075d7db7"
        },
        "item": {
          "id": "a26c977a-d016-4fe1-9738-f9149f2e560f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7ac055f2-8958-459e-bce5-6d51cc79ec4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5bd83b33-a167-4ea3-8254-8977ceb1dbf2",
        "cursor": {
          "ref": "9d7bc91e-3582-48c8-aae0-f2da64fe8f32",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "db56df53-c162-40ff-988a-8bd48b64cdc9"
        },
        "item": {
          "id": "5bd83b33-a167-4ea3-8254-8977ceb1dbf2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5a92ac5b-d9bf-44ae-babb-1a3251da6a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4190d50b-d5d8-4716-a783-9609070ad3bc",
        "cursor": {
          "ref": "53d4c0e2-b11d-458f-afab-d6b49df71c6e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bda4caa0-06de-4237-9ea1-44d03fbc08cf"
        },
        "item": {
          "id": "4190d50b-d5d8-4716-a783-9609070ad3bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4d1e7855-5456-4347-8238-16c82b1bb06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2957b6de-7e53-4f5d-a1e2-3e7dcbea713e",
        "cursor": {
          "ref": "b60ca537-cf71-4ce8-b13f-1a7eb56d7dfc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4d903923-db1c-4ce0-a078-1a1efe9de6df"
        },
        "item": {
          "id": "2957b6de-7e53-4f5d-a1e2-3e7dcbea713e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7a3337da-20bc-485b-a190-09bbef2ed3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d1d89154-9aef-4e43-a4f4-45f61f629c17",
        "cursor": {
          "ref": "4dd643af-0bcb-4ed1-8808-a4697d35b23f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c8b12d38-66dc-4014-b03c-8684151f710d"
        },
        "item": {
          "id": "d1d89154-9aef-4e43-a4f4-45f61f629c17",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6bfeee8a-002f-4571-ac8c-2e7b5a045c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "328128c9-b07a-42fd-816a-08bb2f504e87",
        "cursor": {
          "ref": "74f1f60f-e056-4803-ac33-c4bafc78f4ca",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d44447f7-8d7f-41e0-a7fa-2500fa2fcaab"
        },
        "item": {
          "id": "328128c9-b07a-42fd-816a-08bb2f504e87",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "60ad3df6-99f1-458c-80b8-95649fd1b4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "47003f13-8b35-49b1-a571-744906caf3ab",
        "cursor": {
          "ref": "18587ecf-2b86-4bbb-b0f4-d0365de4e94e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b6a587d0-ca1b-4fbc-8e88-0fa2a2090baf"
        },
        "item": {
          "id": "47003f13-8b35-49b1-a571-744906caf3ab",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ad980412-7543-42c1-a2ae-7688e94410bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b7497ed5-8b2f-4b14-a8b7-ae2a3e04a3f9",
        "cursor": {
          "ref": "f9e10238-7ed5-4dd6-9fb8-b197b0f21b6b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "11b569f3-1dc4-470d-a806-6b3c9ab76c66"
        },
        "item": {
          "id": "b7497ed5-8b2f-4b14-a8b7-ae2a3e04a3f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "58f9cbb5-5a3e-4872-9c50-e01698964780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d135e0-4991-4c6b-98fe-a864bb9a5781",
        "cursor": {
          "ref": "9f8d4ba7-932b-4099-a0b1-3cc9018805da",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f084251a-5c94-4275-8ea6-e8f42eab3f51"
        },
        "item": {
          "id": "08d135e0-4991-4c6b-98fe-a864bb9a5781",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7bab1a6d-54e1-4a1b-835f-d3dd3e7dde42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e877bb6c-d19e-4f5a-9821-908359cbe268",
        "cursor": {
          "ref": "e8eb4b69-062d-4b87-87cb-137bb47373e8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d27e42b-a1eb-4b29-8ddc-dd0a4b6d96b9"
        },
        "item": {
          "id": "e877bb6c-d19e-4f5a-9821-908359cbe268",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21713908-6b4f-4e68-b078-f4ece1227851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172bdd85-7b02-4891-9026-e89390b1d25f",
        "cursor": {
          "ref": "7bbcf768-4c46-4142-8f36-26d38fc025ff",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "036e11a7-6d8b-42f4-a5fb-ade2cf5a58da"
        },
        "item": {
          "id": "172bdd85-7b02-4891-9026-e89390b1d25f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "98da047e-857e-4bc0-942f-1db065454a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853b480d-6aac-458d-a9eb-2396adf51359",
        "cursor": {
          "ref": "546096fb-f66b-40b0-b44c-640dd8b7b79b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6b6ac04-2c2f-4631-a5b2-8d264d3240a4"
        },
        "item": {
          "id": "853b480d-6aac-458d-a9eb-2396adf51359",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3fd70f56-f248-4c43-8908-ae0de5fbc0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff102f9-544c-4a02-8c9b-8526c65fa320",
        "cursor": {
          "ref": "c3969408-8698-4308-895f-3dcf15cca286",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1dec23ea-a0b8-469c-9847-ec0af253889d"
        },
        "item": {
          "id": "4ff102f9-544c-4a02-8c9b-8526c65fa320",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ff82a3c9-ce73-459f-9b1e-92373941ad17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1245824-a8fb-42d2-956b-0e9533e064f4",
        "cursor": {
          "ref": "20887f3d-cac0-4876-8ffb-d5ec3ec4e158",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "09efccf9-dc23-440f-887f-d60684514ad7"
        },
        "item": {
          "id": "c1245824-a8fb-42d2-956b-0e9533e064f4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1bce6b63-816a-4bba-85c2-2e8fadfff85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514cc164-438b-48f8-b686-a98a4116478a",
        "cursor": {
          "ref": "5f3eeea6-e3b8-4e69-8379-f01135619165",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b3f88a5-71dc-475c-b747-d13838f642ff"
        },
        "item": {
          "id": "514cc164-438b-48f8-b686-a98a4116478a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "411a99d1-dd03-4956-9466-1c33a44e0b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c77ccf-c347-4f17-935b-9295697bc73f",
        "cursor": {
          "ref": "c59de9cd-d88e-45da-919e-044345a6c2c8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8f725cc9-e176-4c3a-a702-0e70c871163c"
        },
        "item": {
          "id": "32c77ccf-c347-4f17-935b-9295697bc73f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "92c4a677-2010-4682-8379-0842fce30869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01feff7-1f07-4fcd-a9b2-3e707b3bc292",
        "cursor": {
          "ref": "b372a33f-890b-475d-9074-24c195d132b1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a4313e29-11d7-4364-a747-724ae6fc4c89"
        },
        "item": {
          "id": "a01feff7-1f07-4fcd-a9b2-3e707b3bc292",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a6f079d3-0f73-48fd-b208-5187f187ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc429243-c123-4a53-99fd-1c19cf6c59aa",
        "cursor": {
          "ref": "55e22e18-0102-424a-ae7f-59a07944f478",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "40ed24d5-4772-4175-a396-e3fdb587b953"
        },
        "item": {
          "id": "fc429243-c123-4a53-99fd-1c19cf6c59aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "856c6ea7-3bbc-43a4-9945-a153635ffb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2ef4a5-05cf-4a35-ae70-23a01c5f960f",
        "cursor": {
          "ref": "1dfdaa3c-f83a-4ee5-bfbd-9e0379b80a56",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2b7dac61-35d0-450f-9b2c-18460577e8be"
        },
        "item": {
          "id": "ae2ef4a5-05cf-4a35-ae70-23a01c5f960f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9cc2e21c-3020-4408-b427-5858c84342d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86866191-c07e-478a-b4b1-00e01cf0d7ed",
        "cursor": {
          "ref": "13191108-2dd9-4a6b-9a1f-2224fcdaba9a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a0074b1a-385f-4555-9471-201cf653f97e"
        },
        "item": {
          "id": "86866191-c07e-478a-b4b1-00e01cf0d7ed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c610eb0c-cd85-491b-a1ef-19ae73e2d787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a43215-31ab-4e23-8c6b-74faf195dba1",
        "cursor": {
          "ref": "8384c337-cc36-4bea-afeb-3e6702ded6f3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a91cbc4e-018b-42b4-85af-2a49195fe383"
        },
        "item": {
          "id": "17a43215-31ab-4e23-8c6b-74faf195dba1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c6f8d1ad-0ecf-4bc1-839f-4525e674c7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6821b25-b271-4b93-897c-6fbc646a58e9",
        "cursor": {
          "ref": "754a899a-e404-4e31-8715-95020acc9580",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0e421175-20b9-4e57-9414-1b9392454514"
        },
        "item": {
          "id": "e6821b25-b271-4b93-897c-6fbc646a58e9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9348c395-0a15-4772-a657-f71031c794b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d3d897-79cc-4d3e-9960-7a2b77b14884",
        "cursor": {
          "ref": "c44de276-0f9b-4607-8808-8aa9cd58a694",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e44d8434-7883-42bb-81b9-5c59b96bddce"
        },
        "item": {
          "id": "16d3d897-79cc-4d3e-9960-7a2b77b14884",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6d0fa08-2435-4834-b543-fa7bbdcb1768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79662b-b7a7-45cf-8685-5a5893d3c799",
        "cursor": {
          "ref": "1d20b575-6465-4836-9eb1-59976caf2336",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4e68f7fe-7a48-416a-af62-c5f82e07fcbd"
        },
        "item": {
          "id": "9c79662b-b7a7-45cf-8685-5a5893d3c799",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81d37965-251e-4d81-af5d-9333004a3206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5801f73b-b617-4ef9-b8e8-73743f373139",
        "cursor": {
          "ref": "13a2f28c-fc44-4109-8c1a-123b3ee1d8b6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d52bd720-e471-4ee8-911e-c3ecf23c26df"
        },
        "item": {
          "id": "5801f73b-b617-4ef9-b8e8-73743f373139",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dccdae5a-5eb8-4007-bc9d-e589ef88246c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50118e9d-1193-44f0-a447-e3d7c79b9768",
        "cursor": {
          "ref": "4031072d-cd8e-4ae1-8143-a98d7d9bfaa5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0e113600-9c3f-4055-aaf8-d1aa0a1a83fd"
        },
        "item": {
          "id": "50118e9d-1193-44f0-a447-e3d7c79b9768",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4a5f3f14-b617-4db3-aacb-56c12b66e6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fe4051-f885-4909-8c29-8c1fe768595e",
        "cursor": {
          "ref": "bd303612-61a5-404a-831c-832aad1af206",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fcc4088a-dc5c-477d-ae48-4b00ad7d75f7"
        },
        "item": {
          "id": "c5fe4051-f885-4909-8c29-8c1fe768595e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5cc3501b-54a4-42cb-b860-502b7c0bbbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163a873b-c843-4279-a581-27d869478b95",
        "cursor": {
          "ref": "40253048-a289-47b1-89bf-672833a8063c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93035027-a162-47d3-a5ba-4735cea84dfb"
        },
        "item": {
          "id": "163a873b-c843-4279-a581-27d869478b95",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e15871ba-b15e-4462-a309-03d87930b0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf52959-731e-4f3d-8a09-65cd5d038e96",
        "cursor": {
          "ref": "68a3a812-c1ed-4ea5-aa13-0f1b34053805",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a179c93f-830c-454f-bed1-88c17fb4dcf0"
        },
        "item": {
          "id": "dbf52959-731e-4f3d-8a09-65cd5d038e96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2835a797-d273-4dad-a9e2-7d494bd18194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5458737-ef96-4bbb-ba74-4a2723e7678e",
        "cursor": {
          "ref": "eb4a0748-49de-487b-9685-9707add656d3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3c31649c-4582-4e84-bea0-245b5f1afb14"
        },
        "item": {
          "id": "a5458737-ef96-4bbb-ba74-4a2723e7678e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9ea874c0-be25-439d-8c3e-313a9d430843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ef2b3-67be-47da-bf77-5fd4e4e1a342",
        "cursor": {
          "ref": "cb780353-a30d-4a6e-acb6-30a8e9edee25",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8819e733-0a64-4c57-b98b-1a11eaed7b31"
        },
        "item": {
          "id": "705ef2b3-67be-47da-bf77-5fd4e4e1a342",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b0640a50-f868-4031-89b1-fc48c5a18cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae252e-b494-4cbf-9567-f7a0f40d99b6",
        "cursor": {
          "ref": "596346d5-4a31-463d-aa0f-1133d1167bbe",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7ebc79f-3a80-46e7-b046-63862ec4f714"
        },
        "item": {
          "id": "20ae252e-b494-4cbf-9567-f7a0f40d99b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7bb80fb8-79d3-428d-82b8-4a146f77da4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3045fa0a-924f-4574-b6d5-0e7f6a60e80d",
        "cursor": {
          "ref": "6606d1ce-e8af-4dde-b6af-fb30dbbd18b9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dd9950e9-e3b2-4b41-92c2-8d59caf15de8"
        },
        "item": {
          "id": "3045fa0a-924f-4574-b6d5-0e7f6a60e80d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "08191943-04da-4691-9f8a-039ba3cbb85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a74a37-f885-4d7d-8559-08269615f61f",
        "cursor": {
          "ref": "d91bd6e2-e569-4468-b543-df0b034d53c4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b894dd91-2ab6-4ea2-9b29-48f332dd3d1b"
        },
        "item": {
          "id": "19a74a37-f885-4d7d-8559-08269615f61f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "17ac24ac-b09d-4ca2-9db1-50388398ea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9792431c-ad1d-4d72-9f33-1b3315bb045b",
        "cursor": {
          "ref": "8d6243fc-bc53-44f2-afcd-3e3c004de81a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b0073e6-3bcd-46df-b4a3-70e4370f775a"
        },
        "item": {
          "id": "9792431c-ad1d-4d72-9f33-1b3315bb045b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dacb86d8-0fbb-4544-a052-5b7ee04fc01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa80cd00-ce89-412a-b8d0-67e3803f8156",
        "cursor": {
          "ref": "a619c411-c060-4501-88c9-5fb9a16dfbd8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5c774132-9d70-4234-932c-ac45c26faa26"
        },
        "item": {
          "id": "fa80cd00-ce89-412a-b8d0-67e3803f8156",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b5ec5f9-df3b-49a1-8558-9e9156cb6b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea442a6a-ade6-4148-a48b-ae6bc4b59c5c",
        "cursor": {
          "ref": "75cacbbe-1ce4-4d69-88b6-eee3bb7a6754",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "972561cf-3c60-49a3-808f-81a117c04483"
        },
        "item": {
          "id": "ea442a6a-ade6-4148-a48b-ae6bc4b59c5c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a35387f4-703c-4283-9c2e-50c436bdb820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9791e46-0302-4b1f-8845-a8baa303a9e0",
        "cursor": {
          "ref": "25b3fcd4-b735-41d2-a08d-fba3eb6558dd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "95e4cf7d-e4d9-4850-858b-ae0b39d66b9d"
        },
        "item": {
          "id": "a9791e46-0302-4b1f-8845-a8baa303a9e0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ec489ef5-4cea-4c3c-b5fc-0f0eaf534cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2999e322-71c1-46ea-85fb-4dfb26e4d141",
        "cursor": {
          "ref": "a4b5bf97-ca88-41d6-82fb-632dbd433652",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9fa446f4-4768-420c-a52e-0ea1b7682f6d"
        },
        "item": {
          "id": "2999e322-71c1-46ea-85fb-4dfb26e4d141",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e530fe18-af7c-4975-9186-f74eecdbc0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9360a6-0956-4273-958d-155fb5722f96",
        "cursor": {
          "ref": "956105e7-b7bc-4221-b8b2-ee32430a3199",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f9330cd-d5c5-4367-9ebf-c8ca307d2a3b"
        },
        "item": {
          "id": "1b9360a6-0956-4273-958d-155fb5722f96",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9df30ded-4ade-44fe-9530-76ee540aa142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d0df13-27b5-44e2-8f38-275dca1c27a6",
        "cursor": {
          "ref": "71990fdf-6ccc-45af-addd-351f43e9c9c6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "521e2f42-a9bb-443f-ac60-9a40a00b71fb"
        },
        "item": {
          "id": "38d0df13-27b5-44e2-8f38-275dca1c27a6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "66902a77-dab3-457d-bec4-7883f5f2ee9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a01e57-1afd-419f-9019-854a5c5b096a",
        "cursor": {
          "ref": "3a93d4f2-72ed-4a91-abfc-e6dab52a82bd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7a3434d6-1b10-458b-8d85-22f7a9eab85c"
        },
        "item": {
          "id": "98a01e57-1afd-419f-9019-854a5c5b096a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4c8e2d81-f883-4d3c-8a9c-c03edf051abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46bc9e4-f3f5-479c-9307-df253ac66867",
        "cursor": {
          "ref": "0b7bed6f-7d8e-4fda-ba50-5dd4b877633e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "91edde81-0555-4a9a-a22c-bf705a73328e"
        },
        "item": {
          "id": "d46bc9e4-f3f5-479c-9307-df253ac66867",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad0f4873-8e74-4de6-aa65-e1d5181d7176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdc83dc-1977-4de5-a143-439a1de191e6",
        "cursor": {
          "ref": "4a46d51b-a06f-4644-a817-ab5a51a7f7cd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f69555ce-e423-4c69-aafb-4edcaa4437f0"
        },
        "item": {
          "id": "bcdc83dc-1977-4de5-a143-439a1de191e6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b97a5a52-a301-49af-a5da-e1dc0d352f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6512761c-c0f0-445a-8975-6ea745e5baf5",
        "cursor": {
          "ref": "1186bb23-90a3-4c9b-be63-9dc4a6606209",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "df8194f8-3222-4468-bc0c-414749ed0d24"
        },
        "item": {
          "id": "6512761c-c0f0-445a-8975-6ea745e5baf5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "65df47df-6c95-4b05-bc1f-302d198f8be7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d4e2bd-5048-4598-a47b-b2ade32814d4",
        "cursor": {
          "ref": "8e65434a-fca7-4fde-b2d6-1eaf18274250",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b1c1b1aa-b0ff-434b-a6f8-00787e5f88ad"
        },
        "item": {
          "id": "18d4e2bd-5048-4598-a47b-b2ade32814d4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb470224-2ebe-4692-8239-280f8044d194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ba1227-79b3-426e-a4c0-05964aa86458",
        "cursor": {
          "ref": "f3ffee11-ed09-4e34-9268-2e8ca8decfca",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4871958a-d446-484f-b071-65a993825708"
        },
        "item": {
          "id": "64ba1227-79b3-426e-a4c0-05964aa86458",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99a2f2f0-3b4a-49af-b991-55cb590782f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d15d6e-23dc-4fae-b50e-196124c6534e",
        "cursor": {
          "ref": "c4b7561c-7c76-4f39-9162-54dd9a74dd77",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "113fde12-faac-42ca-9d26-7edccc853634"
        },
        "item": {
          "id": "c4d15d6e-23dc-4fae-b50e-196124c6534e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2bbe874a-dda8-4b7e-a792-d2dce8fe1363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24044b6-7d58-430e-8199-1b04c24b6d9d",
        "cursor": {
          "ref": "45943fbc-f548-4428-b985-b0a0877b2ed1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff6b1751-eadd-4d5a-adf5-f79ccf922e9f"
        },
        "item": {
          "id": "d24044b6-7d58-430e-8199-1b04c24b6d9d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8af597fb-c5ab-425c-8559-8eae7e36836f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8676f0-753d-4d62-8871-c6f895911124",
        "cursor": {
          "ref": "84d7363d-e13e-48e0-862f-1117010f24f3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b43cd11d-90d2-447c-9afc-188163af6636"
        },
        "item": {
          "id": "bb8676f0-753d-4d62-8871-c6f895911124",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f323143b-9815-4ea2-a90a-6ccb0ecfedce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe8f307-8ab9-4147-b41f-eef73148c651",
        "cursor": {
          "ref": "47d1910e-edb5-4d35-af9f-4d6eac9a06ed",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b697fd0d-f7c4-4aec-9e6c-52ab2d820702"
        },
        "item": {
          "id": "dbe8f307-8ab9-4147-b41f-eef73148c651",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1564755e-a736-4939-a6e3-dc79b978c3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4488a9e3-3215-4e49-8cb7-69835359dd78",
        "cursor": {
          "ref": "1abda8ee-fb65-4444-9d1f-38c2e545a882",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "47ab04ce-9ccd-4ed9-ab48-dc76e48700cd"
        },
        "item": {
          "id": "4488a9e3-3215-4e49-8cb7-69835359dd78",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "828691ed-00b4-477f-8154-9f20e07b623c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0413e34a-64ff-426e-911c-cf7d5897848a",
        "cursor": {
          "ref": "26385c20-7d9f-4a21-81e3-5f87e7ac1ff4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "90cf090e-2992-4f31-b66f-830f36530976"
        },
        "item": {
          "id": "0413e34a-64ff-426e-911c-cf7d5897848a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d1f9f10a-9001-469a-a719-6962f3dbeb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40c1bad-5b0b-4774-ab45-eebed6e5757d",
        "cursor": {
          "ref": "74791fa5-63d3-4be2-9c8a-cfdbbbf7b4e3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "101e99b8-fd98-4864-ace3-1e46ea6b75e1"
        },
        "item": {
          "id": "f40c1bad-5b0b-4774-ab45-eebed6e5757d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "118b1e1b-2ecd-4035-9966-898b79e57413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38f322d-904a-436d-810d-f9432cf1a198",
        "cursor": {
          "ref": "8e8b1d3a-7f25-4712-9c48-5e3e7f168296",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "00e29ef3-0236-4b92-8f81-325ca9a71ed2"
        },
        "item": {
          "id": "d38f322d-904a-436d-810d-f9432cf1a198",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1a531722-db1b-472b-b86b-660ab8c19596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf0ded-bbe3-47ad-a88c-6565ad946c38",
        "cursor": {
          "ref": "bd4dd06a-909f-4a56-b434-844ba1252e5a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "18d36031-8bcd-4260-9608-11f52cbfd5d5"
        },
        "item": {
          "id": "69cf0ded-bbe3-47ad-a88c-6565ad946c38",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d6e134ef-ab30-4c78-bd5d-e81f32c62983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d246ed-d888-46cc-8ee8-f780aaa85e66",
        "cursor": {
          "ref": "aeecbf1e-1bea-4549-92b9-9e7ad7d3aba5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "133629d2-4198-4f6d-8aea-0c2e6fd4312a"
        },
        "item": {
          "id": "d5d246ed-d888-46cc-8ee8-f780aaa85e66",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "de975cb2-a5a9-4b34-ae8b-75d3d7993f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f179dda4-4949-46ed-a436-b52b08753813",
        "cursor": {
          "ref": "2b31bf5e-785c-4ab9-9d02-29a2f463d850",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6426b8c5-880f-4137-bfed-045cb6eb9c55"
        },
        "item": {
          "id": "f179dda4-4949-46ed-a436-b52b08753813",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b1c116f4-738b-44ce-9060-9e5cf3f8e4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91669cfb-ce10-47ad-a269-7a3955dd5da9",
        "cursor": {
          "ref": "9b7cc0be-95f2-4066-b23c-a344e66eefed",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "01047354-93e5-449d-996a-a114576a2557"
        },
        "item": {
          "id": "91669cfb-ce10-47ad-a269-7a3955dd5da9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf92580f-bfb2-4b12-85b0-76850c23484b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc201f-c2ee-4528-8930-f25f04a2fa80",
        "cursor": {
          "ref": "d2d8a62f-a7e9-4b74-84b0-9dddab5d3c46",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "92d42e48-0080-4b5a-973f-9fcac1d098a8"
        },
        "item": {
          "id": "42cc201f-c2ee-4528-8930-f25f04a2fa80",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1d026589-406d-4202-97a7-633ef4759a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28e7321-cd6c-4bca-9ea4-ba7e9d4cf0d8",
        "cursor": {
          "ref": "aa575a0f-60dc-4e65-ab01-192b898158a4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "69b0206e-6600-4bad-9b8c-04ca0f52eaca"
        },
        "item": {
          "id": "b28e7321-cd6c-4bca-9ea4-ba7e9d4cf0d8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e7b36149-ae02-4cbd-94ad-dc6bc0d19716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705d3ba6-20c2-4f37-bcca-00e63b427d81",
        "cursor": {
          "ref": "b5944656-2ae5-4bfc-a9f9-8c2bae7d0ceb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2476cab7-43f8-4324-9fe5-ac7d4682aab9"
        },
        "item": {
          "id": "705d3ba6-20c2-4f37-bcca-00e63b427d81",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2d5e8df6-47d8-42c1-b382-230adefd61e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e701e9b3-e6dc-4bdb-9251-1c3cd8a76d91",
        "cursor": {
          "ref": "87b6c721-e29d-490e-909f-f64922a264d5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "375596cd-e28d-491d-b5a0-bc08dd292b9e"
        },
        "item": {
          "id": "e701e9b3-e6dc-4bdb-9251-1c3cd8a76d91",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "27cbb245-bb69-46ea-8f46-ade63c855e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219588b8-e8ed-482f-9ffa-a4827807e096",
        "cursor": {
          "ref": "e967dad6-3f2e-4fac-9332-1a1cea56299a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cd42682e-ca3e-4e07-b3cb-e5d82784ce55"
        },
        "item": {
          "id": "219588b8-e8ed-482f-9ffa-a4827807e096",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3a90e14b-2658-4b02-8742-077d0907bf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed33e54-5460-4103-8cba-2d19275ec355",
        "cursor": {
          "ref": "2d22faaa-0fcb-4885-8345-3bdc94fd8b63",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7062fffd-1b44-4962-90d2-3461a7876686"
        },
        "item": {
          "id": "8ed33e54-5460-4103-8cba-2d19275ec355",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "208ee3ec-a0c2-49f8-b9da-20c9dab5546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90764c34-a6ca-4fb5-8bcc-9da2603e119c",
        "cursor": {
          "ref": "8d3ecc25-f497-4de5-bca8-21473f603042",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bc3e2129-b899-4cab-87a1-46338b8f033f"
        },
        "item": {
          "id": "90764c34-a6ca-4fb5-8bcc-9da2603e119c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "de82cd1a-5319-48a2-9cbb-a845a7029288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d375c3-8d9b-4f7d-baee-c2776c5d3796",
        "cursor": {
          "ref": "379a52b5-c5fe-4b92-ba66-4b6cd9582ab0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "abe746dd-2c2b-4b10-b7e3-291333486862"
        },
        "item": {
          "id": "d1d375c3-8d9b-4f7d-baee-c2776c5d3796",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6ba206a5-53d4-4df9-957f-8f38c1238558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0746dcf9-d347-4d67-9c20-302aa1bdd26b",
        "cursor": {
          "ref": "cec36c2b-ff1d-485d-aad5-f22c00119fbf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7428f4ed-ec1d-4f41-a166-61ecee3dcda0"
        },
        "item": {
          "id": "0746dcf9-d347-4d67-9c20-302aa1bdd26b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a799728-8cf2-4a70-a866-ad1f1cc985f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4139c08f-6763-4bdb-a823-ceef5ea331cf",
        "cursor": {
          "ref": "ed6483fa-ca83-4dba-8b0b-f2b34979a422",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "65ddfd4b-7c09-46f3-a319-73ea5a3e7a7d"
        },
        "item": {
          "id": "4139c08f-6763-4bdb-a823-ceef5ea331cf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0e5c56fe-a5a1-402f-983b-da2404bac100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712564b2-5cca-4b73-83d1-38a676db802b",
        "cursor": {
          "ref": "027d91ad-a49f-48d3-b9df-67789ab36ee1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d95409ac-2bad-4db1-8639-2936ac0255c2"
        },
        "item": {
          "id": "712564b2-5cca-4b73-83d1-38a676db802b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ced53ba0-88fb-4f2b-92d4-9bdb1c124fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970b9e5f-5352-4204-89cd-25a652c9e9c3",
        "cursor": {
          "ref": "8975551d-1485-4ac8-ba48-95b138505e91",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3226ac3f-67a6-4260-bc44-454a16946a0a"
        },
        "item": {
          "id": "970b9e5f-5352-4204-89cd-25a652c9e9c3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3dd17550-5276-4e25-b471-86b83e1b9914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68f1402-ffaf-4e73-81e4-7438ec29e3d0",
        "cursor": {
          "ref": "c5c87b1b-bdbd-4fb7-a2f0-60c5a691a271",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7e616971-84a2-49f9-9a5e-ee13fbd0fe26"
        },
        "item": {
          "id": "f68f1402-ffaf-4e73-81e4-7438ec29e3d0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "54ac6e4c-5c0a-41ba-9242-80c55d4c112e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1be138-b8e7-4738-8fa3-078d2e9222c5",
        "cursor": {
          "ref": "accaa1bc-1386-4b5c-8dfa-82987724953a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fa042684-bb7d-45dd-8a27-27578e565b95"
        },
        "item": {
          "id": "3b1be138-b8e7-4738-8fa3-078d2e9222c5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35bc3e1d-8fcb-495e-b0ac-d4dd59e854fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d2d9ab-c841-4c21-8057-3cc49afa2f31",
        "cursor": {
          "ref": "dbf4caa9-dd19-4609-b59d-a4640319fc6f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f708dee0-6cde-41ca-8977-a3ee7bd3b0ec"
        },
        "item": {
          "id": "68d2d9ab-c841-4c21-8057-3cc49afa2f31",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0c5b07c4-09b8-4022-911d-42a431ea4ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e6101d-5a86-4323-89c0-596ec0b5a113",
        "cursor": {
          "ref": "9a054841-c4fa-402b-9ac2-74bee9cc6e56",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2ee5ea45-f6ff-4c3e-94ca-9915264c1733"
        },
        "item": {
          "id": "d2e6101d-5a86-4323-89c0-596ec0b5a113",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c82413f5-26fc-495f-9faa-1be8586f3d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61b440b-12e0-45cf-bbf6-445913ae3253",
        "cursor": {
          "ref": "efa45250-811e-4287-9744-3217c9352d04",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e242cb50-0547-4927-ab7d-76d7d1264000"
        },
        "item": {
          "id": "e61b440b-12e0-45cf-bbf6-445913ae3253",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "95a94ef5-c10c-4a5f-8914-001abdb0ba31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687ee56f-c2e6-4ebc-a5bd-725d823db651",
        "cursor": {
          "ref": "9d211a99-fd43-44a2-8eb9-2abe0d023f87",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "66a2511c-a827-4e07-9a1f-36f85c30296a"
        },
        "item": {
          "id": "687ee56f-c2e6-4ebc-a5bd-725d823db651",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "67dd7ec2-d350-4b5a-88f8-8bdd9087edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1f97a0-5da2-42c6-b4c2-18a7688bff1e",
        "cursor": {
          "ref": "fc9cbf49-f771-4740-9d9a-ae8f68e7bb6f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a536ed99-a9a5-474e-9f80-91579e67ea04"
        },
        "item": {
          "id": "9e1f97a0-5da2-42c6-b4c2-18a7688bff1e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b94cbb52-8940-4d4a-8583-57faaff50d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae84cc31-538c-450f-a756-07234a2ae588",
        "cursor": {
          "ref": "d857260d-40fd-440b-b60b-adff1fee4fdd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c267cf6-d009-4ee6-8730-e860a9f7cda6"
        },
        "item": {
          "id": "ae84cc31-538c-450f-a756-07234a2ae588",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d6341bec-7aef-447e-967a-47ae0f957678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ae761-d4c8-446c-9847-bb592772fcfd",
        "cursor": {
          "ref": "a5003d0d-1b23-48cf-a31e-708184cf6c7e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f8aef75-262f-4cd2-822b-f84948caf967"
        },
        "item": {
          "id": "531ae761-d4c8-446c-9847-bb592772fcfd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "584fe895-db1e-4eba-8fb8-f8011de581e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf0c4ca-1f9f-43c1-9e92-82dcfd01206a",
        "cursor": {
          "ref": "acb69233-3234-4b65-8199-c36070005b4f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c8509f2a-06b2-4ddd-a882-a3dc72a2cc1b"
        },
        "item": {
          "id": "0cf0c4ca-1f9f-43c1-9e92-82dcfd01206a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e8750e11-a3e5-425a-9977-aeaa2313a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace4d41b-e718-45d7-b2ad-ab7204189409",
        "cursor": {
          "ref": "7f37a60c-c6ce-4dd8-86b7-1852174223a9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "06eb1eda-a6c0-458f-883f-f806fb61a795"
        },
        "item": {
          "id": "ace4d41b-e718-45d7-b2ad-ab7204189409",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7b11fd7b-a59b-45ab-b04c-d7a35c4cfc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180570e5-a461-44bd-9235-249b72dcf2bb",
        "cursor": {
          "ref": "d22b32a3-e1d0-4105-aff6-cbb6a8bd51f8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "938fd1ff-0705-43fc-ba05-2e63c4d235de"
        },
        "item": {
          "id": "180570e5-a461-44bd-9235-249b72dcf2bb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24a4498d-10fd-43d0-baf1-83bbaab63e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597cbe62-bd4e-4274-a9fc-9202137074c8",
        "cursor": {
          "ref": "dc2804e2-c928-4f35-b6e3-9a3853bb756a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fabb916f-9c70-4a5f-a1aa-abad45c77950"
        },
        "item": {
          "id": "597cbe62-bd4e-4274-a9fc-9202137074c8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "dd402b40-26e5-4afa-9093-e88bb89a529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79230865-b00e-49c5-a977-423e11a280ab",
        "cursor": {
          "ref": "baa88c5d-a8b2-40cd-b6a4-2020a2619357",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8e47a726-1ec8-4d0f-ac5a-bb4db240f8f0"
        },
        "item": {
          "id": "79230865-b00e-49c5-a977-423e11a280ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d9359f40-aa87-45aa-aa48-22485e817b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35784572-00fe-454a-9c4c-a73ecbb131cf",
        "cursor": {
          "ref": "64da29e9-fd7b-4493-a681-d7c67665852f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e39be3b2-7b66-41b1-9502-108cc527e3a2"
        },
        "item": {
          "id": "35784572-00fe-454a-9c4c-a73ecbb131cf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "296fe5c9-5e1b-4674-bbec-f8b7ee375770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac56fb00-c0df-4154-a1a2-b4706cceb5b1",
        "cursor": {
          "ref": "d8aa6189-fde7-4c84-af01-f542a06cf7be",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f79b78a0-91e9-49e9-9ead-2f8c802b4d95"
        },
        "item": {
          "id": "ac56fb00-c0df-4154-a1a2-b4706cceb5b1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "41f5dacf-4a8f-4fe0-a895-f052c10daef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb60725b-4b79-4c09-91d7-b6d31abec5ce",
        "cursor": {
          "ref": "0138503a-9501-4003-9a71-b19066151623",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "07fc2bb3-231c-4ede-a332-51b140942388"
        },
        "item": {
          "id": "fb60725b-4b79-4c09-91d7-b6d31abec5ce",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5549cf6d-2742-4e57-9267-0c809738f46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1645c8b5-4ff9-4e76-a4c1-a95e3e7b09c6",
        "cursor": {
          "ref": "9d318278-3905-4172-ab6e-96b9bed45400",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "847fab3c-9b52-4a9c-ac6c-5286d78396cd"
        },
        "item": {
          "id": "1645c8b5-4ff9-4e76-a4c1-a95e3e7b09c6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4432bc7c-6470-48f8-a7f4-5bf3ef818bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e01e288-0811-4e13-8455-c02ef989cc6a",
        "cursor": {
          "ref": "4dea7665-7d17-46df-bf99-2843ebbe5452",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1a6686b4-7a1e-497d-ba22-d8a0849f3f98"
        },
        "item": {
          "id": "7e01e288-0811-4e13-8455-c02ef989cc6a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "988ba351-6f29-4a78-af42-412c9d218d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2734cb-3f0d-46a6-bcc4-9d689355c682",
        "cursor": {
          "ref": "3160ed58-7f89-41fb-8eec-0f94a89d63b8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0fc92f67-0ac8-4497-97eb-6f913d954ebb"
        },
        "item": {
          "id": "8d2734cb-3f0d-46a6-bcc4-9d689355c682",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b84fe677-18ff-48d1-bb8f-0e694503039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e6350-0862-474a-be62-27c3f7a9f5dc",
        "cursor": {
          "ref": "56bfcf86-fb6b-48a0-b755-2b56c8222800",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1452b31a-576d-4f81-92dd-5cc3cac10584"
        },
        "item": {
          "id": "2f4e6350-0862-474a-be62-27c3f7a9f5dc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4dd33e0e-4656-4aef-a1ef-6ab50c9da511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff43f8d-1e53-4708-9e28-c19ec5167393",
        "cursor": {
          "ref": "fcf3ab45-d74e-42b4-a5cc-d9f42b528876",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1ae360e4-ad93-4acb-9e61-c6ccd8b7526b"
        },
        "item": {
          "id": "aff43f8d-1e53-4708-9e28-c19ec5167393",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "473317c2-6986-40ac-b1a7-6ed32a0c1239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b630f400-df4c-4a44-a2a6-e9bf66ccc523",
        "cursor": {
          "ref": "ac57df79-0f89-41f7-857f-baa1cf461b88",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3dc0f9b0-2877-4272-b6c3-838a457b92ab"
        },
        "item": {
          "id": "b630f400-df4c-4a44-a2a6-e9bf66ccc523",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "557c1202-951b-4ada-a0c4-7346ddd5fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0ca17-a328-4918-b286-3928d931ce1c",
        "cursor": {
          "ref": "24ea02ac-3835-42a1-92da-164ef76caf78",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "184fce88-5ac6-40af-971a-e54c69fb178b"
        },
        "item": {
          "id": "d2a0ca17-a328-4918-b286-3928d931ce1c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "269dd649-6b56-41dc-a098-23658a36b96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b80a5b-ee9c-471f-9685-ab7afea31913",
        "cursor": {
          "ref": "8f20d803-8446-4ad9-981d-f28fda0dde90",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c50cf73a-4087-4667-ae93-4d0e285ec811"
        },
        "item": {
          "id": "60b80a5b-ee9c-471f-9685-ab7afea31913",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6f759e10-0f66-4e82-ab50-9cc51e88232e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b9a6c-eaad-4828-8a94-5cc03600fecb",
        "cursor": {
          "ref": "8e4bec66-54f4-41d0-a4e6-7a03d91497b0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cf6dbeae-d101-41d3-8319-9e3689fd982f"
        },
        "item": {
          "id": "2c8b9a6c-eaad-4828-8a94-5cc03600fecb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "238589ca-05a6-44e7-a804-1cbfbfb53b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46920ecc-d1e8-4429-b79d-0747b63ad10e",
        "cursor": {
          "ref": "db90b733-b7b0-4d9a-aa57-e9d8db986972",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "01a707db-f03e-460a-b925-42d71862f6bd"
        },
        "item": {
          "id": "46920ecc-d1e8-4429-b79d-0747b63ad10e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "38d3ec0e-7344-44b4-902b-96373a2654ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf8c58c-3482-4d77-b93e-e51618f9335c",
        "cursor": {
          "ref": "600a7228-142e-4d36-92d1-74f2b0754d76",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9cf0ef3c-a5ea-4bab-9151-9d890c3ed94c"
        },
        "item": {
          "id": "eaf8c58c-3482-4d77-b93e-e51618f9335c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8b0a8c26-0e25-4ff1-9fec-015cfe90ae24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16a731e-c1d8-463a-a46d-2b45ac3f0aab",
        "cursor": {
          "ref": "b095a4bc-3897-42a6-800e-a50d6321d2c5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f8c5882a-2200-4c21-87e0-bd16f03aca48"
        },
        "item": {
          "id": "d16a731e-c1d8-463a-a46d-2b45ac3f0aab",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7287f937-8be1-421e-a135-706b8539ffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c523453a-bd1c-4003-adef-5d9b79840e4b",
        "cursor": {
          "ref": "00d1726a-a655-4446-bd40-4489a984c924",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39f9dc3c-2b15-427a-bc0b-92e6bd66abc8"
        },
        "item": {
          "id": "c523453a-bd1c-4003-adef-5d9b79840e4b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c8043e37-98ce-45ac-a23e-40cc297a4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e349f69c-339e-4b62-9aaa-6eeb4ebfe683",
        "cursor": {
          "ref": "4bdaa344-c037-4a8d-8b3b-65f257b2e789",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1074c4b-66d1-43f8-9fd0-5ebc55a77268"
        },
        "item": {
          "id": "e349f69c-339e-4b62-9aaa-6eeb4ebfe683",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ca58608a-dbf5-44ef-8f89-878cd6a35775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cdbea1-81e9-48d1-a551-9da9229b3ca8",
        "cursor": {
          "ref": "578f4bf2-0735-4833-a387-27f7750a95ae",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01cc64d6-38c6-47aa-b8e7-ce61abba5bc5"
        },
        "item": {
          "id": "66cdbea1-81e9-48d1-a551-9da9229b3ca8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f6f735a0-d69e-4b26-bc9c-20749753df35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d75626c-3338-4a35-a925-17db52e35cc4",
        "cursor": {
          "ref": "48903222-bcdd-4176-927c-9cd069b65714",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a59a0dbf-944a-4857-8741-b65810c92e0b"
        },
        "item": {
          "id": "4d75626c-3338-4a35-a925-17db52e35cc4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "facdfa70-022b-42f4-8f3d-5e6636177b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0c3cb8-933b-4e3c-aafd-600cde80b14a",
        "cursor": {
          "ref": "4073c943-2fb0-4b42-ae8b-65a991cd6b5a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2c6f9ab0-e4b4-49f7-bb75-de39b368c728"
        },
        "item": {
          "id": "ea0c3cb8-933b-4e3c-aafd-600cde80b14a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1a5e872e-7355-4c8c-b13b-5126226121b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e351503b-99dc-478b-bb36-531f203bee1b",
        "cursor": {
          "ref": "1c331526-93a5-45c0-b8c8-d72d96055420",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3ac6940f-a31e-48f4-8fe6-699388720799"
        },
        "item": {
          "id": "e351503b-99dc-478b-bb36-531f203bee1b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5cd1f0c7-ed41-43de-9c17-2846df596674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c23df93-56ba-4f66-a247-ecd7f54dfaa7",
        "cursor": {
          "ref": "e3a2af6e-a665-4c1e-8399-62050345a60d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2081db43-114a-4ec3-b34d-fdaa92a7dc9b"
        },
        "item": {
          "id": "1c23df93-56ba-4f66-a247-ecd7f54dfaa7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9d4ab4e3-8d78-4130-b6cd-0500abe6753a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8bdf0f-52ed-4e37-b42e-587d043c7229",
        "cursor": {
          "ref": "d1b5567e-0336-4a0b-bf36-36f623c12941",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "97df1382-e1be-497c-97c5-c96eaacd34cd"
        },
        "item": {
          "id": "2e8bdf0f-52ed-4e37-b42e-587d043c7229",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "647c5eb2-f3ed-4405-bcaa-5a3cc528c4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232e6fd0-54ba-4785-99a1-5ef090302ef6",
        "cursor": {
          "ref": "92f05153-0114-4227-83ba-842b7689bd2e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9f98cde8-2e4e-46b2-a914-a424b43a787a"
        },
        "item": {
          "id": "232e6fd0-54ba-4785-99a1-5ef090302ef6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1fe794c1-2ccb-4d9b-ad59-c4d90d5edfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186da065-20d7-47f0-a082-8f42f8693714",
        "cursor": {
          "ref": "4ab0e6e4-196a-45b1-ad2e-8b62a4698654",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f46085eb-d3b7-45d0-bbac-de104f8cbc17"
        },
        "item": {
          "id": "186da065-20d7-47f0-a082-8f42f8693714",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ef93eb57-4469-4e74-9ef2-25a6aa94d269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cf12a5-c198-447d-be22-7ab4017e2372",
        "cursor": {
          "ref": "3bf17f4a-92ec-4949-a437-7b42f0edccc4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b5dc13fb-9d9d-4d25-a3fd-b3be1de38013"
        },
        "item": {
          "id": "99cf12a5-c198-447d-be22-7ab4017e2372",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a2a9652f-ae1d-4543-bc8f-ed12316d8239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633e574f-f6fa-41ea-804e-91849ed5c87c",
        "cursor": {
          "ref": "7f27cc39-dff9-47df-8678-3f6201ac8830",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd1bfc61-c743-4d78-8595-03c48b663bdb"
        },
        "item": {
          "id": "633e574f-f6fa-41ea-804e-91849ed5c87c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ed868d3b-62eb-42ed-9b9a-1927fcb544a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fda1b87-a031-48d1-9c99-823fc6443577",
        "cursor": {
          "ref": "9540a3a7-5a0e-4794-b254-9ca93669c271",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc834e00-89fc-4dda-b0d6-d7b16333f6cc"
        },
        "item": {
          "id": "2fda1b87-a031-48d1-9c99-823fc6443577",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6632a9aa-648f-4b7a-ac30-f71a4137d647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16571835-aaa4-43e0-bb4e-b5a1fa94d72e",
        "cursor": {
          "ref": "ba8f6355-0900-4b35-b8c8-19a4215490a0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ae1e4a93-3bbf-43f4-9094-4e7006516885"
        },
        "item": {
          "id": "16571835-aaa4-43e0-bb4e-b5a1fa94d72e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "64d7d885-0058-4f32-b4d4-2661ba93d567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d574c79-df37-407a-9fa3-e062b63d22e5",
        "cursor": {
          "ref": "093fb97b-f6cf-4981-a76f-a68dee47e0fb",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "117d3d92-3093-43b3-984e-885ac4dfc743"
        },
        "item": {
          "id": "0d574c79-df37-407a-9fa3-e062b63d22e5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "94279200-9e20-42fa-847f-394b85cbf77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65553037-3f52-44e8-8dd3-7533d9d52bdf",
        "cursor": {
          "ref": "c76cce1b-6c91-424c-8209-ac52b5de4b3d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cc697bfa-47c9-4323-b3c5-1087818ce452"
        },
        "item": {
          "id": "65553037-3f52-44e8-8dd3-7533d9d52bdf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "30651c25-ef5e-4a24-8296-44934f2bc843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac38ad73-63d0-42d1-8e94-6b812a3d52e4",
        "cursor": {
          "ref": "64868940-1fe9-4503-854d-b09d6f97a779",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "343530ec-4714-487c-bef9-a7dd352b1b60"
        },
        "item": {
          "id": "ac38ad73-63d0-42d1-8e94-6b812a3d52e4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "51b5f178-2e81-4ce4-b96c-f9908763ae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d42846-9d0b-4a02-abf4-7fa74aea2f57",
        "cursor": {
          "ref": "3d75e284-a41d-4661-8cd3-c588f22e5a1f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "68cad6b2-0fa3-4123-8d96-97a057bda53a"
        },
        "item": {
          "id": "23d42846-9d0b-4a02-abf4-7fa74aea2f57",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "68254190-aa47-4c7d-8bac-e6fd28efccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b484a7c2-568f-429b-a799-8e4243a7a742",
        "cursor": {
          "ref": "b62605a8-164b-434d-affc-b947518bb720",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aef97e4b-c604-47c8-ad29-ea7a2a10198c"
        },
        "item": {
          "id": "b484a7c2-568f-429b-a799-8e4243a7a742",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2e0acb7e-e7bc-49bf-9607-138ca07db410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8606715-feef-4027-9b49-83efb0dc9353",
        "cursor": {
          "ref": "54c6a53c-1185-4eae-8b89-807cbcda29dd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3ecaa1b5-46d3-4e46-b44e-3aded10d2bf8"
        },
        "item": {
          "id": "a8606715-feef-4027-9b49-83efb0dc9353",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "34ce0307-6aac-4f3a-a8ea-341fb9b5691b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d06408a-f3cf-4ed9-a8a2-81b7a50375e9",
        "cursor": {
          "ref": "9e7fef11-ae7f-4f85-9d5f-5884109c4a58",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e522023a-8b9c-4ba9-9fd5-c07b12223a38"
        },
        "item": {
          "id": "6d06408a-f3cf-4ed9-a8a2-81b7a50375e9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e12e250-a9bb-4eb4-88e6-be28d62f8337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc6b667-bf7e-41e1-b750-ef762ea3a55f",
        "cursor": {
          "ref": "10fe144b-92d1-40a6-bb75-1649bf6e57a7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0214cfa4-95b3-49e2-bb9e-6fbd3b8c010c"
        },
        "item": {
          "id": "6dc6b667-bf7e-41e1-b750-ef762ea3a55f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dd902eea-1298-44be-9b53-790f7ca203e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2afb479-3392-4d6d-b72d-8fe0ddd014f6",
        "cursor": {
          "ref": "00de84ee-0d25-43d3-982d-cec6411c5ffe",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3298460c-6cb7-45b7-b6fc-6b7e4550d3b0"
        },
        "item": {
          "id": "a2afb479-3392-4d6d-b72d-8fe0ddd014f6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9d28de14-35b2-42ac-be60-89cb326e0074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e58866e-4e8c-4a78-a666-cbbd4ffa5be0",
        "cursor": {
          "ref": "bb81279c-5186-4130-a6ba-c02803f25fca",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6f413a43-033f-461a-977c-6e41230dc4e2"
        },
        "item": {
          "id": "5e58866e-4e8c-4a78-a666-cbbd4ffa5be0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1a485a66-6e24-41bf-954c-53d8f142e075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f43eb17-4df0-4b62-b34b-3423009856ee",
        "cursor": {
          "ref": "5c6aab44-191c-4406-a665-29ab09a521fb",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "42990876-0586-4cd4-85fc-39a671d88cf8"
        },
        "item": {
          "id": "7f43eb17-4df0-4b62-b34b-3423009856ee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "62c04969-1470-4915-9b2f-a217b317c668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb22a5-ee6a-4999-a768-271fbc003b9e",
        "cursor": {
          "ref": "a7cc3800-1d60-4d49-ac5e-068a04018f21",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "837bcd5c-50a3-4556-b197-e503a1d8470b"
        },
        "item": {
          "id": "ebcb22a5-ee6a-4999-a768-271fbc003b9e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7de583a0-602f-40b9-be1b-25c906762ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f73de2-53a4-421f-8663-660afd7339d7",
        "cursor": {
          "ref": "14e65cfe-4233-42ba-a809-6c80cc7ffe8a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "317ab4d3-8736-4625-ac4e-2235642931cb"
        },
        "item": {
          "id": "93f73de2-53a4-421f-8663-660afd7339d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "52ce0c72-9b51-439e-ab7f-3de9aee9bd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262e63f5-c754-4620-af25-6d362a18c1f7",
        "cursor": {
          "ref": "ee880068-8d37-41f0-aefc-0df17bfe1a60",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "007492c2-4d40-4bd2-992e-ea809cbf219a"
        },
        "item": {
          "id": "262e63f5-c754-4620-af25-6d362a18c1f7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2b214f5-da24-4423-83d3-1c2702a71729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0142e73a-8942-43d3-84bb-69a189b36a23",
        "cursor": {
          "ref": "c307c7d1-dac8-4252-b692-335de9f38ea1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "52e2ccaf-5d2c-4de5-9e02-e7074494e9df"
        },
        "item": {
          "id": "0142e73a-8942-43d3-84bb-69a189b36a23",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ea6eebdd-2189-496a-9936-e3c608ba2e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b68e4f5-0290-45a9-9f90-43b591c5b04d",
        "cursor": {
          "ref": "6c951ee1-0b0b-4a18-80fb-b4e3f61a5385",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "44613538-f9fd-4ea3-bd3b-0d5d234ad6a7"
        },
        "item": {
          "id": "4b68e4f5-0290-45a9-9f90-43b591c5b04d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b0ae8cbc-dde9-437b-a958-7e09a4e24ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfe2c2e-cbf2-4b45-b757-37c640a52472",
        "cursor": {
          "ref": "646561a2-50f5-4d9b-afba-1163dc7ad495",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "57f371c7-59c9-44b5-8fae-01a093bd137f"
        },
        "item": {
          "id": "9cfe2c2e-cbf2-4b45-b757-37c640a52472",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0070d4aa-9268-4c15-8bfe-cf0c14a28180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aa09de-ae92-4ffb-8053-a78c78fe306d",
        "cursor": {
          "ref": "e1850a90-1f74-494f-9151-30d8fcef921b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cff28531-ff97-46c6-b7b5-e15cdf7fcf9b"
        },
        "item": {
          "id": "50aa09de-ae92-4ffb-8053-a78c78fe306d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "01cefc3c-4a28-477e-839c-4b5a019ef9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df8eb70-86f3-4fe6-be29-3ace861dd76c",
        "cursor": {
          "ref": "24aa8104-c754-4506-aec0-728ebfef5b04",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "da2b1eff-9ead-4ee0-8b4c-252af46e06e7"
        },
        "item": {
          "id": "4df8eb70-86f3-4fe6-be29-3ace861dd76c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "37ae10be-b7b8-4b49-a1f0-4fd97fabd12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2ea93b-0b53-47bd-a273-4a77cff6589a",
        "cursor": {
          "ref": "e649e0dd-4377-47a1-832e-2962f8645339",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8b4ecef2-e7c6-4087-8ca0-22360306874e"
        },
        "item": {
          "id": "9b2ea93b-0b53-47bd-a273-4a77cff6589a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "edf69f74-f917-4cef-8e4e-457454703170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a791a52-2f76-4617-8e21-e9d41f96c358",
        "cursor": {
          "ref": "a1272072-d09e-41dd-932d-2437acdf1222",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eca377bc-1264-4388-94ba-8f970d8218f7"
        },
        "item": {
          "id": "8a791a52-2f76-4617-8e21-e9d41f96c358",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1d314001-af0e-4b63-9e0d-3e7fe1b32bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ee2f0e-3f91-4bf0-a6b1-80462fe3909a",
        "cursor": {
          "ref": "a7a380cb-6a14-4d55-8873-a2a99c745589",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6b3c3a04-613d-413d-bb23-bdbb5546f56e"
        },
        "item": {
          "id": "d2ee2f0e-3f91-4bf0-a6b1-80462fe3909a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fe513976-fc26-4541-9903-bf3932bd3b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d13be3b-31e0-46b7-a3fa-49098e2713ea",
        "cursor": {
          "ref": "60a67190-fef1-43c1-a3ad-57450a892b46",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3c0b3366-702b-43c5-a09d-c83adeb69a79"
        },
        "item": {
          "id": "2d13be3b-31e0-46b7-a3fa-49098e2713ea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe10ab7d-3c6b-4ebb-b29d-ae1be79cec13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc7eb9-1630-483f-bae1-86542547b3bd",
        "cursor": {
          "ref": "415ce294-1a14-4f80-925d-7ca77a09a865",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dfb32365-ab25-4ec7-9c7a-82d2bd5afc3b"
        },
        "item": {
          "id": "20dc7eb9-1630-483f-bae1-86542547b3bd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9d1ce350-43f0-4020-b261-1348c2980fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3191446-f0a1-45be-973d-94e74d5890fc",
        "cursor": {
          "ref": "fb6cac58-c627-4246-9e54-1f3c79defb7b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "191d1ea1-7555-45c7-8ec0-bab730694fc3"
        },
        "item": {
          "id": "d3191446-f0a1-45be-973d-94e74d5890fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f3427d40-42fc-4ce4-ba91-630ec203494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac047e9a-9b9b-459f-9810-16243239e748",
        "cursor": {
          "ref": "2dc32d83-acf1-4ee3-a1e8-954da4d7fbc6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c211e5c6-b9f0-4323-a487-5382e61d8100"
        },
        "item": {
          "id": "ac047e9a-9b9b-459f-9810-16243239e748",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a146a7c5-a9b3-453a-8bdb-c3a68946f72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0856825b-2caf-44ff-b520-32b3037ee74e",
        "cursor": {
          "ref": "3ad7e9ef-ff9e-4c79-86a3-222b8523bc82",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71dc966e-4a3b-452c-8747-49d1ba56ca5b"
        },
        "item": {
          "id": "0856825b-2caf-44ff-b520-32b3037ee74e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8bc5984d-662a-4990-ac1b-ed6e751da28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7958d3-4a8e-4c2e-8a45-e9e446928825",
        "cursor": {
          "ref": "c8150df5-e213-4f2c-be23-1280cee1cf85",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8ed13bbe-a720-4d8e-a6e2-45d27c0a55c6"
        },
        "item": {
          "id": "ab7958d3-4a8e-4c2e-8a45-e9e446928825",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a176094c-fa61-4064-ae2a-de6e9d9f581b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1cd7a3-ba3d-4467-b515-8fe39ad35692",
        "cursor": {
          "ref": "e8bbeb05-ec56-434e-a681-c1833faa3cda",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3fb8abff-3d34-4ce2-a67f-9adf71781bac"
        },
        "item": {
          "id": "0d1cd7a3-ba3d-4467-b515-8fe39ad35692",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6a66fcc4-1865-481b-a741-479c38d2fe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db98aa19-00f4-434d-bc23-75bcf969c572",
        "cursor": {
          "ref": "f7f360fc-e268-434e-8445-b3fbf3ed9bdf",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2a92adcd-95c3-4a26-afca-27b02bdf9f11"
        },
        "item": {
          "id": "db98aa19-00f4-434d-bc23-75bcf969c572",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6ccae0df-5a14-497e-9ace-a43572071af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "5fb60d53-94f1-4a78-a363-23ce486e8058",
        "cursor": {
          "ref": "6b221628-7559-4ece-a68b-7c73cc07ff19",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fc9abcc8-25ab-421c-a3ab-1bdc0fa38ff4"
        },
        "item": {
          "id": "5fb60d53-94f1-4a78-a363-23ce486e8058",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4a0fe2ca-b8bf-4103-be3f-9c10835bebc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "37c5b6da-507f-4521-b724-854960b7b13b",
        "cursor": {
          "ref": "6fb2573b-ba5e-42a6-b826-3ddc0444fe2b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0ad4abf9-de03-45bc-8a2f-493099e3dcda"
        },
        "item": {
          "id": "37c5b6da-507f-4521-b724-854960b7b13b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "714841e9-94aa-42fd-a35b-5795f3a24f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4a4f19d4-7068-47b1-9223-ee088d74e607",
        "cursor": {
          "ref": "41570f65-51f2-4bf7-8ee6-1978897c5472",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c90c3eaa-56f1-46c6-9fc0-9eaa57a93860"
        },
        "item": {
          "id": "4a4f19d4-7068-47b1-9223-ee088d74e607",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2029f6e3-fb84-47db-af17-ba699c83f114",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4f19d4-7068-47b1-9223-ee088d74e607",
        "cursor": {
          "ref": "41570f65-51f2-4bf7-8ee6-1978897c5472",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c90c3eaa-56f1-46c6-9fc0-9eaa57a93860"
        },
        "item": {
          "id": "4a4f19d4-7068-47b1-9223-ee088d74e607",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2029f6e3-fb84-47db-af17-ba699c83f114",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e19bff-2f89-4ff3-9fc2-d16358f6a02c",
        "cursor": {
          "ref": "acbf9f0e-384d-4e0f-86b7-0b347585756d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "82351127-5fce-4897-a539-328101acac55"
        },
        "item": {
          "id": "c2e19bff-2f89-4ff3-9fc2-d16358f6a02c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "76ce683d-0e75-45d4-b7de-1d5a17a1acd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bea90d-40a4-4d36-a970-f761934ad85f",
        "cursor": {
          "ref": "6930203e-3483-4c91-a194-a209acdcab36",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "09579e27-f839-4d21-8928-d7dc36ee837f"
        },
        "item": {
          "id": "42bea90d-40a4-4d36-a970-f761934ad85f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a32f707-f8f6-4ebc-8bc8-792ee21652cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}