{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4a10f426-1b73-4e09-838f-3e46f32c0511",
        "name": "Clear Cache",
        "item": [
          {
            "id": "29051081-d195-4c8b-9ffa-0400ecb4ec58",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb2c3982-579e-4b85-b4e2-6d3d1a15c28b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4791de6e-6703-4b5e-bdac-75771ed0b617"
                }
              }
            ]
          },
          {
            "id": "94e1d454-01e0-4b26-89dd-06649ad3a3e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c72f7113-854d-4ab6-aaa8-134dfdcdbc4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b2e4af8c-9454-48d4-bae5-91489f69d25f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63cdc3a1-d590-42cc-89c7-7e90622057e6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "27abc7b0-4b6c-4fdc-8a84-413842d91b0e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58fccb6a-ce09-47b3-bbeb-055a4042a9eb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ff0c3de-bffd-4a2d-b546-1faeb91bf50d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "541ba6f9-c154-4414-aba3-372167fc4d1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffde8fdc-625f-45dc-8ce3-c7c8af2e48e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df652046-89e1-499e-9730-0b16574c99e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ea33e33-da23-474b-9e0f-d9d223074301",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e06e0cf6-b165-424b-b810-b2ed4a4bfd86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66cb7e93-2577-448b-809d-e52ec60ac51b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "66347993-3986-435b-a2cb-ee8cfaccab32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a9b0917-9c09-4c87-accf-b3675a903624",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d42d5f8-d42d-41f4-8f27-fd9c15f907c7"
            }
          }
        ]
      },
      {
        "id": "1e27f196-7968-45bd-9a28-4a88e7cb4fa1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "21fecc42-66a3-494b-b4ce-690b6efdb5fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6ffd100-2b24-42b0-967f-521a69954dc8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2723f556-3888-4e12-bf2a-401d84212619",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921acf78-ada5-4707-9248-38359f938914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ec39236-8220-4a6c-aa30-4be24cc1d4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49873013-febf-4d6a-8242-1aff7ee53f13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fd78b4-8352-40aa-8386-2cf49959c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "607866a6-ea39-42d4-9f3b-4ac3bc9affe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c85178-fa87-4d84-a97d-a020fe7bee61",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff50851-a470-403f-872c-39d75785bc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17b56f5d-f354-4450-8ff0-0141cd696257"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b518d03f-6a05-437e-8d9b-b6ed23248435",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d96bd91b-6ecc-4a91-ad51-6ee9c4af59ae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2669b5-c1aa-4a6f-98b9-fe8f8100bcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3004b861-f72b-4c5a-ada1-075b792bdbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f6a024-fa72-40a0-aa4a-97fdea76ba36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7255c433-fddd-45a0-8af0-6991e08b6c5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cea918b0-8c7a-45a9-b782-25abd07f1b9d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46747cc8-fca9-4bfa-87b4-6f3b9749de5f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a26fd0-60f3-4778-a0e3-55b5e3e0b62e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "28d03474-73bd-43b5-9f8d-d891010a70e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cc97f38-0b16-4aca-abae-ef5f1f2fa887",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "24b53389-82db-4353-bde4-bf0b1dd0b7f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27f5071a-ee91-44a7-bb72-6ee2a154c460",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e545bd9-2fb9-4e45-a234-f562e6578b06"
            }
          }
        ]
      },
      {
        "id": "b6e3c60f-f8ed-4053-a866-f3ee85024fcd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "557647b0-8fe1-409e-9235-581e22c09760",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f831a8b-9303-45de-ae5f-6029248d9783",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a1a04ae0-559c-427d-8abf-1112f19256d2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b717840-cc3f-4286-9598-ecd30a9d3445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945db460-f0be-4403-8014-119c0d78cb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c173b1a-7a77-4432-b3e5-4284a8d2acdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98df88e3-7078-4d6f-ad24-d1bcdd723374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8764fd2-1cdb-4d2a-bed7-4f6fac2d133d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515cb2d7-4d03-47d0-9c0b-7a8e70e8b699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98e2697-e006-4609-89c0-d2e38dc650a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a55e6-2dec-4a76-b9f6-4dad0aa8c0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dbcf9a8-4939-4744-964f-ddef6c795670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4912d98c-5202-4325-80f8-3b2636f5072a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c8f007-4f73-41ac-89df-2067b440b947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c1f1be-088f-41bf-bf83-f8223951e244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec7f249-f8bd-4acb-97f0-7626eaaa2c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b067663-9746-46f9-9eae-e9b745925303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373da01d-2b6e-4bfb-ac40-e583efa53c47",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c773ee97-0575-418f-8f3e-69de9c96c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8788a5b-cc6f-4976-bae2-de2ed1275656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8a6af5-6ec4-43d6-b0c3-37fc825003cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9c0e467-5a4a-4f2d-aa4d-ef2a2bada1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54af0e2-a73c-4d8c-bc62-1f4e0183187e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3641b86-024b-4cc3-98ae-381cd6811185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0423a25-e62c-4cc6-a3b4-0729cbedf1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e3547f-7fed-433e-b4cc-a48086dd8358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39a9d631-b0da-478c-a91f-4ab2485093e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f048752e-a87d-4d97-a887-7ff22fe877ee",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910fe283-c7ab-4433-813f-4e0a540e14e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d6c38e-58ae-4f22-8161-dee65c7322cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104b80ce-3d02-479f-860e-57342bd18a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4a71290-eaaf-40bb-9a54-de14229051c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0206503-ccb0-4ea6-a277-f7f970714251",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc581bdb-ee2e-49f8-9bd6-e9f8da028809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b87007-77f3-4ccd-8864-623b9c462b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2502676b-8444-4192-baa0-10b192135fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d1a74af-3ef5-4873-b422-a4ea65e3defc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa4d23a-b622-4d13-9b53-af9e6e4ce78d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05809f5d-757e-49df-93b4-ab69a3cac6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6055ae43-a4ef-4c6e-9fa4-c15a87fc9039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e465ecb3-f46a-4be3-89b8-3c58b371a057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fb95027-0d2d-4f9e-b480-2fabd4cd1160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45030171-21f9-4495-b93e-2014df99ef30",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc4bb66-6a5b-46e5-8116-25f3f24b1565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032307b9-5904-4c41-90c7-23420da58e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1f3c00-8cb1-41d7-a2a1-da48214d2d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "113d0232-23a2-4586-bd6a-8500f050fa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0896a35c-560b-49bc-916f-ba2827625e2a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b6fbe2-e8bc-4b20-9b1a-2e3e2d910dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b94301-ea46-42bb-affa-d7b685b27b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4f7bbe-5bf7-4bf5-8bb8-53d21e77c370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dbe90ee-f2ee-4d11-b02b-84bc982585b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae01c9fd-9d88-4134-99bb-27bba2163d26",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a79fd9-c240-42ec-9223-b4087884e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a437a2-b6c5-442e-8a74-b1b11d6460dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b726e016-1ca8-48f4-8ef7-05602eb96f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "615450d9-cd9b-4ddb-ba5a-9c47f5cfd1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c4b7f3-32a9-416f-925f-dcba072d16ba",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515939b8-f319-439f-a1aa-1fc2bd7d63aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7680ed05-5261-442f-bd88-f73ec108bab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f723107f-b82e-4b02-8fc3-fc83c1bcf1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "805bd1c9-19f9-44f1-85fd-f541e99f4ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c64dd2-5ab6-499f-a42a-c41bfdf1bb1a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b9f1cf-d0b1-459d-8f3d-066b0f32087a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52793b51-fba4-42a5-840b-b5785e617cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d07bc8-b96a-4307-b0a2-87fb6d742553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "910e2c88-a1bb-445e-bcc9-73abe5bb851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd786d7-95b2-496d-bfa9-bec12459b49e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26841fb2-45bc-414f-b6a3-0dd679b4b85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca28cb8c-5dc1-48ec-b0e7-92506fb220a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb470620-9cb0-4860-a35c-148c34e8b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4562b541-988c-4553-8dd6-bb40c8b96c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f864de7-4ab7-4021-939b-207f9460bb5b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95c716b-9771-44f8-b097-f6f45c1e8903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2a7625-36ef-486f-92bf-e6aa377a9a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccb1b15-84fa-4148-843b-76682990f061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67460285-66c6-49a4-a3cb-6ae13e3c0f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6a32d5-31ce-4841-b7c0-fdbd8d684690",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a435a91-4f2c-41e9-8504-d3470e31bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a446e6d-152a-4629-b5cb-09b8a96bbb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791e72c3-2388-47ae-a2d2-a7fa2a2478b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d2c4608-b43e-4a56-a045-27d7ea73ef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b507344b-5e5a-4faa-9bee-770eea042bcf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8a6bfc-06ad-4c25-ae06-910cae0c56fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a511dd-f0e2-401e-82f0-77ebef641ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15245376-0289-41fa-9aa2-1b6c37623f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80c97b3-66d0-46b7-9e80-b8abdb06a074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7661517e-67e2-48a4-b8bb-6ee75b720d1e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc4a993-66d6-4c4a-ad88-15d9688132fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6028b06-05c1-4cf7-bb13-4dba2f1ea723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0465d7ee-d11b-4de7-96c8-c876e761ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9716f37d-29f2-4bf9-bcef-f7657e889a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9e8cd9-6a5f-4e75-a3f2-27f03ecf0b3d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dad192d-7466-43c6-8bc1-89a6f10adebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b700114a-5ac9-4b23-b91a-0e55f3618117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01027164-9e63-43d8-bc54-1915000266e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cab72e-fadd-43c6-9bef-1a9721d7b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f979c172-a294-4d47-b9f6-e32f4eaab767",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408cd641-ec42-4083-8004-2a9d02e5d4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01b07d7-4dc5-4248-89b1-ad1dbef97197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2b3954-2f92-4abe-8980-5daeb46210aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eafc264a-4417-4674-a9bc-3a02fa2f8bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b53e46-bec7-462d-b039-e34dd787c088",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aab92eb-a970-411e-a8bb-fa10134cf2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b9ac74-795e-48a8-ac6d-5713c17f3161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4abcb0-c57f-41d0-a7e3-b7f9819d001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff237c2e-dfc8-4437-91d4-464ca8a54886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21facfb6-b496-4aa6-8bc9-80edcdf407c0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d90b84-c35a-41e9-a6ac-92459241c338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200507e1-8654-4016-968b-76e105e2897d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc725c0f-cd07-4eea-9f14-d1481d994603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e53e995f-9f85-4b24-9579-2568351a05b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5474aa3c-ef12-4f18-afa7-7be3792c060b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206504ce-5afa-4539-8fe2-a1d628b8232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a86169-2008-47f5-a370-533b3d5eb7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a707ba-24e4-4e71-b22c-c0a262087b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e55192b-08f9-4830-a7dc-908addf64ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76887585-ac43-459e-8cf6-f864e1c4990f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05bce34-a533-4122-852a-e7a58461533c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b423d30-a8d2-4acb-8f65-16fc2b2cb3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bda7bfd-d802-4231-85a4-235881908f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a238ada-5eb1-41bc-a940-4f6fbf6236b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1ceb6e-702c-4902-9bdc-3dd803b3bdb4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7742a89-5d1e-43bc-9fa3-74e2a68ac5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea546718-6507-423c-97d8-51fec4db7a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd20842-95c0-425e-9848-5ef229e44e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d8f893-c5d9-4fcb-83ea-93c61426e5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c587fb-8d94-45b9-966b-aea013821c77",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2f1fe8-b5b1-4217-95cf-02711c994620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5ab405-9baa-43a0-ad0f-85436eef4451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62256470-b302-4e55-b918-18133391ba1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ff5c32-27a5-4b49-a178-c361340df76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f91255f-16fd-4a18-a6b5-a8a525788ebb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40365fbd-b371-47e5-b4a1-0abeac203a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cabe999-2879-4ec1-beff-bedf0362b6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbe6f79-93b2-4b93-ac37-19df69f9e7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b10fe9-dd43-479a-a9e6-c3d1c67b8d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed7b00-f193-4f86-906b-ccebbefdadad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f87445e-8027-42a2-b48a-6e93c519659b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702c5c4a-1b6c-4392-9147-f94285ae818e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204d223b-4c61-4069-848d-eba99d95033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf69663-af61-4ae5-9828-61ed01ff113a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda9711c-b462-48ec-9565-e1aecb38f8b3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c463a1-01e5-4816-9213-7c06aceef417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f776445-ed51-4251-9ff7-d310d105a331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674ce65f-e839-458d-9cd2-eb90d30de39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "087c779e-6fdc-4ac3-9a3f-119a0bd292f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e8538e-3f29-4b77-99c5-f93c527e7b5d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4f54cc-d7e0-4902-a824-c2fb3b1f203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a99e56-3eb4-4047-89d7-a6f9cdfb751d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8f8412-6220-4513-bd45-b4d641e13c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c64295-be00-44a1-a657-7c14c5006a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea69ee06-33ee-4faf-9807-a82b418b0f55",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886a0ee8-828b-4b8c-ad37-4412bd32ac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421bb1d2-7d0b-4218-9c54-83c3af488169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f397a2-3eb9-48a6-be18-0383c66d24d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72700a5-c743-40aa-be79-8c64a8c02aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f69c7ac-f583-4369-aba4-776f439f0a7f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16340e63-5b7f-483a-b0e4-78075c8a4f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f143a381-989f-4d5a-a72b-a7af3e5b1d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a70d585-d123-42d1-8746-41c66e6dae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01440d0e-dd7d-421c-a07a-526413c91acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9114c9e3-6382-4d1d-92c1-e8fe93a41550",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96196f6-f552-48fc-9672-183af664b45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ee9cf4-6a24-4b08-8672-61bc9aaee77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387f1efb-7420-494e-b1df-70400c8afb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f894902-9666-4ce6-bd5f-2111f1a55109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849200f8-baa4-491d-87fe-00052f810176",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e7b7f8-ef81-4a8f-8bf2-e67c0f5322ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5705393-3c3f-4de4-aee7-8c3f25c051be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b016881d-104b-4b35-9b56-e6068b97fe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1e42d1-4727-40b3-92b3-b12575b1a2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a97b46-c145-4a92-81fd-bbc2490a92be",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d54e94-9a32-4e2d-b0f8-d278c726da80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348332b4-9d15-4849-b8b2-9b5e4cd67986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c8553a-4b24-4956-9ac0-342df40bf94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "29bbe541-19d4-4531-accd-16d9e779a8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6ee65a-438f-473f-abf3-dd57fb219d92",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41863a0e-3178-4d91-a4f5-31a1e83b1d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a816f577-60a2-4bfc-9ce3-8d036c3569e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc4ec87-77af-461e-8ecc-51b935de3a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "320c69a5-84e1-4cc8-9243-3851f5acfa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37abbe30-0d45-48e7-a6ab-0c4a57712b1f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54df752-0de6-47ef-ba98-82eeff372f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339e4cad-3ef2-48b9-9bc2-b417665af433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b09563-626e-4920-9c77-6ee3a710c11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae37332b-9339-45d9-8bd9-ee38a3a5c389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07487dfd-f765-4dc6-8da3-51c45f741ba0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6be493-8c61-4ed8-add4-5262c0aa6a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1fea62-b404-4a8d-9e7b-be29bfb06efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb41e68-7847-4616-b9a5-6ec630ff842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93da5835-5e4e-4572-9eb0-abdf3988880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31be827-0aa2-4c0c-a502-7258a34db198",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a1fced-fc4e-4f06-bf6c-1b19783a710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328fdc2a-19d7-49e9-a9e1-fad4ca48f5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ad14b1-2429-4f20-8f46-03544041cb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68e41c4-bdbc-4338-a483-330e4768f2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f11c04e-001c-4210-a509-1defc68f828d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f0ac0e-3ebf-4a75-88ec-5d8502d942d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96583a22-44d0-4f32-a6ce-da8c4c8398a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70334482-d9ba-48e2-a178-d07313f821f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b25b9a5-7a66-4116-a195-982cb9a297c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115e4127-ed65-4e71-bb52-c9de0c80fe3f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a675d0-130a-46aa-8338-a3957dad6895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2136bbf6-3eac-40d5-98f5-8c786c232e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bbcef9-7808-4ce5-82fd-fa2286564d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e3c862-debc-4d14-be32-e472f1e5b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8889c1d0-8539-405b-85ae-6f3db6070526",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24a9824-7d4f-4a9e-8df8-14adf92d5597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae77246-7871-4140-867f-c0042516ef13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1547ddc1-5ba0-4d10-b7e1-9302896cc6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e85d135a-104e-4417-add9-d73caf8a5b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa6ac9f-dfa6-47e6-8ec5-eaaa6f884e00",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746ae03a-e996-43ef-8ff3-3af2c9980a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7abe12-f641-4e1b-9937-de82bcd70009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526f94b3-e836-4301-8945-8d9133e26afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36d5eec-afcb-408d-882c-31ff3fefe969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0808a061-d114-4a42-b35f-2a3aa2c91cea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c78bec0-db09-48ae-80ee-7ebf34507d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218a8a4c-9b48-44bb-b746-c32494a387fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ee0179-9ad8-481a-a0f7-e1d898b8efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eebd378-497e-46eb-8548-c0150d747d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6aa3eb-d9ce-4e8d-b0ab-f57b3229a99f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c0ed15-86f7-4660-a616-35a88c6f468d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d67cfbe-3d06-4896-ad46-9cd4f2590ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3a9597-f23a-4775-92f0-1382bab78e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36b29101-8e32-4128-8418-9c73fd5e4e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61880751-7e5e-4c3f-9147-924c14fb4149",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0529e5e3-b1ee-4161-a0b0-a1ad55687cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f14f7b-e382-47a5-adee-785ca41c3060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f0ccc4-0a91-46ec-9d18-02a2f44895df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6841d8-25e1-406d-92f3-a2012f1cb9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659b58a3-858e-4a15-b73f-b09dc2510f62",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc003a-3a50-4cb5-a5ac-88f6791b66d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e93fd5-1595-461a-9625-3a1cd92317d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abafbb2f-62b6-4e8d-ad9b-a73026839891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22bb220e-b529-460c-b1aa-5386c6787060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b287d491-a419-416a-a2b3-dbc3b245814f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cf45a2-537a-4f8f-917d-38676cc0a70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac8c03d-3c45-43d5-90a2-ca773dff2806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2c6bd6-0939-41bd-9494-6e1efa45c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0042d03b-908b-4349-88d0-b22d2ff22664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5224c30-f6ff-437b-be40-a31c5c85d7f5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33210784-8c0f-40f2-ac0d-62eee5ed61d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c825b7-2ffe-4e80-b71b-df64714d00fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e727393d-eccf-4c4d-b7fd-23fd074a16de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2e7296-cc8f-4664-833d-fdf115ca9f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b537da-4e91-4b4f-b4a8-624e451bbf09",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ebed40-0829-4caf-bc7e-da5f748ca002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fbd3fb-245e-41a2-a296-ad26ddf305e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa63c2d-5b30-4eb0-8c2b-fedd2714107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b03e6264-0eee-498c-a5c9-8b660683deeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd3f592-d4db-4c3b-96f4-afba781e3f29",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c27734-8a6a-463c-be03-bc6689a9174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607411ed-29ab-4a86-9de4-e40c26633164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7d0f28-3a98-4f0e-ad31-28594e2323c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7625c2-827a-4c7f-8ae8-51fe3b5c9be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986beca4-d52b-4005-8a94-4a218a2dd1f0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d311539e-b0d7-4a55-adec-f17cf3ae6a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1010253b-33a6-4661-9d27-e8317fcd9ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601f6e88-6b17-45f2-a954-7bf123c0eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbf9ef8-992d-4f44-be77-eb56d7353ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae90fdcd-782f-4c09-9641-402c0554acb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa477e7-39e3-4311-ad3a-e8219c4c121f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abff8e50-2b61-4d1d-a405-38bf74b1b1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fb4bfd-0478-41c0-a2e3-190a181aeff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fb6715-50e0-4655-9d4b-e2f52a462636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a589776-73ba-4cc9-b94b-a6fe8ae307f1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afb0ca5-03de-4ea3-a1fc-a0a2077bee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850a14aa-16de-4477-b035-528e78051639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bf5f8a-0e1b-42da-8773-1bf527525b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d75adc0-8603-42ea-ae8b-2233d33970a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6455e-3246-4159-83f4-946721f69e7b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070fae87-f1e9-4b13-a6df-4bf82d64468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3b2081-6842-4bb5-a45f-10f3192b7fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63657652-496b-44ed-ac8b-194b85b1eb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5972a2-bd0d-4391-b9ea-0066b317e8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75117e0a-4c58-4f88-b933-084eaace6fde",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7e06db-3fd0-4dc0-a738-3d1f09dfac58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83e5f86-3e73-49a8-81aa-23d482121ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d87247-b585-41bd-8391-e7adbedda16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "075de9f4-c35a-4dcb-b577-e0db76ef9ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6da663-a1d0-41e5-a557-01ff3b2d1773",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340e246-de83-413c-95be-ca62220005c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab6e258-ede7-4da5-8e71-bfb8ab57cf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25dd378-78cf-46c8-a476-2a405375a9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc19ffe6-8e42-4601-9154-60a30e5b330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7c37cd-642d-4fe5-9c8a-2fd8e47eebb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1574cee0-c5df-4cff-acde-85bdbff8ff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26182043-898d-43be-8835-1ca0d1f83c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ee55d4-5393-4efb-b716-3a5b84acb63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef9d779-533b-4d4c-9fe0-6f3443cb928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41beedf8-1f4a-4854-9e85-7ed2175f9200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df97bf0e-d4e2-4dbf-9a47-522e147f5c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e34eda-6888-4575-8a46-3721ca831594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef07123-ac29-4c18-831f-2817861db937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "add19bf6-f804-47bb-9c53-59890e8f3e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4365c070-036c-4492-8f52-8e9def5a479a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6745d9f9-4c36-4755-a905-03a534e0a735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218d4d73-7a61-43cc-97ac-15d0d1d2438d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a68a430-8ce1-4354-9eb3-5d32dfec4e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6031b37-5d0e-4342-a7bb-52162e56d5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f460ff-9df8-4519-a23d-99f797a642d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9714591-3652-4458-a987-c9d24850298d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d8309c-22b3-4ad1-9aa9-63f2d2ab8fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a862e1-6bb9-4eef-a722-89edea4d4c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a857b9-a098-4b63-8b24-9809d72d0a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea210ca7-a663-42e7-b7b4-bc6af4ae4be0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fe1141-5239-4b51-94f1-cff52b286da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824996bf-7a96-42b7-b1aa-1e7fa00bd0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431032ec-4fe9-4b7e-9eb8-9282acfd71fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7256e24-31e4-4ced-950a-3601b9074b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5cc0c5-45a9-4da9-aa2d-5354e0c71d42",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f09f5b-09cd-4314-96d9-0710aeac9175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6ab550-c563-4505-a2f5-77c81a8d086c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea900451-2172-453f-ac4d-a0c84a245932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe93ab3-5c46-46d4-acac-f220739fae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a55a37e-327f-41f4-b588-8a3f88843299",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e82b17f-9b33-4437-b6cf-0d3a93e689fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6f2a12-5f1d-4df5-a112-904989131961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45732d5f-31bc-45fc-9f04-41c834e08f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f292813-74c1-44d9-b600-e11289a94b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c79566-5036-4d5f-b221-de2bbb475632",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eae702-4fc1-4705-bbc8-efc64e819ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e75251-cace-4ac5-97f3-5c77704d4731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c6506a-14e2-4a09-97e6-cd186f991fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9f5454-8155-48e3-ac1a-40473d599e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453a1f27-d11e-4c24-870d-906402048d79",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a69368-af5e-402a-b526-947d7504fcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397844b7-37cb-4a0e-a140-fa91e605587b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc78ef43-2180-444e-8e19-6b5fc8c5a9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1fe1c7-a4b0-4548-afee-02c784d3b0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2940d7fd-f511-489b-8d1d-9b0d57206e19",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb19eb1b-1b6c-450d-80f9-ac4031518c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2b9c1a-deee-47df-ac67-bf46ef50e825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db1bc25-f2f2-4d73-b8c5-e6c0b350d21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "256bc66f-ac05-4ba3-afa3-4d7d94af9b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f56fa2a-6d7c-4cb2-8e4e-4e2b194ad2e7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12179f8e-ccfb-4443-bdbf-94c046e090f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be6b8e6-c473-43d1-a839-c1c89db38a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0293116-e5e5-401e-9c4d-4da81a474d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1423b4a1-b460-4f1a-9848-659258c53f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5791bad-1746-4adb-a9ae-e26ac3b1f5a4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8cf48b-cb32-4e68-a3f0-8e4eb729c6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bd4a82-ccb0-4abb-a1a1-bae082afebe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6377f182-4e72-476a-9720-6621c4e7ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ea501a-2388-440a-ad04-7582a69db780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2015671-8b5e-4002-993a-5ec7cff14f6c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3e8bf9-1199-4114-92aa-3ea12ef504a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff18cc4-2d97-4ab4-98cc-7023a97bf08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68716951-87dd-487a-a99a-9377a98e0629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0f7af8-73ad-43be-a6bd-0e17d98ffc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7812e7d0-66c2-4911-99ff-5e4a56171555",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664d2353-9d79-45b2-b29e-5c316e9dead3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7dfe2c-4c81-41c6-a1e6-a32214a3134f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ed16b5-71d1-4d58-9b22-6869a72f9841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d44b61e6-37ad-4f33-9a70-ba26b73b0e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2470be4-eec5-4f8f-8bd6-40d50c5c12e7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7f7527-b184-4b72-9835-4100a598726b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f211418f-66bf-4043-a4cd-e5d2841d34f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca1c9c-8578-4dd3-aef9-cb6994e2575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8327eaa-e769-4cc7-86f6-8c85b8952bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8271d38c-5afd-456c-9d9b-ca47efa0b175",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5d5ba8-7398-435d-8162-59c3bfcb0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22317343-c181-4c33-a29b-81c10969bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f91179-cd98-437a-a8be-be79eddb8843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc031867-a365-4a0c-a30b-32d74dfa3cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ccc01-5a83-4a94-8d6b-5d0727497d88",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78402f4-8f09-4dd7-9f53-19361b3e2098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18c3d44-1e6c-4a7f-8189-d1e53e2c3308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8cc2bf-ba8f-48f1-bf71-9355d0be98cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c47b68fc-1260-475c-9fda-2e3148249f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fd5243-da79-4892-acc2-bc19b09898fd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11857003-6c25-4435-bcf9-cbb8d52cdc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4054699a-c35c-4cff-a85c-e7f987e4b499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cedbe5-1981-4249-82e2-e95a342b2847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ab613b-cd44-41b5-ae24-05e0d7b978a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04889f84-2681-4fbf-b209-c244f8eee935",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034cd7c5-e87d-4710-b14e-7066e7884066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b07ee46-47e5-48fd-b2a7-fae4696157eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e1dc4d-6e52-486d-ae42-7350761b0951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a368ea96-1ae7-4276-a1ff-68c89da3f387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064d0b8d-f3fe-4e7e-a90d-2b2bd0a8aca0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3533d94a-7e5d-4538-893b-44eaec42dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1979e7a4-a6e3-404f-bb5f-936b2b1315fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5948075c-baec-4460-ad29-7b5cf46c702a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaab86c-b0c9-4aba-aa66-b7d593b70d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec1598a-35e3-443f-a82c-988e2a76d174",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aa61d9-ab86-41bd-8837-690c039be40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cdb69d-a4c5-4709-b9f9-8e6bdc3f107a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8f66ed-12f3-482c-8ec9-5f7ae5f48c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ac5355-73be-4145-a87d-00e68a693c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a2029d-8a02-4dd5-9705-05b10dfdc48c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1572f0-303d-4d59-828b-125382b26eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa08084-e67d-4338-8ea2-5acb64f2e470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bbc7ca-2d41-45fe-83c5-d27f270c8634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a045fb0-389a-452e-936c-1fc4df459cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3067f6-e46c-4d74-8f3a-ed2823d640c9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8606ec-a9d9-469b-a77a-fcd8d275bc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bbd8a1-b748-41f4-a887-5d199086c558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990350be-efd6-4caf-b40f-2c7aa373716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae954527-5852-41b4-b13f-e6c61d96ebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b73614c-859d-4a5d-a861-2d62b6821950",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3067d9b-0e5c-4ad7-a1ba-09d6d0ff3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f58b47-3207-46f9-a81e-1881e77c2625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39cb669-a000-466a-bd1a-be91c9a9ce8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dcdb87-c207-481c-9a8e-f95411f02719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a8babf-dcda-4b30-8242-98b4fa340593",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30a1712-b948-48fa-b84d-bd138c9230d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33490cb0-5c39-4a08-8f1c-0be235da44a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d707cf-bd3b-4740-a6f8-ae332c4b6813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8fa2ab-5a90-49ac-8da7-3aa9ffad8c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d408c18e-76cc-43f6-809a-73dda71b5c0b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c8865-8f1d-49a8-bbc2-92247b629667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf41a089-c509-4871-b9e6-0e854afd108e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce669d-60a3-41ed-bc60-6be2573dbeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f910c8-6335-4f51-99a8-7c4fd9b5fba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5ec18-497f-4cdd-9550-ee3a1f9cf540",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5d8002-dd8f-4677-833c-8de520bb9545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e801e2-2306-456f-b90c-d2031995f00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4623a2f1-b81e-4ea3-968c-b30224eaa9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ba65a1-3d93-44c2-ac21-3c84b5f3fce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a11269e-9165-4c18-ae4f-a5b9acbe9c75",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c3c58a-8bd0-47a0-a2c7-ed02026ce2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c313f166-ae0a-4faa-bf74-ddb54753a7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf8fdc3-386d-440b-b750-e8cb7efda66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67b1b16a-590d-43ee-bed6-b68cbd97045d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3c9391-7ddc-4f9b-922e-2c4f1cf61cf4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e628a-3e64-4dbf-8d16-d6abdaa58b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ec246e-7068-47a2-a83e-856d49806e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceadf75a-9200-4144-9835-24b04607b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b58975e-1fb2-40cd-9843-ee4f1dd37d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9046f9fc-0751-452c-83b5-fab1b127f5b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2306adc-2102-499a-847e-3efaa76e9871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad5c481-26e5-4a3d-9e62-7eb913c1dd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32927e42-5b34-43b6-9d5a-23fdde76ade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdb39d5-882d-4325-b134-0f1d4401e977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72374372-3016-477b-9857-dc1bacfec647",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df0ffe3-d1b3-4142-b540-3685181e8d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855a2566-1ad9-4c89-8497-6f6bbb84c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b825a4-5e95-4197-bfab-5b54eac60e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f541488d-c114-4fc0-ae43-d5cc4c23b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f514334a-98fa-4e8c-b8c8-e942a194238f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcfa672-5f0f-4ed3-978c-89a840a49627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20237347-27ab-4758-9553-f3cfadc44080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69429e21-23b5-4e95-aaec-9eb1a1c07ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "03df7cfd-7eb6-4746-bf1b-50ac06342a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f58f0f-ab36-48a0-89f7-82bcdf830005",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b37f0b-3282-4c4b-85ae-6ad1b3e732f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b51536-6bd1-43e2-9054-b8a455761fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8079e388-daec-4e29-aa18-0544407bf953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05ab4251-6e9b-448f-8c1b-b8ee394ed360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d44c6-365d-41da-8516-7b6712147464",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcb5316-4688-472d-9731-dd8052659281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488bcc7a-23eb-42a3-8f6d-357a4fbe1f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1985bc92-9be8-461a-a42e-8bf41f26deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaddec6-acf7-4f23-b410-6ca3ffa99f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a865ac-58bb-451f-9db2-426fad86f312",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf51df6-0700-47c9-9e4e-f109a72667db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a1fad666-11fc-44af-905f-a4aba925b825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f62a42-cd8e-40f2-9f0d-d700c18664ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfcc5ad-a6b2-439a-b109-07e35a11c84d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e044a94e-ea7f-47df-b0a0-47598b5e373c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7328164b-d889-4fe3-9d02-b59368a7ccae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625797ea-8d1c-47e9-b6de-74dbcbcd47c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4276a70-1c5c-44c7-b4c9-0179f04cbead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7833f0-390b-4b27-a35f-e579d608570a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29069a7e-ecf7-4e26-9950-da82e93d0e79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2206a67a-b7b9-4f88-bc59-d1832a91365d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46288af9-8a4d-4e2b-979c-f10d1a7b902c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40a7c527-bfbf-4529-9d4c-837944d49c7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba124347-8212-410b-9049-6551e5479690"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2c8d291-10c1-41f5-93a8-164dbf981636",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dca6bdd-714b-4ed1-9133-0b628e990f81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cb90078-0471-4818-9d47-15c231785ca6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ddbd65ae-369d-47f9-89e8-a0d05318e4d2"
                }
              }
            ]
          },
          {
            "id": "5d63a7c8-c733-4c8f-a283-03944c8475c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93794ec7-deb9-4805-a560-aab14abf62a1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "12ead3c2-1670-446b-85c3-2245ecb67612",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eadeafb-2911-41e5-a112-e73ae10ea2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "880550b0-dbc6-48bb-a002-69a053f89796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e55a70-8bb8-413d-af48-d9f30c26fceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931cb1d0-db7f-4ad9-8fcf-d09f50cfbe28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac7a7eed-f2de-41e1-b7da-93d6445928b5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e960afdc-cc8f-489c-920d-6566df13c471",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "031851ce-2738-49f9-9352-e17548d7b798"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bb6d86e-fbc7-4dd0-a8e5-4c01bcafd45e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c75faef0-3848-42a1-a082-1269a6234286"
                    }
                  }
                ]
              },
              {
                "id": "1d77f6c7-e5da-4385-82aa-7d316beaf91a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94501deb-8ef2-42d8-9827-776b2fa87998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb1431f5-2e9d-496c-a1c1-598e80dce9a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a13c768-daf6-4245-a463-1ee81a073ba4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4eee5bb-7db9-4ef0-9281-5a170b46f699"
                    }
                  }
                ]
              },
              {
                "id": "6de0564e-4862-4cc0-8f61-81f0d38c6741",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37fafee1-844d-4ae3-a97c-095ceafccea8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa43870f-6cec-4292-96a0-97e5b1f1eaa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aba3e30-33f8-432b-8eb8-ee927156d160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1831457d-0a39-4476-89f4-67e749b2007a"
                    }
                  }
                ]
              },
              {
                "id": "1acd5828-2d6e-46e4-b73b-7783eba8f4ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68287414-710f-443f-8bdd-46c66013bdb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf734eae-f1db-442e-9061-ea09da4eafe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fff12121-c1a1-48e4-8aba-6565176f747e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "264476a9-ccc9-4dc0-a444-7c44ce4c2da0"
                    }
                  }
                ]
              },
              {
                "id": "7cc5f7bb-b84a-4d5a-bf10-4ce0d0dd9d2a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db624a7-c2c0-46b8-91b3-d8a0fd3bc3d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fd0ed3b-1170-4950-93ef-f9d13d63bc4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22e31ae8-7d08-4c07-ae19-90467f910eef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33a1abc7-43c4-4903-a124-6bb771bb1620"
                    }
                  }
                ]
              },
              {
                "id": "b9457531-2217-4d68-b847-f78c9b4f7977",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aae92d3b-d83b-49c7-bc17-a3eea75f2d8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0ff73e2-7e09-4d8e-afc4-fd73672ca6d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce68523b-eb67-4f7a-99c0-162c6eeb44a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33456685-9791-45ed-bc7f-a22f94fac925"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e6e614e-eb6f-4740-8028-239ee0fbbcea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e377a47b-306f-4def-a54b-ea199590b7c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ccfac3c3-f218-44c8-bc33-be5ba7e1a1a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5220cc2a-1adf-4fc5-852e-90b9d18a446e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d1e7d6f-c3cb-4103-b8d3-eaaf259a27f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7bd1e292-1989-49f3-8fc7-9af09a0db4f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b7a450a-d849-4538-96ad-bbd05b592938",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f669448-fb3d-49a2-b364-d4a038836021"
            }
          }
        ]
      },
      {
        "id": "7dead763-e960-408d-96aa-2e40e56a57d2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4bc10ab4-3c5e-4c1a-877f-277806fff420",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55877548-6d5d-4174-8c0f-955893e6b9aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b160832-671a-4097-94c3-3d2ab0f2f175",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21b3710-d6a9-4031-bd6e-7f9f9506ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7728b8-022d-46a2-8e57-bce6e32c7452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c009be94-bb18-4b35-b0f2-58ead6c929cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51fbe1b6-41c4-4f47-8099-10a36e96bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9d1a58-7fbf-4240-91c6-f6e691528ebc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08083e16-f72f-4671-bbf8-30218108db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9c0675-1111-419b-99cd-e85e6a7adae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267294bc-eaf3-4ca9-8c85-872fcc939d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e5859e-113e-4535-b82f-a29be12e892c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bbae9b-34d5-41b1-8403-28f325224d1e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffee316-b1c2-455c-856e-1e364029179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c860cfe-3e61-4a5e-bca4-9488c6c00e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a81dc-adfc-44a8-b2b4-2f332479d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7574d959-e27b-4fac-b97b-0de662dbe89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac2a60-1bde-41ea-b29b-762c3e515fe4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6354ac67-4f40-40b6-b9ba-3e7e36b1fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fd1340-c374-41a2-bb51-690a5ed2e2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77153615-de91-4d14-ab70-9f98876469e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0e63b4-beef-4de3-ab1a-95822da82fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b989172f-dc30-4ea8-ae06-464f926a436a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b69790c-5462-4bd1-90c7-2cd723db1535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d7e355-7b67-4abb-8376-881ba7623f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9311419-9c8e-4ebf-b3bf-ca85c29e4597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92bbb556-103b-4d96-ab29-9c74a84ed473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8023a95-49c4-4d7e-aadd-d36fac1d8ad1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619ca3b5-6a64-4d8a-ba5e-b6f3773c5488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d6d8ca-d7ff-4044-8792-3ae201d0af5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfb24db-f3b6-43f7-8702-fb19370f3df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a240de7-b0fd-44a0-9e79-8f487c6daa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982a8574-5f17-4701-9de5-3f1a5453977f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7769e6-6a9a-4d4e-9ed6-c9f6519fd914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e4cac5-1e56-4e74-b987-f8adbc16ac08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5374b67-2d93-4d3d-87c5-48e4306a4c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9961fd6a-a974-4326-96a8-d7ebed3792a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a50eb2-0fea-47a7-ab57-8642e4f89789",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5fb92e-b2f8-4942-817a-36426499551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05512122-3ee7-499b-be57-095aa1e1b99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3455fbbc-1d33-4a04-94f2-fc44cfd292c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb678524-57ee-4546-8bc0-46b4e0b1ec77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e276ad-1b48-41db-99d9-e696b7f9c556",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f38385f-5b2d-4b2a-86ee-8af660372535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0db9dd-c42a-4feb-b858-eec3dd3911d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfed5737-cf7d-4d57-917f-ad5500e36457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "733fb816-e243-40df-b129-88a5c21b2b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fb0be6-78bc-4d77-a118-7c40c703300c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd6bc10-f3b7-4c54-9754-0305ca136e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e461782-55c1-4909-ac5c-1a1f20f5e95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f33938-92d6-4e14-bac9-8c0dc410f2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a587d389-fab5-4b9b-8c3b-890ed9131925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685e9195-a68e-48df-8c6c-048708622f2e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ceca3b-3aa9-448c-9bae-8f7daa283da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f920e60-21a5-4167-8220-47a64dbe422d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c823901-ea24-47ed-8761-444bc618bde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0a188ec0-8a0f-4664-ac4b-87345b53c2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ec3b30-c58f-4ce3-ac56-0c0d670191d1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1bc6d6-8916-42dd-a5ff-1873fe60571e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a2ad4a-e257-48e9-96bc-9706fff1c7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdd8be9-6c5a-4e4b-babc-19d8577b6765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8de1164-4e16-4ab7-96ef-2d31c78c37ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fcd814-3e88-4d3c-a27b-8e834beb52a1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e68ff5-8bcb-4567-9181-58705826a428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed2203d-63a6-493b-98c0-ee1c59acaa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b3af55-8f57-4a00-a297-ab6019da3750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e1cc02-a860-411f-a056-1b64616d6973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5953e9-7c5e-4842-a020-2fe43a2c13ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4a52ff-210f-41ee-ae27-b6a91e12cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af4de81-8e8d-4df6-a050-7bf028b787e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8eb845-3839-4be0-b236-a1ede1da0010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f466d9-0d45-4b12-b3a8-327b278ffda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c51036-4cbb-47c6-8cab-8fd815eb31a9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9c5268-a446-4ed2-94e9-ddf6080965ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e085e549-27a3-4fd3-acb7-1d75684da6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032b1c63-b468-4271-9d1c-d5000389927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9970f0-5b6e-4320-b002-c1d5e81bcdf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18063cf0-ca08-45de-a942-3353ab04b0b5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d30060-84a8-41db-999f-840164a75045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae292cb-0ed7-4f84-b2e7-7b1357f87500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f7af6a-4b94-4e6d-9431-1e3bd3476ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a2515f-9bfd-4992-83d8-886625482fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af375a4-63a8-441c-9ac7-511f2ab49d49",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4658f161-31a1-428e-a07a-137ad3844f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f8f909-5392-49c3-a455-4941c615771e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1f02dd-d44f-4048-afbb-ed75bfda4935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f565c863-9755-46eb-8f8e-b762d312fb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5509e7d8-59dc-4c99-93e4-eac9ddb0b226",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eddbf0-97d9-420b-be92-a489e6cf00c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1878d9b4-0f85-411a-9d5c-8a3e1b9eb90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d56344-42b1-4b04-8249-3da6f6b40549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4421eccd-60ce-435b-bb1d-83fb850f5832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb31848f-3550-4be3-90e7-9f39f6846dba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1d2073-e4ad-4ddb-806a-2d3a8f933a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2e774b-6f08-40c2-8faa-9710ccf83ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f0a9bc-d33e-4a63-8d0c-52f213236068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5582d30-d0e7-4dce-9073-45f604fd16f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047a042c-d831-4619-98c4-cfa461b9a306",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bfacdd-8b34-4dfe-add9-b32c489cc795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf9dee4-f685-4984-b42b-a1a6979348eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a392fa-a303-4557-a2f8-f38f3ff54caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca1e895-e134-48d5-b921-1d87664f4154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e28bfe-6437-4f40-b39c-e2256ced83c5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb65532-7f4f-4b49-970f-a87de5f2587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b26b7-4ee5-4174-9451-504cf40da9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3578854d-9512-41a2-9692-1e69bad6e2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "856c762c-762a-448c-8e49-cee54395471a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2b51f6-cbe3-48cd-8a32-33dcb1dc5784",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f5e8e0-94cc-4d1f-86b5-83e95310fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f700d24-1267-4fac-bab8-4b46b3dd0725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af5ef2b-bf63-42f2-9c7d-ebd5de917877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac6e6ec-5ca7-4f2b-be70-a73a5add7553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9e6b9b-87d7-49bd-b6e2-78db44596fe4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2affee-c311-4386-8f7a-750ce662903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf9ea01-7940-41a9-be20-252afbb66456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd53c6-c0ff-48ea-9bb7-ffc74454eb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c30e3c5-5321-49f2-b65d-cb3a8d201791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4519dee-07d5-4320-a6de-38e61035166e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efae1ca-15bd-463a-8e0f-c63eb7ba66b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7419fa-279f-4ab2-b41a-11d392cc1507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf53067-447a-4b61-8758-8d2e43d364c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb6b48d-72f4-40b5-8da5-4620fbbe4b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ebb496-6b61-43cb-b5b7-16450ed163a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346ab4da-cc36-4bfb-963c-65190ff6cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56febe30-2023-4e56-b809-fd7b7b5a3857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0414bf6d-1c12-4263-95c9-4862e87ba2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d0ea4c-bfec-4bbb-bef1-e34f10bb0a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d187c1-d1fd-49e0-af28-12d483e7a50d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cf3c10-8224-48b5-8419-c5c9cdbf4ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e15c4ae-ac1b-4648-94a8-038b9025f6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e058d770-684a-4496-b580-3f6613270e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "648c4ad2-c02d-475e-8785-d09d57e060d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece6251b-9bd9-47c9-9b48-a7edff2abfd9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc49afe5-0242-4737-b036-bf5f7cf9f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27360de4-48b6-439a-9125-fba6db842326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b4f2b8-0720-4598-8b0f-68babb07e8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4bfbcc-9ddf-4592-a869-c8c943d79309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52a2787-9fd3-450e-b94b-64f6a3d3b2c6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9708845-9815-4d5e-94f0-aba54c638d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f28c0e5-d7b4-449f-9bd8-6ed352ceae76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5cfc3a-c875-4b4c-8e82-65c191c763b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e135f7-34e1-4762-bc4c-7fa201830cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92106fb4-b08b-4934-a08a-462cdef5c6e1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8557d167-bfba-43dc-84ff-5ba369c6be7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401758ca-63b3-4d3f-a735-543e471fd3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d68da-3e76-469c-99ba-0b663c81b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27eb8b5e-000e-405f-b620-6fb7609c10ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16675a6e-ebcd-471d-9f56-7cad15df3492",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57db10e3-4a30-417d-a844-baabfa9d118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf906475-721f-4f8a-a886-507f45d1a212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5c6e68-ff96-46ad-91d2-895c911dce2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76daaa88-3f18-4b1f-b6ac-3013ad2d3f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096b986d-1503-4f98-acb9-4531937771ac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6812cc02-a548-4c05-8f60-e5b8fca86b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2ea90f-3892-487c-8a25-d596df04963a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f1fed5-fa37-41da-bc65-8ce4fdd06828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0178565b-dcd4-45e8-8493-1b55e1bc7793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beef0739-cbb7-414b-b35d-ed0bb6753b86",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4242dfd3-7fb5-4348-86e4-3679cf96c1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e671a32-1890-4bb0-a530-7d2495314309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bf4a22-6fc3-4b3e-99c0-19d579c507a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d362b9f0-0f8a-4016-897d-5c971aebf302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd64e25-0e6c-43bd-a29c-1f98493c94d6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d87f47-affd-4d70-9db6-2484ff551798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90468ed8-5202-4df8-8e6f-14e3b7f5995a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e7c086-e35d-42c8-9319-2983287ee237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa55e82-1c50-43a5-8019-344236f3c13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4790f855-096f-45dc-97ea-e7925de74b96",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cb5755-d3cc-43d5-875b-b8a92877221b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1e02a0-1758-470b-97de-02f7ea1cb6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c2151e-af2f-4056-b257-cd35c170b601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a823ac-401c-4882-bf89-3dae18a0f5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a4c94d-705a-4662-a240-c7158fb6b366",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0a1187-4788-4068-8ae0-8a6ec6f451bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18f2208-79a4-43f4-aa58-d7f50e9c8275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16efc2b6-71bf-41e4-ad93-23ff98448347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b4be9e-c977-4cfa-84b5-0530856b5b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf8ee45-dddf-450f-89cd-aa768afec2da",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3a1491-8502-4cce-84cc-3ad54f020874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8675f073-5851-4072-824a-afb75ba7baa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d819746-d874-444c-9eb1-4e3280a9b731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9436218-a65b-4f88-9d5b-3bf5811effea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee07b024-c288-4ab2-822d-42463917c314",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b9365c-e63b-4fef-869b-64a579c9d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9e2fa5-f2c0-4314-bae2-7561c12f34be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f1ac8a-6812-4b1a-8667-e3459d3abce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d254365-308f-4dba-8bfa-1596296c42c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6804d7a-173a-4da9-bae1-bee487d172d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "787c4422-0995-40c3-a7d4-e34e2ff5ecb9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bc1411-3555-46d9-94e8-f5495100db66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cc31cd-5e53-4f0c-92a3-2b57e1731fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1086293-5c55-4062-8d2d-4fd429283b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc99534e-f543-4892-be86-adbf4b28bb2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b5ee7a7-d62b-4e5e-b11f-dc0276c8e959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "598a7507-6653-4597-8509-4433b6e83323"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa2f9f5c-11f8-43a9-8d4c-1eb3b77b8ede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c89fabd-d0b1-429e-a757-ad9a27949b1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7dfbc06-261c-4dca-aa77-283bf2318af0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "119f8e6f-e0cb-45fd-88b1-deb8b0e9a7e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2af8fff4-ad42-4af4-aae2-0775a28e1335",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9928bbb0-889b-4cfc-ac9c-9d342aafec71"
            }
          }
        ]
      },
      {
        "id": "2b412081-21e1-4b8d-9d4c-f2a9bd1eb7d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "eeea15aa-e6ec-4d0b-8a06-559f42b3c78b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd246d62-3f49-4dfe-b383-b26515a80701",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c3f0d12-c2a1-4c8b-9d42-83778c179f5b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7abb7b-ef7a-4ff7-8e9f-a5707a081c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c33d9d-01a8-4d51-b0e9-775f2e0a0b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139bcd6b-8404-470e-8eaf-baa8f0167a09",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42c17b7-57af-4aa6-954b-29fb58bbf1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153ab466-bdce-4cec-8b51-303d064e09e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ffe3c2-e494-4b40-a6cb-eeffe3bd432d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d079ecbb-5a4d-4c49-93e1-837c349098fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d29eb5f-177f-404b-9408-83b0b35a3ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d20fdf-70e7-456d-affa-02aca6d68aa4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3c28be-b723-4816-a5c3-909bf3e85105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9ba592-1369-483d-b0ba-9235f8a67990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694c09cc-1a71-4298-bfdc-ccfa31b86a48",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1639fce-c78d-4d39-875e-b34e955038cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b1a4a7-859c-4c3f-877f-2ccb757329f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b13c03-0dc2-4e27-9168-2c2273e4752d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb32746-4e76-4bc3-8b45-3f4005895b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82e86a8-6729-4b3a-94c5-c1062c2112e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9756218c-2a08-4280-a60d-2f2681890e8a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10501a37-0735-46b9-b26e-f58bb87d794a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225ea417-504e-4ba3-9add-a18bfee35ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af0b015-a82e-45bd-bd34-3dfe96603ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c347ae-a365-43c5-8be7-272e52e402f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9eb442-095f-4436-b49b-c4beab63fe59",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a8a39d-73e5-404e-ae38-0c5b88d6248a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1c82ef-20fb-4942-8425-6f0811cfb43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306b97ae-28e7-494a-ba6c-b7e1a0a7fc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35157b-8dec-48d7-a458-1f978deeff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb131047-0653-4f18-a346-7849bfafd6c3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e000c4b-0a63-41ce-a7af-2fd526252c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc3f72b-aa11-41ba-abbc-8e7dd1a8ef7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407e9a5-6f5d-49f3-8a8f-26d751c29ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d5a800-92c3-4c16-b290-814e204be898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc44100-446e-47cb-821c-ebca0708dc1d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e461cfb3-1eba-4e5a-8a9e-3c9da49397e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "694abd59-2420-4ea5-916a-65ae0efcb2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6aee4f-a66b-42fc-860b-27d632a7df95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f502de-0e20-4a19-82df-a7b0bc7216ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc35b18c-c578-471c-adea-9033a2171e52",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bcdd4-f74c-4c8e-8e1d-78bf83e4a3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa130807-f40f-4614-b7be-8aba32aac1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7372c5d3-adad-4b73-8fd0-ded9a07c8ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5f9b15-b783-4b4f-a4a2-ce5be7accee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd70265-4b41-4670-b3be-94b88b78fbab",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6ecaa0-22d6-4612-84bd-58a81752dc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd8125d-52d4-4923-9a89-c0bc80548a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8603da-9620-4243-bdf7-094fe05cc7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b381e0-b741-440f-865c-21a036579cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e4ae3c-345b-43ba-b590-6b0457275d21",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf4e41f-ac45-4f81-bc0e-ab2d72a449ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27f1f7e-0993-4608-9b26-41d353ab11ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863ac03e-c1e5-4a13-bfa7-2652295e3c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35d78a-949c-4017-8094-ab7a03e1b57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c160cf-e3a4-44c3-9fa4-a6259b3f3d26",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efb46d2-71cb-418a-8cb4-674a0ed0c5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49634bfe-0def-4588-b6c3-7ba8dc6c9f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2547747-0350-4205-8f69-6b6953726dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e0f852-0897-4b6b-8cd7-2a1b47d625e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac29b9-0083-4ae7-98d8-6b119cfcaac5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd4c2da-8970-4966-b578-31a3add4e006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7226f5e0-623c-422f-a05d-fdee02ebaeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e498d9c7-9211-44c1-bccc-12ed79d9252d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889ec1e7-3caf-4cdd-a2a8-bc30f00622af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9df73b-9695-485c-8983-79d0df1ebe34",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5096fd8a-8ee4-4892-884f-8bb8fde08fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345ceda4-109e-417a-8d39-94126415a9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d35d437-fca4-4bb6-886d-44b54cce5442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1adb9b7-a532-48a1-aad7-addb45d98c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a242f8-1315-437c-9997-0ef10a60c426",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247b5024-0567-472a-9cdf-9a1ea4199297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad84d6ed-2bd6-4e31-a555-3fa7bf9936a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b460721-73aa-4d97-ad8f-f9d7e54f8d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383b3fe2-bb01-4974-9a69-551fe5f8357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b65351-92e2-4649-9bea-862ed203e4dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9a5cf6-f3e3-4b3d-b8cf-fa6147639c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0f9856-471c-4e2c-bb66-d5d3e18e2c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad0db44-09a5-4836-80a2-b189e5f6e7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a35e53-c7b7-40ad-a18d-2927c1241ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236a07c9-e40e-4dd7-bbe6-98b9920365fb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91fde0e-6d2f-46f2-b0ec-1f0b35e47d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8878bb68-c1af-4615-ac84-9b2a3847f193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c13c2d-bf9b-46d3-a08a-73086716387e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c400af40-e665-47aa-8110-59b2bb68d34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20472aa8-2f09-4ca0-82ed-022fc3e8d45c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddef587c-4702-475d-8740-927e09851a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cb3460-7f7a-41d5-ad93-d6d84e639510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fcc3f7-92f3-4183-9e42-4120b0cf89f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22432b56-83ab-4f2a-9801-3320389df14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a9c9c7-7a7c-4c65-9acd-318b63ce503e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65adcee1-ac25-4684-b431-b17614e8f4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d9be62-b5c2-4933-9e4a-f9d0c1a600d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a952f9b9-8591-43dd-875e-c6dd18cb9e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09363a00-dda2-44c6-8174-945e41dafa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aef8b82-064d-4b1a-9b09-7aceaa518eec",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f9f342-a7b3-4ce5-ae80-446e679db828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb219d18-b092-4d71-817e-36edf3ee0438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71bec54-e430-45b0-beaa-e979112b65d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f02fe6c-7a9b-4d9f-92f0-ba20c3c9b436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0d0898-0b20-4c21-ad61-3c5ad93de5ac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b7fdab-4654-47c1-8433-b73d952f4ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638c8b56-f422-45e2-a7b8-523e353f546c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e073c19e-d0c4-4279-8d0d-63e4a3bab489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2c3185-fdba-4562-b75f-d1252cecf415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b473d92a-5b5f-418e-b087-17f260b9fb02",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d672775-c06f-4e39-8f7b-89a440bd2283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26326b41-37c2-47ce-a641-1be842518f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dac7d7-7bf7-4cbc-83af-60c831b928be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dab40a3-892c-44c6-82a6-bce60a35b893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c07817-ceec-4a6c-ade2-b92bc7bd9661",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613414c0-f2e7-4976-b397-7671381408d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b5940e4-2ff8-490d-ba2d-0f1875792f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21947c78-d024-4a94-88a1-60f4c953788b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c5e51b-a040-4566-a9ac-3f11d86c367b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66567bb-944b-44d9-9de9-2913852ac37f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bb7223-bfcc-48fd-b29d-4e6f30475cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78167c8d-e2e4-4a97-af69-425d909f4d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f19124-3871-4984-810d-e509c765eb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde452e1-e78e-4f27-9cfd-f426fa89a971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33efa5f5-78af-40cf-890e-a6b27845a115",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315cb763-18fd-4578-88e2-9f66b55107b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc406f7-72d9-48b5-b162-aab27bf4f031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b430b0-db86-48f8-9ec6-b726c926fd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecaeb5a-1caa-481f-8e6d-fa30a539e145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d86ab6-349c-4000-8d61-3656275983cd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6c0853-f543-42ce-a371-f8b2f050ab9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cf24d3-c407-4ae3-9e1f-17bea1080229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6820ae-4a25-4b92-a93c-f8e33093f2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9b7504-39d9-42bd-9d0c-d8a276aa3ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8d07c-ecb1-435e-83e4-7a29c8c65b05",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df60d1c5-3a18-4038-b964-e12e7293e20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecc810d-2b37-4794-a6b7-65a45593d52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626fb440-8d8a-43f7-b7f2-48053cf1802a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2da3de-c69f-49c7-ad0d-6029caec5ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6149691a-748f-4307-b8c3-ccf14c57da34",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98720950-1d28-4a26-b0a3-c6dd844c72fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032f53cf-10ff-448e-8d12-cb385c236925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6691ef76-c597-44ea-9cdf-1bf1905283f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93f9b21-6608-481e-ac9f-6fdac7f93e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96805c-bad0-4f62-9c53-ea10736c1eee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a9acd-23ff-48ee-ab35-52dec2fe5238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803f556d-84e5-4895-8f55-2a8a210abf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f077e68-f365-4662-93a5-64a26dc29e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465548fb-25cd-4682-bd54-ea4e4cee0a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b8b0d3-d010-4935-8561-e88339a913dc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2d4f2d-f268-483d-864a-dd3ba9f3d117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de20ab89-cc27-456a-b194-3b408543a1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff93f55d-660f-4d31-8825-9dc8ed17f631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dda534-de94-46d6-8e91-c8e876686c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b758de2e-5fc8-41a9-931e-a3f6be28e2a1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7ded3e-2baf-43a0-a0f5-a268c4dc941e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff82bfb5-96dd-4f63-8b74-d25d30f8910d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c140be4-14d7-4565-8137-e907af65153c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f062d3-751e-49a7-8136-4a06d4b9583d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452d9b38-4ce2-4ee5-ba85-f93b8e393ccc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2136eac2-fcac-4bde-985e-f5d5dba4af85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2092ecd8-2c8f-4627-8219-df03cdeb290c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6de12c-78ba-4f66-b30f-e8e2c693fed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b408e6-1df1-4092-a487-7dc8a5fde657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb1a67b-6ab8-441b-9ac6-af55cf4df695",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e202d795-cc3d-42ae-9271-c523f6bd57e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe58905-ada7-48e2-87ed-a45017e31719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f456ea-21ed-45aa-afa1-1fba219191b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d650cb0b-774f-43d2-9eab-f444300a0fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a462d69-0b17-4b7b-9ed2-5d2367078f6f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe5ee45-1869-4ea6-8a9c-4b4903753963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eaca5e9-f42e-4ac2-b57d-61dcbb318667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4116981-aaae-4b0c-8939-9724482a0185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7b011e-b8f1-4179-b2c7-ad854fc2a4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c35931f-5a44-4957-b4ea-252f0a46777b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b75c2a-5d19-4957-93c1-4b5040cc0a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289adf56-7e1f-4acb-8f07-a9420ae22979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0dcc66-f22d-4290-89f5-f58f90db686e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d228240a-f23c-40f9-b702-f29a2259417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d492f5-e80b-4e73-89cf-1bbc36e06bcd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c3f839-3e12-4b94-b964-97e62bf97546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abcbc67-10e2-4f66-a1c6-f07fd75e545e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b221317c-1222-493a-bf0b-8503a30e6353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582cfac9-3cb6-4932-8e86-c8831df74d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fa685b-44c5-4282-b59d-6480e8223663",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298b1cb7-0f1a-4f48-8d07-3fab6b29944b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eeeda6-7cab-4e2d-b731-16c607c84ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b126f5-7c50-4221-8b85-6c14ee6e906f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05c9d1e-ea34-4542-970b-75b15d090638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dceb97-cee4-4fe8-9392-95b776e1b1ad",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323977f5-1ee5-434a-9e19-ee7576706531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c41a83-b963-43f6-b1e5-dd2c9b8daa8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae870d3-585e-486a-9f32-589bfec0e27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64643eb-61e3-4e30-be8a-686b9e54e9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c1661c-7895-463f-966b-ae5c2188082d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e6b80-3ca1-485e-a85e-4b99a4757923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160b0d09-ed8d-4a5d-919b-635c23dcbd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4db0f9a-7fda-4fae-b5fc-ca95fa31c9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76594ace-ee4b-43dc-98bf-cb55eafb859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e40d9b-f165-448f-9355-8c8212064c9a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71da8733-5a8f-4ba4-b29c-98e047977234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47d330b-c5d4-4072-aaa9-14ce48b25576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c306297-752c-4a56-bb5d-0d5497c35401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b16ede7-2758-4877-905f-2ad8c2957d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fe199e-3b60-410f-a3dd-1ed8920dcd46",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe70656a-2a34-4852-9b29-c71d19faf08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528c844b-e098-44a7-9d80-f5bc198b37e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30be9a8-7aed-4186-8380-46951e581389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9da68a-d7b0-498e-8de1-5778b6d06027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea36a4f6-73c6-400e-8a9a-f4da33721185",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d8a43-3446-42e1-a531-3abb57797632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819f8f38-049e-416a-8e30-7efe5b202f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71091cb8-3036-459c-96ba-a09075576069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d18b0ac-a2f3-4c52-bed5-8306a0e98685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce74db0f-4cc0-4016-9d7b-ba0ccf1cf67e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e33915-c1a5-4750-8ec9-3866af9081ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0171345-53ce-4574-b506-5b4128cc31ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdeeb03-b18c-49ec-8915-b97556c2b17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f86cf7c-8116-4f87-b9e6-c456fceadc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd80345e-5544-49c6-bddc-29c2edb48573",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7960223a-d832-4c0a-9aae-931fb8467e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a33a558-08d7-412a-9fdf-bbe9ee7603db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25041d77-ccc3-49d7-9439-f58b3b79f21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c48bf16-f313-4a2c-ba03-976b469823f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bb26c7-9571-4ca0-8356-39b2b7ebdaab",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd029663-a8f6-4e5d-81eb-6c08306840e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07db454-6067-4900-b21a-e6bf5df00db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb307ac8-6f72-47db-a8fa-b9a6f9326601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15aa2a09-27d6-4139-8f40-781517d5ec71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad71c43-2fb0-4d15-9da7-688bbd8375f4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce57b04-4322-425e-b138-fb70050f1e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda9bec2-45db-4641-a541-3e8df6c5cc31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f70c27-60a0-42d7-8570-22fcaebf0a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2a3540-bb79-4a40-834a-b19e4931fe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c148d19-1a6c-46a8-b424-efffd3188a0d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace1341f-2979-40af-a97c-ff2f3ab3cd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d063ce0-26d0-4521-9fe4-c8567196655a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046b5310-3c27-431d-9c09-cbf97b0aa0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4786a226-d4ef-44e9-a03b-180e673e7dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a1fb93-ecbf-47d1-a594-7415b828516e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e09da87-9019-457c-b7b4-bfd1a1a93a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f12250-deb3-4464-a978-b1cdaa563526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b7c6a4-43da-4972-9605-30b302aac1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74d6e46-5727-4dba-8455-3031951fd5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d9b9e7-bee0-48b1-88da-73dcf8b8b991",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d208a8e0-4356-40fc-9d82-8f9a098e1e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90c6cc7-08f8-4bd7-9912-bb7d7a99ec7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89f5ab4-e3e8-418b-a6de-f82170c3cbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db704ac7-39c1-44bb-bd79-fd26c6469d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c6d524-a67e-45e1-8c5e-492545f5e847",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef073e43-2403-426f-8090-4c52d5fc5c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f27c695-703e-4ca8-8553-5ba9df36fe66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c9e039-59ba-4a16-9d26-7d814fbab547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b913f102-6320-4dc9-ace1-c658a3afc337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a05d35c-99ab-4de1-b050-ac68063fc608",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150c246f-3db9-4b6d-b677-5e6700c230a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f419fcc8-213f-4408-b280-e26586899fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d27df37-140f-4816-95dd-1c3d86b8ea6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fef41b-3db8-4a60-8b0a-9d2c505ee562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62983c9-bf69-41ad-8101-09390be7d0e9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc5074d-e70e-49e0-9a6d-236cd7a9d9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc52f64e-cd06-4b08-8509-d90ee0b76aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd4bf68-3361-4e0b-b31f-ef02cc6769cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e793a8-0625-44ae-8da8-f6611dff4513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed06ef2-c548-40ab-a9f3-e1eefe17043f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d84b85-5b8d-459f-9c3f-68b82443f767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9a5696-d745-4c07-868a-792d8e09ba2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10c9b03-6aeb-4e08-bf98-6ad3de525fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4592b95c-b5e2-486c-a8cd-5738d7323685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ba1abd-2947-4cb9-bf54-7d1649c2379e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299ad7d5-2039-4b5e-be5a-f16d9b37edcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6805d164-d9eb-44d7-8ba9-c65eaa4a1e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fde597-9115-4137-9484-e083db6ff32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd911481-f4d6-4518-8815-1fa1d2d33b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9df6dd-5bf6-4b32-90cd-898622f0aebe",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e35a3d-12d8-43c4-8a5f-98115b9c0d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a24cdc-ce53-40eb-9803-a207f4a13b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5664b707-7485-4a19-b0d0-8d9c836b8dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5aecb6-f892-413b-8727-789922fcd6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb73728-f3de-4f74-a826-7db48155bbf8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436fa219-05b8-4111-8808-6df4a7d99952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd24eb47-0284-4261-8c37-e69146fe94ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8adbecf-c2e3-4f28-9657-c701cfb97c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5449f52d-6d37-433b-ba35-bae94b5b3fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b711de24-40ff-4025-8347-ea8cca1e1e25",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8029e20b-debf-46aa-9756-88d984322fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bae998f-f6ef-43f2-ba2c-fe24b2681791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a540e253-f629-495f-8c9e-a91adbae9c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bdaaa1-ba29-4112-b581-45cbf18d740b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d6a9fb-4fe8-4cd6-8ea7-aa44f0d31cda",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924afda1-f68f-4b6c-b6f5-c32c2353d2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67db0b58-05ce-4aad-9f6c-a2971282af74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f29c889-31c6-4112-b2f7-3a50a579d6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e2a50c-06d5-4462-8baa-0c79bab50d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d38b51a-1b81-4136-968c-e3aeae2ad6f3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d09805-b736-4854-b561-39bc710c281d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e59357-ed34-4621-aed5-adc1f39490bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012df442-e223-47c3-bac5-3bc895bc3838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668570bb-9c03-4bdc-abbf-b199d4b90b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6df6b3c-fb47-4e84-95a5-8ada28f211e2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f353d9-9f0a-4b2c-898b-ef3056379ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40a95c4-5c93-4624-880e-a6568f9de576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fa8a46-13ac-4ca8-a2a9-6364b3bb9eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9382992-a00c-4df0-a08f-7ce01217c3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75f4c01-665a-4280-820e-6cc18752281b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf3a1e-0e94-45f8-817d-73f0b4c41704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d32c15-caba-4289-aa5f-3a51f779ccd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b211a-6aba-4f83-bbad-59fd2925d83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de9caab-836c-404b-9589-f0ad22ee0686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae3e85a-ce86-491a-99dc-18f8eb41150c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cd848f-2176-47b8-b6d6-8e9d2d15f4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43bcb008-7955-4830-917c-aec62a67a1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e8659-8737-461a-9b01-77156bd516a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fd69aa-6d6e-44cd-8bd2-7d8d071bf27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f59fed8-2564-4387-9988-ee6b40b5f52c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3f2d0f-cbe1-49cf-aa8e-cf37e24e0e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ca7422-669e-432b-b088-a0caa34a714e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702afdc6-8add-4e34-93bc-fc72a1922f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b68ebb-49d1-435f-b484-d2aa2175a886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030f7b71-fa8e-4afc-acf8-f3a07373052b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5960bf79-0844-4a31-8f80-5cd9fba3324d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092c443a-431f-48d4-9c2c-82e5490d2e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873a560a-5195-4f88-8b3f-bc693478ae54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b99fc59-fff3-4bcc-be89-33e6c915aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2ef534-4c7c-4a46-bc19-c216235dbbe4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6073eb-00c2-4ec7-abfd-8b85c0569357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b308bd5-e33c-4489-bcb8-c73c17bfacf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ada5884-bf17-4f04-a335-78d9e8b82657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c767a71-46bf-4f16-8346-a14b68ba3b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea29f719-a0ff-445b-af21-e35c0db4deac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067b4deb-b8b2-474d-a9d5-410b616a6a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004c3849-3957-4702-8d24-75f3443e02e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eb4986-bee8-4d9e-ac79-cf70ac3b1745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a7db95-4970-4bb9-8333-65b5d931f276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1495973-d038-42dc-ae30-992a9a6111c3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f8c42-a04b-47db-a706-62ed5a676f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9f3731-6d23-4fd3-92ce-c8385cf514df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43129e3-1b32-4d28-88ab-b6cc0fe7c5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240c9700-5ea0-481d-8843-68eca2057a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdc46c6-c746-46c0-b137-fb0d2d9ef6af",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e1a368-52ba-4708-92bd-fd6db7d76803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5bd3b3-4b1d-4f12-b24f-6b1d576bc1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e38d6d5-4ab0-4b34-9f22-d1b0e06f28ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b53714-8dee-41d5-881e-f1697a06c155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1d29b5-8196-4606-9341-9cb353792adf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b86f93f-ba32-4c44-90e0-23e80c9bea9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290b55e5-c9ba-40ca-92d0-7b4b7a41a37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49018ff-c527-455c-998a-e158982996f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11283331-18ff-486c-a603-0b106a91c5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31591ee1-c9dd-4373-872e-17f3885c2e98",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f1c03b-87f7-43b5-839e-660f4fd20628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a705a332-0bab-4ac1-89c8-cc2c54793b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28be13c1-7563-4e5e-ae52-ed045ee54fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87d9ef3-f34b-4138-a702-0652f0513fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e980787-84e4-4f65-8fc8-fd82ceeeb338",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f412895f-b23e-4a8c-b068-df68058ed7e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386eec61-53ca-4f3d-a480-f397bdd83083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d183844-65c9-4f9b-a190-5567637ed6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338c832a-4a99-4650-9480-b78242258a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd8e12-9d5b-44d4-88e1-a67d7c98c44d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9022b3-a191-4172-8bcf-ad43aca39428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f06c344-f923-4311-a8b9-0e6b5687eba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ab0c6b-3b83-4c27-9c8c-0f70586f896c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c1768d-e6de-4521-8f11-8524d0e479d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e470e40-2c73-45b0-b043-fd6cb817cde5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d515701-e524-4da6-a052-1b767ac985ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc8be78-cde1-4c19-802e-f9fa87757612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8906951a-526b-4455-a9c7-b15c8ccc43de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f09f09-a11d-4d50-9583-565b194d3ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a414e90d-bc53-471f-8eca-94d57220f704",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a59cd2-874f-4222-a60c-a7792d9c9b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7b5617c-2a8a-4d61-a312-a407747b7eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704ab01e-b7ee-48f8-b0b8-1cbe8be1395e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0d83c2-47a8-416a-b98b-42439634e39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6367a6-7a83-4450-be0d-a7c64dbc26c2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee11cf7-7ce6-435a-9d74-6a58a2b30a9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96a009d7-30fa-4dab-a4f6-91acb14e3753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de31e28-2ec1-4f4c-8996-efcad6ca8a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ddfb69-87ee-41e7-afe8-a705eaf80561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7343c8-4d59-48ec-8d12-71d56f0c54ff",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecf3ae4-4436-4879-a84c-b551e7662a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c8f5de-cd75-451a-9a87-44821e5a95c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b223d7-3743-4083-90ba-17476aed0b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766b8820-ae14-44d5-b776-6e2abef51fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83012f74-d03f-49a7-b7f6-f854c6b57aa6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b231ca-d764-4240-b550-dbb656787139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059cab67-b697-4f66-8c07-c30e3f633614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134056c5-37a3-4c56-ac1e-7fd3b5ea9868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c52cb6-c816-4498-9b50-c69e472ed1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e24802-7b4a-4dd0-a061-4add36b66bee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0266675d-2e37-4ab5-a033-e1395fbbf0c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8eca0c-3567-46ff-9cf4-d93afc25ce96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51e0783-9140-4622-aaf5-2eaa31958a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bb03a0-43aa-42c9-a3d5-41bc68f0476f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7271d337-80a8-4113-a3eb-d74cee55a9c4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c30653-5e85-4b22-b6e9-879960d7d9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbdf5838-6ec6-4ede-b5a8-41f3ae4ae7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72da828-748a-4494-a4c5-b307701c7a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647244ce-50e9-4a47-826b-4973883a5681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6510688a-63c6-4ea8-8cbf-096ccf3aa4b8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c01239-0f72-4471-b99f-d727361c7f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f451ae3-fccc-4914-b0bd-6f754803be2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b129e-4ebc-4cc6-881c-e4f5f9f266ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d88a85-64b9-45d5-b099-8a1aad564740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c274b295-5dca-4424-9787-208bd22cf02c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82906b0-0a45-471c-9799-44125a937768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89417c7c-f252-4fa7-89dd-e4035dda5d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dc6b07-77e5-4915-b08b-2efd09aab7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6173612f-7900-4adc-9ba7-4c341806e0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bd4d2a-9d1f-4bc8-bae3-a088d14e4176",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad389dd-24e1-41d8-a3e0-4dc52475886b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4491e1b-ffec-4281-8da7-fd15e47bc360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d137ab3d-1814-4ff3-b5b2-fb03634ae5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e60fe2-61ff-4cf4-8dd7-7122676cbea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1375f4b9-675e-45bd-b69e-990ec8a968e6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4280db88-c29d-47eb-b89a-404b4cdd2549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed4b905-ade7-4602-b5d9-4c667376167f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332b4164-53a4-42f0-ab3e-e5d309124a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f9c1c6-f18c-4ae5-ac4b-b6029d99e41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85de4fd7-c916-40f5-b7ee-f84258bbfd9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baee6c5-e14d-40f7-b5a3-8710bb0dd120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ab54f9-627e-40e9-a2a4-2cdd66265b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb34d88-cbd0-4257-9398-336163d400eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f1a513-80e8-4b7a-933d-82451dcf78c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53711de-7edd-474f-9333-1efe5e74cbcc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ef3cf-ec3b-45bb-b2cf-744365ed4e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0219657f-c14d-4926-be64-156de412af13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26190863-ce40-43b5-98fa-c246b7f91fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af2fc3b-1f1a-4d8d-bbe5-0508cb3ef25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9530bc-58cf-4cb2-b5ba-bc4b0594cbb7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d9a44e-27ae-44b3-91ef-a44f65507609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03951f9a-2a32-4a47-a093-ec5e85de9a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb36b11a-522f-4549-b812-6fdcae12966c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d01e1c-ed4d-455f-8043-8a6cbb56022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80541cba-d29d-4de2-8913-25b1d5aabf05",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f67a908-205f-497a-aba0-1db988eb3f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e8b50c-fc09-449b-ba12-3d31703318c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff16bd4-debf-4698-a86c-e2aedda15583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9cf515-a16c-424b-ae3c-689b8cb37aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12777ae5-0b04-4307-a1ed-52072bce22c7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bc626b-f42d-4ad0-967e-e7315b8908b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1e06d67-576d-4fbf-ab10-938283dbd9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2577b37-c6cd-4ceb-8136-911c8a6db624",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e79764-df20-434e-b7dc-4b6aeb5c3352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68c684d-44e5-446e-95de-0577e59434c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b96879-12f5-4793-9eee-dfe25714225c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ebb496-da0d-4e4c-9a41-53af92f30a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e7ebd-e8a5-4ec8-9ab7-cd62791a0138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97504aa6-c194-4042-bda2-fc75279fe14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3561bcb-d87e-4e7b-8eb9-c68ef369517d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db7704b-85a8-4867-bbec-db71099f4140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d60469-cd2d-45eb-9ab6-3e04b7ba3534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafd0245-d4ef-4501-954d-9055a1aa7282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc36bd8f-845a-43bd-9b55-74ba81c2a34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10f9b11-4682-4c29-a106-62a56c3293a0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dece5d0-ee7b-4560-8a10-b14367c16757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d4e9c3-d570-47b5-9bc8-fa3f750c2872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4354b48c-280a-4a08-9e90-0870e0c5a274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950fd6f3-6e69-4ccb-9740-d8ac32b5f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d940d38-d5c7-409a-ad98-2d84d92a2ecf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce77c51-0c8b-46b7-b2a7-327e3f08b667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef5d64e-eac3-456e-85af-aedf91d0b6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea73c331-3cf3-4bfe-9023-b5db25335f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25868153-779f-4836-99ed-4f842e32c3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20493a79-d44f-401f-b489-016d54bc5ca6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9830c606-8747-4a54-b6b7-82f83e6bc748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2e58e4-b73d-406d-b21e-1011eb8eb98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed45fe72-96b9-4e2f-b437-b86f69e5af97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0117b46a-72e2-4093-98c6-1ebd37d109d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d37a15a-b8b2-494b-904f-b916d42d9e21",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdbc25b-68f1-4fa8-8722-f4d44f0e24fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5d1a81-fb9a-4109-8e59-092e53247b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c055da-89d6-40db-aee4-1600f7ddf9c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb91a3a-abc8-4dcd-9303-565264dded35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1e97ce-d0f8-4397-adc4-0f64761eba4a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4064e003-f596-4f2d-a128-c11bc4d14357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519f74f5-526f-4dac-938a-13dd3bf68273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dbc6d7-0940-4422-82f7-0b60de66bbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c9a1ff-68ea-4b4c-b3c1-a5e1e7c22c2c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8b540e6-7516-40c6-9d19-a009c01b3d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24b01fdd-1a9b-40f2-b22b-047d43c8ab82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6aa569d-da23-46e7-8d03-d2454ca8381e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b3b0ed0-7c58-4013-8d1a-ba8e1d359840"
                    }
                  }
                ]
              },
              {
                "id": "e9621d16-8f07-4e8c-b92a-b83a96db9901",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9679c190-b2ce-4542-bd8f-59bbaa6b0add",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77f2116-fca9-4646-8987-1cf942fb4d58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c1d197a9-4501-4888-853a-40ae284e8860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5f4d4-389d-43c2-8c44-f53c29df1beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6227f771-b6b1-4edd-8ef0-2daedeff56f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f87e6ba-883d-4625-aaaa-8f7f26b7555c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6c4426f-0a0f-4ccc-aac1-d56b2be98efc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "613eac43-2e22-4d4a-812f-d034fa5a0601",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "266dc554-18de-4d4d-acbe-2745d26f8827"
                    }
                  }
                ]
              },
              {
                "id": "8fbcfc69-4bc5-4bfd-93cc-47bf3ec73369",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "07d61b48-b50a-47a9-b41f-c6a030a5c40e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831b1f1b-d175-4726-b983-9de080b4172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "adc26531-fa13-4757-8ea6-0fad345c4372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caac2cc8-d194-429f-a2a9-41d565c4b39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06aad72-8dea-4bb2-806e-9204d61b178d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "920a0413-25b3-402a-9073-e9eab43d4e67",
            "name": "Positive Testing",
            "item": [
              {
                "id": "09a7881e-6db9-4998-a1db-40c6d37c9eec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6891453-fcd3-407b-9bcb-4e81d4d01cbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c1dcc891-084d-4b41-bae6-fd7e1ffb66d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97ace0e5-4646-4f21-845d-314e595cc1d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "117ed92b-caeb-43ec-b3e5-c7a2e0779c0b"
                    }
                  }
                ]
              },
              {
                "id": "1fcba263-70a4-4ddd-92b4-7722da9206ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8904efcd-1e86-4296-a941-495d6b2aec6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8e75bf98-f350-4cf8-ba18-495f80d753e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e732a3ad-ecaf-48c9-8592-1050fb14e640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd77ac4-b86b-438b-b39a-94ad01845c0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "962f82e6-9197-4c52-a265-1ee6b752e3de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fff7585e-bc2c-4d10-9c06-d282532ad9de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8edeff2d-9776-4dee-b146-380d42fd7d20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "175fd2e6-aa8a-40a0-b0ba-9ff6b3331f1b"
            }
          }
        ]
      },
      {
        "id": "3217f466-006c-4390-9167-871178e82de2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a1606692-6517-41b1-8143-32145f05663c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88c3bfe8-37a2-49f6-a278-1e7ef2c495c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d130abb-3eda-43c1-87df-59c8aadcbebd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97020acd-d36a-42ff-ac2f-7c29643ef0dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "81a45706-87ef-4833-8a3d-2daf93beb3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fa74c1-051c-44e5-b5bc-5e8c484a3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6ac3e65-4da2-4fdc-8a18-a79d82fc01b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55765fdd-23e8-4a98-8794-2b3583427be2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f2d203e-6a8b-4605-8d68-f3323a3a1609"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3dbe517-e3a4-4a83-a80d-316b2ffbc784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55a97b7c-ce14-4d9a-9918-6187da8f05e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71e59b56-f3df-4dfa-9307-fd17f0319e35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "88e4397d-68c8-46d1-be55-da19d107b208"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd7ce877-ba0d-4a6c-97db-864fb655117c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2933de53-a36f-4fa1-84b3-7aa3701a03fc"
            }
          }
        ]
      },
      {
        "id": "d6b13619-b243-47d6-a773-6bd5e35cfda8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5913f01e-c7ec-4dce-b854-f69aa24244b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5568d663-59cd-49f4-83c9-464115513e5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0068c39-9870-40c1-9151-f9ef62bb4fe7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ab260a-a3d0-4419-9e74-ee80d9c746fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "378ea3de-0729-45e9-b948-81c1633fefa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3610145-02d1-41ae-aa58-fcb9101db701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01986c1a-5090-4035-9ef5-c1d3e99d1f30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81eacadb-fc37-4922-9160-3fc6244487c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "040e9c56-0705-49dd-9584-50e5b80409bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98697986-5ad0-4019-b9ac-5010d0c3584d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "462e33f8-5735-40d0-84b8-56adc4ead46f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "342306b7-abb8-423c-80c8-7587eccd175e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "275189c1-b733-4e05-aa64-96ec7a245ce5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60493947-4aae-41f8-a056-fb4805819acb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a709ad3b-da7a-46e5-926d-63fc715bfd36"
            }
          }
        ]
      },
      {
        "id": "8b72edc8-845e-4a82-85df-28d54c624453",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a1f83e1b-e702-4f19-9986-3b3fbb6d9e41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "087b47b7-e233-4b5d-a00b-105a231c1c14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef11aefc-14ce-475c-a549-147f8e48416d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a47b5-b78b-447d-9b14-aa7e651c51bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3f3657-bb97-4d8d-b335-c4b6896377fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6e6e21-3e08-4e4b-955a-f6880efd8fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb3343ee-7a5c-4008-b7ce-9707fd93a2d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95aba564-5758-4572-9315-ed7b4a546036",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9240786a-d73e-47b9-bf78-05288112c205"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1146952e-41af-4b92-b675-64f48ce6a2c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72035589-9b5b-4bfb-81b1-9ce0984027a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b7a1cbb-0688-4650-a1db-4c9a76c03dcd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "186a4831-741e-4400-a8b7-ded4a079a499"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fda6c8f9-b0da-45f6-9e81-6bc2e8690715",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "116137ab-c326-4842-ad0b-24fc2976a700"
            }
          }
        ]
      },
      {
        "id": "078617e3-35b9-4339-bd6d-8db92b7ba695",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5af2947-672e-4835-a2a6-96965e9039b2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfed7c7a-1d72-4b52-975e-ca81ef6fdb86",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2f11322f-9dfc-4b1d-ac6f-1118f3617eaa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bda37c4-8651-4d39-a7f4-8ae5d2408454",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24af120b-8744-4ebc-ab84-e25b5afdeac2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 139.78968253968253,
      "responseMin": 9,
      "responseMax": 11442,
      "responseSd": 929.6289408529238,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715906200617,
      "completed": 1715906244052
    },
    "executions": [
      {
        "id": "29051081-d195-4c8b-9ffa-0400ecb4ec58",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5fa74ecd-d5a0-4534-8991-6b4bdfe948f6",
          "httpRequestId": "b5905f5b-0b18-42b7-b08c-719ddbeef4f7"
        },
        "item": {
          "id": "29051081-d195-4c8b-9ffa-0400ecb4ec58",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aa1030fa-d49d-4b29-b34a-01775b5f9735",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "94e1d454-01e0-4b26-89dd-06649ad3a3e9",
        "cursor": {
          "ref": "3efe1ec2-5446-4738-beab-2b722adcd586",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "187bb4a7-7c2a-4e40-b973-8ad69e8507d6"
        },
        "item": {
          "id": "94e1d454-01e0-4b26-89dd-06649ad3a3e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4278600a-aedb-4024-92a5-27351fe86483",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "58fccb6a-ce09-47b3-bbeb-055a4042a9eb",
        "cursor": {
          "ref": "e9011754-328a-4127-85f5-a7b7e20c50c5",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f1096e27-eb2f-4f04-b410-a8bfd38cdde3"
        },
        "item": {
          "id": "58fccb6a-ce09-47b3-bbeb-055a4042a9eb",
          "name": "did_json"
        },
        "response": {
          "id": "55080ad8-a7be-4616-802d-2a0b48bbfa26",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2723f556-3888-4e12-bf2a-401d84212619",
        "cursor": {
          "ref": "f9cac8a7-d58a-404b-82f5-800db707b6a3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6a1b2ee1-d452-407c-9956-206a611cd9dd"
        },
        "item": {
          "id": "2723f556-3888-4e12-bf2a-401d84212619",
          "name": "did:invalid"
        },
        "response": {
          "id": "a38480fb-8ad4-49d7-be05-97ac4158961d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 460,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2723f556-3888-4e12-bf2a-401d84212619",
        "cursor": {
          "ref": "f9cac8a7-d58a-404b-82f5-800db707b6a3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6a1b2ee1-d452-407c-9956-206a611cd9dd"
        },
        "item": {
          "id": "2723f556-3888-4e12-bf2a-401d84212619",
          "name": "did:invalid"
        },
        "response": {
          "id": "a38480fb-8ad4-49d7-be05-97ac4158961d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 460,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49873013-febf-4d6a-8242-1aff7ee53f13",
        "cursor": {
          "ref": "97a886d9-00a4-4fc1-9e42-9318a7501a9b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c3c67edb-a5e8-4ea7-8793-dc464d2c4958"
        },
        "item": {
          "id": "49873013-febf-4d6a-8242-1aff7ee53f13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8857df74-d04b-4cca-ba7d-fc131a70ef2b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c85178-fa87-4d84-a97d-a020fe7bee61",
        "cursor": {
          "ref": "f57c9b19-160d-4f5f-8f51-ee3c8db7eabd",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fbba7f25-fcd9-480d-b351-60a22966f48c"
        },
        "item": {
          "id": "41c85178-fa87-4d84-a97d-a020fe7bee61",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "725cd953-7966-4401-81f6-476cea1667bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96bd91b-6ecc-4a91-ad51-6ee9c4af59ae",
        "cursor": {
          "ref": "fe53f760-1b5f-40d9-9636-e194ac5fb0cb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d35f1a70-5b63-41ca-a43f-ceeb443b250b"
        },
        "item": {
          "id": "d96bd91b-6ecc-4a91-ad51-6ee9c4af59ae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d854fd7c-7c60-45ee-8f8e-8b0b60b9e3e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46747cc8-fca9-4bfa-87b4-6f3b9749de5f",
        "cursor": {
          "ref": "2b2c576f-47d4-4564-b513-4c87ff081f1c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "58829fd6-a8ea-44f4-94e7-c32e47cf5d46"
        },
        "item": {
          "id": "46747cc8-fca9-4bfa-87b4-6f3b9749de5f",
          "name": "identifiers"
        },
        "response": {
          "id": "060a38e7-f0cf-4e5e-91f2-0746428d8e73",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a04ae0-559c-427d-8abf-1112f19256d2",
        "cursor": {
          "ref": "18e892ca-4811-4f07-9c4f-55bf58c95658",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f94446ac-8a23-40de-9f6e-ea77241a6bd6"
        },
        "item": {
          "id": "a1a04ae0-559c-427d-8abf-1112f19256d2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9cba723f-07bb-494a-a6d1-dfc61b4aa970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8764fd2-1cdb-4d2a-bed7-4f6fac2d133d",
        "cursor": {
          "ref": "c7308846-271a-4880-84a3-0568b3c8a84e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "811a3029-6154-4832-b63f-0a88b28de29d"
        },
        "item": {
          "id": "f8764fd2-1cdb-4d2a-bed7-4f6fac2d133d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8fa282bc-d4aa-491c-9df9-a085b63767ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4912d98c-5202-4325-80f8-3b2636f5072a",
        "cursor": {
          "ref": "40bf14ae-982f-4014-b4e6-6e28ddc50f4e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99666ddf-e077-459c-bede-ff915355ff31"
        },
        "item": {
          "id": "4912d98c-5202-4325-80f8-3b2636f5072a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2b7cf503-912e-4467-aea7-4f6e625f8967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373da01d-2b6e-4bfb-ac40-e583efa53c47",
        "cursor": {
          "ref": "4c814516-95e7-4b13-ae86-b5f6808c9379",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d9d67499-56e3-4971-bfda-1f7019b9cac0"
        },
        "item": {
          "id": "373da01d-2b6e-4bfb-ac40-e583efa53c47",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dcfb804c-de41-4e9c-b583-5ffba413ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54af0e2-a73c-4d8c-bc62-1f4e0183187e",
        "cursor": {
          "ref": "d89fb16a-a727-4c07-b1cd-10da1d136ffd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f5949295-a4c1-47ef-83d1-e3b6b84bfea8"
        },
        "item": {
          "id": "d54af0e2-a73c-4d8c-bc62-1f4e0183187e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "08bea464-7ff3-45c1-8df8-8d02d7807481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f048752e-a87d-4d97-a887-7ff22fe877ee",
        "cursor": {
          "ref": "cbb60087-3fd8-48e9-9fcc-14744dd8cc0e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e57001f0-f597-4777-ac90-1979bcb2a61e"
        },
        "item": {
          "id": "f048752e-a87d-4d97-a887-7ff22fe877ee",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8ba9db84-60fa-421b-9744-ff8060b3341b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0206503-ccb0-4ea6-a277-f7f970714251",
        "cursor": {
          "ref": "df947f0a-b941-46cb-a359-4e72998b4ee0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bc224925-cbf5-4410-a8c2-5ad6cd17e18a"
        },
        "item": {
          "id": "c0206503-ccb0-4ea6-a277-f7f970714251",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "070f0936-63e3-4ec5-811b-6ba350de6d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa4d23a-b622-4d13-9b53-af9e6e4ce78d",
        "cursor": {
          "ref": "671ecab6-2378-43f0-84fb-b845e3308e85",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "72476f49-2d4a-4183-8d45-4fc7a8f23ea8"
        },
        "item": {
          "id": "5fa4d23a-b622-4d13-9b53-af9e6e4ce78d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d72a9090-46fa-45a5-bb4c-4365a520c647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45030171-21f9-4495-b93e-2014df99ef30",
        "cursor": {
          "ref": "641c0e86-40cd-4f12-bcea-fc913625492a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "44e51af7-fa0b-47af-b309-65608dc2456f"
        },
        "item": {
          "id": "45030171-21f9-4495-b93e-2014df99ef30",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9e8adfdb-1e8d-4d36-93ce-0b7ae585944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0896a35c-560b-49bc-916f-ba2827625e2a",
        "cursor": {
          "ref": "024730c1-9621-4936-89d6-de7afb4db7b1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "08b7ee7e-7edb-48d4-bd43-4aa00e9a15ff"
        },
        "item": {
          "id": "0896a35c-560b-49bc-916f-ba2827625e2a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "be68975a-cbe7-4f7c-9995-4ab6b5177e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae01c9fd-9d88-4134-99bb-27bba2163d26",
        "cursor": {
          "ref": "3df3df6a-21df-45da-a9dd-769f34107b49",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "93c3c8f2-9304-4785-8705-ea5279c99dad"
        },
        "item": {
          "id": "ae01c9fd-9d88-4134-99bb-27bba2163d26",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "010aec20-068b-4769-a5c2-31a316f51c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c4b7f3-32a9-416f-925f-dcba072d16ba",
        "cursor": {
          "ref": "41f87585-0240-4f85-85f0-1699f191bad8",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dbd90861-c1da-46c7-b462-2e86fb8486ac"
        },
        "item": {
          "id": "88c4b7f3-32a9-416f-925f-dcba072d16ba",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "159f7b2b-6663-4432-aad0-86a575ba658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c64dd2-5ab6-499f-a42a-c41bfdf1bb1a",
        "cursor": {
          "ref": "bfe554ae-b13a-417b-9e95-89f807f84dce",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5af0c573-e724-4e6a-8443-2db6dd06ed30"
        },
        "item": {
          "id": "13c64dd2-5ab6-499f-a42a-c41bfdf1bb1a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bb6265ca-1cfc-4c92-aefe-ded2606c383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd786d7-95b2-496d-bfa9-bec12459b49e",
        "cursor": {
          "ref": "f02c32c9-f42b-4b73-96e7-88a1fda4c97d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "744432b2-9d80-4fa4-b58d-5bef003bd437"
        },
        "item": {
          "id": "8dd786d7-95b2-496d-bfa9-bec12459b49e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f56f181b-2eff-49da-9261-282b32f6e6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f864de7-4ab7-4021-939b-207f9460bb5b",
        "cursor": {
          "ref": "b7a10a81-e6a0-4d98-b35f-f262431794d2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a9c3c7e4-54b7-4c2f-985f-220c35c27c2a"
        },
        "item": {
          "id": "7f864de7-4ab7-4021-939b-207f9460bb5b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2221b5a5-2410-4234-9936-cf98d6a27332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6a32d5-31ce-4841-b7c0-fdbd8d684690",
        "cursor": {
          "ref": "bca012a7-17e4-4366-8ee9-899217826415",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2e1a5396-2452-4d70-8e71-fffaf8272c98"
        },
        "item": {
          "id": "8f6a32d5-31ce-4841-b7c0-fdbd8d684690",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a4282c9a-171b-4b98-965f-fdc996dd571e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b507344b-5e5a-4faa-9bee-770eea042bcf",
        "cursor": {
          "ref": "c428acd1-57c8-47c1-a81a-cbca3d2adbed",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "073cd2da-22cf-4058-a3a9-69574bc37c54"
        },
        "item": {
          "id": "b507344b-5e5a-4faa-9bee-770eea042bcf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7e723a16-8955-48f3-9a75-2b0df44a071b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7661517e-67e2-48a4-b8bb-6ee75b720d1e",
        "cursor": {
          "ref": "8b69fee1-e9ce-40dc-88cd-1ccdc6eca3e1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "82d7dd2e-df59-4a61-b9dc-8648efa07e20"
        },
        "item": {
          "id": "7661517e-67e2-48a4-b8bb-6ee75b720d1e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f8908646-03d3-4283-935e-bf5a7b7d0a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9e8cd9-6a5f-4e75-a3f2-27f03ecf0b3d",
        "cursor": {
          "ref": "b1d17dc3-ee10-4f3d-b474-5e0c63000c19",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cb023e04-70d3-473a-b85e-1626b3368fca"
        },
        "item": {
          "id": "bf9e8cd9-6a5f-4e75-a3f2-27f03ecf0b3d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6b379c5a-7249-4f9a-8f92-c320283a41c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f979c172-a294-4d47-b9f6-e32f4eaab767",
        "cursor": {
          "ref": "fd8c2d22-54c4-4bc9-adf7-2d8085536f3a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a5899f31-cf0e-4285-9202-c6a4631da3e7"
        },
        "item": {
          "id": "f979c172-a294-4d47-b9f6-e32f4eaab767",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d243a910-879a-460f-aa5a-3a0aa2733b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b53e46-bec7-462d-b039-e34dd787c088",
        "cursor": {
          "ref": "af5118ab-2ce1-4f76-87d2-2f8871189d34",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c3a79586-8034-45b6-9269-90e07dcae0e7"
        },
        "item": {
          "id": "d6b53e46-bec7-462d-b039-e34dd787c088",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1c01b9fb-a0ef-4f30-90d3-5f56067a0c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21facfb6-b496-4aa6-8bc9-80edcdf407c0",
        "cursor": {
          "ref": "b96b61c9-c280-44ef-b7e4-a7afa28bd492",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "880117c3-9dc9-4b29-904a-a2a8918fa480"
        },
        "item": {
          "id": "21facfb6-b496-4aa6-8bc9-80edcdf407c0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ada42f30-6d17-4822-af73-522c7bda1a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5474aa3c-ef12-4f18-afa7-7be3792c060b",
        "cursor": {
          "ref": "7fb8c9ba-9bbd-467d-870a-ca653f66e402",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eab3be3f-82f1-4f89-8b4d-df7360f4c142"
        },
        "item": {
          "id": "5474aa3c-ef12-4f18-afa7-7be3792c060b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7ecc0cc0-23a7-4b78-8314-e6b2409457de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76887585-ac43-459e-8cf6-f864e1c4990f",
        "cursor": {
          "ref": "6874a230-72c7-4b72-864d-1e99e528e6ab",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3f8b08b3-14e5-43a5-8948-2e75086e84a0"
        },
        "item": {
          "id": "76887585-ac43-459e-8cf6-f864e1c4990f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "811480a4-b312-446e-9b68-350bac510e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1ceb6e-702c-4902-9bdc-3dd803b3bdb4",
        "cursor": {
          "ref": "bd0f17c9-c116-47ed-8052-0fddc6410a64",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5794b3d-a82e-4274-b8e3-4a83e0e717c0"
        },
        "item": {
          "id": "0a1ceb6e-702c-4902-9bdc-3dd803b3bdb4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cad6bff3-060d-472d-8887-f31a0b4f81a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c587fb-8d94-45b9-966b-aea013821c77",
        "cursor": {
          "ref": "950d611c-b56e-4e64-839c-ea66de5b06ec",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4550dee7-d9ec-4342-84b6-cf7b6ee0c236"
        },
        "item": {
          "id": "c8c587fb-8d94-45b9-966b-aea013821c77",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "12bc1901-038b-47ed-806c-e158c5f6dc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f91255f-16fd-4a18-a6b5-a8a525788ebb",
        "cursor": {
          "ref": "61fd0b11-9aba-48d3-849a-e82efb0c7343",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fe71eaa0-629f-4b43-80fe-8fa9763b6b86"
        },
        "item": {
          "id": "1f91255f-16fd-4a18-a6b5-a8a525788ebb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0449737f-5aa1-4179-a448-8932c404c9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed7b00-f193-4f86-906b-ccebbefdadad",
        "cursor": {
          "ref": "58696104-40e1-44d2-a629-cb8036344423",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b9540353-e0f1-4342-9007-2787f71b89a5"
        },
        "item": {
          "id": "85ed7b00-f193-4f86-906b-ccebbefdadad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "29031d33-8749-4537-9516-e927b42b8bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda9711c-b462-48ec-9565-e1aecb38f8b3",
        "cursor": {
          "ref": "78527830-0505-4c26-ad31-0af36971b1c2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "304bfa9b-01c4-4e9f-bdb6-4ed1ae0755a1"
        },
        "item": {
          "id": "dda9711c-b462-48ec-9565-e1aecb38f8b3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7366d4b0-bace-4877-8ac1-cf65b45c67b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e8538e-3f29-4b77-99c5-f93c527e7b5d",
        "cursor": {
          "ref": "68bc4ca0-a87b-491e-9465-5c69dbf4ae7e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d4c8299a-816c-4e33-bb8a-0ee46449dd7d"
        },
        "item": {
          "id": "f7e8538e-3f29-4b77-99c5-f93c527e7b5d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9ae3f054-f3f5-4201-a0af-0e2fc2fba775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea69ee06-33ee-4faf-9807-a82b418b0f55",
        "cursor": {
          "ref": "9ca0c400-8b3b-419a-bb40-fbad5b36f1bf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7e9379e9-1ec5-4ddf-a1c9-954b0c7da7ba"
        },
        "item": {
          "id": "ea69ee06-33ee-4faf-9807-a82b418b0f55",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6d02dc7d-3e31-4de3-a419-3ec0f68a145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f69c7ac-f583-4369-aba4-776f439f0a7f",
        "cursor": {
          "ref": "40c3b94c-687c-4eb2-b214-0a29df969a4f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "84873d89-e486-4056-a92e-b2949424f343"
        },
        "item": {
          "id": "6f69c7ac-f583-4369-aba4-776f439f0a7f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aa6a2493-0009-44db-b6b3-d0041d34f862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9114c9e3-6382-4d1d-92c1-e8fe93a41550",
        "cursor": {
          "ref": "a8e8af68-f97b-46f6-b637-48652808e02d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5c96ad38-cf5c-4625-abab-40abdce0401d"
        },
        "item": {
          "id": "9114c9e3-6382-4d1d-92c1-e8fe93a41550",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9377818e-da1a-4425-9801-d55b85c5d2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849200f8-baa4-491d-87fe-00052f810176",
        "cursor": {
          "ref": "4990dcca-c26d-4195-9b3c-2b390638e7cf",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b9f33d84-a5d1-424b-b179-09fce3f1b097"
        },
        "item": {
          "id": "849200f8-baa4-491d-87fe-00052f810176",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "51a1bf44-6c6e-407f-a570-35f10887cf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a97b46-c145-4a92-81fd-bbc2490a92be",
        "cursor": {
          "ref": "b385abf2-8b70-43e7-9285-aca24c86c89b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e77e5208-2052-4bcc-a69d-0f3d413f2238"
        },
        "item": {
          "id": "20a97b46-c145-4a92-81fd-bbc2490a92be",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "74def028-e035-4e8e-a352-7d3ae69aa0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6ee65a-438f-473f-abf3-dd57fb219d92",
        "cursor": {
          "ref": "143373c4-fee8-4a8d-89ed-b3bfbb7a555f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9d711a99-bb4a-40a3-abe2-38822feb2787"
        },
        "item": {
          "id": "5b6ee65a-438f-473f-abf3-dd57fb219d92",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e0d9aed-7962-462a-a8a3-8642b5bc3784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37abbe30-0d45-48e7-a6ab-0c4a57712b1f",
        "cursor": {
          "ref": "e3d1710f-70a2-41bd-b730-6c9d49c1f3b4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "48b09f11-4ca8-46a3-84fd-df0fc06f2145"
        },
        "item": {
          "id": "37abbe30-0d45-48e7-a6ab-0c4a57712b1f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1107ee91-d05b-4268-a07d-eb5e5acee2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07487dfd-f765-4dc6-8da3-51c45f741ba0",
        "cursor": {
          "ref": "3d63deea-f282-4e8f-8b52-faa284db046c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0b86106-cfb0-4ff3-95e4-a758c845aaf4"
        },
        "item": {
          "id": "07487dfd-f765-4dc6-8da3-51c45f741ba0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "af334bdf-d0c0-4379-a667-1f297134abc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31be827-0aa2-4c0c-a502-7258a34db198",
        "cursor": {
          "ref": "755dbfba-96b0-44bd-8800-898258ab03a3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "84ea25f8-40e0-47d5-a447-50e0e6797348"
        },
        "item": {
          "id": "b31be827-0aa2-4c0c-a502-7258a34db198",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "25611a71-5b96-404a-b3b6-5ce9a488b7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f11c04e-001c-4210-a509-1defc68f828d",
        "cursor": {
          "ref": "c9bdd3cc-3f65-48ab-b1d7-afd4f03ea55a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "df95ac68-2ee6-4aa3-9a15-08f88f118d9d"
        },
        "item": {
          "id": "9f11c04e-001c-4210-a509-1defc68f828d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ac477d1c-e27e-4270-bb96-dc9096d284cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115e4127-ed65-4e71-bb52-c9de0c80fe3f",
        "cursor": {
          "ref": "53bc7220-22f9-49b0-a1d3-f7b272dbc3d2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8b1f3dba-647a-42a8-9e6b-18e24d120a2e"
        },
        "item": {
          "id": "115e4127-ed65-4e71-bb52-c9de0c80fe3f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f6cd7ad0-1b36-4340-9a90-c6632558b29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8889c1d0-8539-405b-85ae-6f3db6070526",
        "cursor": {
          "ref": "d2586802-5a97-4eb7-9078-6f81a7a198c6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7d81d667-d47c-436a-85a2-0b1de2edb1bb"
        },
        "item": {
          "id": "8889c1d0-8539-405b-85ae-6f3db6070526",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "253c7547-6da7-4668-9f11-851eaf5d3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa6ac9f-dfa6-47e6-8ec5-eaaa6f884e00",
        "cursor": {
          "ref": "05c49cc3-4755-45a5-9a0b-8aa7f7220e9c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4869a33d-d837-4c14-be16-91aa5c9e5bc2"
        },
        "item": {
          "id": "faa6ac9f-dfa6-47e6-8ec5-eaaa6f884e00",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "46ef0920-fb37-4a40-b709-256d94fd56ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0808a061-d114-4a42-b35f-2a3aa2c91cea",
        "cursor": {
          "ref": "a0270b89-9a4c-4eb2-b806-9366e13aaa2d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c58f201-cd15-4a3a-9bc2-bc05152d9fc0"
        },
        "item": {
          "id": "0808a061-d114-4a42-b35f-2a3aa2c91cea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e73be239-cbea-4e18-92b8-e98a2452a4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6aa3eb-d9ce-4e8d-b0ab-f57b3229a99f",
        "cursor": {
          "ref": "8cd48262-2752-4264-bb1c-318e2f38fbad",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "427549ea-0550-4cff-92c5-c1e47dcd78e2"
        },
        "item": {
          "id": "db6aa3eb-d9ce-4e8d-b0ab-f57b3229a99f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "746cb4c2-87e9-49b8-941a-dcd873a47b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61880751-7e5e-4c3f-9147-924c14fb4149",
        "cursor": {
          "ref": "c4d14904-b05b-4b15-9bd2-783ab308a98d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3125befa-460f-424d-968c-d5deda37d45b"
        },
        "item": {
          "id": "61880751-7e5e-4c3f-9147-924c14fb4149",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d1b18d5-229f-4a6b-9a65-5a5143e23472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659b58a3-858e-4a15-b73f-b09dc2510f62",
        "cursor": {
          "ref": "2c3361c0-7d4f-4226-9997-09c9db9918fb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fd2a54fb-51df-4870-8d7d-db71bad0f2ce"
        },
        "item": {
          "id": "659b58a3-858e-4a15-b73f-b09dc2510f62",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a078b1ba-146d-4a76-a039-da3777df1716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b287d491-a419-416a-a2b3-dbc3b245814f",
        "cursor": {
          "ref": "6d4a5ddf-0c8c-46a5-b563-a442f2b5e41e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "62bb75b0-bee1-4b76-a3aa-c0679adec019"
        },
        "item": {
          "id": "b287d491-a419-416a-a2b3-dbc3b245814f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "71eeb370-2bec-43f1-9347-510d94b03bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5224c30-f6ff-437b-be40-a31c5c85d7f5",
        "cursor": {
          "ref": "9f7a9e5e-9ea3-4fce-8044-e842aaed2182",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7667e96a-2944-40c2-82c5-cc8a826814bb"
        },
        "item": {
          "id": "a5224c30-f6ff-437b-be40-a31c5c85d7f5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0c479ff7-e325-4a60-9338-dcbd91fe00f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b537da-4e91-4b4f-b4a8-624e451bbf09",
        "cursor": {
          "ref": "49a64bd5-e579-47f7-970a-7282b10a7cbe",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9696e4c7-e155-4b12-914d-aec509141b47"
        },
        "item": {
          "id": "99b537da-4e91-4b4f-b4a8-624e451bbf09",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c4f763d-7dbe-4968-8a9d-c51b63e0873e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd3f592-d4db-4c3b-96f4-afba781e3f29",
        "cursor": {
          "ref": "71a7dcf0-1a31-472d-ad3e-fb0623d77e4d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "348c2674-f851-4e8d-b78e-8b6dc25eec3e"
        },
        "item": {
          "id": "ccd3f592-d4db-4c3b-96f4-afba781e3f29",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b2145d17-b66d-41df-82d0-991321b4fc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986beca4-d52b-4005-8a94-4a218a2dd1f0",
        "cursor": {
          "ref": "5eac6c1c-7e25-466d-a283-a9c883660c2c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6e0b7f99-38e5-40f4-9e19-65511811978e"
        },
        "item": {
          "id": "986beca4-d52b-4005-8a94-4a218a2dd1f0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d7a2af6-a1a7-4f47-aee9-07552f58ebb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae90fdcd-782f-4c09-9641-402c0554acb4",
        "cursor": {
          "ref": "ee200bde-0234-43b1-908c-29cb565781cd",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "beb27405-5fe7-434c-9df6-dfdd6d3704bb"
        },
        "item": {
          "id": "ae90fdcd-782f-4c09-9641-402c0554acb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4c4e1721-ac77-40d4-99af-0b8d85c6ed34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a589776-73ba-4cc9-b94b-a6fe8ae307f1",
        "cursor": {
          "ref": "2988afed-359d-42a1-9335-ae0850930ee8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6226dc59-c95c-4b38-aa2b-e562be275b66"
        },
        "item": {
          "id": "3a589776-73ba-4cc9-b94b-a6fe8ae307f1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0207603c-e5a2-450a-ba9f-c0cd2f9a027e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6455e-3246-4159-83f4-946721f69e7b",
        "cursor": {
          "ref": "c41629ea-9e1d-4168-ac49-132239120ff0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "70edbc59-c159-4e9b-9951-0ffaf5d9afb7"
        },
        "item": {
          "id": "38a6455e-3246-4159-83f4-946721f69e7b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "375ada7a-b110-4188-b21c-918aa6be1dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75117e0a-4c58-4f88-b933-084eaace6fde",
        "cursor": {
          "ref": "bb59d6a2-ef6e-475d-921c-2fdc99a4ae78",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "502afe9e-103f-4393-a707-949acbe41917"
        },
        "item": {
          "id": "75117e0a-4c58-4f88-b933-084eaace6fde",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "12314110-7860-4138-b3d0-08f290f0c02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6da663-a1d0-41e5-a557-01ff3b2d1773",
        "cursor": {
          "ref": "75dce28f-bad3-4448-8d70-d4a91648eb25",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "83bbfc7b-53eb-48f8-8e66-aa2b293a1d0b"
        },
        "item": {
          "id": "2a6da663-a1d0-41e5-a557-01ff3b2d1773",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7f70e15c-3dea-4c48-99f4-1b9bede24f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c37cd-642d-4fe5-9c8a-2fd8e47eebb4",
        "cursor": {
          "ref": "c0578574-e47d-4f63-856e-e250528c2631",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "86630a16-7b89-4cfb-9034-3fc334c641c0"
        },
        "item": {
          "id": "3a7c37cd-642d-4fe5-9c8a-2fd8e47eebb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f279a4a2-f450-49a9-b17f-5a73472baec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41beedf8-1f4a-4854-9e85-7ed2175f9200",
        "cursor": {
          "ref": "d7dbab95-6dff-424e-b189-f8f96f8775c6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fcee7ce9-24fb-4c0d-8b65-a38e909f09be"
        },
        "item": {
          "id": "41beedf8-1f4a-4854-9e85-7ed2175f9200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7878bfa0-8c91-48da-a717-c224698fd1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4365c070-036c-4492-8f52-8e9def5a479a",
        "cursor": {
          "ref": "6e8c55d3-5e12-4477-9b53-73816db447bf",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "975e7e61-3999-4000-9a7e-e301125be550"
        },
        "item": {
          "id": "4365c070-036c-4492-8f52-8e9def5a479a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "679560a7-c218-4e4b-b6af-1b3b0a4a0867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f460ff-9df8-4519-a23d-99f797a642d3",
        "cursor": {
          "ref": "182ac30d-9f2f-4b93-824a-01270a692b22",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a90f93bd-c2d1-4b28-a746-5bf838a70757"
        },
        "item": {
          "id": "f8f460ff-9df8-4519-a23d-99f797a642d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1c6450ca-7c5e-4d88-9853-4da8801704ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea210ca7-a663-42e7-b7b4-bc6af4ae4be0",
        "cursor": {
          "ref": "c4cc88ab-099a-4508-9194-49b1abe766a9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e928f822-f1b3-4252-9720-0a0fbf504fc0"
        },
        "item": {
          "id": "ea210ca7-a663-42e7-b7b4-bc6af4ae4be0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "73175962-c8a5-420e-b445-e71dd9001955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5cc0c5-45a9-4da9-aa2d-5354e0c71d42",
        "cursor": {
          "ref": "365ae5fa-ea95-444b-9523-c2af30459807",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c7998fc3-9c94-45ad-9031-cd1cf74f016d"
        },
        "item": {
          "id": "7f5cc0c5-45a9-4da9-aa2d-5354e0c71d42",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4b913833-e325-49f9-806f-66cd295be77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a55a37e-327f-41f4-b588-8a3f88843299",
        "cursor": {
          "ref": "078625c6-2041-4719-9109-02f1e9e4ac9b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3d6e0162-e941-42e6-981b-bc32fe3113d9"
        },
        "item": {
          "id": "2a55a37e-327f-41f4-b588-8a3f88843299",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3842ca15-24a0-40ce-807e-7981b5f42932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c79566-5036-4d5f-b221-de2bbb475632",
        "cursor": {
          "ref": "0707bf3f-e436-4977-ada6-2c6b187ebc09",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1fcb64c5-2a45-43ec-a8f0-7c6cbfeb9031"
        },
        "item": {
          "id": "a3c79566-5036-4d5f-b221-de2bbb475632",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1b0e93bb-ab46-47a5-9c43-203340492c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453a1f27-d11e-4c24-870d-906402048d79",
        "cursor": {
          "ref": "d6f6fc2b-7ad2-42e6-a726-528a12c9f639",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f776a9d8-e5a2-49f3-ac0e-51dae1443ce3"
        },
        "item": {
          "id": "453a1f27-d11e-4c24-870d-906402048d79",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3ea66ae0-d804-4ff8-8e77-d55592af6297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2940d7fd-f511-489b-8d1d-9b0d57206e19",
        "cursor": {
          "ref": "511a28a3-69cb-4cb0-9866-807f58f158c0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f742c139-7d24-4a68-be8a-8166eccb3c4b"
        },
        "item": {
          "id": "2940d7fd-f511-489b-8d1d-9b0d57206e19",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3cabbf59-f486-4b73-9829-0b43b586bb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f56fa2a-6d7c-4cb2-8e4e-4e2b194ad2e7",
        "cursor": {
          "ref": "074b603d-4fba-4df4-b49c-10a5e8626eca",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bf0cf602-a938-4068-8f92-8e884d0bc12b"
        },
        "item": {
          "id": "7f56fa2a-6d7c-4cb2-8e4e-4e2b194ad2e7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bb86927d-3934-49c4-95c5-1d712a6aba6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5791bad-1746-4adb-a9ae-e26ac3b1f5a4",
        "cursor": {
          "ref": "08f56150-6a0b-4633-ae63-2cf33323ea9e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6c056463-599b-496c-94d6-ee69c9bd09c1"
        },
        "item": {
          "id": "c5791bad-1746-4adb-a9ae-e26ac3b1f5a4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "089f255b-d9e7-4ed4-a557-a4f32329b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2015671-8b5e-4002-993a-5ec7cff14f6c",
        "cursor": {
          "ref": "a0a08255-6c88-4418-a4c7-d830843e144b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3dde867b-db72-4b26-a538-daf52fb93575"
        },
        "item": {
          "id": "e2015671-8b5e-4002-993a-5ec7cff14f6c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4a2e7b46-fae2-470a-bf72-7dd9389d6555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7812e7d0-66c2-4911-99ff-5e4a56171555",
        "cursor": {
          "ref": "9a81fe54-2fbb-4ed5-964f-bc4ed7edff87",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f99ca11b-5cf5-4091-978c-81ad8c2c4bfe"
        },
        "item": {
          "id": "7812e7d0-66c2-4911-99ff-5e4a56171555",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "98929863-e553-4cb2-99be-9c430f9493a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2470be4-eec5-4f8f-8bd6-40d50c5c12e7",
        "cursor": {
          "ref": "98c484ab-9d9e-43e0-a98e-7ef387a0fd04",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d6648e43-8a80-4c7f-9146-06e8427be9d9"
        },
        "item": {
          "id": "e2470be4-eec5-4f8f-8bd6-40d50c5c12e7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eb653a3f-e5e0-47ee-b41b-461f767d92b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8271d38c-5afd-456c-9d9b-ca47efa0b175",
        "cursor": {
          "ref": "af0d9638-f677-4848-8f76-93c73bb69c61",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cfd2da19-429d-4f5f-8b52-98f3f5b0596a"
        },
        "item": {
          "id": "8271d38c-5afd-456c-9d9b-ca47efa0b175",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f2ee68c3-3e2b-457d-91d6-eb41405004de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ccc01-5a83-4a94-8d6b-5d0727497d88",
        "cursor": {
          "ref": "bbd1d746-b490-4731-b1f9-4cdc00e30d83",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8039b7c3-0563-494f-bdc8-86b96982e5fb"
        },
        "item": {
          "id": "266ccc01-5a83-4a94-8d6b-5d0727497d88",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "98422670-c761-4805-85c7-24548f736c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fd5243-da79-4892-acc2-bc19b09898fd",
        "cursor": {
          "ref": "d1af160d-6afe-475c-93b7-c6344c2b2145",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ee84f221-f350-48e7-bd41-63e538c3ff68"
        },
        "item": {
          "id": "35fd5243-da79-4892-acc2-bc19b09898fd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d0efad5c-5f37-430d-bada-896d90eeae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04889f84-2681-4fbf-b209-c244f8eee935",
        "cursor": {
          "ref": "e041296d-492d-49ac-a892-b27a4ac78827",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1ee021c7-a1eb-4f6a-b9e8-c3c714263f54"
        },
        "item": {
          "id": "04889f84-2681-4fbf-b209-c244f8eee935",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "195c83d4-c6d1-445b-a824-65e618fd01f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064d0b8d-f3fe-4e7e-a90d-2b2bd0a8aca0",
        "cursor": {
          "ref": "247c9d98-71d2-4939-9766-158fee9a9290",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "57b19031-69d8-4264-924e-9e29efca08fc"
        },
        "item": {
          "id": "064d0b8d-f3fe-4e7e-a90d-2b2bd0a8aca0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6fb379d2-f907-4c5a-8d1a-2b32aedda217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec1598a-35e3-443f-a82c-988e2a76d174",
        "cursor": {
          "ref": "d664a38f-cb2d-44a5-979a-cbb737f5a22d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "448df8ac-1dc8-485d-9a4f-f98094cb9e06"
        },
        "item": {
          "id": "eec1598a-35e3-443f-a82c-988e2a76d174",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20137bfd-bccc-4b1b-a20f-cd91b941fa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a2029d-8a02-4dd5-9705-05b10dfdc48c",
        "cursor": {
          "ref": "bce65f67-0a14-429a-bbbd-54f485aa9ce9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ec16d3e7-fe62-456c-97f3-9729edd63209"
        },
        "item": {
          "id": "29a2029d-8a02-4dd5-9705-05b10dfdc48c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "223e020f-0a45-4f87-8ddd-bd40e20d17b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3067f6-e46c-4d74-8f3a-ed2823d640c9",
        "cursor": {
          "ref": "08732ffa-b24b-44dd-a41d-43e73e05c139",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3402e1f3-f526-4cae-8c76-76b6c13a48eb"
        },
        "item": {
          "id": "fc3067f6-e46c-4d74-8f3a-ed2823d640c9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d6131df4-8212-46de-a190-45229cf5e684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b73614c-859d-4a5d-a861-2d62b6821950",
        "cursor": {
          "ref": "98e1d723-365b-4bf1-a6df-f28d078fe1b2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39d75f76-e149-4174-be73-0fdd0def8fc4"
        },
        "item": {
          "id": "8b73614c-859d-4a5d-a861-2d62b6821950",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cbb515d1-731a-4161-a16f-9a0abe5be369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a8babf-dcda-4b30-8242-98b4fa340593",
        "cursor": {
          "ref": "7af5c8ce-7f3d-4e75-b599-3b26f5a63f8a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6e2a1818-31b2-41ca-8c2b-fd6e6f1a006a"
        },
        "item": {
          "id": "42a8babf-dcda-4b30-8242-98b4fa340593",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a27f801d-bf99-4eae-965c-6915083ea63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d408c18e-76cc-43f6-809a-73dda71b5c0b",
        "cursor": {
          "ref": "9635f940-5c88-40ae-969d-c5c23b4abf2e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8c7709c3-9b0c-43c0-ac48-a8dcf1acff90"
        },
        "item": {
          "id": "d408c18e-76cc-43f6-809a-73dda71b5c0b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e07db4d8-566d-4e14-8cb5-c3da32235876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5ec18-497f-4cdd-9550-ee3a1f9cf540",
        "cursor": {
          "ref": "cc4b4585-c9b5-4817-8eb5-4f52be2d474b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "87039f1c-6a19-45a1-83f0-511676c41fb9"
        },
        "item": {
          "id": "bbc5ec18-497f-4cdd-9550-ee3a1f9cf540",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4242138d-c4e2-442c-8067-407f9d0a49d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a11269e-9165-4c18-ae4f-a5b9acbe9c75",
        "cursor": {
          "ref": "2cf6ae60-6946-4b1a-ad7d-fc92279c56db",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "34d98a41-76f1-4b63-9f25-d42e6b7a4efe"
        },
        "item": {
          "id": "4a11269e-9165-4c18-ae4f-a5b9acbe9c75",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "29fc89a0-3ee6-49ff-925e-14fe99f461a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3c9391-7ddc-4f9b-922e-2c4f1cf61cf4",
        "cursor": {
          "ref": "fe2edfc5-b153-4227-8841-c1d91bbc6546",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "216f8487-ef4e-4277-8440-95cc8dbeb787"
        },
        "item": {
          "id": "7a3c9391-7ddc-4f9b-922e-2c4f1cf61cf4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "98fe1e68-2be2-4ab9-b8e0-72ab5ec12630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9046f9fc-0751-452c-83b5-fab1b127f5b0",
        "cursor": {
          "ref": "43fc6429-c101-4ec5-beca-55bacbefbe55",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cd9cbb2c-f64a-4b0e-8b92-54691cf0d89d"
        },
        "item": {
          "id": "9046f9fc-0751-452c-83b5-fab1b127f5b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f4f466d9-c3f4-462f-8c3f-9be1ffe7a5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72374372-3016-477b-9857-dc1bacfec647",
        "cursor": {
          "ref": "7d05f588-30f0-4e82-92bc-4a2a2730f772",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "636c6e23-1767-4511-aa6c-b3f4b81a123c"
        },
        "item": {
          "id": "72374372-3016-477b-9857-dc1bacfec647",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "29f868ab-6312-4510-b18b-eb12b1937f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f514334a-98fa-4e8c-b8c8-e942a194238f",
        "cursor": {
          "ref": "7e2d7ad3-56cf-40e6-bafe-39a120f79430",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1613a35b-8765-46ea-8ed1-26fce7fc058f"
        },
        "item": {
          "id": "f514334a-98fa-4e8c-b8c8-e942a194238f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6856393d-c86c-4a02-9b63-0b6e5e64fefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f58f0f-ab36-48a0-89f7-82bcdf830005",
        "cursor": {
          "ref": "8f816336-4ca4-445c-86cf-ab46fdb91cef",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "080fafb1-f701-4072-9cbb-4fd9f706d5bc"
        },
        "item": {
          "id": "c0f58f0f-ab36-48a0-89f7-82bcdf830005",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9be43069-777d-407d-a5e2-e22e1b6ecf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d44c6-365d-41da-8516-7b6712147464",
        "cursor": {
          "ref": "c38b5ac9-ce15-48a6-ae2a-7c236d09e5e5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "afa00a5d-9133-4d85-870c-d35903a9816e"
        },
        "item": {
          "id": "b88d44c6-365d-41da-8516-7b6712147464",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "441b76e1-f047-433b-8d33-44e8f3f6e1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a865ac-58bb-451f-9db2-426fad86f312",
        "cursor": {
          "ref": "2d6bdea1-7b43-448b-95f0-a10cc2de6064",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fa5580f4-308e-40b5-b730-32bfffa4a7ea"
        },
        "item": {
          "id": "09a865ac-58bb-451f-9db2-426fad86f312",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3c32b24a-4485-49c5-b9f2-38454fe74f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328164b-d889-4fe3-9d02-b59368a7ccae",
        "cursor": {
          "ref": "38430aa0-5d4a-42c9-bc85-1b6415905d0f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "840a215d-70c7-4eb6-bef9-ddea652f5f8a"
        },
        "item": {
          "id": "7328164b-d889-4fe3-9d02-b59368a7ccae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "89512d6a-2631-40dd-b8b0-200bc600e563",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ead3c2-1670-446b-85c3-2245ecb67612",
        "cursor": {
          "ref": "b01e0881-d353-4ab3-9a89-088661b71463",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "15d7d67a-f91a-47f5-94e7-bfd25a1bff64"
        },
        "item": {
          "id": "12ead3c2-1670-446b-85c3-2245ecb67612",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dded6e3b-556c-4bd5-963f-cd19b08ff83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ac7a7eed-f2de-41e1-b7da-93d6445928b5",
        "cursor": {
          "ref": "828c4a29-0d09-4c50-89b5-474d802be262",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33d7ba0a-cefe-4a37-b95b-42ea2cef7e87"
        },
        "item": {
          "id": "ac7a7eed-f2de-41e1-b7da-93d6445928b5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ea702477-fb0c-4d42-a49c-ed46fd153319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1d77f6c7-e5da-4385-82aa-7d316beaf91a",
        "cursor": {
          "ref": "4e46c708-a1e4-4f1b-8295-5930cdd64459",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9923674b-f798-4f38-9ffb-185d637afb63"
        },
        "item": {
          "id": "1d77f6c7-e5da-4385-82aa-7d316beaf91a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bb79f8b7-89c6-4f1f-b9c9-40631a6d7487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6de0564e-4862-4cc0-8f61-81f0d38c6741",
        "cursor": {
          "ref": "c222687a-4f41-40fe-a684-26ee229a68f5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5d113bd4-893a-4a29-9455-48d1b23463ca"
        },
        "item": {
          "id": "6de0564e-4862-4cc0-8f61-81f0d38c6741",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7e136e42-908b-4599-8a90-9159a0e16922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1acd5828-2d6e-46e4-b73b-7783eba8f4ef",
        "cursor": {
          "ref": "fe20ebc4-afe5-4dc9-b252-d9143395ba96",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "27cb71ef-99a0-4a91-a9c0-98037b9e6186"
        },
        "item": {
          "id": "1acd5828-2d6e-46e4-b73b-7783eba8f4ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c0e0ef56-7665-4c74-b119-07ace665ad77",
          "status": "Created",
          "code": 201,
          "responseTime": 11442,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc5f7bb-b84a-4d5a-bf10-4ce0d0dd9d2a",
        "cursor": {
          "ref": "cd4a4138-c6d1-42d5-bbc8-ff79a6a92ab8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b761b083-563e-4f84-9c68-958520ec5417"
        },
        "item": {
          "id": "7cc5f7bb-b84a-4d5a-bf10-4ce0d0dd9d2a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "05a9b500-89ee-4f17-9f87-6ef91104fc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b9457531-2217-4d68-b847-f78c9b4f7977",
        "cursor": {
          "ref": "fd60f8f2-bbaf-4234-ad03-af729e65289e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c1236e59-a917-42c8-9a89-e8b98210cd85"
        },
        "item": {
          "id": "b9457531-2217-4d68-b847-f78c9b4f7977",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fe644ff8-8a1a-4154-b82f-b88d7ae06830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0b160832-671a-4097-94c3-3d2ab0f2f175",
        "cursor": {
          "ref": "78735e34-0205-44ab-b4d4-d9ed276f7ae4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2a75094c-de49-4a74-bc50-5e2bbb2c7598"
        },
        "item": {
          "id": "0b160832-671a-4097-94c3-3d2ab0f2f175",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc2914a3-7a06-4380-9f7b-b87f94dbf299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9d1a58-7fbf-4240-91c6-f6e691528ebc",
        "cursor": {
          "ref": "a3a75119-010a-4e66-a8f9-7af1960c549d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59d493b8-745c-4287-8af4-b01eec6c34d5"
        },
        "item": {
          "id": "7f9d1a58-7fbf-4240-91c6-f6e691528ebc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c747620d-f6fe-4bb4-ac52-1556766d73ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bbae9b-34d5-41b1-8403-28f325224d1e",
        "cursor": {
          "ref": "7a9c4df8-8f8a-45b7-8d5b-0d0e513aecfb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "95c6ee95-8d21-4636-b2bc-e5a0461dd045"
        },
        "item": {
          "id": "77bbae9b-34d5-41b1-8403-28f325224d1e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b54a1fad-8813-42c0-8682-e81591b5abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac2a60-1bde-41ea-b29b-762c3e515fe4",
        "cursor": {
          "ref": "a5e989da-5dc2-4489-8c7e-3405ae7af2f8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "baf802be-b93d-40e1-9c0a-f53f28c34f09"
        },
        "item": {
          "id": "0fac2a60-1bde-41ea-b29b-762c3e515fe4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d78cb14b-02da-48ac-95c4-9b1bcce5bb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b989172f-dc30-4ea8-ae06-464f926a436a",
        "cursor": {
          "ref": "b9f54458-b06e-4131-85be-e255b6141c41",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e0900e8f-6307-4fc2-ba74-e84b69cc032f"
        },
        "item": {
          "id": "b989172f-dc30-4ea8-ae06-464f926a436a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ab08c700-6be8-4154-a17c-26530da20943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8023a95-49c4-4d7e-aadd-d36fac1d8ad1",
        "cursor": {
          "ref": "46c4c872-4187-4237-9f60-a052a7573022",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "31cc9ceb-7da2-489b-9567-349826a9680f"
        },
        "item": {
          "id": "b8023a95-49c4-4d7e-aadd-d36fac1d8ad1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e24dc1f-ee81-4944-a62b-260152f25d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982a8574-5f17-4701-9de5-3f1a5453977f",
        "cursor": {
          "ref": "e71ddd13-9eec-4dcd-a19e-f89960651aea",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c5d7198f-0cd4-41e6-a3fb-00d33d9de3a6"
        },
        "item": {
          "id": "982a8574-5f17-4701-9de5-3f1a5453977f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "37162f5e-719d-4bdc-9f1a-50456653ecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a50eb2-0fea-47a7-ab57-8642e4f89789",
        "cursor": {
          "ref": "48fe9e05-c0b3-492c-a35e-0924a7dcd3de",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "21aa1e86-9800-44be-9f4d-f4669665ae92"
        },
        "item": {
          "id": "25a50eb2-0fea-47a7-ab57-8642e4f89789",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c9de35fb-6fc2-431e-bbbe-4d4220e6836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e276ad-1b48-41db-99d9-e696b7f9c556",
        "cursor": {
          "ref": "ba367218-7c13-4446-a808-bc1bc8fb05e4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "10592622-1b2c-43ff-9c92-4ecb48595860"
        },
        "item": {
          "id": "66e276ad-1b48-41db-99d9-e696b7f9c556",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7faf8610-1142-4e49-81cd-0306ec1cc1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb0be6-78bc-4d77-a118-7c40c703300c",
        "cursor": {
          "ref": "a3c8b719-a869-4c75-9839-f1c74a6a6f86",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6c144cb8-142f-4e33-b591-f555c0001277"
        },
        "item": {
          "id": "25fb0be6-78bc-4d77-a118-7c40c703300c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c74c84a7-8c08-49df-a4ed-0246e08085cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685e9195-a68e-48df-8c6c-048708622f2e",
        "cursor": {
          "ref": "413bff87-24fa-4f67-84eb-19a1d93b6d28",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ce2e1569-7d48-4f9d-940e-e886ddc057de"
        },
        "item": {
          "id": "685e9195-a68e-48df-8c6c-048708622f2e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "518f152f-41e2-43b0-8210-4d9476a7043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ec3b30-c58f-4ce3-ac56-0c0d670191d1",
        "cursor": {
          "ref": "8f6c540c-c816-4501-9f16-cddcef5d05c0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "21cb0ab3-af6a-4086-8813-8dc66c93f19f"
        },
        "item": {
          "id": "a9ec3b30-c58f-4ce3-ac56-0c0d670191d1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "08403578-7fb8-48f5-a726-f6c5c9a58b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fcd814-3e88-4d3c-a27b-8e834beb52a1",
        "cursor": {
          "ref": "38c2ea70-da9e-44e5-9723-11a79fddd807",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "784c48c3-9f22-43ac-91af-ff674a1781d2"
        },
        "item": {
          "id": "14fcd814-3e88-4d3c-a27b-8e834beb52a1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ff3702f-4f8f-48d0-bba0-11e734e19a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5953e9-7c5e-4842-a020-2fe43a2c13ac",
        "cursor": {
          "ref": "7489c0f6-e16e-463e-869b-de3ad3385a20",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a6fdcb7d-f5ca-4be2-913f-9b07ea79597b"
        },
        "item": {
          "id": "bb5953e9-7c5e-4842-a020-2fe43a2c13ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "44148c3c-4f39-4ecd-8bf8-3881f81468bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c51036-4cbb-47c6-8cab-8fd815eb31a9",
        "cursor": {
          "ref": "a4549874-e6f7-4ee4-9b6e-1a871287402a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "949bd2a9-cf44-4630-9e9d-99e53b8ebcec"
        },
        "item": {
          "id": "41c51036-4cbb-47c6-8cab-8fd815eb31a9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b746e1a1-789d-4908-8bc4-80654d01a624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18063cf0-ca08-45de-a942-3353ab04b0b5",
        "cursor": {
          "ref": "2fc79fba-b6cf-4e80-a01a-3935142e44be",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "af52fc6e-d3b2-4713-8648-8d6c77d02d6a"
        },
        "item": {
          "id": "18063cf0-ca08-45de-a942-3353ab04b0b5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e943c00a-fd7e-4415-a9f7-a366ceae2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af375a4-63a8-441c-9ac7-511f2ab49d49",
        "cursor": {
          "ref": "0d419f0d-06ae-4b53-aeff-79f8702342d9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "62c165ca-6138-446e-a6f8-572e2f432f7e"
        },
        "item": {
          "id": "5af375a4-63a8-441c-9ac7-511f2ab49d49",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1f04399b-d85e-4183-b749-659b165c053c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "5509e7d8-59dc-4c99-93e4-eac9ddb0b226",
        "cursor": {
          "ref": "d344a168-4389-47a6-acf6-22537698c9bf",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "09219762-0dfb-4391-8c2a-a0dd1c8a30af"
        },
        "item": {
          "id": "5509e7d8-59dc-4c99-93e4-eac9ddb0b226",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eac99bd5-8880-4322-8317-a24d94e156d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb31848f-3550-4be3-90e7-9f39f6846dba",
        "cursor": {
          "ref": "09210b1f-a91d-4d33-b94d-613f216c5b0b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8c1d3493-decb-4823-8869-006962f10eb8"
        },
        "item": {
          "id": "bb31848f-3550-4be3-90e7-9f39f6846dba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a64877b-14a7-4d94-8a40-2b93053fb71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047a042c-d831-4619-98c4-cfa461b9a306",
        "cursor": {
          "ref": "68f0bf29-1a5a-4f9c-ae5a-a62537a7edb4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7ebb14bf-0d05-4a75-97e8-fdd6222cc279"
        },
        "item": {
          "id": "047a042c-d831-4619-98c4-cfa461b9a306",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c60f2760-9df8-48e4-bedd-90772c015c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e28bfe-6437-4f40-b39c-e2256ced83c5",
        "cursor": {
          "ref": "8497123c-dfd4-4547-a7c0-096cdd26b47c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "04999040-ef8b-493e-bee7-0830c036dfc4"
        },
        "item": {
          "id": "79e28bfe-6437-4f40-b39c-e2256ced83c5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "55c13572-2b61-4ab1-ad00-88517a0f796b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2b51f6-cbe3-48cd-8a32-33dcb1dc5784",
        "cursor": {
          "ref": "16ff0e3e-760d-44a0-bd1c-dd7b6834ac1a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a30d8dd7-267e-4121-b4b0-ff8901368078"
        },
        "item": {
          "id": "dd2b51f6-cbe3-48cd-8a32-33dcb1dc5784",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb3b6e90-c20b-4e5f-a26e-7a04e7a9a6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9e6b9b-87d7-49bd-b6e2-78db44596fe4",
        "cursor": {
          "ref": "4b6361e6-f27f-4221-8945-664fb0fcbe8e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1060a190-2362-4cf1-9b85-222f1d478434"
        },
        "item": {
          "id": "9a9e6b9b-87d7-49bd-b6e2-78db44596fe4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9bc36a78-7c41-4310-803e-dd67a64b0d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4519dee-07d5-4320-a6de-38e61035166e",
        "cursor": {
          "ref": "4cc8e9e5-658b-4b4d-a4ba-deed42747573",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "02a4737b-28da-4cb5-8167-2b4beffdacad"
        },
        "item": {
          "id": "d4519dee-07d5-4320-a6de-38e61035166e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7645da5c-9556-491e-9198-e7a88a7ff632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ebb496-6b61-43cb-b5b7-16450ed163a8",
        "cursor": {
          "ref": "d42fe823-d452-43c8-acea-87bea3945a8c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dba5b463-b983-463a-b632-5a1f5e614448"
        },
        "item": {
          "id": "f7ebb496-6b61-43cb-b5b7-16450ed163a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f252eb96-2035-443a-9af3-d9d159c96c37",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "03d187c1-d1fd-49e0-af28-12d483e7a50d",
        "cursor": {
          "ref": "040674e8-aab8-4742-a6ec-f941cbabd19b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "580a9e9d-1f35-40c5-b36d-dfa3d0e2a5a2"
        },
        "item": {
          "id": "03d187c1-d1fd-49e0-af28-12d483e7a50d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a9aee5b-934a-4ac3-aee3-0852ec4e346f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece6251b-9bd9-47c9-9b48-a7edff2abfd9",
        "cursor": {
          "ref": "25eae934-8253-4221-91c5-8304589f0fe2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a6ada21-cf32-45ff-9840-b2ddec71720b"
        },
        "item": {
          "id": "ece6251b-9bd9-47c9-9b48-a7edff2abfd9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0fd97cfc-d471-4cb7-af59-601f3a078076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52a2787-9fd3-450e-b94b-64f6a3d3b2c6",
        "cursor": {
          "ref": "d6f44e7b-7356-4d5e-a6bd-9703cf0aecb8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c58c46d0-d854-4400-b9db-fe86238c5dd4"
        },
        "item": {
          "id": "e52a2787-9fd3-450e-b94b-64f6a3d3b2c6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "47326625-e9ee-4fcc-a827-7eb1483fffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92106fb4-b08b-4934-a08a-462cdef5c6e1",
        "cursor": {
          "ref": "a4430af0-3a08-4bf3-86ef-5f15d992fd31",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7f0af640-20b9-45cc-bfa6-2f67f4e61d29"
        },
        "item": {
          "id": "92106fb4-b08b-4934-a08a-462cdef5c6e1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbd3b4b1-b724-4e88-a066-5a19cd05fa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16675a6e-ebcd-471d-9f56-7cad15df3492",
        "cursor": {
          "ref": "1382c876-a573-45b6-8d92-079928b14350",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aaa392e0-9b87-41eb-8a47-c36dafff99b6"
        },
        "item": {
          "id": "16675a6e-ebcd-471d-9f56-7cad15df3492",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "20e2c660-e02c-4adb-a907-c89b24c1d6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096b986d-1503-4f98-acb9-4531937771ac",
        "cursor": {
          "ref": "4cd0e733-9e54-4069-b575-80cbb8ceccfe",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "80afe572-94d6-4427-9829-2e0dc7fb8a0f"
        },
        "item": {
          "id": "096b986d-1503-4f98-acb9-4531937771ac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d557c90d-67fc-49e4-b98e-48503c35a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beef0739-cbb7-414b-b35d-ed0bb6753b86",
        "cursor": {
          "ref": "e115d2dd-51cc-4f10-a6bd-37201c6df334",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7e7b0032-e862-47f2-88fd-c1bb40a6cb5b"
        },
        "item": {
          "id": "beef0739-cbb7-414b-b35d-ed0bb6753b86",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "786f40e2-f282-459a-9a92-b1e2480620aa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3cd64e25-0e6c-43bd-a29c-1f98493c94d6",
        "cursor": {
          "ref": "74235f31-5aa8-486c-8a4a-69b6a1fd601c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6ae39577-5af0-4ce1-a89e-dc945534b210"
        },
        "item": {
          "id": "3cd64e25-0e6c-43bd-a29c-1f98493c94d6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "afa443ab-c3a9-4e1f-bcdf-17228b3639ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "4790f855-096f-45dc-97ea-e7925de74b96",
        "cursor": {
          "ref": "9cd093cb-da89-47fa-83d9-a4605af7fc5d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ee44ea0-89ae-4ba8-93be-03dbaba00262"
        },
        "item": {
          "id": "4790f855-096f-45dc-97ea-e7925de74b96",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "485a534b-9969-47fb-b4f1-9c7316145bc0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b4a4c94d-705a-4662-a240-c7158fb6b366",
        "cursor": {
          "ref": "759c26ea-4908-43b7-873f-fe7acc59f26e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "18c09bb3-cee7-4c7f-addc-66add18ab93d"
        },
        "item": {
          "id": "b4a4c94d-705a-4662-a240-c7158fb6b366",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b617eedc-4e7d-49c4-9f2a-a268d3cf501e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ccf8ee45-dddf-450f-89cd-aa768afec2da",
        "cursor": {
          "ref": "f7b0ec80-6f1e-40da-8608-1d48e36b7a5d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d3c8148-3569-4132-8a12-aaa6eca5249c"
        },
        "item": {
          "id": "ccf8ee45-dddf-450f-89cd-aa768afec2da",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "77fbd905-6994-4500-8825-17864ea5b6a1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ee07b024-c288-4ab2-822d-42463917c314",
        "cursor": {
          "ref": "0875c14d-d4a1-40f4-8478-09d7a27f5c57",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "168688ec-e395-44f6-a13b-ae53d1dc2ef8"
        },
        "item": {
          "id": "ee07b024-c288-4ab2-822d-42463917c314",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "283998c3-184c-4623-a7be-3cb17404a915",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "787c4422-0995-40c3-a7d4-e34e2ff5ecb9",
        "cursor": {
          "ref": "c77dbcf4-efb8-4885-862a-4e994ae8c68f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5d7eb1ac-48be-4e72-a9ed-68dc0d125264"
        },
        "item": {
          "id": "787c4422-0995-40c3-a7d4-e34e2ff5ecb9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "75fc3f83-2d59-489f-bc77-22953ead00c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3f0d12-c2a1-4c8b-9d42-83778c179f5b",
        "cursor": {
          "ref": "18bd99fb-3604-4752-b5ca-80b46f60f7b4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "25811f04-2ae2-4f90-83a1-6d1fe1b3030d"
        },
        "item": {
          "id": "3c3f0d12-c2a1-4c8b-9d42-83778c179f5b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "685efe12-cd7c-4f2a-b741-2e395538940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139bcd6b-8404-470e-8eaf-baa8f0167a09",
        "cursor": {
          "ref": "78227d1d-32d0-4d39-b858-a8067c5ca417",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "381e941c-429f-4b56-a9fc-420b875a9275"
        },
        "item": {
          "id": "139bcd6b-8404-470e-8eaf-baa8f0167a09",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "01af1375-1f03-4924-b6af-5bc4f905ee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ffe3c2-e494-4b40-a6cb-eeffe3bd432d",
        "cursor": {
          "ref": "492e4d2b-b227-4d64-9e3c-db05efa3513b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9788bf4c-cea9-489c-b497-47440d04e331"
        },
        "item": {
          "id": "60ffe3c2-e494-4b40-a6cb-eeffe3bd432d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5ce6df6a-3872-4667-9ace-0797055b0817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d20fdf-70e7-456d-affa-02aca6d68aa4",
        "cursor": {
          "ref": "6945569c-9028-40dc-bbcd-bbcd3669a565",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "960968bc-8498-4c2b-a1a2-dbe14ba360e6"
        },
        "item": {
          "id": "e0d20fdf-70e7-456d-affa-02aca6d68aa4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bb1af641-4878-4b61-bd63-44edd9eff45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694c09cc-1a71-4298-bfdc-ccfa31b86a48",
        "cursor": {
          "ref": "406a0922-4483-46b6-a4f9-86bd897e5b16",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a27d4c4-7c75-4e06-994e-3cf05136faf2"
        },
        "item": {
          "id": "694c09cc-1a71-4298-bfdc-ccfa31b86a48",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e6b1ca5-0fa7-45fb-804c-39c8363556bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b13c03-0dc2-4e27-9168-2c2273e4752d",
        "cursor": {
          "ref": "48b9e29a-a4a6-4c74-b9f4-95ca07a07d4f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d1b6dd6b-a498-42e1-bc9c-e030f9a35c1d"
        },
        "item": {
          "id": "a4b13c03-0dc2-4e27-9168-2c2273e4752d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "963ffaed-776b-4b22-bf91-31d0879bd2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9756218c-2a08-4280-a60d-2f2681890e8a",
        "cursor": {
          "ref": "213a8dd0-ceaa-4e55-9521-7a68760f6838",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "65ff9673-208b-4d93-978d-24a7cc6327e0"
        },
        "item": {
          "id": "9756218c-2a08-4280-a60d-2f2681890e8a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9515a842-35e3-4c00-af3b-1899f0203a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9eb442-095f-4436-b49b-c4beab63fe59",
        "cursor": {
          "ref": "2591cf2c-b4e0-4de6-9fad-bbf1251a7752",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fd6c0c9f-b9e7-4c3d-af60-a105d1467b52"
        },
        "item": {
          "id": "6a9eb442-095f-4436-b49b-c4beab63fe59",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a95f197f-8eb7-47a4-a604-e82fe6ee2c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb131047-0653-4f18-a346-7849bfafd6c3",
        "cursor": {
          "ref": "f1308c8d-b185-49ac-89c1-b085554cb7c6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "49009def-e202-4fc6-9c31-6a9f73fe5bc4"
        },
        "item": {
          "id": "cb131047-0653-4f18-a346-7849bfafd6c3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "07722c2e-4866-4ef2-9f9a-f279276e173c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc44100-446e-47cb-821c-ebca0708dc1d",
        "cursor": {
          "ref": "9b466b72-6ef5-4630-875c-59c77a363480",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d613ae39-d9c9-4559-ab88-8125a7c3824a"
        },
        "item": {
          "id": "2fc44100-446e-47cb-821c-ebca0708dc1d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1b1b15b4-0013-4128-8d82-1485d4b98a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc35b18c-c578-471c-adea-9033a2171e52",
        "cursor": {
          "ref": "314307c5-d1db-4d5a-900e-acc024a272f0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f7731748-2ef4-462e-a21e-2c927b787545"
        },
        "item": {
          "id": "dc35b18c-c578-471c-adea-9033a2171e52",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "846f9a4e-6c4c-43eb-ae4f-8d9df55ae5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd70265-4b41-4670-b3be-94b88b78fbab",
        "cursor": {
          "ref": "be016cdd-6751-4c36-80da-7d4f00d58a49",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4455202c-1866-42b7-ae41-e9bcaea29546"
        },
        "item": {
          "id": "4cd70265-4b41-4670-b3be-94b88b78fbab",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e250f66a-5d4d-4182-b982-4668d9925ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e4ae3c-345b-43ba-b590-6b0457275d21",
        "cursor": {
          "ref": "6f2d91bf-385f-457f-8246-506a4f98d5d9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "55eb3927-61f1-4a78-b317-27802f8da607"
        },
        "item": {
          "id": "32e4ae3c-345b-43ba-b590-6b0457275d21",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "33380089-ae31-42c0-9c2f-cc6047b5b9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c160cf-e3a4-44c3-9fa4-a6259b3f3d26",
        "cursor": {
          "ref": "6ee6af01-5a27-4260-96e4-1023c99f73b8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e0b22501-db75-4291-b0e0-849552be56b3"
        },
        "item": {
          "id": "56c160cf-e3a4-44c3-9fa4-a6259b3f3d26",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7ef00a46-1553-4b2c-b35e-5c0c714a6d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac29b9-0083-4ae7-98d8-6b119cfcaac5",
        "cursor": {
          "ref": "ace8eb07-44c2-43ee-8a65-36928ac32c63",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "459129c9-73a6-4fde-a284-d3d6e7ff0549"
        },
        "item": {
          "id": "a3ac29b9-0083-4ae7-98d8-6b119cfcaac5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "91ed3fd6-6636-483c-bab7-8287b6259af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9df73b-9695-485c-8983-79d0df1ebe34",
        "cursor": {
          "ref": "dab6600b-1da3-488c-af51-d7ce04d2c842",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0b23396a-a4ef-4bc2-a94e-ac6383d6ac95"
        },
        "item": {
          "id": "4d9df73b-9695-485c-8983-79d0df1ebe34",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c50f614-b013-4491-8a75-99351bd1d9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a242f8-1315-437c-9997-0ef10a60c426",
        "cursor": {
          "ref": "e868cbc7-d4b0-44b3-a695-21de4a4d763a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5d77713f-4120-4340-a00f-d692dc1aa8a4"
        },
        "item": {
          "id": "e3a242f8-1315-437c-9997-0ef10a60c426",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ad48c21-eca1-403f-8603-3a77623df936",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "32b65351-92e2-4649-9bea-862ed203e4dc",
        "cursor": {
          "ref": "b131f4aa-1db2-4d3f-a785-f841a965d708",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "45bf68dc-fca0-4bc5-9055-63a1fd009399"
        },
        "item": {
          "id": "32b65351-92e2-4649-9bea-862ed203e4dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "458d6479-c913-42cd-bcf6-76e6ed706bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236a07c9-e40e-4dd7-bbe6-98b9920365fb",
        "cursor": {
          "ref": "65388d8f-c0c3-4bfa-9ddd-e8ec6639442e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f0556206-c721-4fec-841d-e41deb36f52e"
        },
        "item": {
          "id": "236a07c9-e40e-4dd7-bbe6-98b9920365fb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8a367082-8713-4d71-8c6f-1054dd62e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20472aa8-2f09-4ca0-82ed-022fc3e8d45c",
        "cursor": {
          "ref": "e651aa9c-dd22-45c7-866e-ee7c13093486",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cd3dffbf-eb1d-4f37-997d-d959f33dddd9"
        },
        "item": {
          "id": "20472aa8-2f09-4ca0-82ed-022fc3e8d45c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b4313b3a-ec0f-45a3-b557-576e43d928d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a9c9c7-7a7c-4c65-9acd-318b63ce503e",
        "cursor": {
          "ref": "cc9e4cd2-2bb3-4555-8326-786185da150c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "12c9f0bd-3d68-4412-a420-f71f7c3715e1"
        },
        "item": {
          "id": "60a9c9c7-7a7c-4c65-9acd-318b63ce503e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2f469c6e-ad3a-4b14-ab0c-e328e136c8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aef8b82-064d-4b1a-9b09-7aceaa518eec",
        "cursor": {
          "ref": "fb2007ca-9e39-4489-a2c2-0c9132eb2ed2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e935db2-f86c-4b33-b4f3-303793fe4960"
        },
        "item": {
          "id": "6aef8b82-064d-4b1a-9b09-7aceaa518eec",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04148f4d-a397-4a4d-b3c4-6b0d0d1664c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d0898-0b20-4c21-ad61-3c5ad93de5ac",
        "cursor": {
          "ref": "6e1cc0b4-c416-495d-9ee9-32f64f6cc066",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "665c0214-a7f7-43a2-8f21-4746a5f59d35"
        },
        "item": {
          "id": "bf0d0898-0b20-4c21-ad61-3c5ad93de5ac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "854ea900-7f0b-43af-a546-51f4be2a57cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b473d92a-5b5f-418e-b087-17f260b9fb02",
        "cursor": {
          "ref": "2624858c-c2d8-4549-8596-31e4c05bd40c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "784e1e27-9e5b-47bf-af80-88ea665838b7"
        },
        "item": {
          "id": "b473d92a-5b5f-418e-b087-17f260b9fb02",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "422e484d-4537-4920-9995-b43c718ebaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c07817-ceec-4a6c-ade2-b92bc7bd9661",
        "cursor": {
          "ref": "d87bf58d-c338-4fb2-9ae5-9bd1b273056f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bb8ca808-0748-43e1-b2ca-6ba7323b8b76"
        },
        "item": {
          "id": "20c07817-ceec-4a6c-ade2-b92bc7bd9661",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ddf8c544-f942-43d1-b842-4d5184c1cc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66567bb-944b-44d9-9de9-2913852ac37f",
        "cursor": {
          "ref": "307ead1d-b741-4295-8926-655b661684af",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "83950e93-3e4a-4fbd-8ac2-73a8554c05fe"
        },
        "item": {
          "id": "c66567bb-944b-44d9-9de9-2913852ac37f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2b1c5e90-e5d6-41a0-a64e-3aa743633c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33efa5f5-78af-40cf-890e-a6b27845a115",
        "cursor": {
          "ref": "0211c7ae-c1da-4030-ab7a-f5b4c62d861d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f473b952-5eda-4c51-8c18-42c0150dc9d1"
        },
        "item": {
          "id": "33efa5f5-78af-40cf-890e-a6b27845a115",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "050a74cc-ff09-435b-afa9-fcf1569cd52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d86ab6-349c-4000-8d61-3656275983cd",
        "cursor": {
          "ref": "f76f5f9f-f842-473e-bc37-e5def2594001",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e8a03c33-db90-4bb5-ae19-ce299d936698"
        },
        "item": {
          "id": "c7d86ab6-349c-4000-8d61-3656275983cd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3247205c-a4e5-4b97-97cf-6e7d23427bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8d07c-ecb1-435e-83e4-7a29c8c65b05",
        "cursor": {
          "ref": "1b2a45c1-6eec-4c70-bbf6-71e6d84804db",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d89e6d7e-4070-4241-878d-4589e6843222"
        },
        "item": {
          "id": "14d8d07c-ecb1-435e-83e4-7a29c8c65b05",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7b87fbb5-c92a-4fec-94fc-7152309dccbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6149691a-748f-4307-b8c3-ccf14c57da34",
        "cursor": {
          "ref": "29fefec6-62f9-45a7-9227-0450e0a93362",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "573d2b93-11b7-4946-afaa-c3b998ef0cbc"
        },
        "item": {
          "id": "6149691a-748f-4307-b8c3-ccf14c57da34",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3903699c-0ef2-479b-893d-e57e05cbe2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96805c-bad0-4f62-9c53-ea10736c1eee",
        "cursor": {
          "ref": "87aa3a63-e464-449f-98f7-801652559e98",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "91765de1-136f-4a59-b75f-b7e7b0e6ff1c"
        },
        "item": {
          "id": "1c96805c-bad0-4f62-9c53-ea10736c1eee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b5cb0564-1e5c-4f84-8de6-d52107a2b394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b8b0d3-d010-4935-8561-e88339a913dc",
        "cursor": {
          "ref": "bfff778e-8b47-4907-88f5-d7bf6d9f9a68",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1de14dad-311b-4b76-a927-0168cb2b296d"
        },
        "item": {
          "id": "c3b8b0d3-d010-4935-8561-e88339a913dc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bb242098-a58f-4346-9077-41699feb1947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b758de2e-5fc8-41a9-931e-a3f6be28e2a1",
        "cursor": {
          "ref": "92f251a3-73dd-4095-af02-12ee061ae9c4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7f49e0de-cf54-4c80-9140-e97a954a845b"
        },
        "item": {
          "id": "b758de2e-5fc8-41a9-931e-a3f6be28e2a1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5ddb4d1a-7844-4162-9e54-14dcd17412ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452d9b38-4ce2-4ee5-ba85-f93b8e393ccc",
        "cursor": {
          "ref": "2425c20c-af68-4408-a2b4-4ce0bec074d4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bd78c9fb-9b48-4762-8ef1-bb503cfed85e"
        },
        "item": {
          "id": "452d9b38-4ce2-4ee5-ba85-f93b8e393ccc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9e1125a-975d-475a-9cfb-5fff43ead240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb1a67b-6ab8-441b-9ac6-af55cf4df695",
        "cursor": {
          "ref": "75d0b0ec-83b7-4223-a3ec-e3c0570e6ba6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4387aa9b-cba7-40bc-8a4e-7bd0c6d641a8"
        },
        "item": {
          "id": "ceb1a67b-6ab8-441b-9ac6-af55cf4df695",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "63fe35f3-55a4-4572-acd8-6207332e7de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a462d69-0b17-4b7b-9ed2-5d2367078f6f",
        "cursor": {
          "ref": "7e40825a-00c8-46f1-a1d6-1090d2a4b448",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c663dce6-20e3-4a1b-b1c8-e98b4e59beef"
        },
        "item": {
          "id": "0a462d69-0b17-4b7b-9ed2-5d2367078f6f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a9898f82-149c-4250-915d-123cfa385b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c35931f-5a44-4957-b4ea-252f0a46777b",
        "cursor": {
          "ref": "e5cad13c-81cd-4a95-a74c-af2feaa088cd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1e707b54-f3e5-4f97-afd0-c53acc494700"
        },
        "item": {
          "id": "8c35931f-5a44-4957-b4ea-252f0a46777b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "123f064e-0578-4b9e-9982-36f9f46cf7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d492f5-e80b-4e73-89cf-1bbc36e06bcd",
        "cursor": {
          "ref": "97c0a1d7-c974-4752-a767-fd3df7b5e8ca",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b32e3a1d-cbca-4476-bc87-ea2b5412f8c9"
        },
        "item": {
          "id": "b8d492f5-e80b-4e73-89cf-1bbc36e06bcd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c4cf0d08-a068-458a-b096-ace2966110e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fa685b-44c5-4282-b59d-6480e8223663",
        "cursor": {
          "ref": "1173107d-3477-40f6-bef2-8580db2d4d37",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8573664c-4656-4cb6-a022-c4b5365d102e"
        },
        "item": {
          "id": "01fa685b-44c5-4282-b59d-6480e8223663",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1d7b5ab2-2009-485b-8404-8f2a9f1cbc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dceb97-cee4-4fe8-9392-95b776e1b1ad",
        "cursor": {
          "ref": "9bcccd2a-350a-4843-a39d-70715ce17dd4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1406f29f-1f4a-4ac7-af15-2cd987fec88c"
        },
        "item": {
          "id": "93dceb97-cee4-4fe8-9392-95b776e1b1ad",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b21ac30c-8a1f-4547-8ead-568c1524cd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c1661c-7895-463f-966b-ae5c2188082d",
        "cursor": {
          "ref": "27354a38-2c21-48b4-a607-4b53aafc56a0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "591d4c38-e628-494d-b618-6be40e986d90"
        },
        "item": {
          "id": "a1c1661c-7895-463f-966b-ae5c2188082d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a98ccc33-9470-4a8f-aebd-8b58dce26dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e40d9b-f165-448f-9355-8c8212064c9a",
        "cursor": {
          "ref": "8b518a0e-8507-4b74-9bef-c9ba44bc0394",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "163c7c2b-dd25-4948-9d46-0e1cb9d17275"
        },
        "item": {
          "id": "09e40d9b-f165-448f-9355-8c8212064c9a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "19aac791-dc52-4b7b-983e-b15d7cec8a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fe199e-3b60-410f-a3dd-1ed8920dcd46",
        "cursor": {
          "ref": "aae901ed-ad46-43d6-83d7-b9bee8c5985b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dc65895e-95cd-4e4d-a8ac-0d2ed0df9c5d"
        },
        "item": {
          "id": "23fe199e-3b60-410f-a3dd-1ed8920dcd46",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c01f3072-71e4-4a44-be6b-84fd8c061e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea36a4f6-73c6-400e-8a9a-f4da33721185",
        "cursor": {
          "ref": "ab815728-15f7-4925-9b54-0f17e772a722",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "73ce5291-c395-4e13-aaad-ef7cd6d29adf"
        },
        "item": {
          "id": "ea36a4f6-73c6-400e-8a9a-f4da33721185",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d72d58d7-27a0-4d2b-a502-49bc5181abaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce74db0f-4cc0-4016-9d7b-ba0ccf1cf67e",
        "cursor": {
          "ref": "2407bf6b-6c58-4be8-8da8-f71ccb29d014",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3addeb59-3a6a-42f3-98a0-d60bc49a5bf6"
        },
        "item": {
          "id": "ce74db0f-4cc0-4016-9d7b-ba0ccf1cf67e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dff90cad-b7df-42ea-b96c-902115f464cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd80345e-5544-49c6-bddc-29c2edb48573",
        "cursor": {
          "ref": "83ecab72-34c1-43b5-b99b-7edd510fda35",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "69704053-6dc1-4818-a1fd-d27a6400f7ee"
        },
        "item": {
          "id": "dd80345e-5544-49c6-bddc-29c2edb48573",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "becb2f1e-3ceb-48b6-9c42-7b9c93a3191d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bb26c7-9571-4ca0-8356-39b2b7ebdaab",
        "cursor": {
          "ref": "78d69a62-513e-43fe-b673-f2f1c6ee50a2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9c7fcec4-3805-439e-a419-f574b3ec77e7"
        },
        "item": {
          "id": "a7bb26c7-9571-4ca0-8356-39b2b7ebdaab",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "18aff3f9-de82-4560-993b-2d78d934df72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad71c43-2fb0-4d15-9da7-688bbd8375f4",
        "cursor": {
          "ref": "7c69c2ec-1681-4b52-a142-ad4c1ab6d6d9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5b303f9b-82aa-48e8-b19e-c4d0dc0554f2"
        },
        "item": {
          "id": "9ad71c43-2fb0-4d15-9da7-688bbd8375f4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4b9ff59f-3d8f-4985-b81b-e8c74c3eb7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c148d19-1a6c-46a8-b424-efffd3188a0d",
        "cursor": {
          "ref": "46df4b7a-9c4c-4dd2-bda3-3fe1d906c406",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b3a48d76-5472-45b1-9c4a-fd3176db6750"
        },
        "item": {
          "id": "1c148d19-1a6c-46a8-b424-efffd3188a0d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1fe00932-01d8-4735-915a-d7a2445d9069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a1fb93-ecbf-47d1-a594-7415b828516e",
        "cursor": {
          "ref": "e864bbab-b6ef-4ab7-b86e-59d06f2addc4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "276914a3-c5db-40fe-ae05-d25ff50014c6"
        },
        "item": {
          "id": "65a1fb93-ecbf-47d1-a594-7415b828516e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "157dc8fb-209f-4db4-ab2f-80a2fc3370c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d9b9e7-bee0-48b1-88da-73dcf8b8b991",
        "cursor": {
          "ref": "62da8f84-5647-401a-96f7-8995a0c24a5f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dc5109d3-e752-4ce4-8a38-6f93d58ed1e1"
        },
        "item": {
          "id": "84d9b9e7-bee0-48b1-88da-73dcf8b8b991",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f7aee0dd-adb4-4a30-9713-56eff8dbb32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c6d524-a67e-45e1-8c5e-492545f5e847",
        "cursor": {
          "ref": "60636e2e-4c7d-4a21-96bf-98d74037f459",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bf5c6864-1380-4a21-8531-431263d5a833"
        },
        "item": {
          "id": "15c6d524-a67e-45e1-8c5e-492545f5e847",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5c32eb3a-c1b7-4ddf-bdc9-caf8d6966991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a05d35c-99ab-4de1-b050-ac68063fc608",
        "cursor": {
          "ref": "91ce6510-2b04-491a-b90f-32e8b125f7b5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c428afeb-5849-41fc-b69f-93649dc3e676"
        },
        "item": {
          "id": "7a05d35c-99ab-4de1-b050-ac68063fc608",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d39224de-653f-4db9-bf74-28b9d42f138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62983c9-bf69-41ad-8101-09390be7d0e9",
        "cursor": {
          "ref": "aea63181-aa93-492d-bdfc-5d549b5f9cc1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1d0b9eea-00a0-4558-a22d-6ff7e93d0250"
        },
        "item": {
          "id": "b62983c9-bf69-41ad-8101-09390be7d0e9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d0025ddc-ad7d-4bbc-ad1d-884cfc67a1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed06ef2-c548-40ab-a9f3-e1eefe17043f",
        "cursor": {
          "ref": "9feab506-0194-42b0-91c3-f9a2e47c9863",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e6d50cf3-5c7e-4051-a38e-080f25161058"
        },
        "item": {
          "id": "3ed06ef2-c548-40ab-a9f3-e1eefe17043f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3eb97a47-f8ca-4600-b30a-e15d00a840d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ba1abd-2947-4cb9-bf54-7d1649c2379e",
        "cursor": {
          "ref": "9caf515e-38a5-4f80-9b9b-2985e66fedf7",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "58bd564e-93f5-402b-be13-ea8920f56040"
        },
        "item": {
          "id": "67ba1abd-2947-4cb9-bf54-7d1649c2379e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "08926259-19e7-4f99-9a08-9007dfee4316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9df6dd-5bf6-4b32-90cd-898622f0aebe",
        "cursor": {
          "ref": "9b1c45e4-2103-4fe2-885f-898e08c5bd22",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d15daac9-9abd-4faa-8d17-6746be525628"
        },
        "item": {
          "id": "cb9df6dd-5bf6-4b32-90cd-898622f0aebe",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "932ba72f-a597-4ecb-aeb8-3e089d9f88d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb73728-f3de-4f74-a826-7db48155bbf8",
        "cursor": {
          "ref": "ca823792-37b7-4c60-89a5-fc5bd90d2f0b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "86dc7ca0-d030-4c73-94dd-e80ee6afd592"
        },
        "item": {
          "id": "8cb73728-f3de-4f74-a826-7db48155bbf8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "94959cb8-023e-46f5-b86b-cba3b73a0556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b711de24-40ff-4025-8347-ea8cca1e1e25",
        "cursor": {
          "ref": "a47a9a16-9652-4064-8e1b-119de80482ea",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9c9f6ece-a4f2-44f7-8d00-5f6fe7c068b3"
        },
        "item": {
          "id": "b711de24-40ff-4025-8347-ea8cca1e1e25",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1ded21e0-1b3d-4689-98d2-4f89f101078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d6a9fb-4fe8-4cd6-8ea7-aa44f0d31cda",
        "cursor": {
          "ref": "cb271be7-62cb-4fe5-9350-fb596633925b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a1ba3113-4074-466a-adb7-96b51dd9eff1"
        },
        "item": {
          "id": "e0d6a9fb-4fe8-4cd6-8ea7-aa44f0d31cda",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f04b0b3a-7f61-4f15-a8a9-bdb2767f099d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d38b51a-1b81-4136-968c-e3aeae2ad6f3",
        "cursor": {
          "ref": "d1b3545a-740a-4950-a130-a11a8293827d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4d53311e-9a92-4407-bb16-e42194271360"
        },
        "item": {
          "id": "3d38b51a-1b81-4136-968c-e3aeae2ad6f3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15fc1624-74f1-4b30-b5a9-d284a05cffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6df6b3c-fb47-4e84-95a5-8ada28f211e2",
        "cursor": {
          "ref": "57fa1b37-76fa-45d6-8ffc-00e2eb839de0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0e5ddbb5-0ba4-4c17-b39f-620ba56c1cd7"
        },
        "item": {
          "id": "d6df6b3c-fb47-4e84-95a5-8ada28f211e2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a305d9a5-5124-4cf3-b176-5a1e773dc1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75f4c01-665a-4280-820e-6cc18752281b",
        "cursor": {
          "ref": "9106f0b1-c648-436d-bf09-ecf275d160c4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "50fa4466-ff7a-42ad-8051-882de07b5489"
        },
        "item": {
          "id": "f75f4c01-665a-4280-820e-6cc18752281b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2db3c52d-2f45-4033-bf40-ad720fc4d81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3e85a-ce86-491a-99dc-18f8eb41150c",
        "cursor": {
          "ref": "89f2fc0a-8f61-4ec1-ae26-9460485bcad9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "89c9c1c6-a17d-479f-8bf0-59dde53eac34"
        },
        "item": {
          "id": "aae3e85a-ce86-491a-99dc-18f8eb41150c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "77a1b890-006b-4f61-bd3b-74cccef1a806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f59fed8-2564-4387-9988-ee6b40b5f52c",
        "cursor": {
          "ref": "cdfe57a3-9718-48a7-a906-4eebce527f11",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "65f060a9-3a25-4a44-9fcb-c5467caafaff"
        },
        "item": {
          "id": "5f59fed8-2564-4387-9988-ee6b40b5f52c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cf4bff28-1d95-4648-bc8c-c72687288e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030f7b71-fa8e-4afc-acf8-f3a07373052b",
        "cursor": {
          "ref": "18902424-8251-4df5-bfbf-b70c526864ca",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "931ddd36-f6d4-45ba-a17a-9b756f6e945b"
        },
        "item": {
          "id": "030f7b71-fa8e-4afc-acf8-f3a07373052b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "17951c4a-64e1-408b-b8d0-a1602f8e8b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2ef534-4c7c-4a46-bc19-c216235dbbe4",
        "cursor": {
          "ref": "ef7aa10f-45aa-476c-96e6-10fc4d7407e0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2e80edb-da8d-41b5-b6bb-57598ff4d841"
        },
        "item": {
          "id": "eb2ef534-4c7c-4a46-bc19-c216235dbbe4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cbb3d906-cde2-4559-aa39-d9fbfea70e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea29f719-a0ff-445b-af21-e35c0db4deac",
        "cursor": {
          "ref": "8ef79aa8-f3f6-4a24-b88e-70f5d0914792",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "77be1ec5-5ee2-4560-ae49-6e58b8b11d42"
        },
        "item": {
          "id": "ea29f719-a0ff-445b-af21-e35c0db4deac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bffc3c8d-88ee-49e9-b9c0-e35aeee46d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1495973-d038-42dc-ae30-992a9a6111c3",
        "cursor": {
          "ref": "36c70075-cc59-483c-9917-11576a431ba3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2b1b2e31-2f01-4dbf-b31c-10a572ba37b9"
        },
        "item": {
          "id": "e1495973-d038-42dc-ae30-992a9a6111c3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c200035a-6d35-404d-91a0-fc22db85c7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdc46c6-c746-46c0-b137-fb0d2d9ef6af",
        "cursor": {
          "ref": "5c0ac902-f2b5-40af-99b2-8bb882d2b79c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e7d33921-8609-4174-a58c-1f96705a54d0"
        },
        "item": {
          "id": "cbdc46c6-c746-46c0-b137-fb0d2d9ef6af",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fa9c5a2d-96d7-465b-b30b-302bccb4fd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1d29b5-8196-4606-9341-9cb353792adf",
        "cursor": {
          "ref": "57eced0f-c356-4dbb-9adf-4dc677b34aaf",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "02039a04-3888-42a6-8d36-e562b32ef2e0"
        },
        "item": {
          "id": "ad1d29b5-8196-4606-9341-9cb353792adf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ac5775a3-b9ab-425a-9a55-885a63b7ae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31591ee1-c9dd-4373-872e-17f3885c2e98",
        "cursor": {
          "ref": "89edce1b-7668-4fdc-beff-8e716b47ec76",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "33af96d8-ab32-4671-96bb-6acea38052db"
        },
        "item": {
          "id": "31591ee1-c9dd-4373-872e-17f3885c2e98",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b4b025dc-e308-4a5e-8ab1-710f41a09100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e980787-84e4-4f65-8fc8-fd82ceeeb338",
        "cursor": {
          "ref": "02191541-9c64-40b6-8da5-8859596fe923",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b556c91f-2103-4c84-bbde-3d9a2b50f7e2"
        },
        "item": {
          "id": "3e980787-84e4-4f65-8fc8-fd82ceeeb338",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a6e933c7-0082-424d-a720-e95834013f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd8e12-9d5b-44d4-88e1-a67d7c98c44d",
        "cursor": {
          "ref": "a480f27b-33dc-40b7-b313-9e4ecf7cc089",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e0015934-598b-43e1-a85b-3f6cfe790942"
        },
        "item": {
          "id": "fdfd8e12-9d5b-44d4-88e1-a67d7c98c44d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6fb7afee-949a-4096-b687-70925719db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e470e40-2c73-45b0-b043-fd6cb817cde5",
        "cursor": {
          "ref": "71139adb-df68-4281-8ab3-79d0d187e3ca",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "781c79ff-4849-4bd4-81cb-ec42aecf76f2"
        },
        "item": {
          "id": "4e470e40-2c73-45b0-b043-fd6cb817cde5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40c34ef8-dba0-4de0-9553-9dfbfc1d5cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a414e90d-bc53-471f-8eca-94d57220f704",
        "cursor": {
          "ref": "7367ac7b-6789-4c0f-bc51-77d8c0fd3e0a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "37c6164c-2e1d-47ce-a967-f4cd7fe5575b"
        },
        "item": {
          "id": "a414e90d-bc53-471f-8eca-94d57220f704",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc46e5f0-0417-4a0f-af7e-6d4a5be49b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6367a6-7a83-4450-be0d-a7c64dbc26c2",
        "cursor": {
          "ref": "dcbe05a6-b75c-4ef4-b003-77d919dab30a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cae456a4-6004-4af8-9359-7c7e10c58a96"
        },
        "item": {
          "id": "3e6367a6-7a83-4450-be0d-a7c64dbc26c2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "09d78b85-e038-4b6e-a79e-0054258bec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7343c8-4d59-48ec-8d12-71d56f0c54ff",
        "cursor": {
          "ref": "2ab2a319-9359-4ca5-9606-b6bef8e946c7",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "422eba53-aedb-4286-99e6-806134e2b76b"
        },
        "item": {
          "id": "cb7343c8-4d59-48ec-8d12-71d56f0c54ff",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ed31b577-3c10-4c6b-8e31-eae1942e5607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83012f74-d03f-49a7-b7f6-f854c6b57aa6",
        "cursor": {
          "ref": "07af6146-d1a2-405e-84a1-e9b496946230",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "10e95951-b885-4be0-9b75-e706ebad2c77"
        },
        "item": {
          "id": "83012f74-d03f-49a7-b7f6-f854c6b57aa6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8be67e47-3232-4d36-a327-b470886d47a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e24802-7b4a-4dd0-a061-4add36b66bee",
        "cursor": {
          "ref": "58df3079-c233-4b35-b810-780bee2fd225",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c5e608a0-e031-4100-8526-bf39102aac0c"
        },
        "item": {
          "id": "b1e24802-7b4a-4dd0-a061-4add36b66bee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2c4a3ce4-1028-4e5b-bf86-e08b1e8b0804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7271d337-80a8-4113-a3eb-d74cee55a9c4",
        "cursor": {
          "ref": "6c1b80ae-7ec1-438d-803e-8a23c78c8604",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2228dbc5-7d87-4f92-b59e-7cca3285768d"
        },
        "item": {
          "id": "7271d337-80a8-4113-a3eb-d74cee55a9c4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c6ac5ca3-d9e2-4b95-8b58-fda56edcb7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6510688a-63c6-4ea8-8cbf-096ccf3aa4b8",
        "cursor": {
          "ref": "6dfd6622-4854-4013-a8ff-8f31128a6391",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cd5093d6-d293-4dc0-b1a0-e22404b70efc"
        },
        "item": {
          "id": "6510688a-63c6-4ea8-8cbf-096ccf3aa4b8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc04d580-78bf-4335-83fd-cf653cf1d2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c274b295-5dca-4424-9787-208bd22cf02c",
        "cursor": {
          "ref": "7cd991a2-2c39-4c81-a991-f1e2773569bf",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a5b8d3e-ea60-4d40-b053-8ced8cb03820"
        },
        "item": {
          "id": "c274b295-5dca-4424-9787-208bd22cf02c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ad8f34bf-34ea-423b-8722-eb7205a7544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bd4d2a-9d1f-4bc8-bae3-a088d14e4176",
        "cursor": {
          "ref": "a4c515c3-21f4-4e82-8b91-77c344413e1c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "65fb8fd1-3e2e-4264-a93b-740714c1f4e7"
        },
        "item": {
          "id": "e5bd4d2a-9d1f-4bc8-bae3-a088d14e4176",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "49aab746-2ccf-4fbc-b7c8-def07cdecab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1375f4b9-675e-45bd-b69e-990ec8a968e6",
        "cursor": {
          "ref": "229cb86d-e156-4482-969f-60d7ce9d9da3",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3e7889b0-8dcc-4e65-9ba1-e3f04ac132da"
        },
        "item": {
          "id": "1375f4b9-675e-45bd-b69e-990ec8a968e6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "150502d5-6186-4f58-9dd2-3cad8464aa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85de4fd7-c916-40f5-b7ee-f84258bbfd9a",
        "cursor": {
          "ref": "c0521552-ef92-46ff-b0a0-70b60ebc6e12",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "00d06a66-e299-44be-aecf-5c89285b8109"
        },
        "item": {
          "id": "85de4fd7-c916-40f5-b7ee-f84258bbfd9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "abaa9d95-50de-4ca2-97af-03586c988e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53711de-7edd-474f-9333-1efe5e74cbcc",
        "cursor": {
          "ref": "8d123337-ee5f-4b52-9818-cecc77da25cc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "072b98b3-64a1-4b9b-a964-e45ce18bb4c9"
        },
        "item": {
          "id": "b53711de-7edd-474f-9333-1efe5e74cbcc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "65e43379-7342-4976-af60-e489692771f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9530bc-58cf-4cb2-b5ba-bc4b0594cbb7",
        "cursor": {
          "ref": "e98861ca-59a7-4098-81d9-8cd63677e213",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1bece982-6e72-4865-a3f7-bb69894d54a6"
        },
        "item": {
          "id": "3b9530bc-58cf-4cb2-b5ba-bc4b0594cbb7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bff65dab-17e2-4dfa-9ad3-2b4c047d5c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80541cba-d29d-4de2-8913-25b1d5aabf05",
        "cursor": {
          "ref": "ce3de6a2-7af3-493d-98bf-2a618428b28e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "07ea4330-42a7-498d-b3aa-1109d61f2300"
        },
        "item": {
          "id": "80541cba-d29d-4de2-8913-25b1d5aabf05",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5de26bea-c48b-4250-8d56-8cb26991c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12777ae5-0b04-4307-a1ed-52072bce22c7",
        "cursor": {
          "ref": "0f13b98a-ca96-435a-8ab3-753807a9a812",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0827af33-234e-45fa-ba54-7148cec93f05"
        },
        "item": {
          "id": "12777ae5-0b04-4307-a1ed-52072bce22c7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d14a0d62-9920-4cbd-a131-fd734060eaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68c684d-44e5-446e-95de-0577e59434c5",
        "cursor": {
          "ref": "bc56bc80-4402-491b-981c-db8075bb1054",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "04c04952-2cbe-4629-adf0-5366b70826f4"
        },
        "item": {
          "id": "c68c684d-44e5-446e-95de-0577e59434c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "16c2f441-d1dc-42ff-8c1a-2012dcc95f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3561bcb-d87e-4e7b-8eb9-c68ef369517d",
        "cursor": {
          "ref": "d2c46299-ee06-47df-87a1-748c6a62f32b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0a83bf80-0343-4bfb-badc-58d1b33856fb"
        },
        "item": {
          "id": "d3561bcb-d87e-4e7b-8eb9-c68ef369517d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ab5a67ff-c06d-4c15-9ff0-cf7358cee63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10f9b11-4682-4c29-a106-62a56c3293a0",
        "cursor": {
          "ref": "0bd94d00-bf09-488c-9212-c1f67f63000d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e9b47446-45f4-4626-9afa-033315f771a8"
        },
        "item": {
          "id": "f10f9b11-4682-4c29-a106-62a56c3293a0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5be1d7d6-c87a-45c3-b053-07467085af95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d940d38-d5c7-409a-ad98-2d84d92a2ecf",
        "cursor": {
          "ref": "f5504e5d-dcb6-4f9b-aa1c-04b047ebc22c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e72c4272-dcad-4490-a86b-e9f6af0619d6"
        },
        "item": {
          "id": "3d940d38-d5c7-409a-ad98-2d84d92a2ecf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c35de41f-8cc8-4135-9abe-ad073f448746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20493a79-d44f-401f-b489-016d54bc5ca6",
        "cursor": {
          "ref": "e0c9fc03-059b-4ef0-a133-e60564fbf7c0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "860b106c-74ba-4038-86ed-3b979d095482"
        },
        "item": {
          "id": "20493a79-d44f-401f-b489-016d54bc5ca6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a1825942-e270-438d-8597-b53161fe97f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37a15a-b8b2-494b-904f-b916d42d9e21",
        "cursor": {
          "ref": "ceecca31-d3df-49eb-bfb1-b633ba9ae190",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "744134d5-210e-4e9b-82a9-7f9b860273ea"
        },
        "item": {
          "id": "9d37a15a-b8b2-494b-904f-b916d42d9e21",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "419a2935-b036-46d2-a8f3-4ce5d3d4c672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1e97ce-d0f8-4397-adc4-0f64761eba4a",
        "cursor": {
          "ref": "cb4bf619-166f-48dd-a001-d6977d646cf1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0e66733d-db5b-4ce0-b03e-59ee840b2dab"
        },
        "item": {
          "id": "9d1e97ce-d0f8-4397-adc4-0f64761eba4a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b2d96dde-68b1-4c54-8fdd-32e297b51bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9679c190-b2ce-4542-bd8f-59bbaa6b0add",
        "cursor": {
          "ref": "9ee5a558-6675-4b43-b944-10b2f4431807",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1c66b0e2-a36f-489a-8d2e-d3d30bb8573e"
        },
        "item": {
          "id": "9679c190-b2ce-4542-bd8f-59bbaa6b0add",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f13bc1ae-b8e5-40a9-814d-2f182b78e61a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d61b48-b50a-47a9-b41f-c6a030a5c40e",
        "cursor": {
          "ref": "14a76868-3a7a-4beb-9750-75134d4d0301",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "07970365-2616-4988-8874-21edebb4fae5"
        },
        "item": {
          "id": "07d61b48-b50a-47a9-b41f-c6a030a5c40e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "92422d30-ea64-4cb0-b2a4-1d5161bf374b",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a7881e-6db9-4998-a1db-40c6d37c9eec",
        "cursor": {
          "ref": "a1274beb-54d9-4e42-8f90-17165566fc34",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "59d852f9-2fdf-43ee-8ceb-899c600bafcb"
        },
        "item": {
          "id": "09a7881e-6db9-4998-a1db-40c6d37c9eec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "49e97a87-29d4-4c80-819b-0aac696a4856",
          "status": "OK",
          "code": 200,
          "responseTime": 7339,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcba263-70a4-4ddd-92b4-7722da9206ce",
        "cursor": {
          "ref": "1a804e99-b165-4f0a-9d33-a37297b90ccd",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b85b0a8e-e99e-4f7c-9938-07115153e4b9"
        },
        "item": {
          "id": "1fcba263-70a4-4ddd-92b4-7722da9206ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "19745ed9-6171-412f-83d3-a818cd568a82",
          "status": "OK",
          "code": 200,
          "responseTime": 5907,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d130abb-3eda-43c1-87df-59c8aadcbebd",
        "cursor": {
          "ref": "4bcdd0ee-bed5-4591-ba6b-63a0e98a3df4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98199c61-349e-4461-8e68-c7388e15d6df"
        },
        "item": {
          "id": "3d130abb-3eda-43c1-87df-59c8aadcbebd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1cfbc6b-7332-4d6c-8b54-d7daf7edd8ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d130abb-3eda-43c1-87df-59c8aadcbebd",
        "cursor": {
          "ref": "4bcdd0ee-bed5-4591-ba6b-63a0e98a3df4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "98199c61-349e-4461-8e68-c7388e15d6df"
        },
        "item": {
          "id": "3d130abb-3eda-43c1-87df-59c8aadcbebd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d1cfbc6b-7332-4d6c-8b54-d7daf7edd8ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0068c39-9870-40c1-9151-f9ef62bb4fe7",
        "cursor": {
          "ref": "20314949-7817-4779-b551-96323dbb91d4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d0ece962-9abf-4d38-90fa-e10d6e86bd43"
        },
        "item": {
          "id": "d0068c39-9870-40c1-9151-f9ef62bb4fe7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d075b21b-8c36-41d9-a5e0-bf3441aa42b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef11aefc-14ce-475c-a549-147f8e48416d",
        "cursor": {
          "ref": "5d44a825-53a4-4de2-9d12-a7f9082590b1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0bcf7253-7fa5-43a4-9483-874f727e3a8f"
        },
        "item": {
          "id": "ef11aefc-14ce-475c-a549-147f8e48416d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c1ecbc27-628a-4a20-9955-673e2b016067",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}